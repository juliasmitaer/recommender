Instruction,Input,Output
Create a function in Python which takes a list of numbers and returns the sum of squares of those numbers.,"[3, 4, 5]","def sum_squares(nums):
    result = 0
    for num in nums:
        result += num*num
    
    return result

nums = [3, 4, 5]

result = sum_squares(nums)
print(result)"
Design a function in Python that sorts a list of strings in alphabetical order.,"['red', 'green', 'orange']","def sort_list_alphabetically(input_list): 
    output_list = sorted(input_list) 
    return output_list 
  
input_list = ['red', 'green', 'orange']
sorted_list = sort_list_alphabetically(input_list) 
print(""Sorted List in Alphabetical Order:"", sorted_list)"
Edit the following Python code such that it will print an array containing the seven days of the week.,"days = [""Monday"", ""Thuesday"", ""Wednesday"", ""Thrusday"", ""Friday""]

for day in days:
    print(day)","days = [""Monday"", ""Tuesday"", ""Wednesday"", ""Thursday"", ""Friday"", ""Saturday"", ""Sunday""]

for day in days:
    print(day)"
Create a Python program to check if an integer is divisible by 5,Integer : 10,"def is_divisible_by_5(number):
    if (number % 5 == 0):
        return True
    else:
        return False
    
number = 10
is_divisible_by_5(number)"
Create a Python algorithm to calculate the target sums of all elements in a given list with a given value,"subtrahend: 10
list: [4, 3, 8, 6, 5]","def target_sum(subtrahend, lst):
    target_sums = []
    for num in lst:
        target_sums.append(subtrahend - num)
    return target_sums"
Write a Python program to generate a Fibonacci sequence where the number of elements is given as an input.,Number of elements = 10,"def generateFibonacci(numOfElements):
 sequence = []
 a = 0
 b = 1
 for i in range(numOfElements):
 sequence.append(a)
 c = a + b 
 a = b
 b = c
 return sequence

print(generateFibonacci(10))

#output: [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]"
Identify the output of the following python code snippet:,"arr = [1, 2, 4, 8, 16]
new_arr = [i * 2 for i in arr]","[2, 4, 8, 16, 32]"
Create a Python program to sort a list of tuples according to the third element in the tuple.,"[(21, ""ABC"", 33), (9, ""XYZ"", 88), (67, ""MNO"", 37)]","def sort_tuple_list(tuple_list):
    sorted_tuple_list = sorted(tuple_list, key=lambda x: x[2])
    print(sorted_tuple_list)

tuple_list = [(21, ""ABC"", 33), (9, ""XYZ"", 88), (67, ""MNO"", 37)]
sort_tuple_list(tuple_list)"
Please generate a Python script that calculates the mean of a given array of numbers.,"[4, 9, 3, 5]","def calculateMean(array):
    # sum up all elements in the array
    mean = 0
    for i in range(len(array)):
        mean += array[i]
    # calculate the mean by dividing the sum by number of elements
    mean /= len(array)
    return mean

array = [4, 9, 3, 5]
mean = calculateMean(array)
print(mean)"
Fix the following syntax in Python code,"string1 = ""Programming""
string2 = ""Fundamentals","string1 = ""Programming""
string2 = ""Fundamentals"""
Write a Python function which takes in an argument and returns a corresponding string.,"Given an argument of 1,2 or 3","def get_string(arg):
    """"""
    This function takes in an argument and returns the corresponding
    string. 
 
    Parameters:
    arg (int): the argument

    Returns:
    str: the corresponding string
    """"""
    if arg == 1:
        return ""One""
    elif arg == 2:
        return ""Two""
    elif arg ==3:
        return ""Three""
    else:
        return """""
Generate a code snippet to print a pattern of stars in Python.,rows = 5,"# Use two for loops to print pattern
for i in range(0, rows):
    for j in range(0, i + 1):
        print(""* "", end="""")
    print(""\r"")"
Write a python program to successfully insert a row into a table named 'students' with the given values.,"student_name = ""John Doe""
student_age = 20","import sqlite3

conn = sqlite3.connect(""example.db"")
c = conn.cursor()
c.execute(""INSERT INTO students VALUES ('John Doe', 20)"")
conn.commit()
conn.close()"
Create an algorithm in Python to find the first index of an item in an array.,"arr = [1,3,7,9,0,4]
num = 7","def findIndex(arr, num):
    for index in range(len(arr)):
        if arr[index] == num:
            return index
    return -1

arr = [1,3,7,9,0,4]
num = 7
index = findIndex(arr, num)
print('Index of %d is %d' % (num, index)) # Index of 7 is 2"
Generate a function in Python to convert a given integer to its binary representation.,17,"def convertToBinary(n): 
  
    if n > 1: 
        convertToBinary(n//2) 
  
    print(n % 2,end = '') 
  

# driver code 
num = 17
convertToBinary(num)"
Suggest a way to randomize the order of the following list using Python.,"array = [1, 2, 3, 4, 5, 6]","import random
array = [1, 2, 3, 4, 5, 6]
random.shuffle(array)  # shuffle list in-place using a random permutation"
Generate a correct Python program to take two lists as input and combine them into a 3rd list.,"list1 = [1, 2, 3]
list2 = [4, 5, 6]","def combine_lists(list1, list2):
    output = list1 + list2
    return output

combined_list = combine_lists(list1, list2)
print(combined_list)"
Create a python function that can receive a list of integers and return a list of tuples with consecutive numbers.,"[1, 2, 3, 7, 8, 9, 10]","def get_consecutive(arr):
    result = []
    i = 0
    while i < len(arr):
        s = i
        while (i + 1 < len(arr)) and (arr[i + 1] == arr[i] + 1):
            i += 1
        result.append((arr[s], arr[i]))
        i += 1
    return result

# Test 
arr = [1, 2, 3, 7, 8, 9, 10]
print(get_consecutive(arr))
# Output [(1, 3), (7, 10)]"
Create a function in Python to compute a Fibonacci sequence. The function should take as input a positive integer n and return the nth Fibonacci number,10,"def fibonacci(n): 
 if n < 0: 
  print(""Incorrect input"") 
 elif n == 0: 
  return 0
 elif n == 1: 
  return 1
 else: 
  return fibonacci(n-1) + fibonacci(n-2) 

print(fibonacci(10))"
Write a Python program to remove an item from a list whose index is specified.,"list = ['Apple', 'Orange', 'Banana', 'Mango']","def removeSpecifiedIndex(list, index): 
  # using list comprehension 
  new_list = [list[i] for i in range(len(list)) if i != index]  

  return new_list 

list = ['Apple', 'Orange', 'Banana', 'Mango']  
index = 2

print(removeSpecifiedIndex(list, index))"
Create a web server in Python.,<no input>,"import http.server
import socketserver

PORT = 8080

Handler = http.server.SimpleHTTPRequestHandler

with socketserver.TCPServer(("""", PORT), Handler) as httpd:
    print(""Server running at http://localhost:{}/"".format(PORT))
    httpd.serve_forever()"
Construct a function that will find the value of a given key in a Python dictionary.,"dictionary = {'key1':1, 'key2':2, 'key3':3}
key = 'key2'","def find_value(dictionary, key):
    value = dictionary.get(key)
    return value

dictionary = {'key1':1, 'key2':2, 'key3':3}
key = 'key2'
value = find_value(dictionary, key)
print(value) # Output is 2"
Build a Python script to remove all punctuation from a given string.,"""This is a cool string!""","import string

input_str = ""This is a cool string!""
punctuation_removed = input_str.translate(str.maketrans('', '', string.punctuation))
print(punctuation_removed)"
Generate a program in Python that takes a given dictionary and finds the key with the highest value.,"my_dict = {
    'a': 1,
    'b': 5,
    'c': 3
}","def highest_value(d):
    key, highest_val = None, -float(""inf"")
    for k, val in d.items():
        if val > highest_val:
            key, highest_val = k, val
    return key

highest_key = highest_value(my_dict)
print(highest_key)"
Create a program in Python to split a string into an array based on a given delimiter.,"String: Hello,World
Delimiter: ,","def split_string(s, delimiter): 
 return s.split(delimiter)

string = 'Hello,World'
delimiter = ','

result = split_string(string, delimiter)

# Outputs ['Hello', 'World']"
Design a Python function that converts strings in any given sentence to a capitalized format.,This is an example sentence,"def convertToCapitalize(sentence)
    words = sentence.split()
    capitalize = [word.capitalize() for word in words]
    return "" "".join(capitalize)"
"Using the given data, write a Python program to extract each name along with its age in the following format:","data = [{""name"": ""John"", ""age"": 25}, {""name"": ""James"", ""age"": 26}]","for item in data:
    print(f'Name: {item[""name""]}, Age: {item[""age""]}')"
Construct a Python program that calculates the sum of all the items in a given list.,"[1, 4, 2, 5, 9]","def sumoflist(list): 
  sum = 0
  for i in range(0, len(list)): 
    sum = sum + list[i] 
  
  return sum

list1 = [1, 4, 2, 5, 9] 
print(sumoflist(list1))"
Write a function in Python that takes an array of integers and its size as parameters and returns the maximum value in the array.,"arr = [1, 6, 8, 4, 9, 6, 10]
n = len(arr)","def findMax(arr, n):
 # Initializing max with first element of array
 max = arr[0]

 # Starting loop from second element
 for i in range(1, n):
 # Comparing max with remaining elements of array
 if arr[i] > max:
 max = arr[i]

 # Returning maximum
 return max"
Create a program in Python to convert an array of integers to an array of binary numbers.,"[2,4,7]","def int_to_bin(arr):
   binary = []
   for num in arr:
       binary.append(bin(num))
   return binary

arr = [2,4,7]
bin_arr = int_to_bin(arr)
print(bin_arr)"
Generate a function in Python to filter a given list and keep only the numeric items in the list.,"input_list = [4, 2, 1, 15.6, 'p', 'y', 5.8]","def filter_numeric(input_list): 
    
    num_list = [] 
  
    for item in input_list:
        if type(item) == int or type(item) == float: 
            num_list.append(item) 
   
    return num_list 
  
input_list = [4, 2, 1, 15.6, 'p', 'y', 5.8] 
print(filter_numeric(input_list)) 
#Output: [4, 2, 1, 15.6, 5.8]"
Create an algorithm to determine if two strings have the same character set in Python.,"Strings: ""paris"" and ""sapir""","def same_charset(str1, str2):
	
	str1 = sorted(str1) 
	str2 = sorted(str2)
 
	if(str1 == str2):
		return True
	else:
		return False"
Write a python program to check if two sequences are identical.,"[1,2,3], [1,2,3]","def check_seq(seq1, seq2):
    if len (seq1) != len (seq2): 
        return False
    else: 
        for i in range(len (seq1)):
            if seq1[i] != seq2[i]:
                return False
    return True"
Design a Python script to nested loop iterate the following list of lists.,"arr = [['a', 'b', 'c'], ['d', 'e', 'f'], ['g', 'h', 'i']]","for outer in arr:
   for inner in outer:
       print(inner)"
Design a class in Python that models a customer with the following properties,"Attributes: name, email, phone_number, address.","class Customer:
    def __init__(self,name, email, phone_number, address):
        self.name = name
        self.email = email
        self.phone_number = phone_number
        self.address = address"
Create a Python program to find the area of a given trapezoid.,"base1 = 2
base2 = 4
height = 3","def area_trapezoid(base1, base2, height):
 return (base1 + base2) * (height / 2)
 
print(area_trapezoid(2, 4, 3)) # Output: 9.0"
Write a function in Python that computes the average of all numbers in a given list.,"numbers = [4, 8, 6, 2, 10]","def compute_average(numbers):
  total = 0
  for num in numbers:
    total += num
  return total / len(numbers)

average = compute_average(numbers)
print(average)  # Outputs 6"
"Create a Python script to transform a list of strings into a list of integers, each integer representing the length of the corresponding string.","[""Hello"", ""World"", ""Goodbye""]","def string_to_length(list_strings):
    return [len(string) for string in list_strings]"
Create a Python program to multiply all of the values in a given list,"[2, 3, 4]","def multiply_list(lst):
    result = 1
    for i in lst:
        result *= i
    return result"
Write a Python program to calculate the cost of sending a message through a messaging service,"Message size: 172 bytes
Price per message: 0.0003 USD","""""""
Calculate the cost of sending a message through a messaging service
""""""

# Message size
size = 172 # bytes

# Price per message
price_per_message = 0.0003 # USD

# Calculate cost
cost = size * price_per_message

print(""The cost of sending a message is {:.3f} USD"".format(cost))"
Develop a program in Python to compute the maximum contiguous subarray sum.,"[-3, 2, 5, -1, 6, 3, -2]","def maxSubArraySum(arr):
    max_so_far = arr[0]
    curr_max = arr[0]
    
    for i in range(1, len(arr)):
        curr_max = max(arr[i], curr_max + arr[i])
        max_so_far = max(max_so_far, curr_max)
        
    return max_so_far"
Create a Python program to generate a dot product between two given lists.,"list1 = [1, 2, 3]
list2 = [4, 5, 6]","def dot_product(list1, list2):
  product = 0
  for x, y in zip(list1, list2):
    product += x*y
  return product"
Use an existing Python function to find the longest string in the following array.,"arr = [""cat"", ""dog"", ""elephant"", ""squirrel"", ""moose""","max(arr, key=len) # returns ""elephant"""
Write a python program to reverses a list while preserving the order of the elements,"lst = [1,2,3,4,5]","lst.reverse()
print(lst)  #output: [5,4,3,2,1]"
Create an algorithm using Python to find the largest number in a list.,"[8, 5, 10, 3]","def find_largest_number(numbers):
    # Finds the largest number from the given list
    largest = 0
    for num in numbers:
        if num > largest:
            largest = num
    return largest
 
numbers = [8, 5, 10, 3]
largest = find_largest_number(numbers)
print(largest)"
Refactor a Python program to concatenate two strings without using the string.concat() function,"// Python program
str1 = ""Hello ""
str2 = ""World""

result = str1.concat(str2)
print(""Concatenated string: "", result)","str1 = ""Hello ""
str2 = ""World""
result = str1 + str2
print(""Concatenated string: "", result)"
Create a Python program that produces the output shown in this example.,"3
3
3
3
3
3","def print_grid(grid_size):
    for x in range(grid_size):
        for y in range(grid_size):
            print(grid_size, end="" "")
        print()

grid_size = 3
print_grid(grid_size)"
Write a Python program to take user input and check if it is a palindrome or not.,racecar,"def isPalindrome(inp):
 inp = inp.lower()
 return inp == inp[::-1]

user_input = input('Enter string: ')
if isPalindrome(user_input):
 print('It\'s a palindrome')
else:
 print('It\'s not a palindrome')"
Create a program in Python to sort a given unsorted list.,"[5, 4, 1, 8, 9, 2]","def sortList(lst): 
    lst.sort() 
    return lst
  
ar_list = [5, 4, 1, 8, 9, 2]
result = sortList(ar_list) 
  
print(result)"
Calculate the average grade of a student given a list of their grades in Python.,"grades = [90, 85, 80, 75, 70]","def calculate_average_grade(grades): 
 total = 0
 for grade in grades: 
 total += grade 
 avg_grade = total / len(grades) 
 return avg_grade 

grades = [90, 85, 80, 75, 70] 
avg_grade = calculate_average_grade(grades) 
print('Average Grade: ', avg_grade) # Output: Average Grade: 80.0"
Update the code snippet below so it works with Python 3.,"def message():
 print ""Hello World!""","def message():
 print(""Hello World!"")"
Rewrite the below program to use Python's dictionary comprehension.,"states = {'NY': 'New York', 'PA': 'Pennsylvania', 'FL': 'Florida'}

inverse_states = {}

for key,value in states.items():
  inverse_states[value] = key","states = {'NY': 'New York', 'PA': 'Pennsylvania', 'FL': 'Florida'}

inverse_states = {value:key for key,value in states.items()}"
"Create an AWS Lambda function in Python that accepts a JSON object as input, processes it, and returns the result.","{
 ""x"": 10,
 ""y"": 20
}","import json

def handler(event, context):
 x = event[""x""]
 y = event[""y""]
 res = x + y
 return {
 ""statusCode"": 200,
 ""body"": json.dumps({""result"": res})
 }"
Design a sorting algorithm in Python that will sort a given array of numbers in ascending order.,"[5, 9, 4, 2, 6]","def sort(nums):
    for i in range(len(nums)):
        min_ind = i
        for j in range(i+1, len(nums)):
            if nums[j] < nums[min_ind]:
                min_ind = j
        nums[i], nums[min_ind] = nums[min_ind], nums[i]
    return nums"
Create a _JSON serializer_ for a given Python data structure.,"data = {
 'name': 'Alice',
 'age': 22,
 'hobbies': ['coding', 'guitar']
}","import json

data = {
 'name': 'Alice',
 'age': 22,
 'hobbies': ['coding', 'guitar']
}

json_data = json.dumps(data)

print(json_data)"
Modify a given Python program to optimize its performance.,"def process_array(array):
 n = len(array)
 result = 0
 for i in range(n):
  result += array[i]
 return result","def process_array(array):
 n = len(array)
 result = 0
 sum_backward = 0
 
 # Starting from the end and going towards the beginning 
 # this is an opportunity to reduce the time complexity 
 for i in range(n-1, -1, -1):
  sum_backward += array[i]
  result += sum_backward
  
 return result"
Write a Python program to generate a Fibonacci sequence of given length.,length = 8,"def getFibonacciSequence(length): 
    a = 0
    b = 1
    result = [a, b] 
    if (length < 2):
        return result 
    else:
        for i in range(2, length):
            c = a + b
            a = b 
            b = c
            result.append(c)
    return result
  
print(getFibonacciSequence(8))"
Write a Python program that takes a sentence as an argument and removes all punctuations from it.,"String: ""This, is a?! test* sentence.""","import string

def removePunctuations(sentence):
    return sentence.translate(str.maketrans('', '', string.punctuation))

print(removePunctuations(""This, is a?! test* sentence.""))"
Create a Python program to loop through a given list and print each item on a new line.,"my_list = [""apples"", ""oranges"", ""bananas""]","for item in my_list:
    print(item)"
Create a function in Python that implements binary search.,"[2, 5, 7, 9, 12, 15], 12","def binary_search(arr, value): 
    low = 0
    high = len(arr) - 1
  
    while low <= high: 
        mid = (low + high) // 2
        if arr[mid] < value: 
            low = mid + 1
        elif arr[mid] > value: 
            high = mid - 1
        else: 
            return mid 
  
    return -1

# Test
arr = [2, 5, 7, 9, 12, 15]
value = 12
print(binary_search(arr, value)) # 4"
Create a for-loop in Python and use it to find the sum of a list of integers.,"[1, 4, 9, 16, 25]","total = 0
for num in [1, 4, 9, 16, 25]:
  total += num
print(total)"
Create a function in Python that converts a Fahrenheit temperature to Celsius.,100 degrees,"def convertFahrenheitToCelsius(fahrenheit):
    celsius = (fahrenheit - 32) * 5/9
    print(""{}°F is {}°C"".format(fahrenheit,celsius))

convertFahrenheitToCelsius(100)"
Generate a Python program to copy all elements of one list into another list.,"source = [0, 1, 2]","source = [0, 1, 2]
 
dest = []
 
for item in source:
    dest.append(item)
    
print(dest)"
Write a Python script that uses recursion to calculate the Fibonacci sequence for a given number of terms.,6,"def Fibonacci(n): 
   if n<0: 
      print(""Incorrect input"") 
   elif n==1: 
      return 0
   elif n==2: 
      return 1
   else: 
      return Fibonacci(n-1)+Fibonacci(n-2) 
 
# Driver Program 
n = 6
print(Fibonacci(n))"
Convert the Python code attached to an equivalent Java program.,"def print_list(lst):
    for item in lst:
        print(item)","public class ListPrinter {
    public static void printList(List<Object> lst) {
        for (Object item : lst) {
            System.out.println(item);
        }
    }
}"
Create a python program that applies mean normalization to the given data.,"[1, 2, 3, 4, 5, 6]","def normalize_mean(data):
    mean = np.mean(data)
    normalized = [x - mean for x in data]
    return normalized"
Create a Python program that takes in a list and returns a new list. The program should subtract 10 from every element in the list.,"list = [1,2,3,4,5]","def subtractFromList(list): 
 return [x - 10 for x in list]"
Create a python code that takes in a sentence and returns a list containing the length of each word.,"sentence = ""Hello I am a sentence""",sentence_lengths = [len(word) for word in sentence.split()]
Write a Python program to implement Linear Search for an array of numbers,"arr = [2, 3, 5, 7, 11]
n = 11","def LinearSearch(arr, n):
 for i in range(len(arr)):
 if arr[i] == n:
 return i
 return -1

index = LinearSearch(arr, n)
print(index)"
Create a function in Python to find the longest string in a given list of strings,"[""Apple"", ""Banana"", ""Orange"", ""Mango"", ""Pineapple""]","def find_longest_string(arr):
    longest_string = ''
    for s in arr:
        if len(s) > len(longest_string):
            longest_string = s
    return longest_string

arr = [""Apple"", ""Banana"", ""Orange"", ""Mango"", ""Pineapple""]
result = find_longest_string(arr)
print('Longest string is', result)"
Create a function in Python that takes two parameters: a list of numbers and a number called ‘n’ and returns the last n numbers in the list.,"myList = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
n = 3","def last_n_numbers(myList, n):
  return myList[-n:]
  
res = last_n_numbers(myList, n)
print(res) 

# Output
[8, 9, 10]"
"Write a python program that will take a given string and return a new string that is the same as the given one, except that all letters are reversed.","""Hello World!""","def reverseString(string): 
    string = """".join(reversed(string)) 
    return string 

if __name__ == ""__main__"": 
    string = ""Hello World!""
    print(reverseString(string))

# Output:
""!dlroW olleH"""
Write a Python program to print the 3 most common elements of a given list.,"Input = [2, 5, 3, 7, 8, 5, 10, 19, 20]","from collections import Counter

Input = [2, 5, 3, 7, 8, 5, 10, 19, 20] 
  
Counter = Counter(Input) 
  
most_occur = Counter.most_common(3)

for i in most_occur: 
    print(i[0], "":"", i[1])"
Generate a Python script that prints the sum of the numbers in the given range.,Start: 10 End: 19,"# Initialize one variable to store result
result = 0

# Use a loop to iterate through the given range
for num in range(10, 20):
    result += num

# Print the result
print(result)"
Create a function that computes an array of odd numbers within a given range,an integer n,"# Python3 program to find odd numbers in a range  

def odd_numbers(n): 
    odd_numbers = [] 
      
    # looping through each number 
    for i in range(1, n + 1): 
        if i % 2 != 0: 
            odd_numbers.append(i) 
    return odd_numbers"
Implement a search algorithm in Python to look for the value in the list.,"list_tmp = [1, 23, 42, 5, 7, 34, 89]
value = 42","def search(list_tmp, value): 
    for index, item in enumerate(list_tmp): 
        if item == value: 
            return index 

    return -1"
"Design a Python program to read in a list of list of strings, eliminate duplicate entries, sort them and print out the result.","[['b', 'a', 'd'], ['c', 'a', 'd'], ['a', 'f', 'g']]","def removeduplicates(list_of_string):
    result = []
    for item in list_of_string:
        if item not in result:
            result.append(item)
    result.sort()
    return result

list_of_string = [['b', 'a', 'd'], ['c', 'a', 'd'], ['a', 'f', 'g']]
print(removeduplicates(list_of_string))"
Create an API wrapper in Python for the following API,"""https://example.com/api/users/list""","import requests 

# API wrapper for the given API 
def api_wrapper(url): 
    # get the API response 
    response = requests.get(url) 

    # check the response status 
    if(response.status_code == 200): 
        # return json data 
        return response.json()
    else: 
        return None"
Generate a Python program to remove a key-value pair in a dictionary.,"d = { 'a': 10, 'b': 20, 'c':30 }","def remove_pair(d, key):
 if key in d:
 del d[key]
 return d
 
d = { 'a': 10, 'b': 20, 'c':30 }
remove_pair(d, 'c')"
Design a Python algorithm to parse a list of strings and prints the longest string's length.,"listOfString= [""I"", ""am"", ""so"", ""happy""]","listStrings= [""I"", ""am"", ""so"", ""happy""]
longestStringLen = 0
for string in listStrings:
    if (len(string) > longestStringLen):
        longestStringLen = len(string)

print(longestStringLen)"
Edit the following code to fix any errors.,"# Python code to print the Fibonacci series
limit = int(input(""Enter limit : ""))

a = 0
b = 1

while(limit):
	print(a, end='\t')
	a = b
	b += b
	limit -= 1","# Python code to print the Fibonacci series
limit = int(input(""Enter limit : ""))

a = 0
b = 1

while(limit):
	print(a, end='\t')
	a, b = b, a + b
	limit -= 1"
"In Python, use the re module to remove the HTML tags from a given string.",String: <b>This is a bold string</b>,"import re

string = ""<b>This is a bold string</b>""

clean_string = re.sub(r'<[^>]*>', '', string)

print(clean_string)"
Write a Python program to create a function that receives a list of strings and returns a new list with the strings sorted according to their length.,"[""Python"", ""is"", ""a"", ""programming"", ""language""]","def sort_list_by_length(list_of_strings):
    return sorted(list_of_strings, key=len) 

list_of_strings = [""Python"", ""is"", ""a"", ""programming"", ""language""]
sorted_list = sort_list_by_length(list_of_strings) 

print(sorted_list)"
Create an algorithm in Python which takes an integer as input and prints out the binary reversed version of that number.,num = 8,"bin_str = bin(num)
rev_bin_str = '0b' + bin_str[:1:-1]
rev_num = int(rev_bin_str,2)

print(""The binary reversed version of {} is {}"".format(num, rev_num))"
Edit a python program to print the square of a number input by the user.,"num = input(""Enter a number: "")","num = input(""Enter a number: "")

num = int(num)

print(""The square of the number is:"", num**2)"
Generate a valid JSON representation for the following object.,"{""name"": ""John Doe"", ""age"": 34, ""skills"": [""JavaScript"", ""Python""]}","{
 ""name"": ""John Doe"",
 ""age"": 34,
 ""skills"": [
  ""JavaScript"",
  ""Python""
 ]
}"
Create a Python program to find the intersection of two given array. The intersected elements should be the elements present in both the arrays.,"Array 1: [3, 5, 2, 8, 1], Array 2: [5, 8, 9, 7]","def intersection(array_1, array_2): 
    result = [] 
    for num in array_1: 
        if num in array_2: 
            result.append(num) 
    return result"
Generate a Python function that takes an array of elements and finds the frequency of each element,"[1,4,1,4,4,4,9,7]","def count_frequency(l):
    frequencies = {}
    for i in l:
        if i in frequencies:
            frequencies[i] += 1
        else:
            frequencies[i] = 1
    return frequencies

l = [1,4,1,4,4,4,9,7]
print(count_frequency(l))"
Write a function in Python to get the number of occurrences of a particular character in a given sentence.,"sentence = ""Hello world!""
character = 'l'","def count_occurrences(sentence, character): 
    return sentence.count(character)"
Design a function in Python for filtering out unique elements in a list.,"list = [1, 2, 2, 3, 3, 4]","def filter_list(list): 
  filtered_list = [] 

  for i in list: 
    if i not in filtered_list: 
      filtered_list.append(i) 
  
  return filtered_list"
Implement a function to remove all occurrences of the word 'python' from a given sentence.,"sentence = ""I love learning Python but sometimes it is hard to understand""","def remove_word(sentence, word):
    words = sentence.split()
    new_words = [w for w in words if w != word]
    return ' '.join(new_words)

new_sentence = remove_word(sentence, 'Python')"
Write a function in Python for sorting a list of objects by an attribute 'name'.,"list_of_objects = [{""name"": ""John"", ""age"": 35}, {""name"": ""Liz"", ""age"": 25}, {""name"": ""Max"", ""age"": 28}]","def sort_by_name(lst): 
    return sorted(lst, key=lambda item: item[""name""])"
Create a Python function that sorts a list of strings alphabetically,"[‘apple’,’orange’,’pear’]","def sort_strings(list_of_strings):
    sorted_list = sorted(list_of_strings, key=lambda str: str.lower())
    return sorted_list

result = sort_strings(['apple', 'orange', 'pear'])
print(result)"
Write a Python program to solve a quadratic equation.,"a = 1
b = -5
c = 6","import math

# Solve the quadratic equation ax**2 + bx + c = 0 
# ax**2 + bx + c = 0 
# find x

a = 1
b = - 5
c = 6

d = (b**2) - (4*a*c)
 
# find two solutions
sol1 = (-b-math.sqrt(d))/(2*a)
sol2 = (-b+math.sqrt(d))/(2*a)
 
print('The solution are {0} and {1}'.format(sol1,sol2))"
Design a function in Python to determine if a given number is prime.,37,"def is_prime(n):
    if n <= 1: 
        return False
    if n == 2: 
        return True
    if n > 2 and n % 2 == 0: 
        return False

    sqrt_n = int(n**0.5)
    for i in range(3, sqrt_n+1, 2):
        if n % i == 0:
            return False
    return True

if is_prime(37):
    print('37 is a prime number!')"
Write code in Python to calculate the mean for a given list of numbers.,"[4, 17, 12, 78, 43, 13, 94, 77]","import numpy as np 

# given list of numbers 
list = [4, 17, 12, 78, 43, 13, 94, 77] 

# calculating mean 
mean = np.mean(list) 

# printing mean 
print(""Mean:"", mean)"
Find the most efficient Python code to print all the divisors of an input number.,input = 28,"# Python Program to find the factors of a number

# define a function
def print_divisors(input):

    # find all factors of the input number
    for i in range(1, input + 1):
        if input % i == 0:
            print (i)

# take input from the user
input = 28

# print the divisors
print_divisors(input)"
Create a Python function that takes a positive integer as input and returns a list of its prime factors.,The number 12.,"def prime_factors(number):
 prime_factors = []
 i = 2
 while number > 1:
  if number % i == 0:
   prime_factors.append(i)
   number //= i
  else:
   i += 1
 return prime_factors

print(prime_factors(12))
# [2, 2, 3]"
"Write a Python program to keep track of an array of prices, and output the maximum and minimum price in the array.","[20, 40, 60, 5]","prices = [20, 40, 60, 5]

max_price = max(prices)
min_price = min(prices)

print('Max price is: ' + str(max_price))
print('Min price is: ' + str(min_price))"
Write a Python code to tokenize the given sentence.,This is a sample sentence,"import nltk

sentence = ""This is a sample sentence""

tokenized_words = nltk.word_tokenize(sentence)

print(tokenized_words)"
"Given a Python list, create a new list of all items in the first list that are not in the second list.","first_list = [1, 2, 3, 4, 5]
second_list = [3, 4]","first_list = [1, 2, 3, 4, 5]
second_list = [3, 4]

new_list = []

for item in first_list:
    if item not in second_list:
        new_list.append(item)
        
print(new_list) # [1, 2, 5]"
Write a correct Python program to extract all words from a given sentence which have 4 or more characters.,"my_sentence = ""This is an example sentence""","def words_with_four_or_more_characters(my_sentence):
  words = my_sentence.split("" "")
  four_plus_words = []
  for word in words:
    if len(word) >= 4:
      four_plus_words.append(word)
  return four_plus_words"
"Given a list of numbers, write a Python program to calculate the median.","[3, 4, 5, 9, 12, 15]","def median(nums):
    nums.sort()
    n = len(nums)
    if n % 2 == 0:
        return (nums[n//2] + nums[(n//2) - 1]) / 2
    return nums[n//2]

nums = [3, 4, 5, 9, 12, 15]
print(median(nums))"
Edit the given Python code to make it asynchronous.,"""""""
def find_files(files, pattern):
    result = []
    for f in files:
        if re.search(pattern, f):
            result.append(f)
    return result
""""""","""""""
import asyncio
import re

async def find_files(files, pattern):
    result = []
    for f in files:
        if re.search(pattern,f):
            result.append(f)
    return result
"""""""
Write a Python code to generate the Fibonacci sequence up to n-th number.,7,"def fibonacciSequence(n): 
    fibSequence = []
    a, b = 0, 1
    while b < n:
        fibSequence.append(b)
        a, b = b, a + b
    return fibSequence

n = 7

print(fibonacciSequence(n)) // [1, 1, 2, 3, 5]"
Create a Python script to solve an equations.,2x + 3 = 5,"def solve(eq):
    lhs_x = eq.split(""="")[0]
    rhs = float(eq.split(""="")[1])
    x = float(lhs_x.split(""+"")[0].split(""x"")[0])
    constant = float(lhs_x.split(""+"")[1])
    return (rhs - constant) / x

if __name__ == ""__main__"":
    eq = ""2x + 3 = 5""
    print(solve(eq))"
Create a Python program that takes two strings as input and creates a new string with the characters in the second string that are not present in the first string.,"'jello','hello'","def difference(string1, string2):
  new_string = ''
  
  for char in string2:
    if char not in string1:
      new_string += char
      
  return new_string

string1 = 'jello'
string2 = 'hello'

print(difference(string1, string2)) # Output: 'e'"
Output the maximum value of a Python dictionary.,"{
 'a': 10, 
 'b': 20, 
 'c': 30
}",max_value = max(dictionary.values()) # 30
Develop an algorithm in Python to generate a Fibonacci series up to the nth value.,n = 10,"# Program to generate a Fibonacci series using an algorithm

# function to generate Fibonacci series
def generate_fibonacci_series(n):
    a, b = 0, 1 
    result = [] 
    while b < n:
        result.append(b)
        a, b = b, a + b 
    return result

# Driver code 
n = 10
result = generate_fibonacci_series(n)
print(""The Fibonacci number up to"", n, ""is"", result)"
Train a machine learning model in Python using a given dataset and generate a confusion matrix.,// Dataset of 1000 samples and 30 features,"from sklearn.model_selection import train_test_split
from sklearn.metrics import confusion_matrix

X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=0) 
model.fit(X_train, y_train)
predictions = model.predict(X_test)
confusion_matrix(y_test, predictions)"
Optimize the following Python code snippet to make it run faster.,"def add_numbers(numbers):
 result = 0
 for num in numbers:
 result += num
 return result","def add_numbers(numbers):
 result = 0
 l = len(numbers)
 i = 0
 while i < l:
 result += numbers[i]
 i += 1
 return result"
Write a Python program for computing the sum of a given array of integers.,"[1, 2, 3, 4, 5]","def compute_sum(int_arry):
    sum = 0
    # loop through each element in the array
    for i in int_arry:
        sum += i
    return sum

# example testing code
int_arry = [1, 2, 3, 4, 5]
total_sum = compute_sum(int_arry)

print(""Sum of array elements is"", total_sum)"
You are given the following string. Write a Python program to print how many times each word appears in the string.,"input_string = ""This is an exmaple of a string.""","def count_words(input_string):
  words_count = {}
  words = input_string.split()
  for word in words:
    if word in words_count:
      words_count[word] += 1
    else:
      words_count[word] = 1
  return words_count

words_count = count_words(input_string)
print(words_count)"
Write a Python program to take a list of words and create a dictionary with the words as keys and the frequency of each word as the values.,"words = ['a', 'b', 'a', 'c', 'b', 'a', 'd']","words_dict = {}
for word in words:
    if word in words_dict:
        words_dict[word] += 1
    else:
        words_dict[word] = 1

print(words_dict)

# Output
# {'a': 3, 'b': 2, 'c': 1, 'd': 1}"
Create a recursive function in Python to calculate the factorial of the following number:,7,"def factorial(x):
    if x == 0:
        return 1
    else:
        return x * factorial(x-1)

x = 7

factorial_of_x = factorial(x)
print(""The factorial of {} is {}"".format(x, factorial_of_x))"
Create a function to calculate the midpoint between two 3-dimensional points using Python.,"point1 = [35.0, 43.0, 81.0]
point2 = [82.0, 54.0, 19.0]","def midpoint3D(point1, point2): 
    x_mid = (point1[0] + point2[0]) / 2
    y_mid = (point1[1] + point2[1]) / 2
    z_mid = (point1[2] + point2[2]) / 2
    return [x_mid, y_mid, z_mid]

point1 = [35.0, 43.0, 81.0]
point2 = [82.0, 54.0, 19.0]
midpoint = midpoint3D(point1, point2)
print(midpoint) # [58.5, 48.5, 50.0]"
"In Python, write a script to sort the list items in descending order.","list_items = [3, 7, 5, 8, 10]","list_items = [3, 7, 5, 8, 10]

list_items.sort(reverse=True)

print(list_items) # Output: [10, 8, 7, 5, 3]"
Modify the following Python function to get the first index of the keyword within the string.,"def first_index(str, keyword):
    for i in range(len(str)):
        if str[i] == keyword:
            return i","def first_index(str, keyword):
    for i in range(len(str)):
        if str[i] == keyword:
            return i
    return -1"
Create a Python function that takes a list of strings as input and returns the longest string in the list.,"['Data', 'Science', 'Machine', 'Learning']","def find_longest_string(string_list):
    longest_string = ''
    for string in string_list:
        if len(string) > len(longest_string):
            longest_string = string
    return longest_string"
Write an efficient algorithm in Python to find the minumum number of iterations to reach a certain number.,Start with number 5 and the end goal is number 10,"def min_num_iterations(start, end):
    num_iterations = 0

    while start < end:
        start += 1
        num_iterations += 1

    return num_iterations

print(min_num_iterations(5, 10)) # Output: 5"
Write a Python program to sort a list of dictionaries by a key in each dictionary.,"my_list = [{'name': 'Tom', 'age': 25}, {'name': 'John', 'age': 21}, {'name': 'Adam', 'age': 26}]","def sort_list_of_dicts_by_key(my_list, key):
    return sorted(my_list, key=lambda k: k[key])"
"Create a Python script that takes a sentence as an input, separates all the words into a list and prints them in alphabetical order.",This is an example sentence,"input_sentence = ""This is an example sentence""
words = input_sentence.split()
words.sort()

print(words) # ['an', 'example', 'is', 'sentence', 'This']"
"Generate a function in Python which takes an array as an argument and returns an array of length two, with the first element being the maximum value and the second element being the minimum value of the array.","[1, 5, 7, 3, 9]","def minmax(array):
  max_val = max(array)
  min_val = min(array)
  return [max_val, min_val]"
Develop a solution which adds two numbers X and Y and prints the sum as output using Python.,"X = 10 
Y = 20","x = 10
y = 20

sum = x + y

print(sum) # Output: 30"
Edit the Python code below to optimize it's runtime by using an alternative algorithm.,"def sum_all_numbers(n):
 result = 0
 for number in range(1, n+1):
 result += number
 return result","def sum_all_numbers(n):
 return n * (n + 1) // 2"
Suggest an improvement to the following python program.,"def find_duplicates(lst):
duplicates = []
for elem in lst:
    if lst.count(elem) > 1:
        if elem not in duplicates:
            duplicates.append(elem)
return duplicates","def find_duplicates(lst):
    seen = set()
    duplicates = []
    for elem in lst:
        if elem in seen:
            duplicates.append(elem)
        else:
            seen.add(elem)
    return duplicates"
Edit this python code to make the output print in descending order (from highest to lowest).,"my_list = [10,2,5,1,20]

for x in my_list:
    print(x)","my_list = [10,2,5,1,20]

for x in my_list:
    print(x)
    
for x in sorted(my_list, reverse=True):
    print(x)"
Edit the given Python code to reverse the order of the letters in a string without using any in-built string functions.,"string = ""Hello World!""","def reverse_string(string):
    reversed_string = """"
    for i in range(len(string) - 1, -1, -1):
        reversed_string += string[i]
    return reversed_string

string = ""Hello World!"" 
reverse_string(string)"
Write a Python program to check whether a sentence contains all the alphabets of the English language,"sentence = ""The quick brown fox jumps over the lazy dog""","def check_sentence(sentence):
    '''This function will check if a sentence contains all the alphabets of the English language'''
    alphabet = ""abcdefghijklmnopqrstuvwxyz""
    for char in alphabet:
        if char not in sentence.lower():
            return False
    return True"
Write a python script that takes a list of numbers from 1 to 8  and prints its cubic values.,"[1, 2, 3, 4, 5, 6, 7, 8]","list_numbers = [1, 2, 3, 4, 5, 6, 7, 8]

for num in list_numbers:
    print(num**3)"
Modify this given Python code to handle inputs of any size,"def sum_digits(num):
    total = 0
    while num > 0:
        total += num % 10
        num //= 10
    return total","def sum_digits(num):
    total = 0
    while num != 0:
        total += num % 10
        num //= 10
    return total"
Generate a Python program using a list comprehension that takes a 2D list of integers and computes the sum of integers at each row.,"[[1, 2, 3], [4, 5, 6], [7, 8, 9]]","total_row_sum = [sum(row) for row in [[1, 2, 3], [4, 5, 6], [7, 8, 9]]]

print(total_row_sum)"
Write a function in Python that encodes a string using a simple algorithm.,"Text string:  ""Hello""","def encodeString (text):
    encoded_string = ''
    for char in text:
        encoded_char = ord(char) + 3
        encoded_string += chr(encoded_char)

    return encoded_string

encodeString(""Hello"")  # khoor"
Take a string and output a list of all the words comprising the string,String: Python is a programming language.,"[‘Python’, ‘is’, ‘a’, ‘programming’, ‘language’]"
Construct a python program to check if two given strings are anagrams.,"String1: army
String2: mary","def isAnagram(str1, str2):  
    n1 = len(str1)
    n2 = len(str2) 
    if n1 != n2: 
        return False
    str1 = ''.join(sorted(str1)) 
    str2 = ''.join(sorted(str2))  
    for i in range(n1):  
        if str1[i] != str2[i]:  
            return False
    return True"
"Using the given lists, create a Python dictionary that contains the expected output.","key_list = ['a', 'b', 'c']
value_list = [1, 2, 3]","dictionary = dict(zip(key_list, value_list))
print(dictionary)"
Create a Python program to copy elements of one array into another array.,"Array 1=[1,2,3,4]","array_1 = [1,2,3,4] 
array_2 = [] 
  
# Copying all the elements 
for i in range(0, len(array_1)): 
    array_2.append(array_1[i]) 
     
print (""Elements Copied from the Array1 to Array2 are : "" + str(array_2))"
Write a Python program to convert a timestamp (in seconds) to a date format (dd-mm-yyyy).,timestamp: 1591123259,"import datetime

# Function to convert the timestamp 
def getDateTime(timestamp):
 return datetime.datetime.fromtimestamp(timestamp).strftime(""%d-%m-%Y"")

# Driver program
timestamp = 1591123259
print(getDateTime(timestamp))
# Output: 17-06-2020"
"In Python, parse a JSON string and return the value associated with a particular key","JSON String: { ""key1"": ""value1"", ""key2"": ""value2"" }
Key: ""key2""","import json

# Create a json object from the string
json_obj = json.loads('{""key1"": ""value1"", ""key2"": ""value2""}')

#get the value for a particular key
value = json_obj[""key2""]"
Convert the below pseudo-code into valid Python code.,"x = 0

while x<10:
    x = x + 2
    if x==4:
        continue
    print(x)","x = 0

while x < 10:
    x = x + 2
    if x == 4:
        continue
    print(x)"
"Write a Python program to split a given string into substrings of fixed length, and print the substrings in a single line seperated by comma.",PythonProgramming,"def split_string(string, length):
    substrings = [string[i:i+length] for i in range(0, len(string), length)]
    return ','.join(substrings)"
"Create a Python program that reads an integer from the console and prints ""true"" if the number is even, and ""false"" if the number is odd.",3,"num = int(input())
if num % 2 == 0:
    print(""true"")
else:
    print(""false"")"
Create a python program to reverse an integer.,x = 123,"def reverse_int(x):
    """"""Reverse an integer.""""""
    reversed_int = int(str(x)[::-1])
    return reversed_int

# Usage Example
x = 123
reversed_int = reverse_int(x)
print(reversed_int)  # 321"
Design a function for ordering a pizza in Python and use it to order a pizza with 3 toppings.,"Toppings: Pepperoni, Mushroom, Olives","def orderPizza(toppings):
    print(""Ordering a pizza with the following toppings:"")
    for topping in toppings:
      print(topping)
    print(""Thank you!"")
orderPizza([""Pepperoni"", ""Mushroom"", ""Olives""])"
Construct a function in Python to calculate the area of a triangle with three sides,"side1: 3
side2: 4
side3: 5","def triangleArea(side1, side2, side3):
  s = (side1 + side2 + side3) / 2
  area = (s * (s - side1) * (s - side2) * (s - side3)) ** 0.5
  return area"
Create a python script that takes in a number and tells whether it is odd or even.,number:9,"def evenOdd(number): 
    if (number % 2 == 0): 
        print(""Even"") 
    else: 
        print(""Odd"") 

evenOdd(number)"
Develop a Python function to determine the greatest common divisor of two integers.,"a = 28 
b = 15","def gcd(a, b): 
 if(b == 0): 
  return a 
 return gcd(b, a%b) 

def main():
 a = 28 
 b = 15 
 print(gcd(a,b)) 

if __name__ == ""__main__"": 
 main() 

# Output
3"
Create a translation model in python which takes a sentence as input and returns its translation in Khmer.,"""Hello world""","import googletrans 
from googletrans import Translator 
 
def translate_sentence(sentence): 
    translator = Translator()
    translated_sentence = translator.translate(sentence, dest='km')
    return translated_sentence.text

result = translate_sentence(""Hello world"")
print(result)"
Create a ‘Find and Replace’ Script in Python.,"String: 'This is a sentence with words'
Find: 'words'
Replace: 'letters'","import re

text = 'This is a sentence with words'
find = 'words'
replace = 'letters'

new_text = re.sub(find, replace, text)
print(new_text)
# Output: This is a sentence with letters"
Develop an algorithm in Python to print an array in reverse order.,"[1, 2, 3, 4, 5]","def reverse_array(arr):
    return arr[::-1]

arr = [1, 2, 3, 4, 5]
print(reverse_array(arr))"
Generate an optimized Python code that computes the product of two numbers without using the multiplication operator.,The numbers are 3 and 7,"def product_without_mul(x, y): 
 result = 0
 while (y > 0): 
    partial_result = 0
    for i in range(y): 
        partial_result += x
    result += partial_result
    y -= 1
   
return result 

x = 3
y = 7

print(""Product of two numbers without using 
multiplication operator is "", product_without_mul(x, y))"
Formulate a python program to calculate the roots of a quadratic equation with given coefficients.,"coefficients: 2, -5, -3","import math
 
def quadratic_roots(a, b, c):
 
  # calculate the discriminant
  d = (b**2) - (4*a*c)
  
  # calculate the two roots
  root1 = (-b + math.sqrt(d)) / (2*a)
  root2 = (-b - math.sqrt(d)) / (2*a)
   
  print(""The roots of x^2 - 5x - 6 are"",root1,""and"",root2)
  
# Driver Code
a = 2
b = -5
c = -3
quadratic_roots(a, b, c)"
Generate Python code to get the maximum element in a list.,"List of integers [7, 2, 3, 6, 5]","list = [7, 2, 3, 6, 5]
print(""Max element is:"", max(list))"
Create a Python program that will take a list of numbers and identify if any of the numbers are multiples of three.,"numbers = [2, 7, 8, 15, 24]","for number in numbers:
 if number % 3 == 0:
  print(f'{number} is a multiple of 3')
 else:
  print(f'{number} is not a multiple of 3')

# Output:
# 2 is not a multiple of 3
# 7 is not a multiple of 3
# 8 is not a multiple of 3
# 15 is a multiple of 3
# 24 is a multiple of 3"
Generate a list of fibonacci numbers using iterative function in Python.,n=10,"def generate_fibonacci_numbers(n):
    # Initialize variables
    a = 0
    b = 1

    # Iterate and calculate fibonacci numbers
    fib_list = [a]
    for i in range(1, n):
        c = a + b
        fib_list.append(c)
        a = b
        b = c
    return fib_list
    
if __name__ == '__main__':
    print(generate_fibonacci_numbers(10))"
Find the most common word in a sentence using Python.,"""this is a sentence with several words in it""","from collections import Counter
 
def most_frequent(sentence):
    words = sentence.split()
    counter = Counter(words)
    return counter.most_common(1)[0][0]

sentence = ""this is a sentence with several words in it""
print(most_frequent(sentence))
// Outputs: ""a"""
Convert a given list into a list of tuples using Python.,"list = [1, 2, 3, 4, 5]","def listToTuple(list):
 tupleList = []
 for element in list:
  tupleList.append((element,))
 return tupleList

print(listToTuple(list))"
Write a Python program that displays the current status of a given stock quote.,The stock symbol is AAPL,"import requests 

AAPL_url = ""https://api.iextrading.com/1.0/stock/AAPL/quote?filter=symbol,latestPrice,latestSource,latestTime""

res = requests.get(AAPL_url)
data = res.json()

print(""Symbol: "" + data['symbol']) 
print(""Price: "" + str(data['latestPrice'])) 
print(""Source: "" + data['latestSource']) 
print(""Time: "" + data['latestTime'])"
Create a Python program that accepts an integer and displays its factorial.,num=5,"def factorial(num):
    result = 1
    for i in range(1, num+1):
        result *= i
    return result

n = int(input(""Enter an Integer: ""))
print(factorial(n))"
Write a Python program to add two numbers given as input from the user.,"Input: 2, 4","num1 = int(input(""Enter the first number: ""))
num2 = int(input(""Enter the second number: ""))

sum = num1 + num2

print(""The sum of the two numbers is:"", sum)"
Create a Python script to print out each word that begins with a vowel in a sentence.,Sentence: The quick brown fox jumped over the lazy dog,"for word in sentence.split():
    if word[0].lower() in 'aeiou':
        print(word)"
Write a Python program to traverse a tree data structure and print all the nodes in preorder.,"tree 
	 /   \   
    1     2 
  /      / \ 
 3      4   5","def preorder(tree): 
    if tree: 
        print(tree.val) 
        preorder(tree.left) 
        preorder(tree.right) 
  
# Driver code  
tree = Node(1) 
tree.left = Node(2) 
tree.right = Node(3) 
tree.left.left = Node(4) 
tree.left.right = Node(5) 
  
preorder(tree)"
Write a python program to automatically extract the following grade scores from the given text.,Text: “Johnny got 85 in Maths and 63 in English”,"maths_score = 85
english_score = 63"
Write a function in Python that takes two arrays of the same size and performs elementwise addition.,"arr1 = [1, 2, 3]
arr2 = [3, 4, 5]","def add_arrays(arr1, arr2):
 if len(arr1) != len(arr2):
  raise Exception(""Arrays are not of the same size!"")
 return [x + y for x, y in zip(arr1, arr2)]

add_arrays(arr1, arr2)  # [4, 6, 8]"
Design a Python program for verifying the two strings are rotations of each other?,"s1 = ""Hello World""
s2 = ""World Hello""","def check_rotation(str1, str2): 
	if len(str1) != len(str2): 
		return False
	temp = str1 + str1
	return (str2 in temp) 

s1 = ""Hello World""
s2 = ""World Hello""
if check_rotation(s1, s2): 
	print('These strings are rotations of each other'); 
else: 
	print('These strings are not rotations of each other')"
Implement an algorithm to find a substring in a given string using a greedy approach in Python.,"string = ""This is a sample string""
substring = ""sample""","def find_substring(string, substring):
    start = 0
    result = """"
    while start < len(string):
        idx = string.find(substring, start)
        if idx == -1:
            break
        result += string[idx:idx+len(substring)]
        start = idx+len(substring)
    return result"
Write a python script to remove all punctuations and whitespace in a string,"string = ""Hello, how are you! I'm doing great.""","def remove_punc_and_whitespace(string): 
    return ''.join([x for x in string if x not in ["" "", "","", "":"", ""-"", ""!"", ""?"", "".""]])"
"Using the given input, write a Python program that prints the maximum number from the list.","[1, 5, 8, 3, 10]","mylist = [1, 5, 8, 3, 10]

print(max(mylist))"
Write a Python program that takes two numbers and swaps them without using an additional variable.,"x = 5, y = 4","def swap_without_variable(x, y): 
    x = x + y   
    y = x - y  
    x = x - y  
    return x, y"
Write a Python program to edit a list given some criteria.,"list = [5, 6, 2, 8, 11]
criteria = lambda x: x % 2 == 0","def edit_list(list, criteria):
    return [x for x in list if criteria(x) == True]"
Develop a Python script to search for a specific element in a given list.,"arr = [2, 3, 4, 5, 6, 7]
x = 5","def search_element(arr, x):
    for i in range(len(arr)):
        if arr[i] == x:
            return i 

    return -1"
Create a program to print the following ASCII art using python.,"( _ _ )
| o o |
|  ^  |
| \_/ |","print('  ( _ _ )')
print('  | o o |')
print('  |  ^  |')
print('  | \_/ |')"
Create a program in Python that takes a list of strings and returns a new list with each string reversed.,"[""Hello"", ""World""]","def reverse_list(strings):
    return [s[::-1] for s in strings]

strings = [""Hello"", ""World""]
print(reverse_list(strings))"
Generate a python code to sum the elements in the given array.,"arr = [1, 2, 3, 4, 5]","def sum_array(arr):
    total = 0
    for num in arr:
        total += num
    return total

sum_array(arr)"
"Using the input provided, add a try/except block to the given Python code.","for n in file_name[:20]:
    print(n)","try:
    for n in file_name[:20]:
        print(n)
except Exception as e:
    print(e)"
Generate a list of output values by multiplying the input values from two array in Python.,"[1, 2, 3] and [4, 5, 6]","array1 = [1, 2, 3]
array2 = [4, 5, 6]

output = [val1 * val2 for val1, val2 in zip(array1, array2)] 
print(output)

# Output 
[4, 10, 18]"
Write a Python program to generate a random name from a set of given names.,"['John', 'Andy', 'Alex', 'Paul', 'Pippa']","import random

names = [""John"", ""Andy"", ""Alex"", ""Paul"", ""Pippa""]

def getRandomName(names):
    randomIndex = random.randint(0, len(names)-1) 
    return names[randomIndex]

if __name__ == '__main__':
    print(getRandomName(names))"
Create a Python program to print out a multiplication table. The table should print out the first 10 multiples of a given number.,2,"number = int(input(""Please enter a number:""))

for i in range(1, 11):
 print(f'{number} * {i} = {number*i}')"
"Create a Python program that classifies a given sentence as positive, neutral, or negative.",The movie was really terrible.,"def predict_sentiment(sentence): 
    pred = model.predict([sentence])
    if pred[0] == 0:
        print(""Negative sentiment"")
    elif pred[0] == 1: 
        print(""Neutral sentiment"")
    else:
        print(""Positive sentiment"")"
Can you generate a sytax tree of a given Python statement?,"statement = ""x = 5;""","Syntax Tree: 

Assign(targets=[Name(id='x', ctx=Store())], value=Num(n=5))"
Use a basic linear regression model in Python to predict the price of a house based on its size and number of rooms.,"Example data: 
Size: 500, Rooms: 4","import pandas as pd
from sklearn.linear_model import LinearRegression

# Create
data = {'Size': [500], 
'Rooms': [4]}

df = pd.DataFrame(data)

# Train
X = df[['Size','Rooms']] 
Y = df['Price'] 
  
reg = LinearRegression().fit(X, Y) 
  
# Predict
reg.predict([[500,4]]) # Predicted price: 1715.667543"
Write a Python program to remove a specified item from an array.,"arr = [1,2,3,4]","def remove_item(arr, item):
    return [i for i in arr if i != item]

arr = [1,2,3,4]
new_arr = remove_item(arr, 3)
print(new_arr)"
Create a method in Python that takes two arguments and returns a specified error message if one of the two conditions is not met.,"error_message = ""The input must be a number!""","def check_input(arg1, arg2):
   if type(arg1) is not int or type(arg2) is not int:
      return ""The input must be a number!""
   else:
      return ""The input is valid!"""
"Using the input provided, write a Python program to print the sum of the numbers in both lists.","list1 = [7, 4, 5] 
list2 = [8, 10, 4]","list3 = list1 + list2

total = 0

for num in list3:
    total += num 

print(total)  # output: 29"
Hack a Python program to apply a filter to a list of numbers and output the numbers greater than 5.,"List of numbers: [1, 5, 6, 3, 8]","numbers = [1, 5, 6, 3, 8]

filtered_numbers = []

for number in numbers:
  if number > 5:
    filtered_numbers.append(number)

print(filtered_numbers) # output: [6, 8]"
Create a web scraper in Python that extracts the titles and summary from the reviews on a certain web page.,https://www.example.com/reviews,"import requests
from bs4 import BeautifulSoup

url = “https://www.example.com/reviews”
response = requests.get(url)
soup = BeautifulSoup(response.text, “html.parser”)

titles = []
summaries = []

for review in soup.find_all(‘div’, {‘class’: ‘review’}):
 titles.append(review.find(‘h3’).text)
 summaries.append(review.find(‘p’).text)"
Create a program in Python to check for duplicate words in a given sentence.,"sentence = ""I am going to the store to buy food""","sentence = ""I am going to the store to buy food""

words = sentence.split(' ')

#Table to keep track of duplicates
table = []

for word in words:
 if word in table:
 print(""Duplicate word found: ""+word)
 else:
 table.append(word)"
Rewrite the code in Python so that it prints the length of a given string.,"string = ""Hello World""","string = ""Hello World""
print(len(string)) # prints 11"
Create a Python script that converts temperatures from Celsius to Fahrenheit.,23,"def celsius_to_fahrenheit(celsius):
    return ((celsius * 9/5 ) + 32)

temperature = 23
fahrenheit = celsius_to_fahrenheit(temperature)
print('The temperature in Fahrenheit is: ' + str(fahrenheit))"
Build a mini classifier model in Python to predict whether a given string is palindrome or not.,'level',"class Palindrome:

def __init__(self, str):
    self.str = str

def is_palindrome(self):
    return self.str == self.str[::-1]

palindrome = Palindrome(""level"")
if palindrome.is_palindrome():
    print(""The string is a palindrome"")
else:
    print(""The string is not a palindrome"")"
Write a Python script to decrypt the given ciphertext.,Ciphertext: NPKUO,"alphabet = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ""

def decrypt(ciphertext):
    plaintext = """"
    for letter in ciphertext:
        index = alphabet.find(letter)
        newIndex = (index - 3) % 26
        plaintext += alphabet[newIndex]
    return plaintext

print(decrypt(""NPKUO""))"
Write a function in Python which takes a list of numbers as input and outputs a list with each element multiplied by two.,"[3, 5, 8, 9]","def list_multiplication(nums):
    output_list = []
    for i in range(len(nums)):
        output_list.append(nums[i] * 2)
    return output_list"
Create a function in Python that shuffles the order of the items in a list.,"[1,2,3,4,5]","import random 
  
def shuffle_list(arr): 
      
    # Shuffle given list 
    random.shuffle(arr) 
    return arr 
  
# Driver function 
arr = [1,2,3,4,5]

print(""Initial list: \n"",arr)
print(""\nFinal list: \n"",shuffle_list(arr))"
Create a Python program that updates the dictionary with the new key-value pair.,"dictionary = {'apple': 1, 'banana': 2, 'orange': 3}
key = 'mango'
value = 4","dictionary = {'apple': 1, 'banana': 2, 'orange': 3}
key = 'mango'
value = 4

dictionary[key] = value
print(dictionary)
# {'apple': 1, 'banana': 2, 'orange': 3, 'mango': 4}"
write a python code to print the common elements in between two given sets.,"set1 = {1, 2, 3, 4, 5, 6, 7}
set2 = {2, 4, 5, 6}","def common_elements(set1, set2): 
    return set1 & set2

print(common_elements({1,2,3,4,5,6,7}, {2,4,5,6}))"
Create a Python function that returns the index of the nth occurrence of a substring in a given string.,"(""Hello World"", ""l"", 3)","def find_nth_occurrence(string, substring, n):
index = -1

while n > 0:
    n -= 1
    index = string.find(substring, index+1)

if index == -1:
    return None
else:
    return index

if __name__ == ""__main__"":
    result = find_nth_occurrence(""Hello World"", ""l"", 3)
    print(result)"
Write a python program to find the sum of squares of all numbers in a set,"Set: {1, 2, 3}","def sum_squares(s):
    total = 0
    for x in s:
        total += x * x
    return total"
Construct an algorithm in Python to identify whether a number is odd or even.,x = 7,"def findNumberType(x):
    if x % 2 == 0:
        return ""Even""
    else:
        return ""Odd""

x = 7
print(findNumberType(x))  # Odd"
Design a Python program to implement a search engine that searches for a specific keyword in a given set of text documents.,"[text documents, keyword]","def search_engine(documents, keyword):
    # Create an index of the documents
    index = create_index(documents)
    # Search the index for the keyword
    search_result = search(index, keyword)
    # Return the search result
    return search_result"
Create a Python program to sort the values of a given dictionary in descending order based on their keys.,"{'a':5, 'b':2, 'c':4, 'd':1}","def sort_dict(d): 
    sorted_dict = {key:value for key, value in sorted(d.items(), key=lambda x: x[1], reverse=True)} 
    return sorted_dict"
"Modify the given code in Python so that it prints the given sentence ""Hello, World!""","print(""Greetings"")","print(""Hello, World!"")"
Create an HTML page that displays the output of this Python program.,"for i in range(1,11):
  print ""Hello World!"", i","<html>
<head>
 <title>Python Output</title>
</head>
<body>
  <script>
   for (i = 1; i <= 10; i++) {
    document.write(""Hello World!"" + i);
   }
  </script>
</body>
</html>"
Design an algorithm in Python for displaying the reverse of a string input.,"Input String: ""Hello World!""","# Create a function 
def reverse_string(str): 
    # Create an empty string  
    rev_str = """" 

    # Iterate over the string in reverse 
    for i in str: 
        rev_str = i + rev_str
    
    # Return the reversed string 
    return rev_str

# Driver Code
str = ""Hello World!""
print(""The reversed string is:"", reverse_string(str))"
Create a python script to concatenate two given strings.,"string1 = ""Hello ""
string2 = ""World!""","def concatenateStrings(string1, string2):
  return string1 + string2"
Suggest a completion for the following Python code to sort a given list of dictionaries by a given key.,"my_list = [{'name': 'Bob', 'age': 20}, {'name': 'Alice', 'age': 10}]","def sort_dicts(my_list, key):
    return sorted(my_list, key=lambda x: x[key])

# Main
if __name__ == ""__main__"":
    my_list = [{'name': 'Bob', 'age': 20}, {'name': 'Alice', 'age': 10}]
    key = 'age'
    print(sort_dicts(my_list, key))  # [{'name': 'Alice', 'age': 10}, {'name': 'Bob', 'age': 20}]"
Create a python program that takes a list of numbers and returns the sum of all the numbers in the list.,"[1, 2, 3, 4, 5]","def sum_list(list_of_numbers):
  total = 0
  for num in list_of_numbers:
    total += num
  return total
  
# Main
nums = [1, 2, 3, 4, 5]
total_sum = sum_list(nums)

print('Sum of list elements: ', total_sum)"
Suggest a change to the following loop to make it more Pythonic.,"numbers = [1, 2, 3, 4, 5]
for i in range(len(numbers)):
    print(numbers[i])","numbers = [1, 2, 3, 4, 5]

for number in numbers:
    print(number)"
Write a python program that takes a list of numbers and converts them to strings.,"[1, 2, 3, 4]","new_list = []
for i in range(0, len(list)):
    new_list.append(str(list[i]))"
"Write a Python function to classify a given string based on the following conditions:
A) If the length of the string is less than 3, “Short”
B) If the string only contains alphabets, “Alphabet”
C) If the string only contains numbers, “Numeral”","string = ""ab1""","def classify_string(string):
    if len(string) < 3:
        return ""Short"" 
    elif string.isalpha():
        return ""Alphabet"" 
    elif string.isnumeric():
        return ""Numeral"""
"Write a Python function to take a text string as an input, and generate a table of the frequencies of each letter in the string.","sample_string = ""HelloWorld""","def find_frequencies(sample_string):
   frequency_table = dict()
   for char in sample_string:
      if char in frequency_table:
         frequency_table[char] += 1
      else:
         frequency_table[char] = 1
   return frequency_table

result = find_frequencies(""HelloWorld"")
print(result)"
Can you provide a Python script to find the most frequent element in an array?,"[1, 1, 2, 3, 2, 4, 4]","from collections import Counter

def most_frequent(arr):
    cnt = Counter(arr)
    return cnt.most_common(1)[0][0]

arr = [1, 1, 2, 3, 2, 4, 4]
most_frequent_elem = most_frequent(arr)
print(most_frequent_elem)"
Develop a modularized Python code snippet to find the volume of a rectangular cube with side length 'a'.,a = 4,"def cube_volume(a):
    """"""Calculate the volume of a cube
    Args:
        a (float): length of a side of the cube
    Returns:
        Volume of the cube (float)

    """"""
    return a**3

# Input 
a = 4

# Calculate Cube Volume 
volume = cube_volume(a)

# Print Volume
print(""Volume of cube with side length"", a, ""is"", volume)"
"Create a python function to take a list of numbers as an argument, and return the sum of the odd numbers in the list","[2, 3, 4, 5, 6, 7]","def odd_numbers(numbers):
    result = 0 
    for num in numbers: 
        if num % 2 != 0:
            result += num
    return result"
Develop a Python program to calculate the mean of a given array.,"60, 54, 77, 78, 37, 35","def mean(arr):
    total = 0
    for num in arr:
        total += num
    return total/len(arr)

arr = [60, 54, 77, 78, 37, 35]
print(""Mean: "", mean(arr))"
Write a Python program to find all palindromic words in a given list.,"words = [""word"", ""racecar"", ""level"", ""pop"", ""mom"", ""nursesrun""]","def palindrome_words(words): 
    """"""This function takes in a list of words and returns a list of palindromic words""""""

    palindrome_words = []

    for word in words:
        if word == word[::-1]:
            palindrome_words.append(word)

    return palindrome_words"
Create a Python program to group word frequencies from a given text.,Text: The quick brown fox jumps over the lazy dog,"text = ""The quick brown fox jumps over the lazy dog""
words = text.split("" "")

word_freq = {}

for w in words:
    if w in word_freq:
        word_freq[w] += 1
    else:
        word_freq[w] = 1

print(word_freq) # Output: {'The': 1, 'quick': 1, 'brown': 1, 'fox': 1, 'jumps': 1, 'over': 1, 'the': 1, 'lazy': 1, 'dog': 1}"
Create a Python program to find all the strings in a list of strings that start with a given character.,"[""apple"", ""banana"", ""kiwi"", ""melon""], ""a""","def get_strings_with_prefix(strings, letter):
    result = []

    for string in strings:
        if string.startswith(letter):
            result.append(string)
    return result

data = [""apple"", ""banana"", ""kiwi"", ""melon""]

result = get_strings_with_prefix(data, ""a"")
print(result)"
Generate a Python function that takes in a list of numbers and returns the greatest common divisor (GCD) of the list elements.,"[25, 15, 20]","def find_GCD(input_list): 
 gcd = input_list[0] 
 for num in input_list[1:]: 
 gcd = find_GCD(gcd, num) 
 return gcd

def find_GCD(a, b):
 while(b != 0): 
 a, b = b, a%b 
 return a"
Translate the following pseudocode into Python:,"IF number > 0
    Print ""positive""
ELSE
    Print ""negative""","if number > 0:
    print(""positive"")
else:
    print(""negative"")"
Optimize the provided Python code by reducing the number of operations.,"def slow_function(x):
    y = 0
    for i in range(1000):
        y = y + x * x
    return y","def fast_function(x):
    y = 0
    for i in range(250):
        y += x * x * x * x
    return y"
Create a function that takes a list of strings (words or phrases) as an argument and returns the longest string in the list.,"[“javascript”, “python”, “ruby”]","function findLongestString(strList) {
 let longestStr = '';
 
 strList.forEach(str => {
 if (str.length > longestStr.length) {
 longestStr = str;
 }
 })
 
 return longestStr;
}
 
let longestWord = findLongestString(['javascript', 'python', 'ruby']);
 
console.log(longestWord); // Output: 'javascript'"
Generate the following sequence using a while loop in Python.,"0, 1, 2, 4, 7, 11, ...","a, b = 0, 1
while b < 100:
    print(a)
    a, b = b, a + b"
Write a Python program using a for loop to sum up the even numbers in a given list.,"number_list = [2, 3, 5, 7, 11, 13, 17]","total = 0
for number in number_list:
 if number % 2 == 0:
 total += number
print(total) # prints 2 + 6 = 8"
Generate a python program to print the given sentence in reverse.,"Sentence: ""This is an example""","def reverse_string(s):
    return s[::-1]

print(reverse_string(""This is an example""))"
Optimize a Python program containing a matrix addition operation.,"X = [[2, 3], 
     [1, 4]] 

Y = [[5, 6], 
     [7, 8]]","import numpy as np 

X = np.array([[2, 3], 
     [1, 4]]) 

Y = np.array([[5, 6], 
     [7, 8]])

Z = X + Y 

print(""Matrix addition result:"") 
print(Z)"
Create a function in Python to find the total cost of a purchase given the price of each item and the quantity.,"price = 10.00
quantity = 3","def get_total_cost(price, quantity):
  return price * quantity

total_cost = get_total_cost(price, quantity)
print(total_cost) #prints 30.00"
Generate a Python program to clean a string of HTML tags.,"Example Input: ""<p>This is a <b>test</b> string</p>"".","import re

# Clean a string of HTML tags 
def clean_html_tags(str):
    clean_str = re.sub(""<.*?>"", """", str)
    return clean_str

html_string = ""<p>This is a <b>test</b> string</p>""

clean_str = clean_html_tags(html_string)

print(clean_str) #This is a test string"
Write a Python program to check if an item exists in a list using a given condition.,"list = [1, 2, 3, 4]
condition = lambda x: x % 2 == 0","def check_item(lst, condition): 
	for item in lst:
 		if condition(item): 
 			return True 
	return False

result = check_item([1, 2, 3, 4], lambda x : x % 2 == 0) 
print(result)"
Develop a program in Python to calculate the sum of the following series:,1 + 1/2 + 1/3 + ... + 1/n,"def SumOfSeries(n): 
    seriesSum = 0
    for num in range(1, n+1): 
        seriesSum += 1/num  
    return round(seriesSum, 2) 

# Driver code 
n = 5
print(""Sum of the series up to number:"", n, 
                    ""is"", SumOfSeries(n))"
Generate a python program to filter a given array of numbers and remove all numbers greater than 5.,"[3, 4, 6, 1, 8, 9]","def filter_greater_than_5(arr):
    new_arr = []
    for x in arr:
        if x <= 5:
            new_arr.append(x)
    return new_arr

arr = [3, 4, 6, 1, 8, 9]
print(filter_greater_than_5(arr))"
Compose a Python code snippet to check if the input list contains even numbers.,"[2, 3, 4, 5, 6]","def isEvenNumberPresent(list):
    for item in list:
        if item % 2 == 0:
            return True
    return False

print(isEvenNumberPresent([2, 3, 4, 5, 6]))"
"Once you have generated a list of strings, write a Python program to print the same in reverse order.","L2= [""This"", ""is"", ""another"", ""list"", ""of"", ""strings""]","def reverse_list(L2):
    L2.reverse()
    return L2"
Classify text elements in a Python program into function names and variable names.,"def hello_world():
    print(""Hello World!"")","Function Name: hello_world

Variable Name: None"
Develop an efficient sorting technique in Python to arrange the following list of strings.,"L1= [""This"", ""is"", ""a"", ""list"", ""of"", ""strings""]","def sort_list(L1):
    L1.sort()
    return L1"
Write a Python program to convert a list of lists into a dictionary.,"list = [[1, 'a', 'A'], [2, 'b', 'B'], [3, 'c', 'C'], [4, 'd', 'D']]",dictionary = dict(list)
Write a Python script to identify the prime numbers in a list of integers.,"list of integers: [2, 4, 7, 11, 13]","def is_prime(num): 
    if num > 1: 
       for i in range(2,num): 
           if (num % i) == 0: 
               return False 
       else: 
           return True
    else: 
       return False

numbers = [2, 4, 7, 11, 13]   
for num in numbers: 
    if is_prime(num): 
        print(num)"
Write a code to detect any pattern in a given string in Python.,"my_string = ""aabccba""","def detect_pattern(my_string):
    for i in range(len(my_string)):
        if my_string.count(my_string[i]) > 1:
            return True
    return False

if __name__ == '__main__':
    print(detect_pattern(my_string))"
Write a Python algorithm to calculate a person's body mass index (BMI).,Body mass index (BMI) is calculated using a person’s weight in kilograms divided by their height in meters squared.,"def bmi_calculation(height, weight):  
    bmi = weight / (height * height)  
    return bmi"
Write a Python code snippet which sorts a list by the values of the 2nd element of each tuple in the list.,"[(1, 2), (3, 1), (2, 3)]","unsorted_list = [(1, 2), (3, 1), (2, 3)]

def take_second(el):
     return el[1]

# sorting list 
# the second elements of tuples 
sorted_list = sorted(unsorted_list, key = take_second) 

# printing sorted list 
print(sorted_list)"
Convert the following pseudocode into a python program.,"i = 0
j = 0
while i < 10:
    j += i
    i += 1","""""""
Convert the following pseudocode into a Python program
""""""

i = 0
j = 0
while i < 10:
    j += i
    i += 1
    
print(j)"
Write a Python program to convert a string containing a number in base 8 to base 10.,input_num='45',"def conv(input_num):
    decimal_num = int(input_Num, 8)
    return decimal_num"
Convert the following Java program to Python.,"public class HelloWorld {
    public static void main(String[] args) {
        System.out.println(""Hello, World!"");
    }
}","# Program to print ""Hello, World!""

print(""Hello, World!"")"
Create a basic web scraper in Python using the requests library and the Beautiful Soup library. The web scraper should take a URL as an argument and print the text content of the page.,Url: https://example.com,"import requests
from bs4 import BeautifulSoup

# Define the URL
url = 'https://example.com'

# Make a request
response = requests.get(url)

# Parse the HTML
soup = BeautifulSoup(response.text, 'html.parser')

# Print the text contents
print(soup.text)"
Rearrange the following code so that it works in Python.,"y, x = x, y","x, y = y, x"
Write an optimization function for finding the minimum of a two-dimensional scalar field in Python.,"a scalar field represented as a 2D array (e.g. [[2, 1], [4, 3]] where value at position [i][j] is 2i + j)","def findMin(scalarField):
 minVal = float('inf')
 minInd = (-1, -1)
 for i in range(len(scalarField)):
 for j in range(len(scalarField[i])):
 val = scalarField[i][j]
 if val < minVal:
 minVal = val
 minInd = (i, j)
 return minInd"
"Create a Python program to validate user input. The program should take a string and only return ""valid"" if the string contains only the characters a-z, 0-9, and _ .","text_string = ""valid_string123""","text_string = input()

valid_characters = ""abcdefghijklmnopqrstuvwxyz0123456789_""

is_valid = True

for c in text_string:
 if c not in valid_characters:
 is_valid = False

if is_valid:
 print ""Valid""
else:
 print ""Invalid"""
Write Python code to create a JSON object from a given list.,"data = [1, 2, 3, 4, 5]","import json

data = [1, 2, 3, 4, 5]

data_json = json.dumps(data)

print(data_json)"
Create a python script to visualize the distribution of values in a numpy array,"numpy array [1, 2, 3, 4, 5, 6]","import matplotlib.pyplot as plt
import numpy as np
 
arr = np.array([1,2,3,4,5,6])
 
plt.hist(arr)
plt.title(""Distribution of values in the given array"")
plt.show()"
Create a command line tool in Python that takes a numerical input (e.g. from user input) and prints out all prime numbers up to that number.,50,"import sys

def main():
 try:
 number = int(sys.argv[1])
 except (IndexError, ValueError):
 number = int(input('Please enter a number: '))

 prime_list = []
 for num in range(2, number + 1):
 for i in prime_list:
 if num % i == 0:
 break
 else:
 prime_list.append(num)

print(prime_list)

if __name__ == '__main__':
 main()"
Convert this python code to java code.,"i = 0
while i < 5:
    print(i)
    i+=1","int i = 0;
while (i < 5) 
{
    System.out.println(i);
    i++;
}"
Edit the Python program below to add an if condition to determine if an input number is odd or even.,"def odd_or_even(number):
    # your code here","def odd_or_even(number):
    # your code here
    if number % 2 == 0:
        return ""even""
    else:
        return ""odd"""
Create an implementation of the Quicksort algorithm in Python.,"[5, 4, 3, 1, 2]","def quicksort(nums):
    if len(nums) <= 1:
        return nums
 
    pivot = nums[len(nums) // 2]
    left = [x for x in nums if x < pivot]
    middle = [x for x in nums if x == pivot]
    right = [x for x in nums if x > pivot]
 
    return quicksort(left) + middle + quicksort(right)
 
input_list = [5, 4, 3, 1, 2]
result = quicksort(input_list)
print(result)"
Solve this recursion problem in python.,"Problem: Given an array of integers, find the sum of its elements.

For example, if the array ar = [1, 2, 3], then 1 + 2 + 3 = 6.","def sum(arr):
    if not arr:
        return 0
    else:
        return arr[0] + sum(arr[1:])"
Generate a Python program that will compare two strings and return 'True' or 'False'.,"('Apple', 'Orange')","def compare_strings(first, second):
    return first == second

result = compare_strings('Apple', 'Orange')
print (result)"
Write a Python program to read a list of integers from the user and find the smallest number.,"[12, 11, 7, 15]","list_of_numbers = input(""Please enter a list of numbers: "").split()
list_of_numbers = [int(x) for x in list_of_numbers] 

min_number = min(list_of_numbers)
print(""The smallest number is:"", min_number)"
Design a program in Python that finds the maximum of two numbers.,"number1 = 4
number2 = 6","def find_max(num1, num2):
  if num1 > num2:
    return num1
  else:
    return num2

max_num = find_max(number1, number2)
print(max_num)  # Outputs 6"
Generate a Python program to extract the domain name from a given URL.,"url = ""https://www.google.com""","import re

def extract_domain_name(url):
    pattern = r""([a-z0-9][a-z0-9\-]*?\.(com|org|net|edu|co))(\/|$)""
    result = re.search(pattern, url)
    return result[1]

print(extract_domain_name(url))"
Write a Python program to convert a date string to the corresponding Unix timestamp.,"date_string = ""October 15, 2020""","import time 

def convert_to_timestamp(date_string): 
    return time.mktime(time.strptime(date_string, ""%B %d, %Y""))"
Write Python code to join two tables using a left join.,"Table A 
id name
1  AAA 
2  BBB 
3  CCC 

Table B 
id age
1  20
2  30
5  50","SELECT a.id, a.name, b.age
FROM TableA a LEFT JOIN TableB b
ON a.id = b.id;"
"Write a Python program to store a list of books in a dictionary. Each book should include title, author, and number of pages.","['The Hobbit', 'J.R.R. Tolkien', 295], ['The Catcher in the Rye', 'J.D. Salinger', 223]","book_list = [
  {'title': 'The Hobbit', 'author': 'J.R.R. Tolkien', 'pages': 295},
  {'title': 'The Catcher in the Rye', 'author': 'J.D. Salinger', 'pages': 223},
]"
Create a Python script to compute the average of a list of elements,"[1,4,7,3]","def average(l):
    total = 0
    for element in l:
        total += element
    return total / len(l)

l = [1,4,7,3]

print(average(l))"
Coding a classifier in Python to classify a given data set into four categories,Data set of 20 records with 4 numerical features,"import numpy as np
from sklearn.svm import SVC

# X represents the 20 records with 4 numerical features
X = np.array([[], [], [], ..., []])
# y represents the 4 categories 
y = np.array([1, 2, 3, 4])

# Create a svm classifier with linear kernel
classifier = SVC(kernel='linear', random_state=0)

# Fit the data
classifier.fit(X, y)"
Optimize the given Python code to use list comprehension.,"my_list = []
for value in range(10):
 my_list.append(value * 2)",my_list = [value * 2 for value in range(10)]
"Use pandas in Python to aggregate a given dataset with 4 columns (A, B, C, D) into a single column.","| A | B  | C | D |
|---|----|---|---|
| 0 | 34 | 2 | 6 |
| 1 | 21 | 9 | 0 |","import pandas as pd

data = [[0, 34, 2, 6], [1, 21, 9, 0]]
df = pd.DataFrame(data, columns = ['A', 'B', 'C', 'D'])

df['Aggregate'] = df.apply(lambda row: row.A + row.B + row.C + row.D, axis=1)

print(df)"
Write a function in Python that will take in a string and return the most commonly occurring character.,"Sample string: ""abrakadabra""","def max_char(s):
    chars = {}
    for c in s:
        chars[c] = chars.get(c, 0) + 1
    max_val = -1
    max_char = None
    for c, v in chars.items():
        if v > max_val:
            max_val = v
            max_char = c
    return max_char

print(max_char('abrakadabra'))

# Output: a (occurs 5 times)"
Create a function in Python that will return the most frequent value in a dataset.,"[0, 1, 6, 4, 4, 5, 0, 2, 8, 5, 6, 8, 0, 8]","def most_frequent(data):
    counts = dict()
    for i in data:
        if i in counts:
            counts[i] += 1
        else:
            counts[i] = 1
    max_value = max(counts.values())
    return [k for k, v in counts.items() if v == max_value]"
Build a command line application in Python to flatten an array of elements.,"arr = [1, [], [2, [[3], [4, 2]], 5, [[[[[[[[[[]]]]]]]]]]]","def flatten(arr):
    result = []
 
    for item in arr:
        if isinstance(item, list):
            result.extend(flatten(item))
        else:
            result.append(item)
 
    return result
 
flattenedArr = flatten(arr)
print(flattenedArr)"
Develop a python code to achieve the following goal,"A function to take a list of strings as input and generate a list of tuples, each containing string length and corresponding string.","def string_lengths(strings):
    lengths = []
    for string in strings:
        lengths.append( (len(string), string) ) 
    return lengths"
Convert the given string into a standard format in Python.,"String: ""My name is John Doe""","string = ""My name is John Doe""
standard_string = string.title()
print(standard_string)
#My Name Is John Doe"
Create a python program that detects if a number is even or odd.,7,"def is_even_odd(num):
    if num % 2 == 0:
        return ""Even""
    else:
        return ""Odd""

result = is_even_odd(7)
print(result)"
Develop an algorithm in Python to replace all the vowels in a string with an asterisk.,string = “Hello World”,"string = “Hello World”

def replaceVowels(string):
    vowels = (""a"", ""e"", ""i"", ""o"", ""u"")
    result = """"
    for char in string:
        if char in vowels:
            result += ""*""
        else:
            result += char
    return result

new_string = replaceVowels(string)
print(new_string) # This will print out ""H*ll* W*rld"""
Write a Python program to implement the Bubble Sort algorithm and sort a given list of integers.,"list = [4, 9, 5, 2, 7, 1]","def bubble_sort(list):
    is_sorted = False
    while not is_sorted:
        is_sorted = True
        for i in range(len(list)-1):
            if (list[i] > list[i+1]):
                list[i], list[i+1] = list[i+1], list[i]
                is_sorted = False
    return list"
Implement a solution in Python to convert the given number to its binary representation.,155,"def convertToBinary(x): 
    return bin(x).replace(""0b"", """") 

x = 155
print(convertToBinary(x))"
Create a Python program to evaluate the expression 3x^2 + 4x - 2.,x = 5,"def evaluate_expression(x):
    return 3*x**2 + 4*x - 2

x = 5
result = evaluate_expression(x)
print(result)"
Build a Python program to tokenize a string into separate words.,"""Hello, World!""","def tokenize(string):
    words = string.split("" "")
    return words

tokenized_str = tokenize(""Hello, World!"")
print(tokenized_str)"
Write a Python program to print out the factorial of a number.,7,"def factorial(x):
    factorial = 1
    while x > 1:
        factorial = factorial * x
        x = x - 1
    return factorial

number = 7
result = factorial(number)
print(result)"
Write a Python program to detect if an array contains any duplicate elements.,"[3, 5, 8, 1, 2, 3]","def check_duplicates(arr):
    seen = set()
    
    for element in arr:
        if element in seen:
            return True
        else:
            seen.add(element)
    return False

arr = [3, 5, 8, 1, 2, 3]
result = check_duplicates(arr)
print(result)"
Convert the following Python function to Java.,"def add_two_numbers(a, b):
    return a + b","public static int addTwoNumbers(int a, int b) {
    return a + b;
}"
"Given a sentence, write a python program to return all the possible permutations of the words in the sentence.","sentence = ""the cat sat on the mat""","import itertools

def get_permutations(sentence):
    sentence_list = sentence.split("" "")
    return list(itertools.permutations(sentence_list))

if __name__ == '__main__':
    print(get_permutations(""the cat sat on the mat""))"
Rewrite the following python code using a lambda expression,"def function_name(x): 
    return x * 2",function_name = lambda x: x * 2
Generate a complete Python script that prints out the prime numbers between two provided numbers.,"lowerBound = 20
upperBound = 32","# code to print out prime numbers between two provided numbers
def is_prime(num):
    if num < 2:
        return False
 
    for i in range(2, num):
        if num%i == 0:
            return False
 
    return True

lowerBound = 20
upperBound = 32
 
for i in range(lowerBound, upperBound + 1):
    if is_prime(i):
        print(i)"
Write a python program to evaluate the Euclidean distance between two lists of numbers,"list1 = [1, 2, 3] 
list2 = [4, 5, 6]","def euclidean_distance(list1, list2): 
    dist = 0.0
    for i in range(len(list1)): 
        dist += (list1[i] - list2[i]) ** 2 
    return (dist ** 0.5) 
  
list1 = [1, 2, 3] 
list2 = [4, 5, 6] 

print(""Euclidean distance between lists:"")
print(euclidean_distance(list1, list2))"
Create a Python algorithm that takes in an array of integers and prints out a sum of its elements.,"[3, 4, 5, 6]","def sum_array(arr):
    s = 0
    for i in arr:
        s += i
    return s"
Write a Python program to create a dictionary of the elements in a list and their frequency count.,"list = [3, 2, 3, 4, 5]","def frequency_dict(list):
    counts = {}
    for i in list:
        if i not in counts:
            counts[i] = 1
        else:
            counts[i] += 1
    return counts

print(frequency_dict(list))"
"Using the sample data, convert the provided string into a dictionary in Python.","Sample Data: ""Name: John Doe; Age: 23; Course: Data Science""","sample_data = ""Name: John Doe; Age: 23; Course: Data Science""

# Split the string by the "";"" character
data_items = sample_data.split(';')

# Strip any extra whitespace and split by the "":"" character
data_dict = {}
for item in data_items:
    key, value = item.strip().split(': ')
    data_dict[key] = value
    
print(data_dict)"
Construct a for loop in Python to print all the values from a list of numbers.,"mylist = [1, 2, 3, 4, 5]","for x in mylist: 
  print(x)"
Optimize a function written in Python that calculates the mean of a given sequence of numbers,"import numpy as np
sequence = np.array([1, 4, 6, 5, 9], dtype=np.float64)
def calculate_mean(sequence):
    sum = 0
    for number in sequence:
        sum += number
    return sum / len(sequence)","import numpy as np
sequence = np.array([1, 4, 6, 5, 9], dtype=np.float64)
def calculate_mean(sequence):
    return np.mean(sequence)"
Write a Python script for combining two dictionaries.,"dict1 = { ""a"" : 1, ""b"" : 2 }
dict2 = { ""c"" : 3, ""d"" : 4 }","def combine_dicts(dict1, dict2): 
    new_dict = dict1.copy() 
    new_dict.update(dict2) 
    return new_dict 
  
dict1 = { ""a"" : 1, ""b"" : 2 }
dict2 = { ""c"" : 3, ""d"" : 4 }
  
print(combine_dicts(dict1, dict2))"
Create a python script that compares two sets of input data (lists of numbers) and outputs the intersection set.,"set1 = [1, 2, 3, 4, 5]
set2 = [3, 4, 5, 6, 7]","def find_intersection(set1, set2):
 intersect_set = []
 for num in set1:
 if num in set2:
 intersect_set.append(num)
 return intersect_set

set1 = [1, 2, 3, 4, 5]
set2 = [3, 4, 5, 6, 7]

intersect_set = find_intersection(set1, set2)
print(intersect_set) # Output -> [3, 4, 5]"
Write a python program to generate a Combinations of four numbers from a given list of N numbers,"numbers = [1, 4, 5, 6, 7]","def comb_four(nums): 
    result = [] 
    for i in range(len(nums)-3): 
        for j in range(i+1, len(nums)-2): 
            for k in range(j+1, len(nums)-1):
                for l in range(k+1, len(nums)): 
                    result.append([nums[i], nums[j], nums[k], nums[l]]) 
    return result"
"Write a python program to count the total number of ""1""s present in a binary string",binary_string = '10101100110',"def count_ones(binary_string):
    count = 0
    for bit in binary_string:
        if bit == '1':
            count += 1
    return count"
Design a function in Python to sort the given list of numbers in descending order.,"The given list of numbers is: [2, 4, 1, 6, 9, 8]","def descendingSort(nums):
    # sort list in reverse order
    nums.sort(reverse=True)
    return nums

print(descendingSort([2, 4, 1, 6, 9, 8]))"
Generate a python program to search input string s for a given substring t.,"s= ""This is a string"", t=""ring""","def find(s, t):
    if t in s:
        return s.index(t)
    else:
        return -1"
Create a Python function to take two lists and return a list with the elements added together.,"list_a = [1, 4, 5]
list_b = [2, 3, 6]","def list_add(list_a, list_b):
  result = []

  for i in range(len(list_a)):
     result.append(list_a[i] + list_b[i])

  return result

result = list_add(list_a, list_b)
print(result)"
Produce a Python script to remove duplicate values from a list.,"[1, 2, 3, 2, 1]","def remove_duplicates(lst):
    unique_lst = []
    for i in lst:
        if i not in unique_lst:
            unique_lst.append(i)
    return unique_lst"
Modify the following Python code to generate more random numbers.,"import random

x = random.randint(1, 10)","import random

x = random.randint(1, 10)
y = random.randint(1, 10)
z = random.randint(1, 10)"
De-duplicate the given list using a dictionary in Python?,"[10, 20, 30, 10, 40, 20]","input_list = [10, 20, 30, 10, 40, 20]
unique_list = list(dict.fromkeys(input_list))
print(unique_list)"
Write a Python program to convert a given binary number to a decimal number.,101101,"binary = input(""Enter a binary number: "")
decimal = 0
for i in range(len(binary)):
    if binary[i] == '1': 
        decimal += 2**(len(binary) - i - 1)
print(""Decimal equivalent of the given binary number:"", decimal)"
Develop a Python program to calculate the total area of a group of rectangles.,"[[3, 4], [6, 6], [1, 8]]","rectangles = [[3, 4], [6, 6], [1, 8]]

# calculate the total area
def calculateTotalArea(rectangles):
 total_area = 0
 for x, y in rectangles:
 total_area += x * y
 return total_area

total_area = calculateTotalArea(rectangles)
print(total_area) # 81"
Write a python method to identify whether the given string is a palindrome.,"String: ""racecar""","def is_palindrome(s):
  s = s.lower()
  return s == s[::-1]

print(is_palindrome(""racecar"")) # True"
Write a code to generate a two-dimensional array with zeros shapes in Python,"Row = 3, Column = 3","""""""
Write a code to generate a two-dimensional array with zeros shapes in Python
""""""

def generate_zeros_array(row,col):
    return [[0] * col for _ in range(row)]

# Example
row = 3
col = 3

array = generate_zeros_array(row, col)
print(array)
# Output: [[0, 0, 0], [0, 0, 0], [0, 0, 0]]"
"Using regex, extend the following python code to remove whitespaces from a string.","def remove_spaces(user_string):
    '''This function will remove all the spaces from a string'''","def remove_spaces(user_string):
    '''This function will remove all the spaces from a string'''
    user_string = re.sub(r'\s','',user_string)
    return user_string"
Write a Python program to find the n-th smallest number in the following list,"[2, 3, 5, 7, 11] n = 2","def nth_smallest(input_list, n):
    input_list.sort()
    return input_list[n-1]

input_list = [2, 3, 5, 7, 11]
n = 2
result = nth_smallest(input_list, n)
print(result)"
Create a Python list comprehension to find the sum of even numbers from two given lists.,"[1, 2, 3, 4]
[9, 8, 7, 6]","even_nums_sum = [x + y for x in [1, 2, 3, 4] for y in [9, 8, 7, 6] if x % 2 == 0 and y % 2 == 0]
print(sum(even_nums_sum))"
Edit the following Python program to make a correct API request and parse the response.,"import requests

url = 'https://api.example.com/users'

response = requests.get(url)

print(response.json())","import requests

url = 'https://api.example.com/users'

headers = {
 'Authorization': 'Bearer YOUR_API_TOKEN',
 'Content-Type': 'application/json',
}

response = requests.get(url, headers=headers).json()

for user in response['data']:
 print(user)"
Optimize a given Python program using memoization.,"def fibonacci(n):
    if n == 0:
        return 0
    elif n == 1:
        return 1
    else:
        return fibonacci(n-1) + fibonacci(n-2)","def fibonacci(n):
    # store the already calculated values in the dictionary
    memo = {0:0, 1:1}
    if n in memo:
        return memo[n]
    else:
        memo[n] = fibonacci(n-1) + fibonacci(n-2)
        return memo[n]"
Write a Python program to convert a given binary form to its original string.,"b_string = ""0100100001100101011011000110110001101111""","def binary_to_string(b_string):
 s = """" 
 for i in range(0, len(b_string), 8):
 byte = b_string[i: i + 8]
 s += chr(int(byte, 2))
 return s

b_string = ""0100100001100101011011000110110001101111""
print(binary_to_string(b_string))
# Output: Hello"
Modify the existing Python code to generate a Fibonacci series.,"def generate_fibonacci_series(n):
    print(""0"")
    current = 0
    next = 1
    for i in range(0, n-1):
        current, next = next, current + next
        print(next)","def generate_fibonacci_series(n):
    print(""0"")
    current = 0
    next = 1
    for i in range(0, n):
        print(current)
        temp = current
        current = next
        next = temp + next"
Create a function in Python that takes a string and an integer as arguments and returns the string with the integer number of characters removed from the front of the string.,"""Hello, World!"", 5","def remove_from_front(string, num_chars):
    return string[num_chars:]

result = remove_from_front(""Hello, World!"", 5)
print(result)"
Convert the given code from C++ to a Python program,"int data[5] == { 20, 15, 8, 44, 67};

for (i=0; i<5; i++){
    if (data[i] % 2 == 0){
        cout << data[i] << endl;
    }
}","data = [20, 15, 8, 44, 67]

for i in data:
    if i%2 == 0:
        print (i)"
Design a program to find the nth term of the Fibonacci sequence for a given number n.,n = 10,"# Python 3 program to find the nth
# Fibonacci number
def Fibonacci(n):
    if n<0:
        print(""Incorrect input"")
    # First Fibonacci number is 0
    elif n==1:
        return 0
    # Second Fibonacci number is 1
    elif n==2:
        return 1
    else:
        return Fibonacci(n-1)+Fibonacci(n-2)
 
# Driver Program
print(Fibonacci(10))

# Output
34"
Build a Python program that takes two numbers as inputs and prints the summation of both numbers.,3 and 4,"# Python program to add two numbers 
  
# This function adds two numbers 
def add_two_numbers(num1, num2): 
    return num1 + num2 
  
# Take input from the user  
number1 = 3
number2 = 4

# Add two numbers
sum = add_two_numbers(number1, number2) 
  
# Print the sum
print(""Sum of the two numbers is:"", sum)"
Create an auto-complete suggestion engine that takes in a prefix string and returns a set of valid words.,prefix = 'pyth',"def auto_complete(prefix):
    valid_words = []
    words_list = get_words_list()

    for word in words_list:
        if word.startswith(prefix):
            valid_words.append(word)
    return set(valid_words)

prefix = 'pyth'
print(auto_complete(prefix))
# Output: {'python', 'pythagorean', 'pythagoras', 'pythons'}"
Write a Python program to determine whether or not a given string is a palindrome.,"""racecar""","def isPalindrome(s):

 # remove whitespaces
 s = ''.join(s.split())

 # reverse string
 rev = s[::-1]

 # compare
 if rev == s:
 return True
 return False

if isPalindrome(""racecar""):
 print('String is a palindrome')
else:
 print('String is not a palindrome')"
Write a Python program to count the number of digits in an integer.,number = 9923,"def count_digits(number):
    count = 0
    while (number != 0): 
        count=count+1
        number = number//10
    return count"
Implement an algorithm in Python to remove duplicate elements from a given list.,"list = [1,4,4,4,5,5,5,6,7]","def removeDuplicates(list): 
    uniqueList = []  
    for item in list: 
        if item not in uniqueList: 
            uniqueList.append(item) 
    return uniqueList 

print(removeDuplicates([1,4,4,4,5,5,5,6,7]))"
Create a Python program to reverse a list without using the reverse() method.,"[1, 2, 3, 4, 5]","def reverse_list(lst):
    reversed_list = []
    for i in range(len(lst)-1,-1, -1):
      reversed_list.append(lst[i])
    return reversed_list

print(reverse_list([1, 2, 3, 4, 5]))"
Write a Python program to divide two numbers and print the quotient and the remainder.,"Number1: 15
Number2: 4","def divide(num1, num2):
    quotient = num1 // num2
    remainder = num1 % num2
    return quotient, remainder

quotient, remainder = divide(15, 4)
print(""Quotient :"", quotient)
print(""Remainder :"", remainder)"
Develop a program to print all unique strings from a given array of strings,"[""Hello"", ""World"", ""Hello"", ""Python""]","def unique_strings(strings):
    unique_strings = []
    for string in strings:
        if string not in unique_strings:
            unique_strings.append(string)
    return unique_strings

strings = [""Hello"", ""World"", ""Hello"", ""Python""]
result = unique_strings(strings)
print(result)"
Convert the following selection sort algorithm into a Python code.,"Selection Sort(arr)
  1  for i=1 to arr.length - 1
  2    min = i
  3    for j = i+1 to arr.length
  4      if arr[j] < arr[min]
  5        min = j
  6    swap(arr[i],arr[min])","def selection_sort(arr):
    for i in range(0, len(arr)-1):
        min = i
        for j in range(i+1, len(arr)):
            if arr[j] < arr[min]:
                min = j
        arr[i], arr[min] = arr[min], arr[i]"
Convert a list of numbers into strings using Python.,"[5, 10, 15]","# Create an empty list of strings
number_strings = []

# Loops through the list of numbers
for n in [5, 10, 15]:
    # Appends a string version of the number to the list
    number_strings.append(str(n))

print(number_strings)   # ['5', '10', '15']"
Create an algorithm in Python that takes an array of integers and `finds the pair that equals the given target.,"[1, 4, 8, 10], 14","def find_pair(arr, target): 
    for i in range(0, len(arr)): 
        for j in range(i + 1, len(arr)): 
            if arr[i] + arr[j] == target: 
                return (arr[i], arr[j]) 

result = find_pair([1, 4, 8, 10], 14) 
print(result)"
Write a Python program to encrypt a plaintext using Advanced Encryption Standard (AES).,"Plaintext: ""This is a secret message""","from Crypto.Cipher import AES 

plaintext = ""This is a secret message""
key = b""Sixteen Byte Key""

cipher = AES.new(key, AES.MODE_ECB) 
encrypted_text = cipher.encrypt(plaintext.encode('utf-8')) 

print(encrypted_text.hex())

# Output
c3a40f3dce503efa1f00561d60e579b9"
Generate a program in Python to find the median of a list of numbers.,"[5, 8, 2, 7, 4]","def median(nums):
    nums.sort()
    length = len(nums)
 
    if length % 2 == 0:
        return (nums[length//2] + nums[(length//2)-1])/2.0
    else:
        return nums[length//2] 

list = [5, 8, 2, 7, 4]
med = median(list)
print('The median of the list is ' + str(med))"
Rewrite the following Java program in Python to calculate the area of the triangle.,"class Area { 
    double area(double b, double h) 
    { 
        return 0.5 * b * h; 
    } 
}","def area(b, h):
    return 0.5 * b * h"
"Create a Python program to calculate the cost of an order given the items ordered, the tax rate and the shipping cost.","items = [('apple', 0.5, 2), ('pear', 0.75, 5), ('orange', 1.2, 3)] 
tax rate = 0.2
shipping cost = 5","def calculate_cost(items, tax_rate, shipping_cost):
    total_cost = 0
    for item in items:
        total_cost += item[1] * item[2]
    
    total_cost *= (1 + tax_rate)
    total_cost += shipping_cost
    return total_cost"
Create a function in Python that takes two numbers as input and returns a dictionary with all the prime numbers between them.,8 and 20,"def prime_numbers(x, y):
 
 prime_nums = {}
 
 for i in range(x, y+1):
 if(i > 1):
 for j in range(2, i):
 if(i % j == 0):
 break
 else:
 prime_nums[i] = i
 
 return prime_nums
 
print(prime_numbers(8, 20))
# { 8: 8, 11: 11, 13: 13, 17: 17, 19: 19 }"
Implement a Python function to find the smallest element in an array,"[3, 5, 2, 1, 4]","def findSmallest(arr):
    smallest = arr[0]
    for i in arr:
        if i < smallest:
            smallest = i
    return smallest

findSmallest([3, 5, 2, 1, 4])
# Output: 1"
"Given an array of strings, write a program in Python to calculate the number of occurrences for each string.","['Hello', 'World', 'Hello', 'World', 'Foo', 'Bar']","words = ['Hello', 'World', 'Hello', 'World', 'Foo', 'Bar']

from collections import Counter
word_count = Counter(words)

for word, count in word_count.items():
 print(f'{word} : {count}')"
Write a Python program to print the following string pattern.,*__*__*,"for i in range(3):
    for j in range(3):
        if (i == j) or (i + j == 2):
            print('*', end="""")
        else:
            print('_', end="""")
    print()"
Construct an algorithm in Python to compute the maximum profit from selling a stock within a specific period of days.,"[8, 12, 4, 5, 7, 10, 9]","def max_profit(prices):
    min_price = float('inf') 
    max_profit = 0
    
    for price in prices:
        min_price = min(min_price, price)
        max_profit = max(max_profit, price - min_price)
        
    return max_profit

prices = [8, 12, 4, 5, 7, 10, 9]
print(max_profit(prices))"
Write a Python program to convert a given string to one of its equivalent shell script command,"string = ""copy file1.txt file2.txt""","def string_to_shell_command(string):
    split_string = string.split()
    command_name = split_string[0]
    input_args = split_string[1:]
    command_args = ''
    for arg in input_args:
        command_args += f'""{arg}""' + ' '
    return f'{command_name} {command_args}'"
Rewrite a given code snippet in Python using a list comprehension.,"my_list = []
for i in range(10):
 my_list.append(i ** 2)",my_list = [i ** 2 for i in range(10)]
Create a python program that takes in a list of strings and returns a list of strings with all duplicates removed.,"[""a"", ""b"", ""c"", ""a"", ""b"", ""d""]","def remove_duplicates(lst):
    new_lst = []

    for item in lst:
        if item not in new_lst:
            new_lst.append(item)

    return new_lst

result = remove_duplicates([""a"", ""b"", ""c"", ""a"", ""b"", ""d""])
print(result)"
Convert the following function from Python to Java.,"def generate_list(size):
    """"""Generate a list of integers from 0 to size - 1.""""""
    return [x for x in range(size)]","public List<Integer> generateList(int size) {
    /* Generate a list of integers from 0 to size - 1. */
    List<Integer> list = new ArrayList<>();
    for (int i = 0; i < size; i++) {
        list.add(i);
    }
    return list;
}"
Create a Python program to search a string and print the index of all instances of a specific character.,"string = ""abcdefghi""
character = ""d""","def search_character(string, character):
 indices = []
 for i in range(len(string)):
  if string[i] == character:
   indices.append(i)
 return indices

print(search_character(string, character)) # [3]"
Suggest a Python version of the following JavaScript code.,"function double(x) {
  return x * 2;
}","def double(x):
  return x * 2"
Write a function in Python to compute the nth Fibonacci number.,8,"def fibonacciNum(n): 
    if n <= 1: 
        return n 
    else: 
        return (fibonacciNum(n-1) + fibonacciNum(n-2)) 

n = 8
result = fibonacciNum(n) 
print(result)"
Create a script in Python to convert a given integer to its binary equivalent.,19,"def dec_to_bin(num): 
    if num > 1: 
        dec_to_bin(num // 2) 
    print(num % 2,end = '')

num = 19
dec_to_bin(num)"
Design a hash table in Python that can store a given key-value pair.,Key: apple; Value: red,"class HashTable:
 def __init__(self):
 self.table = {}

 def put(self, key, value):
 self.table[key] = value

 def get(self, key):
 return self.table[key]

# example
hash_table = HashTable()
hash_table.put('apple', 'red')
hash_table.get('apple') # returns 'red'"
Identify a type of all the variables in the Python expression below.,n = 15.7,The variable n is a float.
Generate a python algorithm to predict the stock price for the given company.,Company: Tesla,"def predict_price(company):
    # Call an appropriate API
    company_data = request_api(company)
    # Use an appropriate ML algorithm
    model = build_model(company_data)
    # Get the prediction
    prediction = model.predict()
    return prediction"
"Write a python program that takes in two strings, s1 and s2, and returns a Boolean based on if s1 is a substring of s2.","s1 = 'foo'
s2 = 'foobar'","def is_substring(s1, s2):
    return s1 in s2

substring = is_substring('foo', 'foobar')

print(substring) # Output: True"
Optimize and refactor an existing Python function.,"Example function:
def factorial_recursive(n):
 if n == 0:
 return 1
 return n * factorial_recursive(n-1)","def factorial(n):
 if n == 0:
 return 1
 
 result = 1 
 while n > 0:
 result = result * n
 n = n - 1
 
 return result"
"Write a Python program to check whether a given string starts with ""Hello"".",'Hello world!',"if 'Hello' in str1:
    print(""The string starts with 'Hello'"")
else:
    print(""The string does not start with 'Hello'"")"
Develop a Python code to print a string in reverse order.,"""Hello, World!""","str = ""Hello, World!""

# loop to iterate through string
for i in range(len(str)-1, -1, -1):
  print(str[i],end="""")

print()"
"Create a program in Python that given a list of integer inputs, sorts them in descending order.","list = [4, 9, 2, 6, 5]","list = [4, 9, 2, 6, 5]

# sort list in descending order
list.sort(reverse=True)

print(list) # [9, 6, 5, 4, 2]"
Build a Python script for searching a given element in an array.,"[3, 10, 7, 12], element to search: 7","def searchElement(arr, x): 
  
    for i in range (len(arr)): 
  
        if arr[i] == x: 
            return i 
  
    return -1

arr = [3, 10, 7, 12] 
x = 7
index = searchElement(arr, x) 
if index != -1: 
    print(""Element"", x, ""found at index"", index )
else: 
    print(""Element not found"")"
Generate a Python script that takes two numbers as arguments and returns the greatest common divisor.,21 and 15,"def gcd(a, b):
 if b == 0:
 return a
   
 return gcd(b, a % b)
 
a = 21
b = 15

print(gcd(a, b))"
Optimize this code in Python to increase its performance.,"def double_word(word):
    doubled_word = """"
    for char in word:
        doubled_word += char * 2
    return doubled_word","def double_word(word):
    doubled_word = """"
    for char in word:
        doubled_word += char + char
    return doubled_word"
Write a Python program to print all combinations of three numbers from the given list.,"num_list = [1, 2, 3, 4]","import itertools 
  
# initializing list 
num_list = [1, 2, 3, 4] 
  
# printing all possible combinations 
result = itertools.combinations(num_list, 3) 
  
# printing the result 
print(""All possible combinations are : "") 
for item in result: 
    print(item)"
Implement a simple python program to split a string on a punctuation symbol.,"'Hello,World!'","def split_on_punctuation(s):
    #Using re module
    import re
    out = re.split('[,]',s)
    return out

print(split_on_punctuation('Hello,World!'))"
Write a python program that implements the following function:,"Given two sorted lists, return a merged sorted list.","def merge_sorted_lists(list1, list2):
    merged_list = []

    while list1 and list2:
        if list1[0] < list2[0]:
            merged_list.append(list1.pop(0))
        else:
            merged_list.append(list2.pop(0))

    merged_list += list1 + list2

    return merged_list"
Write the following into python code,"for i = 1 to 10
 print(i)","for i in range(1,11):
    print(i)"
Write a Python program to accept a string input from the user and print each character in a list.,"String: ""Hello World""","user_input = input(""Enter a string: "")

char_list = []

for char in user_input:
 char_list.append(char)

print(char_list)"
Create a function in Python that takes in an array of integers and returns the odd numbers from that array.,"[1, 2, 3, 4, 5]","def get_odd_numbers(arr):
    # Create an empty list to store the odd numbers
    odd_numbers = []

    # Iterate through and check for odd numbers
    for num in arr:
        if num % 2 != 0:
            odd_numbers.append(num)
    
    return odd_numbers

arr = [1, 2, 3, 4, 5]

odd_numbers = get_odd_numbers(arr)

print('Odd numbers: ', odd_numbers)"
Create a program in Python to sort a list of tuples (words and their frequency) in descending order.,"[(""hello"", 10), (""world"", 15), (""foo"", 8)]","def sortTuples(tuples):
    tuples.sort(key=lambda x: x[1],reverse=True)
    return tuples"
"Construct a Python function to filter out all the words from a list that contains the letter ""a"".","['dog', 'cat', 'ant', 'tree', 'apple']","def filter_words_with_a(words):
 return [word for word in words if ""a"" in word]"
Create a Python program that calculates the sum of the digits of a European Union VAT number.,DE1905303456,"vat_number = ""DE1905303456""

vat_number_without_check_digit = vat_number[:-1]

sum = 0
for c in vat_number_without_check_digit:
 if c.isdigit():
 sum += int(c)

print(f'Sum of digits: {sum}')"
Write a Python snippet to print the difference between the largest and smallest values in a given array.,"[1,2,3,4,5]","def diff_max_min(numbers):
    return max(numbers) - min(numbers)
  
if __name__ == '__main__':
    nums = [1,2,3,4,5]
    diff = diff_max_min(nums)
    print(diff)"
"Develop a function in Python that takes a list of integers, computes the cumulative sum, and prints the result.","[1, 2, 3, 4, 5]","def cumulative_sum(lst):
    sum = 0
    for i in lst:
        sum += i
        print(sum)

cumulative_sum([1, 2, 3, 4, 5])"
"Generate code in Python to accept student information like name, age, course and print it.","Name: John Doe
Age: 23
Course: Data Science","name = ""John Doe""
age = 23
course = ""Data Science""

print(""Name: "" + name)
print(""Age: "" + str(age))
print(""Course: "" + course)"
Write a Python program to implement a given sorting algorithm,"Array: [9, 8, 7, 6, 5, 4, 3, 2, 1]
Sorting Algorithm: Insertion Sort","def insertion_sort(arr):
    for i in range(1, len(arr)): 
        key = arr[i] 
        j = i-1
        while j >=0 and key < arr[j] : 
                arr[j+1] = arr[j] 
                j -= 1
        arr[j+1] = key 

arr = [9, 8, 7, 6, 5, 4, 3, 2, 1]
insertion_sort(arr)"
Automate this Excel task using Python.,"abc,1
def,2
ghi,3
jkl,4","import pandas as pd

# Read data
df = pd.read_csv(""data.csv"")

# Perform tasks
df['result'] = df['column2'] + df['column2']

# Write the result
df.to_csv(""result.csv"", index=False)"
Write a Python program that will replace all the numbers greater than 5 in an array with 0.,"arr = [1, 4, 6, 7, 8, 9]","def replace_numbers(arr):
 for i, num in enumerate(arr):
  if num > 5:
   arr[i] = 0

replace_numbers(arr)
print(arr) # [1, 4, 0, 0, 0, 0]"
Write a function in python for finding a substring of a given string,"""Hello World"", ""lo Wo""","def find_substring(string, sub_string):
  indices = []
  for i in range(0, len(string)-len(sub_string)+1):
    if (string[i:i+len(sub_string)] == sub_string):
      indices.append(i)
  return indices

print(find_substring(""Hello World"", ""lo Wo""))"
"Create a Python program to grade a multiple choice test with 4 options for each question, and each correct answer is worth 3 points.","Example question:
What color is the sky?
A. Red B. White C. Yellow D. Blue

Correct Answer: D","def grade_test(questions):
    score = 0
    for question in questions:
        if question['answer'] == question['correct_answer']:
            score += 3
    return score"
Write a Python program to print even numbers from 0 to the number provided,N = 30,"def print_even_numbers(N):
    for x in range(0, N+1):
        if x%2 == 0:
            print(x)"
Write an IPv4 address verification function in Python.,192.168.0.1,"def check_valid_ip(ip_addr): 
    ip = ip_addr.split(""."") 
    if(len(ip) == 4 and 
        int(ip[0]) <= 255 and 
        int(ip[1]) <= 255 and 
        int(ip[2]) <= 255 and 
        int(ip[3]) <= 255): 
        return True
    else: 
        return False"
"Write a python script to calculate the sum of an array of integers, ignoring any negative numbers.","array = [-4, 1, 6, 2, -9, 5]","def sum_without_negatives(arr):
    total = 0
    for n in arr:
        if n >= 0:
            total += n
    return total

array = [-4, 1, 6, 2, -9, 5]
print(sum_without_negatives(array))"
Create an algorithm in Python that prints a multiplication table.,Number: 8,"for x in range(1, 11):
 for y in range(1, 11):
 print(str(x) + ""x"" + str(y) + ""="" + str(x * y))

print(""The multiplication table of 8:"")

for x in range(1, 11):
 print(str(x) + ""x"" + ""8"" + ""="" + str(x * 8))"
Create a list comprehension expression for adding two lists in Python.,"list1 = [1, 2, 3]
list2 = [4, 5, 6]",list3 = [list1[i] + list2[i] for i in range(len(list1))]
Rewrite the code snippet below in Python so that it takes advantage of list comprehension.,"items = [1, 2, 3, 4, 5]
new_items = []
for item in items:
    new_items.append(item**2)","items = [1, 2, 3, 4, 5]
new_items = [item**2 for item in items]"
"Write a Python program to print a Fibonacci sequence with a length of n, where n is a given number that is equal to or greater than 0.",n = 5,"def fibonacci(n):
 # Base Case
 if n == 0: 
 return []
 elif n == 1: 
 return [0] 

 # Recursive Case
 else: 
 l = fibonacci(n-1) 
 l.append(l[-1]+l[-2]) 
 return l

# Driver Program 
n = 5
print(fibonacci(n)) 
# Output: [0, 1, 1, 2, 3]"
Develop a Python algorithm to find the maximum element in a given array.,"[1, 4, 6, 7, 3]","def find_max_element(arr):
    maxElement = arr[0]
    for val in arr:
        if val > maxElement:
            maxElement = val
    return maxElement"
Design a python program to create a new pair of integers from a given pair,"Given a pair (1, 2), create a new pair (2, 3)","def create_pair(a,b):
    c = a+1
    d = b+1
    return (c, d)"
Create a web scraper in Python to scrape the content from a website,Website URL: https://www.example.com,"import requests
from bs4 import BeautifulSoup

def scraper(url):
    response = requests.get(url)
    soup = BeautifulSoup(response.content, 'html.parser')
    for article in soup.find_all('article'):
        print(article.text)

if __name__ == ""__main__"":
    scraper(""https://www.example.com"")"
"Convert the following code from Java to Python:

public class HelloWorld {
 public static void main(String[] args) {
 System.out.println(""Hello World"");
 }
}","public class HelloWorld { 
 public static void main(String[] args) {
 System.out.println(""Hello World"");
 }
}","def main():
 print(""Hello World"")

if __name__ == ""__main__"":
 main()"
Develop a Python program which takes two inputs and returns the minimum number that is evenly divisible by both numbers.,"Ex: 6, 12","def lcm(m, n):
    if m > n:
        greater = m
    else:
        greater = n

    while(True):
        if((greater % m == 0) and (greater % n == 0)):
            lcm = greater
            break
        greater += 1

    return lcm

M = 6
N = 12

lcm(M, N)"
Create a Python program to compress a given data sequence.,"Data sequence: 9, -2, 6, 0, -7","def compress_sequence(nums):
    output = []
    temp = []

    for i in range(1, len(nums)):
        if nums[i-1] * nums[i] >= 0:
            temp.append(nums[i-1])
        else:
            temp.append(nums[i-1])
            output.append(temp)
            temp = []
    temp.append(nums[i])
    output.append(temp)

    return output

print(compress_sequence([9, -2, 6, 0, -7]))"
Create a code to calculate the area of the triangle with given side lengths.,"a=3 
b=4
c=5","# Python Program to find the area of triangle
a = 3
b = 4
c = 5
# calculate the semi-perimeter
s = (a + b + c) / 2
# calculate the area
area = (s*(s-a)*(s-b)*(s-c)) ** 0.5
print('The area of the triangle is %0.2f' %area)"
"Input an array of numbers, and build a function in Python to replace all even numbers with 0.","[4, 10, 15, 20]","def replace_even(arr):
    for i in range(len(arr)):
        if arr[i] % 2 == 0:
            arr[i] = 0
    return arr

result = replace_even([4, 10, 15, 20])
print(result)"
Optimize the following python code for a more efficient solution.,"def to_square(nums):
    squares = []
    for num in nums:
        squares.append(num * num)
    return squares","def to_square(nums):
    squares = [num * num for num in nums]
    return squares"
Create a Python program to identify the most frequently occurring item in a list.,"[3,4,3,4,3]","def most_frequent(list): 
  return max(set(list), key = list.count)
  
most_frequent([3,4,3,4,3])"
Create a program in Python to generate prime numbers between 1 to N,N = 10,"def isPrime(n):
    i = 2
    while i*i <= n:
        if n % i == 0:
            return False
        i += 1    
    return True

def printPrimes(N):
    for i in range (2, N+1):
        if isPrime(i):
            print(i, end="" "")

printPrimes(10)"
Create a Python script that takes an input of two numbers and returns the pair in a list.,"10, 20","def pair(num_1, num_2):
 return [num_1, num_2]

print(pair(10, 20))"
Create a function to perform list sorting using Python.,"list = [4, 5, 2, 1, 3]","def sortList(list):
    list.sort()
    return list

sortedList = sortList([4, 5, 2, 1, 3])
print(sortedList)"
Write a Python program to split a string on any whitespace.,"String to be split = ""Python is an interpreted language.""","def splitOnWhitespace(inputString):
	words = inputString.split()
	return words

stringToBeSplit = ""Python is an interpreted language.""
words = splitOnWhitespace(stringToBeSplit)
print(words) // Output: ['Python', 'is', 'an', 'interpreted', 'language.']"
Write a Python program to match a given pattern in a given string.,"String: ""ABCDDEFG"" 
Pattern: ""AB*EFG""","import re

string = ""ABCDDEFG""
pattern = ""AB*EFG""
match = re.search(pattern, string)
 
if match:
    print(""Pattern found!"")
else:
    print(""Pattern not found!"")"
Write a Python program to filter out strings longer than 15 characters from a list of strings.,"strings = ['good', 'very good', 'excellent', 'awesome', 'extremely awesome']","new_list = []
for string in strings:
 if len(string) <= 15:
 new_list.append(string)

print(new_list)  # prints ['good', 'very good', 'excellent', 'awesome']"
Write a python script to segregate a list of numbers into lists odd and even numbers.,"list_of_numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]","odd_numbers = []
even_numbers = []

for number in list_of_numbers:
    if number % 2 == 0:
        even_numbers.append(number)
    else:
        odd_numbers.append(number)

print(""Odd numbers: "" + str(odd_numbers))
print(""Even numbers: "" + str(even_numbers))"
Write a Python program that prints all unique pairs that sum up to a given number.,Number: 8,"def unique_pairs(number):
    pairs = set()
    for i in range(number + 1):
    	for j in range(number + 1):
            if i + j == number and (j, i) not in pairs:
                pairs.add((i, j))
    return pairs"
Edit the python code below to increase efficiency.,"arr = [24, 6, 15, 72, 5]
sum = 0

for i in range(5):
    if arr[i] % 2 == 0:
        sum += arr[i]","arr = [24, 6, 15, 72, 5]
sum = 0

for num in arr:
    if num % 2 == 0:
        sum += num"
Write a Python script that finds the minimum sum of an array of integers.,"arr = [13, -2, 7, -6, 5]","def min_sum_array(arr):
 minimum = arr[0]
 total = 0

 for i in range (0, len(arr)):
  element = arr[i]
  if element < minimum:
   minimum = element
   total += element
 
 return total

arr = [13, -2, 7, -6, 5]
min_sum = min_sum_array(arr)
print(min_sum) # Output: -11"
Design a program in Python to traverse a matrix.,"[[1, 2, 3], [4, 5, 6], [7, 8, 9]]","inputMatrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

#traversing the matrix
for row in inputMatrix:
    for column in row:
        print(column, end="" "")
    print()"
Create a Python program to find the minimum number of steps required to make all array elements equal.,"arr = [2, 3, 6, 8]","def min_steps(arr):
    min_step = 0
    min_val = min(arr)
    for i in range(len(arr)):
        min_step += arr[i] - min_val 
    
    return min_step"
Modify an existing python script to count the number of words in a given sentence.,"sentence = ""One two three four five""","def count_words(sentence):
    words = sentence.split(' ')
    return len(words)

sentence = ""One two three four five""
word_count = count_words(sentence)
print(""The number of words in the sentence is: "", word_count)"
Create a Python program to multiply a matrix by its inverse.,"[[3, 4],
[2, 16]]","import numpy as np

def inverse_multiplication(matrix):
    inverseM = np.linalg.inv(matrix) 
    result = np.matmul(matrix, inverseM) 
    return result

matrix = [[3, 4],
          [2, 16]]

result = inverse_multiplication(matrix)
print(result)"
Create a function in Python which takes a user input and sorts it in ascending order.,"9,5,4,7","def my_function(values):
    sorted_values = sorted(values)
    return sorted_values

if __name__ == ""__main__"":
    values = [int(value) for value in input().split(',')]
    print(my_function(values))"
Write a Python program to search a list of strings for a given string.,"list = [""dog"", ""cat"", ""bird""]
target = ""bird""","list = [""dog"", ""cat"", ""bird""]
target = ""bird""

for element in list:
    if element == target:
        print(""Target string found: {}"".format(target))
        break"
Write a python code to replace all the occurences of an element in a list with a given number.,"[1,2,3,3], 3, 0","def replace_elem_in_list(data, elem, val):
  return [val if x==elem else x for x in data]

print(replace_elem_in_list([1,2,3,3], 3, 0))
# Output: [1, 2, 0, 0]"
Write a Python program to detect whether a given number is a palindrome.,middle,"def is_palindrome(n):
    n = str(n)
    return n == n[::-1]

print(is_palindrome(""middle""))"
Create a Python script that takes a string as an input and outputs a list of words that all contain at least one vowel.,"""Hello my name is John""","['Hello', 'name', 'John']"
Create a python code to find the intersection of two sets.,"{1,2,3,4,5} and {3,4,5,6,7}","# Create two sets
set1 = {1,2,3,4,5}
set2 = {3,4,5,6,7}

# Find the intersection
intersection = set1 & set2

# Print the result
print(intersection)"
How can you make the given Python code more efficient?,"def calculate_sum(numbers):
    sum_val = 0
    for num in numbers:
        sum_val += num
    return sum_val","def calculate_sum(numbers):
    return sum(numbers)"
Create a function in Python that takes a list of strings and for each string appends the first letter to the end of the string.,"['cat', 'bird', 'rabbit']","def append_first_letter_end(list_of_strings):
 new_list_of_strings = []
 for string in list_of_strings:
 new_string = string + string[0]
 new_list_of_strings.append(new_string)
 return new_list_of_strings"
"Write a Python program to find the number of different ways to express n as the sum of 1, 3 and 4.",Number: 8,"def countWays(n):  
 if (n == 0): 
 return 1
 elif (n < 0): 
 return 0
 else: 
 return countWays(n-1) + countWays(n-3) + countWays(n-4)

n = 8
result = countWays(n)

print(""The number of different ways to express"", n, ""as the sum of 1, 3 and 4 is:"", result)"
Design a program in Python to filter a given array of integers and output only the even numbers.,"arr = [2, 7, 3, 4, 8, 9, 10]","def filterEvenNo(arr): 

  # return a list containing only even numbers
  return [num for num in arr if num % 2 == 0]"
Identify the bug in the following Python program and suggest an appropriate fix.,"def func1(list):
    s = 0
    for x in list:
        s+= x
    print(s)

func1([2, 3])","def func1(list):
    s = 0
    for x in list:
        s+= x
    return s

l = [2, 3]
result = func1(l)
print(result)"
Write a Python program to filter out the words of length greater than 5 from a given list of words,"['Hello', 'is', 'Python', 'Programming']","def filter_long_words(words):
  return [word for word in words if len(word) > 5]"
Construct a program to sort a given list in Python.,"list = [3, 7, 1, 4, 5]","def sort_list(list): 
    for i in range(len(list)-1): 
        for j in range(0, len(list)-i-1):
            if list[j] > list[j+1] : 
                list[j], list[j+1] = list[j+1], list[j]
list = [3, 7, 1, 4, 5]
sort_list(list)
print(list)"
Create a python program which takes in a given list and finds the 3 most frequent elements in the list.,"[3, 7, 5, 6, 2, 1, 5, 6, 3, 9]","from collections import Counter

def find_most_frequent(lst): 
    counter = Counter(lst) 
    topthree = counter.most_common(3)
    return topthree

find_most_frequent([3, 7, 5, 6, 2, 1, 5, 6, 3, 9])"
Write a python function which will check if input string is palindrome or not.,"input_string = ""racecar""","def is_palindrome(input_string):
    if input_string == input_string[::-1]:
        return True
    else:
        return False
    
input_string = ""racecar""

check_palindrome = is_palindrome(input_string)

if check_palindrome == True:
    print(""Input string is a palindrome"")
else:
    print(""Input string is NOT a palindrome"")"
Modify a Python program to add a minimum value of 10 to each element in a list.,"list = [1, 2, 3, 4]","list = [x + 10 for x in [1, 2, 3, 4]]"
Compose python code that efficiently resolves the specified task:,Determine the greatest common divisor of two numbers.,"def gcd(x, y):
        while(y):
            x, y = y, x % y

        return x

# Driver Code 
num1, num2 = map(int, input().split())

print(gcd(num1, num2))"
Edit an existing Python code so that it is more efficient and optimized for run time.,"def average(arr):
    sum = 0
    for num in arr:
        sum += num
    avg = float(sum) / len(arr)
    return avg","def average(arr):
    return sum(arr) / len(arr)"
Create a code snippet in Java to parse a comma-separated string into a list of strings.,"""Ruby,Python,JavaScript""","String str = ""Ruby,Python,JavaScript"";
List<String> list = Arrays.asList(str.split("",""));

// Output 
// [Ruby,Python,JavaScript]"
Develop a process in Python to classify a set of data points into two categories.,"[1, 2, 3, 4, 5, 6, 7]","def classifier(data_points):
 categories = []
 for data_point in data_points:
 if data_point % 2 == 0:
 categories.append('even')
 else:
 categories.append('odd')
 return categories"
Write a script to measure temperature from a device using python,"The device outputs an array of size 3, [Temp_C, Temp_F, Temp_K].","def measure_temperature(data):
    temp_c = data[0]
    temp_f = data[1]
    temp_k = data[2]
    return temp_c, temp_f, temp_k"
Create a program in Python to count the number of time a particular character appears in a given string.,"Input string: ""Hello, World!""
Character: ""l""","def count_char_in_string(string, char):
    count = 0
    for i in range(len(string)):
        if string[i] == char:
            count += 1
    return count

string = ""Hello, World!""
char = ""l""
count = count_char_in_string(string, char)
print(""The number of times"", char, ""appears in the string is:"", count)"
"Given a number, write a Python program to print the multiplication table of that number.",Number: 5,"for i in range(1, 11):
 print(5, 'X', i, '=', 5*i)"
Modify the following Python code to remove the duplicate elements from the list,"L = [1, 2, 2, 3, 4, 4]","L = [1, 2, 2, 3, 4, 4] 

L = list(set(L)) 

print(L)"
Generate a CPython code for reversing a given list of numbers.,"[1,2,3,4]","def reverse_list(nums):
  return nums[::-1]"
Create a program in Python to sort a given list of words alphabetically,"words=[“Computer”, “Science”, “Engineering”, “Technology”]","def sort_words(words):
    words.sort()
    return words

words = [""Computer"", ""Science"", ""Engineering"", ""Technology""]
sorted_words = sort_words(words)
print(sorted_words) # Output: ['Computer', 'Engineering', 'Science', 'Technology']"
Write a Python program to find the common elements between two given lists.,"[1, 2, 3], [2, 3, 4]","def find_common_elements(list1, list2):
    common = [x for x in list1 if x in list2]
    return common"
Generate a list of prime numbers up to a given number using a Python program.,number = 50,"def prime_numbers (number):
    prime_list = []
    for num in range(2, number + 1):
        if num > 1:
            for i in range(2, num):
                if (num % i) == 0:
                    break
            else:
                prime_list.append(num)
    return prime_list

number = 50
print(prime_numbers(number))"
Generate a Python program for reversing a string.,"string = ""Hello World""","string = ""Hello World""

# get length of the string
length = len(string)

# create an empty string
reverse = """"

# loop backword through the string
for i in range(length-1, -1, -1):
 # add current character to empty string
 reverse = reverse + string[i]

# print out the result
print(reverse)"
Create a Python program to compare two lists and return the common elements between them.,"[1, 2, 3, 4], [2, 3, 4, 5]","def compare_lists(list1, list2):
 common_elements = []
 for element in list1:
 if element in list2:
 common_elements.append(element)
 return common_elements

list1 = [1, 2, 3, 4]
list2 = [2, 3, 4, 5]
print(compare_lists(list1, list2))"
Develop a program in Python to extract the substring between two given strings,"input_string = ""This is an example string""
start_string = ""an""
end_string = ""string""","import re

input_string = ""This is an example string""
start_string = ""an""
end_string = ""string""

 regex = re.compile(start_string + '(.*?)' + end_string)
result = re.search(regex, input_string) 
if result: 
    print(result.group(1))"
Develop a Python program to detect if an entered number is even or odd.,The entered number is 344,"even_or_odd = int(input(""Please enter a number: ""))
if even_or_odd % 2 == 0:
  print(""The number is Even."")
else:
  print(""The number is Odd."")"
Generate an algorithm in Python to convert the given temperature from Fahrenheit to Celsius.,Fahrenheit= 32,"def Fahrenheit_to_Celsius(Fahrenheit):
    Celsius = (Fahrenheit - 32) * 5/9
    return Celsius
  
Fahrenheit = 32
Celsius = Fahrenheit_to_Celsius(Fahrenheit)
print(""Celsius:"",Celsius)"
Rewrite the following python code into JavaScript.,"leader_info = {
    ""name"": ""Diana Prince"",
    ""job"": ""Leader""
}","let leader_info = {
    ""name"": ""Diana Prince"",
    ""job"": ""Leader""
};"
"Create a Python program that takes in two strings, and find out all the characters that occur in both strings.","s1 = ""elephant""
s2 = ""phantasm""","s1 = set([i for i in s1])
s2 = set([i for i in s2])
common = list(s1.intersection(s2))
print(""The following characters occur in both the words: "" + ', '.join(common))"
Identify the language being used in the following code snippet.,"x = 5
y = 6
z = x + y",Python
Write a Python function to validate an a list of emails. The function should return a boolean indicating whether a given email address is valid.,"mail_list = [""example.user@gmail.com"", ""bad@example""]","def validate_mail_list(mail_list):
    for mail in mail_list:
        if not re.match(""[^@]+@[^@]+\.[^@]+"", mail):
            return False
    return True"
"Generate a Python script that takes in a list of numbers, rearranges them in ascending order, and prints out the result.","[3, 2, 5, 7, 1, 4]","def sort_list(nums): 
    # Sort list in ascending order
    nums.sort()
    
    # Print out the sorted list
    for num in nums: 
        print(num) 
  
# Test the function
nums = [3, 2, 5, 7, 1, 4]
sort_list(nums)"
Write a code to implement linear search in a 1-d array in Python.,"Input array: [1,2,3,4]
Target element: 3","def linearSearch(arr, target):
    for i in range(len(arr)):
        if arr[i] == target:
            return i
    return -1

print(linearSearch([1,2,3,4], 3)) # Output: 2"
Come up with an optimal algorithm in Python to sort an array of integers.,"[3, 8, 10, 1, 7, 4]","def sort_array(arr):
    # Bubble Sort Algorithm
    n = len(arr)
    
    for i in range(n-1):
        for j in range(n-i-1):
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]
    
    return arr

# Example Usage
input_array = [3,8,10,1,7,4]
print(sort_array(input_array)) # Output: [1, 3, 4, 7, 8, 10]"
"Create a Python function that takes two numbers, n and m, and prints out the first n odd numbers between 0 and m (both inclusive).","n = 3, m = 10","def printOddNumbers(n, m):
    nums = []
    for i in range(m):
        if i%2 != 0 and len(nums) < n:
            nums.append(i)
    return nums

print(printOddNumbers(3, 10))"
Compute the Least Common Multiple of two numbers.,"a = 15
b = 10","# Python3 code to find LCM
def compute_lcm(x, y):
   # choose the greater number
   if x > y:
       greater = x
   else:
       greater = y

   while(True):
       if((greater % x == 0) and (greater % y == 0)):
           lcm = greater
           break
       greater += 1

   return lcm

lcm = compute_lcm(15, 10)
print(""The Least Common Multiple of 15 and 10 is: "",lcm)"
Write a Python program to vertically center an aligned text by inserting padding spaces above and bottom of the text.,'Hello World!',"space = "" "" * 10
lines = inp.split('\n')
padded = '\n'.join(space + line + space for line in lines)
print(padded)"
Create a function in Python to mask out any personal information from sensitive data.,"John Smith,123-456-7890","def mask_information(data):
  masked_data = """"
  for char in data:
    if char.isdigit():
      masked_data += 'x'
    else:
      masked_data += char
  return masked_data

masked_data = mask_information('John Smith,123-456-7890')
print(masked_data) // John Smith,xxx-xxx-xxxx"
"Given a Python dictionary structure, construct a program that returns the key with the highest numerical value","d = {hello:1, goodbye:2, test:3}","d = {hello:1, goodbye:2, test:3}

max_key = None
max_value = 0
for key, value in d.items():
    if value > max_value:
        max_key = key
        max_value = value

print(max_key)"
Modify the following code in Python to only repeat a segment of the code while a certain user input is given.,"while True:
	print(""Hello World"")","# Get user input
input = input('Enter ""repeat"" to repeat the code: ')

# Execute the code while user input is ""repeat"" 
while input == 'repeat':
	print(""Hello World"")
	input = input('Enter ""repeat"" to repeat the code: ')"
Write a Python program to filter a list by a given criteria.,"list = [1,4,5,6,7,14,15] 
criteria = x > 5","def filter_list(mylist, criteria):
    result = []
    for item in mylist:
        if eval(criteria):
            result.append(item)
    return result
    
list = [1,4,5,6,7,14,15] 
criteria = ""x > 5""

filtered_list = filter_list(list, criteria)
print(filtered_list) # [6, 7, 14, 15]"
Write a Python program to print a given dictionary where the keys are numbers between 1 and 3 and the values are a list from 1 to the number key.,-,"d = {1: [1], 2: [1,2], 3: [1,2,3]}
for k,v in d.items():
    print(k,v)"
Generate a Python function that takes a sentence (string) as input and outputs a list of all the distinct words in the sentence.,The quick brown fox jumps over the lazy dog,"def distinct_words(sentence):
 words = sentence.split()
 distinct_words = []
 for word in words:
  if word not in distinct_words:
   distinct_words.append(word)
 return distinct_words"
Generate an algorithm in Python that sorts the given array of numbers in the non-decreasing order.,"arr = [1, 9, 3, 8, 4]","def bubble_sort(arr): 
    n = len(arr)
  
    for i in range(n-1): 
        for j in range(0, n-i-1): 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j] 
  
arr = [1, 9, 3, 8, 4]

bubble_sort(arr) 

print (""Sorted array is:"") 
for i in range(len(arr)): 
    print (""%d"" %arr[i])"
Optimize this Python code to reduce the running time.,"def find_max_value(array, start, end):
    max_value = -float('inf')
    for i in range(start, end):
        for j in range(start, end):
            max_value = max(max_value, array[i][j])
    return max_value","def find_max_value(array, start, end):
    max_value = -float('inf')
    for i in range(start, end):
        max_value = max(max_value, max(array[i][start:end]))
    return max_value"
"Create a Python program that, given an input integer, will print out a dictionary with the numbers from 1 to the input value and their squares.",number = 15,"def create_dict_squares(number):
    squares_dict = {}

    for i in range(1, number + 1):
        squares_dict[i] = i**2

    return squares_dict"
Write a Python function to calculate the harmonic mean of two numbers.,"7, 9","def harmonic_mean(x, y):
    return 2.0 * (x * y) / (x + y)

harmonic_mean_value = harmonic_mean(7, 9)

print(harmonic_mean_value)"
Write a Python script to search a given dictionary for a given word.,"dictionary = {""hello"": ""Str","def search_word(word, dictionary):
    if word in dictionary.keys():
        return dictionary[word]
    else:
        return None

dictionary = {'hello': 'string', 'goodbye': 'bye'}

word = 'hello'

result = search_word(word, dictionary)

if result:
    print('Word found in dictionary: ' + result)

else:
    print('Word not found in dictionary.')"
"Using the NumPy library in Python, calculate the mean of the following array.","array = [2, 4, 7, 8, 9]","import numpy as np

arr = np.array([2, 4, 7, 8, 9])

mean = np.mean(arr)

print(mean) # 6.2"
Design a python program to implement a Greedy algorithm,"A set of jobs: {A: (3, 10), B: (4, 15), C: (2, 5)}","def greedy(jobs):
    jobs.sort(key=lambda x: x[1]/x[0], reverse=True)
    result = []
    time = 0
    for j in jobs:
        time += j[0]
        result.append((j[0], j[1], time))
        
    return result

jobs = [(3, 10), (4, 15), (2, 5)]
print(greedy(jobs))"
Generate a python program to compute the nth fibonacci number in the sequence.,7,"def fibonacci(n):
	if n == 0:
		return 0
	elif n == 1:
		return 1
	else:
		return fibonacci(n-1) + fibonacci(n-2)

# compute the 7th fibonacci number
print(fibonacci(7)) # Output: 13"
Can you write a Python script to sort a list of strings alphabetically?,"[""Hello"", ""Yes"", ""No"", ""World""]","strings = [""Hello"", ""Yes"", ""No"", ""World""]

strings.sort()

print(strings)"
Write a Python function to find all possible n-letter words from a given list of letters.,"[""a"",""b"",""c""], n = 2","def find_words_length_n(letters, n):
    words = set()
    for combo in itertools.combinations_with_replacement(letters, n):
        for perm in itertools.permutations(combo):
            words.add("""".join(perm))
    return words

words = find_words_length_n([""a"",""b"",""c""], 2)
print(words)"
Write a Python program to replace all the white spaces in a given string with the '*' character.,str = “This is a sample string”,"str = 'This is a sample string'

new_str = str.replace(' ', '*')

print(new_str) // This*is*a*sample*string"
Create a python script that returns the most commonly used words in a given text.,"""This is a sentence with some words used more often than others.""","def mostCommonWords(text):
    words = text.split()
    counts = {word: words.count(word) for word in words}
    return sorted(counts.items(), key=lambda x: x[1], reverse=True)

input = ""This is a sentence with some words used more often than others.""

result = mostCommonWords(input)
print(result)"
Create a Python script to whitelist a specific user from a list of users.,"user_list = [""user1"",""user2"",""user3"",""user4"",""user5""]
whitelist_user = ""user3""","def whitelist_user(user_list, whitelist_user):
    Whitelisted_users = []
    for user in user_list: 
        if user == whitelist_user:
            Whitelisted_users.append(user)
    
    return Whitelisted_users"
Write a Python function to count the number of substrings of a given string that contains exactly K distinct characters.,"""abcabcabcabc"", K = 2","def count_substrings_with_k_distinct_characters(in_str, k):
    count = 0
    for i in range(len(in_str)-k+1):
        sub_str = in_str[i:i+k]
        if len(set(sub_str)) == k:
            count +=1 
    return count

count = count_substrings_with_k_distinct_characters(""abcabcabcabc"", 2)
print(count)"
Implement a function in Python that takes a string as a parameter and capitalizes the first letter of each word in the string.,The quick brown fox,"def capitalize(input_string):
    if len(input_string) == 0:
        return ''
    else:
        words = input_string.split()
        capitalized_words = [word.capitalize() for word in words]
        return ' '.join(capitalized_words)

print(capitalize('The quick brown fox'))"
"Write a Python code snippet to create a shallow copy of the following dictionary: {‘a’: 1, ‘b’: 2}.","{'a': 1, 'b': 2}","import copy

original_dict = {'a': 1, 'b': 2}

shallow_copy_dict = copy.copy(original_dict)"
Analyze the given Python code and correct any errors so that the code runs correctly.,"def main():
 nums = range[0,10)
 for num in nums
  print(""The square of"", num,""is"", num * num)

main()","def main():
 nums = range(0,10)
 for num in nums:
  print(""The square of"", num,""is"", num * num)

main()"
Write Python code to print the number present in an inputted string.,"string_1 = ""The temperature is 24 degrees Celsius""","def print_numbers_in_string(string):
    numbers = [int(s) for s in string.split() if s.isdigit()]
    print(numbers)

string_1 = ""The temperature is 24 degrees Celsius""
print_numbers_in_string(string_1)

# Output
# [24]"
Translate the following pseudocode to Python language.,"// set n to the number of array elements
// find max value of array
max_val = array[1]
for i = 2 to n
    if (array[i] > max_val)
        max_val = array[i]","def find_max_val(array):
    n = len(array)
    max_val = array[0]
    for i in range(1, n):
        if array[i] > max_val:
            max_val = array[i]
    return max_val

if __name__ == '__main__':
    array = [1, 2, 3, 4, 5]
    print(find_max_val(array))"
Create a program in Python to print all elements of a given set.,"{10, 20, 30}","my_set = {10, 20, 30}
for i in my_set:
    print(i)"
"Given two unsorted lists, create a Python program to identify the common elements between them.","list1 = [5, 3, 2, 6, 8, 9] 
list2 = [4, 2, 1, 6, 7]","def common_elements(list1, list2):
 return [element for element in list1 if element in list2]

common_elements(list1, list2) # Output: [2, 6]"
Write a python program to classify an object based on its features.,"[2.5, 4.5, 2.5], Classes: [""apple"", ""orange"", ""pear""]","def classify_object(features, classes):
    max_feature = max(features)
    index = features.index(max_feature)
    return classes[index]

print(classify_object([2.5, 4.5, 2.5], [""apple"", ""orange"", ""pear""]))"
Generate a python function to find the maximum of two numbers,"4, 5","def get_max(a,b):
    if a > b:
        return a
    else:
        return b

# main program
a = 4
b = 5
result = get_max(a,b)
print(result)"
Create a Python program for calculating the Fibonacci sequence. The program should print the n-th number of the sequence.,n: 7,"def fibonacci(n): 
 if n <= 0: 
 return 0 
 elif n == 1: 
 return 1 
 else: 
 return fibonacci(n-1) + fibonacci(n-2) 

n = 7 
print(fibonacci(n)) # Output: 13"
Edit this python code to be more efficient.,"data = [1, 2, 3, 4]
result = []
for x in data:
 if x > 2:
 result.append(x)","data = [1, 2, 3, 4]

result = [x for x in data if x > 2]"
Write a Python program that prints out the longest word in a sentence.,The quick brown fox jumped over the lazy dog,"sentence = ""The quick brown fox jumped over the lazy dog""

words = sentence.split()
longest_word = ''
for word in words:
    if len(word) > len(longest_word):
        longest_word = word
print(longest_word)"
Design a program in Python to delete an element from the give list.,"List: [1,2,3,4,5]
Element to delete: 3","def delete_element(arr, element): 
    new_arr = [i for i in arr if i!=element]
    return new_arr"
Implement a Python program to create a dictionary containing teams and their wins.,"['A's': 56, 'B's': 24, 'C's': 32, 'D's': 27]","teams_wins = {
    'A's': 56, 
    'B's': 24, 
    'C's': 32,
    'D's': 27
}"
Design a python code to remove a character from a given string.,"s = ""Hello World""","def remove_char(s, char):
    s = s.replace(char, '')
    return s

remove_char(s, 'l')"
Write a Python program that takes two lists and performs a comparison between them.,"list1 = [1, 2, 3]
list2 = [2, 3, 4]","def compare_lists(lst1, lst2): 
    lst1 = set(lst1) 
    lst2 = set(lst2) 
    same = lst1.intersection(lst2)
    diff1 = lst1.difference(lst2)
    diff2 = lst2.difference(lst1)
    return same, diff1, diff2

result = compare_lists([1,2,3], [2,3,4]) 
print(result)"
Design a python program that reverses the input sentence,"Sentence = ""This is a sentence""","def reverse_sentence(sentence):
    words = sentence.split("" "")
    words = list(reversed(words))
    return "" "".join(words)

reverse_sentence(""This is a sentence"")  # returns ""sentence a is This"""
Develop a Python script to get the length of a given string.,How are you?,"def get_string_length(str):
    return len(str)

get_string_length(""How are you?"")"
"Write a Python code to convert the given number to hours, minutes and seconds.",my_number = 3600,"my_number = 3600

def convert_to_time(number):
    hours = number // 3600
    minutes = (number % 3600) // 60
    seconds = (number % 3600) % 60
    return hours, minutes, seconds

print(convert_to_time(my_number))"
Write a Python program to calculate the area of a circle when a user inputs its radius.,Radius = 10,"def calculate_area_circle(radius): 
    pi = 3.14
    area = pi * (radius * radius) 
    return area 
  
# Output
print(""Area of circle is: "", calculate_area_circle(10))"
Design a function in Python to delete duplicate characters from a given string.,String: python,"def delete_duplicate(str):
    temp_str = """"
    for i in range(0, len(str)):
        if str[i] not in temp_str:
            temp_str += str[i]
    return temp_str

input_string = ""w3python""
result = delete_duplicate(input_string)

print(""After deleting duplicate character, string is:"", result)"
Develop a Python function to count number of digits in a number.,8594,"def count_digits(number):
    count = 0
    while (number > 0):
        number = number // 10
        count = count + 1
    return count

num = 8594
print(""Number of digits : "", count_digits(num))"
Create a python program to find the longest consecutive 1s in a binary number.,10101010001,"def max_ones(num):
    count = 0 
    result = 0
    for i in range(len(num)):
        if num[i] == '1':
            count += 1 
            result = max(result, count)
        else:
            count = 0 
    return result

num = '10101010001'
print(max_ones(num))"
How would you design a Python program to filter out string elements from a given array of string elements?,"lst = [""apple"", ""zoo"", ""banana"", ""apple"", ""foo"", ""zoo""]","def filter_out_strings(lst):
  new_lst = []
  for item in lst:
    if item not in new_lst:
      new_lst.append(item)
  return new_lst

filtered_list = filter_out_strings(lst) 
print(filtered_list) # Output -> ['apple', 'zoo', 'banana', 'foo']"
Can you create a function in Python to find the area of a triangle given the three sides?,"3, 4, 5","def area_triangle(a, b, c):
	s = (a + b + c)/2

	area = math.sqrt(s*(s-a)*(s-b)*(s-c))
	return area

area = area_triangle(3, 4, 5)
print(""The area of the triangle is: {}"".format(area))"
Create a Python program to convert a number to its corresponding month name.,2,"def num_to_month(num):
    months = [
        'January', 
        'February', 
        'March', 
        'April', 
        'May', 
        'June', 
        'July', 
        'August', 
        'September', 
        'October', 
        'November', 
        'December'
    ]
    return months[num - 1]

print(num_to_month(2)) # February"
Create a Python script that prints the top three words from a given sentence.,"sentence= ""This is a really long sentence with many words.""","import collections

sentence = ""This is a really long sentence with many words.""

# Split the given sentence into a list of words
words = sentence.split("" "")

# Count the occurrence of each word
word_freq = collections.Counter(words)

# Print out the top three words
for word, count in word_freq.most_common(3):
    print(f'{word}: {count}')"
Modify the Python code below to reverse the string input.,string = “hello world”,"string = “hello world” 
# Reverse the string 
rev_string = """" 
for char in string: 
 rev_string = char + rev_string 

# Print the reversed string 
print(rev_string)"
Construct a code to filter a string for only numerical characters in Python.,"""4x4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s""","def filter_string(string):
    filtered_string = ''
    for c in string:
        if c.isdigit():
            filtered_string += c
    return filtered_string

print(filter_string(""4x4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s4s""))"
Create a Python 3 program to calculate the Fibonacci sequence up to the given number.,n = 20,"def Fibonacci(n): 
    # 0 and 1 are the first two numbers in 
    # the Fibonacci sequence
    if n<=0: 
        return 0
    elif n==1: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2)

# Number of terms to calculate 
n = 20
print(""Fibonacci sequence:"") 
  
for i in range(n): 
    print(Fibonacci(i),end="" "")"
Write a Python code to calculate the sum of two numbers.,"Number 1: 7
Number 2: 4","sum = 7 + 4
print(sum)"
Write a Python program to divide a list of numbers into two equal lists.,"[1,2,3,4,5,6,7,8,9,10]","list_a = [1,2,3,4,5]
list_b = [6,7,8,9,10]"
Create a Python script to calculate and display the distance between two points in 2-dimensional space.,"Two points: (5,3) & (2,2)","import math
 
def distance(p1,p2):
 x1,y1 = p1
 x2,y2 = p2
 d = math.sqrt((x2-x1)**2+(y2-y1)**2)
 return d
 
x1,y1 = (5,3)
x2,y2 = (2,2)
print(f""The distance between 2 points ({x1},{y1}) & ({x2},{y2}) is: {distance((x1,y1),(x2,y2))}"")

// Output:
The distance between 2 points (5,3) & (2,2) is: 3.1622776601683795"
Convert this C++ program to Python.,"#include <iostream>

int main() {
    int a, b;
    std::cin >> a >> b;
    
    std::cout << a + b << std::endl;
    
    return 0;
}","a = int(input())
b = int(input())

print(a + b)"
Write a regex expression that matches the following string.,"String: ""I love programming in Python.""","regex = ""I love programming in Python\."""
Generate a Python source code to print the last element from a given list.,"['Apple', 'Orange', 'Banana']","arr = ['Apple', 'Orange', 'Banana']
last_element = arr[-1]
print(last_element)  # Result: Banana"
Optimize the following Python code to make it more concise and easier to understand.,"def concat_items(items):
    result = """"
    for item in items:
        result = result + item
    return result","def concat_items(items):
    # Use join() to join the elements in the given list with an empty string
    return """".join(items)"
Modify this Python code to add an exception for invalid input.,"def calculate(a, b):
    if b > 0:
        c = a / b
        return c","def calculate(a, b):
    if b == 0:
        raise ZeroDivisionError
    elif b > 0:
        c = a / b
        return c
    else:
        raise ValueError"
Write an algorithm in Python to convert a given binary string to decimal number.,"""11010""","def bin2dec(binary):
    decimal, i = 0, 0
    while binary != 0:
        dec = binary % 10
        decimal = decimal + dec * pow(2, i)
        binary = binary//10
        i += 1
    return decimal

binary = 11010
print(bin2dec(binary))"
Build a web scraper in Python to extract data from a given webpage.,"""https://www.example.com""","import requests
from bs4 import BeautifulSoup

# Make a request to the website and get the HTML
url = ""https://www.example.com""
response = requests.get(url)
html = response.content

# Parse the HTML using BeautifulSoup
soup = BeautifulSoup(html, 'html.parser')

# Extract data from tags which contain specific class names
data = soup.find_all('div', {""class"": ""example-class""})"
"Create a Python function that takes two parameters, an array and a search query and returns the indices of the array where the element matches with the search query.","arr = [1, 2, 5, 3, 4]
searchQuery = 3","def searchIndex(arr, searchQuery): 
  indices = []
  for i in range(len(arr)): 
    if arr[i] == searchQuery: 
      indices.append(i) 
      
  return indices
  
arr = [1, 2, 5, 3, 4]
searchQuery = 3

result = searchIndex(arr, searchQuery)
print(result)"
Develop a Python program to convert an integer from one binary representation to another.,15,"def decimal_to_binary(n): 
    return bin(n).replace(""0b"", """") 
 
def binary_to_decimal(n): 
    return int(n,2) 
 
input_decimal = 15
finding_binary = decimal_to_binary(input_decimal) 
 
result = binary_to_decimal(finding_binary) 
print(result)"
Write a function in Python to generate a histogram from a list of values.,"data = [18, 11, 22, 20, 44, 19, 22, 11, 20]","import matplotlib.pyplot as plt

def generateHistogram(data):
    plt.hist(data, bins='auto')
    plt.title(""Histogram"")
    plt.xlabel('Values')
    plt.ylabel('Number of Occurrences')
    plt.show()

generateHistogram(data)"
Write a Python program to print out the restults of a list of functions,"functions = [max, min, sum]
list = [1,2,3,4,5]","def print_results(functions, list): 
  for func in functions: 
    print(func.__name__ + "": "" + str(func(list)))
    
print_results(functions, list)"
Develop a python program that sorts a given list of words in lexicographic order.,"[apple, bike, dog, cat]","# Sort a list of words in lexicographic order
words = [""apple"", ""bike"", ""dog"", ""cat""]

# Sort the list
words.sort()

# Print the list
print(words)

# Output:
# ['apple', 'bike', 'cat', 'dog']"
Create a Python program that takes a list of tuples as input and generates a dictionary where each tuple is a key-value pair,"[('apple', 'fruit'), ('goat', 'animal'), ('three', 'number')]","my_dict = {
 'apple': 'fruit',
 'goat': 'animal',
 'three': 'number'
}"
Create a program in Python to classify each item in a given list as either an even number or an odd number.,"[5,4,2,7]","def classify(lst):
    result = []
    for item in list:
        if item % 2 == 0:
            result.append(""even"")
        else:
            result.append(""odd"")
    return result"
Write a Python program optimize the following code using functional programming.,"i = 5
while i >= 0:
 print(i)
 i -= 1","from functools import reduce

# initialize the loop
num = 5

# call reduce()
solution = reduce(lambda i, _: i - 1, range(num + 1))

# print the result
print(solution)"
Write a Python program to convert all units of temperature in a tuple from Celsius to Fahrenheit.,"temperature = (36.5, 37, 37.5, 37.8)","def celsius_to_fahrenheit(c): 
    return (c * 9/5) + 32

temp_in_Fahrenheit = tuple(map(celsius_to_fahrenheit, temperature)) 
  
print(temp_in_Fahrenheit) # Output: (97.7, 98.6, 99.5, 100.04)"
Write a python program to generate all possible strings by combining the characters of two given strings.,"str1 = ""abc""
 str2 = ""xyz""","def combine_strings(str1, str2):
    result = [] 
    for i in range(len(str1)): 
        for j in range(len(str2)): 
            result.append(str1[i] + str2[j]) 
    return result"
Construct a function in Python which takes in a string and returns the number of vowels it has.,"string=""hello world""","def countVowels(string):
    
    vowels = 'aeiouAEIOU'
    count = 0

    for char in string:
        if char in vowels:
            count += 1
    
    return count"
Create a function in Python to solve the following constraint problem.,"Given two arrays of integers, find the number of elements in the intersection of the two sets.","def intersection(arr1,arr2): 
    result = 0
    resultSet = set(arr1) & set(arr2)
    result = len(resultSet)
    return result"
Write a function in Python to calculate the Gini coefficient of a dataset.,"Dataset: [1, 1, 1, 2, 3, 4, 4, 5, 6]","def gini(data):
 data_sorted = sorted(data) 
 size = len(data_sorted) 
 cummulative_sum = 0
 max_sum=sum(data_sorted)
 gini_coefficient=0.0
 for i in range(size): 
  cummulative_sum += data_sorted[i]
  gini_coefficient+=(2*cummulative_sum-max_sum-data_sorted[i])/max_sum
 return gini_coefficient/(size - 1)

data = [1,1,1,2,3,4,4,5,6]
print(gini(data))

# Output: 0.3"
Modify the following Python program to generate random numbers between 1 and 10 instead of 1 and 100.,"import random

for i in range(10):
 num = random.randint(1,100)
 print(num)","import random

for i in range(10):
 num = random.randint(1,10)
 print(num)"
Create an Python program that computes the median value of an array of numbers.,"arr = [1, 5, 2, 4, 3, 6]","def median(arr):
    arr.sort()
    if len(arr) % 2 != 0:
        return arr[int(len(arr)/2)]
    else:
        return (arr[int(len(arr)/2)] + arr[int(len(arr)/2)-1]) / 2

medianValue = median(arr)
print(medianValue)"
Generate a unique random number in the range given.,Range: 0 - 100,"A unique random number in the given range can be generated using programming languages such as Python, JavaScript, etc. It will contain code to generate a random number in the given range, and then check if it has already been generated by maintaining a list of all generated numbers."
Construct a Python for loop to find the largest number in a list of given numbers.,"[3, 6, 8, 11, 12]","largest = 0
list = [3, 6, 8, 11, 12]

for i in list:
  if i > largest:
    largest = i

print(largest)"
Convert the following Python dictionary to a JSON string.,"data = {
  ""Name"": ""John"",
  ""Age"": 30,
  ""Cities"": [""New York"", ""London"", ""Paris""]
}","{
    ""Name"": ""John"",
    ""Age"": 30,
    ""Cities"": [""New York"", ""London"", ""Paris""]
}"
Generate a Python program that searches a large list of strings to find those matching a given pattern.,"list = [""123 abc"", ""456 def"", ""789 ghi"", ""123 jkl"", ""456 mno"", ""789 pqr""]
pattern = ""456*""","search_list = [""123 abc"", ""456 def"", ""789 ghi"", ""123 jkl"", ""456 mno"", ""789 pqr""]
pattern = ""456*""

matches = []
for item in search_list:
  if item.startswith(pattern):
    matches.append(item)

print(matches)"
Write a python program to find the type and value of a given variable.,x = 10,"def find_type_and_value(x):
    t = type(x)
    v = x
    return t, v"
Construct a Python program that takes a list of words and prints the 3rd most common word in the list?,"words = ['Cat', 'Dog', 'Bird', 'Horse', 'Cow', 'Lion']","import collections
def third_most_common(words):
    count = collections.Counter(words).most_common()
    return count[2][0]
third_most_common(words) # returns 'Bird'"
Develop a Python code to compute the maximum of 3 numbers,"number1 = 33
number2 = 12
number3 = 19","def maximum_of_three(number1,number2,number3):
max_value = number1
if number2 > max_value:
    max_value = number2
if number3 > max_value:
    max_value = number3
return max_value"
Develop a Python function that can detect loops in a given linked list.,Linked List: head -> 1 -> 2 -> 3 -> 4 -> 5,"def detectLoop(head):
    slow_p = head 
    fast_p = head 
    while(slow_p and fast_p and fast_p.next): 
        slow_p = slow_p.next
        fast_p = fast_p.next.next
        if slow_p == fast_p:
            return True
    return False"
Optimize a given Python program to shorten its running time.,"def add_list(list_a, list_b):
    res = []
    for a, b in zip(list_a, list_b):
        res.append(a + b)
    return res","def add_list(list_a, list_b):
    return [a + b for a, b in zip(list_a, list_b)]"
Can you create a Python function to interpolate a given string?,"""Hello {{name}}""","def interpolate(str):
    return str.format(name=""world"")

input_str = ""Hello {{name}}""
print(interpolate(input_str)) // Output: ""Hello world"""
"Given a Python dictionary, find the most common value in the dictionary and print it out.","d = {‘python’: 20, ‘java’: 10, ‘c++’: 15, ‘C#’: 15}","from collections import Counter 

d = {‘python’: 20, ‘java’: 10, ‘c++’: 15, ‘C#’: 15}

#Get most common value
data = Counter(d) 
most_common_value = data.most_common(1)[0][0]  

#Print out most common value
print(most_common_value)"
Write a function in Python that will take in two numbers and return their sum.,"num1 = 5;
num2 = 10;","def sum(num1, num2):
 return num1 + num2

sum(5, 10); // returns 15"
Convert the following JSON to a python dictionary.,"{
    ""name"": ""John"",
    ""age"": 30,
    ""hobbies"": [
        ""soccer"",
        ""playing guitar""
    ]
}","""""""
Convert the following JSON to a python dictionary.
""""""
import json

json_data = {
    ""name"": ""John"",
    ""age"": 30,
    ""hobbies"": [
        ""soccer"",
        ""playing guitar""
    ]
}

python_dict =  json.loads(json.dumps(json_data))
print(python_dict)"
Design a function in Python to find the minimum of three numbers.,"2, -6, 4","def find_min(a, b, c):
    if a<b and a<c:
        return a
    elif b<a and b<c:
        return b
    else:
        return c

min = find_min(2, -6, 4)
print(min)"
Write a Python program to compare two lists of strings and print unique values in each list.,"list1 = [""cat"", ""dog"", ""bird""]
list2 = [""dog"", ""mouse"", ""elephant""]","list1_unique = []
list2_unique = []

for a in list1:
    if a not in list2:
        list1_unique.append(a)
        
for b in list2:
    if b not in list1:
        list2_unique.append(b)

print(""Unique elements in List 1: "", list1_unique)
print(""Unique elements in List 2: "", list2_unique)"
Develop a Python program to convert a given list of strings to a single string.,"my_list = ['Today', 'is', 'a', 'good', 'day']","def list_to_string(my_list):
  return ' '.join(my_list)"
Write a Python program to generate all unique combinations of two numbers from a list.,"nums = [1, 2, 3, 4]","def generate_combinations(nums): 
    result = [] 
    for x in range(0, len(nums)): 
        for y in range(x + 1, len(nums)): 
            result.append([nums[x], nums[y]]) 
    return result 

nums = [1, 2, 3, 4]

result = generate_combinations(nums)

for item in result:
    print(item)

# output
[1, 2]
[1, 3]
[1, 4]
[2, 3]
[2, 4]
[3, 4]"
Suggest an web scraping algorithm for the following website.,https://www.example.com/,"A useful strategy for web scraping this site would be to use the Python library requests to make HTTP requests and BeautifulSoup to parse the HTML content. First, you should make an HTTP request to the website, then you should use BeautifulSoup to find the specific elements you are interested in and extract the data."
Design an algorithm in Python that takes two input arrays and returns true if they have the same elements.,"arr1 = [1, 6, 7, 8]
arr2 = [7, 1, 8, 6]","def is_same_elements(arr1, arr2):
    return set(arr1) == set(arr2)

is_same_elements(arr1, arr2) # return True"
Develop a Python script to calculate the cosine similarity between two word vectors.,"[0.5, 0.2, 0.7, 0.8]
[0.9, 0.6, 0.1, 0.2]","import numpy as np 
  
a = np.array([0.5, 0.2, 0.7, 0.8]) 
b = np.array([0.9, 0.6, 0.1, 0.2]) 
  
def cos_sim(a, b): 
    dot_product = np.dot(a, b) 
    norm_a = np.linalg.norm(a) 
    norm_b = np.linalg.norm(b) 
    return dot_product / (norm_a * norm_b) 
  
result = cos_sim(a, b) 
print(result)"
"Given a list of integers, write a Python program to filter out all numbers that are divisible by 5.","[11, 23, 7, 20, 44, 16, 9]","def filter_divisible_by_5(numbers):
    res = []
    for num in numbers:
        if num % 5 != 0:
            res.append(num)
    return res

filtered_numbers = filter_divisible_by_5([11, 23, 7, 20, 44, 16, 9])
print(filtered_numbers)"
How would you write a program in Python that takes as input an array of integers and prints the sum of its elements?,"[1, 5, 8, -3]","arr = [1,5,8,-3]

# Compute the sum
total = 0
for num in arr:
    total += num

# Print the sum
print(total)"
Convert the following code into equivalent Python 3 function.,"function doubleString(str) {
    return str + str;
}","def doubleString(str):
    return str + str"
Create a Python function that prints a given string n times.,"string: ""Hello World!!""
N: 5","def repeatString(string, n): 
  
    for i in range(n): 
        print(string, end = """") 
  
# Driver Code 
string = ""Hello World!!""
n = 5
repeatString(string, n)"
Convert the following SQL statement into equivalent Python code,"SELECT *
FROM table
ORDER BY col1, col2 DESC","def query_table(table):
    query = """"""SELECT * 
            FROM %s 
            ORDER BY col1, col2 DESC"""""" % table
    return query"
Write a Python program to delete vowels from a given string.,'My name is John',"def removeVowels(string): 
    vowels = ('a', 'e', 'i', 'o', 'u')  
    new_string = '' 
    for char in string: 
        if char not in vowels: 
            new_string += char 
    return new_string 

string = 'My name is John'
removeVowelString = removeVowels(string) 
print(removeVowelString)"
Create a Python dictionary to store student and their grades.,"Bob – A
Carol– B
Ted – C
Alice – A","student_grades = {
    ""Bob"": ""A"",
    ""Carol"": ""B"",
    ""Ted"": ""C"",
    ""Alice"": ""A""
}"
Create a function in Python to print a dictionary in a formatted way,"d={'Name':'Donald Trump', 'Age': 70, 'Profession': 'President'}","def print_dict(d):
    for key, value in d.items():
        print(f""{key}: {value}"")

print_dict(d)

# Output: 
Name: Donald Trump
Age: 70
Profession: President"
Develop a Python program that takes a list of numbers as an input and outputs the numbers in the list sorted in ascending order.,"[5, 3, 7, 2, 4, 9, 1]","def sortAscending(list): 
    list.sort() 
    return list
  
# Driver Code 
list = [5, 3, 7, 2, 4, 9, 1]  
print(sortAscending(list)) 

# Output: [1, 2, 3, 4, 5, 7, 9]"
Generate a Python code snippet to extract the rate of inflation for a given year from a given JSON.,JSON data with rate of inflation for years 2017-2020,"import json

data = '{""2017"":2.2,""2018"":2.4,""2019"":1.7,""2020"":0.1}'

inflation_data = json.loads(data)
inflation_rate = inflation_data[""2020""] 
print(inflation_rate)  # Output: 0.1"
Create a function in Python that will take an array of integers and find the two numbers with the largest sum.,"[1, 3, 5, 7, 9]","def findMaxSum(input):
    num1 = -float('inf')
    num2 = -float('inf')
    for num in input:
        if num > num1:
            num2 = num1
            num1 = num
        elif num > num2:
            num2 = num
    return num1 + num2"
Classify the following Python statement as a type of loop.,"for i in range(10):
    print(i)",for loop.
Create a machine learning model in Python that can classify a set of samples into two classes.,"Sample1: 0.8, 0.1, 0.3
Sample2: 1.0, 0.4, 0.7
Sample3: 0.4, 0.5, 0.9
Sample4: 0.2, 0.7, 0.8","import numpy as np
from sklearn.svm import SVC

X = np.array([[0.8, 0.1, 0.3],
            [1.0, 0.4, 0.7],
            [0.4, 0.5, 0.9],
            [0.2, 0.7, 0.8]])

y = np.array([0, 1, 0, 1])

model = SVC()
model.fit(X, y)"
"Write a Python program to calculate the sum of a series of odd numbers between the two pixel, with the first number being 1.",pixel1 = 25; pixel2 = 50,"sum = 455
  
total = 0
for i in range(pixel1, pixel2):
    if i % 2 != 0:
        total += i
print('sum =', total)"
Write a Python script to filter out all words containing 10 or more characters.,"""This is a sample sentence""","sentence = ""This is a sample sentence""

words = sentence.split()
long_words = [word for word in words if len(word) > 10]

print(long_words)"
Rewrite the following JavaScript code in Python.,"function addNumbers(x, y) {
    return x + y;
}","def addNumbers(x, y):
    return x + y"
Generate a Python code for crawling a website for a specific type of data.,"website: www.example.com 
data to crawl: phone numbers","import requests
import re

def crawl_website_for_phone_numbers(website):
    response = requests.get(website)
    phone_numbers = re.findall('\d{3}-\d{3}-\d{4}', response.text)
    return phone_numbers
    
if __name__ == '__main__':
    print(crawl_website_for_phone_numbers('www.example.com'))"
Determine the output of the given Python program.,"list = [1, 2, [3,4], [5,[100, 200,['hello']], 23, 11], 1, 7]

result = list[3][1][2][0]",hello
Create an algorithm in Python to calculate the mean of a given list.,"[1,2,3,4]","def calculate_mean(numbers):
    # Get the length of the list
    numbers_len = len(numbers)
    # Sum up all the elements in the list
    total = 0
    for num in numbers:
        total += num
    # Divide the total with the length of the list
    mean = total / numbers_len
    # Return the mean
    return mean

mean = calculate_mean([1,2,3,4])
print(mean)"
Construct an algorithm in Python to calculate the area of a triangle given its sides.,"3
4
5","def areaTriangle(a, b, c): 
    """"""
    Calculate the area of a triangle.
    Parameters: 
    a (float): length of side a
    b (float): length of side b
    c (float): length of side c
    """"""
    s = (a + b + c) / 2.0
    area = (s*(s-a)*(s-b)*(s-c)) ** 0.5
    return area
 
a = 3
b = 4
c = 5
 
area = areaTriangle(a, b, c)
print(""The area of the triangle is"", area)  # 6.0"
Compose a Python program to print the first hundred odd numbers.,Not appliable,"# declaring an empty list
odds = []

# looping for a range of 1 to 100
for n in range(1,101):
# check if the number is odd
 if n % 2 != 0:
  # add the odd numbers to the list
  odds.append(n)

# print the list
print(odds)"
Write a Python function that takes a list of strings and returns the concatenation of all the elements with a separator/delimiter.,"strings = [""Sample"",""Text"",""Hello""]","def concatenate_strings(strings, separator):
 return separator.join(strings)"
Create a Python program that outputs the sum of all the elements in a given array.,"[3, 5, 6]","def sum_of_array(arr):
    result = 0
    for x in arr:
        result += x
    return result

sum = sum_of_array([3, 5, 6])
print(sum)"
Write a Python function that takes in two parameters of type list and returns the sum of all the elements in the two lists.,"list1 = [1, 2, 3, 4]
list2 = [5, 6, 7, 8]","def list_sum(list1, list2):
 # initialize sum with 0
 total_sum = 0 
 
 # iterate over each element in list1
 for num in list1: 
     # add to sum
     total_sum += num 

 # iterate over each element in list2
 for num in list2: 
     # add to sum
     total_sum += num 

return total_sum"
Construct a python function that takes a list of numbers and returns a list of the sum of the squares of the first n numbers.,"[1,2,3]","def sum_of_squares(numbers):
    squares_sum = []
    for i in range(len(numbers)):
        squares_sum.append(sum([num**2 for num in numbers[:i+1]]))
    return squares_sum"
Write a function in Python that finds the most frequent item in a given sequence.,"sequence = [1, 2, 3, 4, 5, 1, 1, 2]","def most_frequent(sequence): 
    return max(set(sequence), key = sequence.count) 

print(most_frequent(sequence))"
Write a Python program that sorts a list of integers from smallest to largest.,"[2,7,3,9,0,4]","def sort_list(input_list):
    sorted_list = sorted(input_list)
    return sorted_list

input_list = [2,7,3,9,0,4]

output = sort_list(input_list)
print(output)"
"Edit the Python program given below, so that it computes the factorial of the given number n.","def factorial(n):	
    # TODO","def factorial(n):	
    if n == 0:
        return 1
    else:
        return n * factorial(n-1)"
Generate a code in Python that sorts the given list of numbers,"lst = [3, 4, 15, 1, 0]","def sort_list(lst): 
    lst.sort() 
    return lst 
  
# Driver code 
lst = [3, 4, 15, 1, 0] 
sorted_list = sort_list(lst) 
  
print(""Sorted list:"", sorted_list)"
"Given a list of integers as input, write a Python code snippet to find the largest number.","[9, 2, 6, 3, -5, 5, 7]","max_num = -float('inf')
for num in [9, 2, 6, 3, -5, 5, 7]:
    if num > max_num:
        max_num = num
print(max_num)"
Optimize a given Python program to make it faster.,"def optiFunc(n): 
    result = 0
    for i in range(n): 
        result += i 
    return result","def optiFunc(n):
    result = n * (n-1) / 2 
    return result"
Construct a script in Bash that can install a given software.,Python 3.8.5,"#!/bin/bash

# Download latest version of Python
curl -O https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tgz

# Extract the tgz file
tar -xzf Python-3.8.5.tgz

# Move into the Python directory
cd Python-3.8.5

# Run the configure script
./configure

# Compile and install
make
make install"
Create a Python program to convert degrees Celsius to degrees Fahrenheit given a value in Celsius.,Value: 32,"# Function to convert degrees Celsius to degrees Fahrenheit
def celsius_to_fahrenheit(celsius):
 return (celsius * 9/5) + 32

# Input Celsius value
celsius = 32

# Calculate Fahrenheit
fahrenheit = celsius_to_fahrenheit(celsius)
print(f'{celsius} Celsius is {fahrenheit} Fahrenheit')"
Write a loop in Python to display the following pattern,Noinput,"for i in range(1, 6):
    for j in range(i):
        print(""*"", end="" "")
    print()"
Create a Python program to find all the factors of a given number.,12,"def factors(n):
  factor_list = []
  for i in range(1, n+1):
    if n % i == 0:
      factor_list.append(i)
  return factor_list

n = 12
result = factors(n)
print(""Factors of %d are %s"" %(n, result))"
Generate 3 random numbers within the specified range using Python.,"[0, 10]","import random

random_numbers = random.sample(range(0, 10), 3) 
print(random_numbers)"
Create a script in Python that takes a list of strings and prints the string with the longest length.,"['hello', 'world', 'abracadabra']","def longest_string(str_list):
    longest = str_list[0]
    for s in str_list:
        if len(s) > len(longest):
            longest = s
    print(longest)
    
longest_string(['hello', 'world', 'abracadabra'])"
Write a python program for text processing tasks such as to reverse the text of every line.,"line1:  Welcome to Text Processing
line2: This is fun","line1: emocleW ot gnirtS ecnerefxeT
line2: sI si nuf"
Create a function in Python to take two numerical values and return true if one is divisible by the other.,"number1 = 10
number2 = 3","def isDivisible(a, b):
  return a % b == 0

print(isDivisible(number1, number2)) #True"
Write an if-else statement for a simple weather notification system in Python.,"If the temperature is between 60 and 75 degrees, print a message that it is “Perfect Weather"".","if 60 <= temperature <= 75:
   print(""It's Perfect Weather!"")
else:
   print(""The weather is not so great."")"
Write a Python script that takes a list of strings as input and returns a new list with all the duplicates eliminated.,"[""Apple"", ""Pear"", ""Apple"", ""Banana"", ""Pear""]","def remove_duplicates(input_list):
    unique_list = []
    for item in input_list:
        if item not in unique_list:
            unique_list.append(item)
    
    return unique_list

my_list = [""Apple"", ""Pear"", ""Apple"", ""Banana"", ""Pear""]
print(remove_duplicates(my_list))"
Modify the Python program below to make it more efficient.,"def foo(lst):
    minimum = lst[0]
    for n in lst:
        if minimum > n:
            minimum = n
    return minimum","def foo(lst):
    minimum = min(lst)
    return minimum"
Create a Python script that takes a string and prints the first character of every word in the given string.,"""This is a test string""","def first_characters_of_words(string):
    words = string.split("" "") 
    characters = [word[0] for word in words] 
    return """".join(characters)

print(first_characters_of_words(""This is a test string"")) # Tiat"
Create a Python program to calculate the sum of the numbers in a given list up to a given position in the list.,"[1,3,5,4,7], Position = 3","def sum_list_position(list, position):
 sum = 0
 for i in range(position+1):
 sum += list[i]
 return sum
 
list = [1,3,5,4,7]
position = 3

print(sum_list_position(list,position)) # prints 9"
Write a Python function to calculate the distance between two points given their coordinates.,"coord1 = (3, 2) 
 coord2 = (8, 10)","def Euclidean_distance(coord1, coord2):
    x1, y1 = coord1
    x2, y2 = coord2

    return ((x2-x1)**2 + (y2-y1)**2)**0.5"
Write a command line program in Python for sorting a list of integers with the quick sort algorithm.,"[9, 4, 7, 3, 2, 1, 8, 5, 6]","def quickSort(arr):
 if len(arr) <= 1:
 return arr

 pivot = arr[len(arr) // 2]
 left = [x for x in arr if x < pivot]
 middle = [x for x in arr if x == pivot]
 right = [x for x in arr if x > pivot]

 return quickSort(left) + middle + quickSort(right)

arr = [9, 4, 7, 3, 2, 1, 8, 5, 6]

print(quickSort(arr)) # prints [1, 2, 3, 4, 5, 6, 7, 8, 9]"
Generate a list of phone numbers in python given a start and end number.,"Start number: 12345
End number: 12354","phone_numbers = [str(i) for i in range(12345, 12355)]"
Can you provide a Python code for linear search on a given list of numbers?,"[4,3,1,7,9,6]","def linearSearch(list, num):
    for i in range(len(list)):
        if list[i] == num:
            return i
    return -1

list = [4,3,1,7,9,6]
num = 9
print(linearSearch(list, num))"
Create a Python program to determine the total sum of all elements of a list.,"[1, 2, 3, 4]","def calculate_sum_of_list(arr):
    total_sum = 0
    for item in arr:
        total_sum += item
    return total_sum

list1 = [1, 2, 3, 4]
sum_of_list = calculate_sum_of_list(list1)
print(sum_of_list)"
Implement a function in Python to flatten an array of arbitrarily nested arrays of integers into a flat array of integers,"[[1,2,[3]],4]","def flatten_array(my_array):
    flattened_array=[]
    for element in my_array:
        if type(element) == int:
            flattened_array.append(element)
        else:
            flattened_array+=flatten_array(element)
    return flattened_array

print(flatten_array([[1,2,[3]],4]))"
Generate a Python program that takes a sentence as input and prints out only the verbs.,The cat jumped over the moon.,"import nltk

def extract_verbs(sentence):
    tokens = nltk.word_tokenize(sentence)
    tags = nltk.pos_tag(tokens)
    verbs = [word for word, pos in tags if pos.startswith('V')]
    return verbs

sentence = ""The cat jumped over the moon.""
verbs = extract_verbs(sentence)
print(verbs)"
Write a function in Python that takes in a string and removes all the unnecessary whitespaces.,"""This     string  contains   too     much whitespace!""","def remove_whitespaces(string):
    return ' '.join(string.split())
 
print(remove_whitespaces(""This     string  contains   too     much whitespace!""))"
Design an algorithm in Python to find the number of occurrences of a given string in another string.,"haystack = ""Hello World""
needle = ""l""","def count_occurrences(haystack, needle):
    count = 0
    for char in haystack:
        if char == needle:
            count += 1
    return count"
Write an algorithm in Python to check if a number is a palindrome.,number = 121,"def is_palindrome(number): 
num = number  
   
# initializing a reverse number  
reverse = 0
  
# Reverse the given number 
while(number > 0): 
   remainder = number % 10
   # Create reverse 
   reverse = (reverse * 10) + remainder 
   number = number // 10 
 
# check if original and reverse numbers are same
if (num == reverse): 
  return True
else: 
  return False"
Generate a function in Python that takes a list of values and returns a dictionary with the sums of adjacent values.,"[1,4,5,6,10]","def sum_adjacent(my_list):
  result = {}
  
  for i in range(len(my_list)-1):
    key = (my_list[i],my_list[i+1])
    result[key] = my_list[i]+my_list[i+1]
  
  return result
  
my_list = [1,4,5,6,10]

print(sum_adjacent(my_list))

# Output: {(1, 4): 5, (4, 5): 9, (5, 6): 11, (6, 10): 16}"
Develop Python code to check if a given number is plaindrome.,1454,"def is_plaindrome(num):
    original_num = num
    reversed_num = 0
    while num > 0:
        remainder = num % 10
        reversed_num = (reversed_num * 10) + remainder
        num //= 10
    return reversed_num == original_num

num = 1454
if is_plaindrome(num):
    print(num, ""is a plaindrome"")
else:
    print(num, ""is not a plaindrome"")"
Write a Python program that takes a user input of a number and prints out the corresponding character from the ASCII table.,76,"# Python program to get ASCII value of a character

c = input('Enter a character: ')

# ord() function to get the ASCII value 
print('The ASCII value of ' + c + ' is', ord(c))"
Write a Python program to convert an array of strings to an array of floats.,"arr = [""1.2"", ""2.3"", ""3.4"", ""4.5""]","def string_to_float(arr):
    return [float(x) for x in arr]"
Write a Python program to calculate the sum of the numerical values of each character of a string,string = 'program',"def sumCharValues(string):
    sum = 0
    for ch in string:
        sum += ord(ch)
    return sum"
Create a class in Python that represents a given animal object.,Cat,"class Cat:
    def __init__(self):
        self.name = """"
        self.colour = """"
        self.age = 0
        self.breed = """"

    def meow(self):
        print(self.name, ""says meow!"")"
Test if a given number is a Prime or not using Python.,number = 32,"if number<=1: 
  print(""Number is not a prime number."") 
for i in range(2,int(number**0.5)+1):
  if(number % i == 0):
    print(""Number is not a prime number."")
    break
else: 
  print(""Number is a prime number."")"
Write a Python web crawler that fetches all the URLs from a given website and stores them in a list.,https://www.example.com,"import requests
from bs4 import BeautifulSoup

url = ""https://www.example.com""
links = []

r = requests.get(url)
soup = BeautifulSoup(r.text, ""html.parser"")
for link in soup.find_all(""a""):
    links.append(link.get(""href""))

print(links)"
Formulate an algorithm in Python to find the sum of all elements in a given matrix.,"[[ 1, 2, 3 ],
[ 4, 5, 6 ]]","def matrixSum(matrix):
    sum = 0
    for row in matrix:
        for element in row:
            sum += element
    return sum

matrix = [[1, 2, 3], [4, 5, 6]]
total = matrixSum(matrix)
print(total)"
Create a for-loop in Python to print a list of strings that contain only the vowels from a given list of strings.,"words = [""apple"", ""bear"", ""cat"", ""dog""]","for word in words:
    vowels = """"
    for x in word:
        if x in ('a', 'e', 'i', 'o', 'u'):
            vowels += x
    print(vowels)"
Write a Python program that takes a positive integer and prints the squares of all the numbers from 1 to the given number.,Given number: 5,"# Program to print the squares of all 
# the numbers from 1 to the given number 
  
# Positive number taken as an input 
num = 5
  
# Iterate from 1 to num 
for i in range(1, num+1): 
  
    # Calculate the square 
    value = i**2
      
    # Print the value 
    print(value)

# Output:
# 1
# 4
# 9
# 16
# 25"
Run the given code on Python 3 and generate the output.,"print(""Hello World!"")",Hello World!
Create a Python program to convert a list of characters into a string,"Convert this array ['a', 'b', 'c'] into a string","def list_to_str(arr):
    str = """"
    for i in arr:
        str += i
    return str

arr = ['a', 'b', 'c']
  
result = list_to_str(arr) 
print(result)"
Design a Python program to edit a given text string,"""Apple is a great fruit""","def edit_string(text):
    text = text.replace(""Apple"", ""Orange"")
    return text

text = ""Apple is a great fruit""
print(edit_string(text))
# Output: Orange is a great fruit"
Create a function in Python to compare two strings and return true if the strings only differ by one character.,"s1 = 'apple'
s2 = 'acple'","def compare_strings(s1, s2):
    mismatch_count = 0

    for i in range(len(s1)):
        if s1[i] != s2[i]:
            if mismatch_count > 0:
                return False

            mismatch_count += 1

    return mismatch_count == 1

compare_strings('apple', 'acple')"
Design a function in Python to pad a list to a given length by replicating the rightmost element.,"[2, 3, 5], 7","def pad_list_right(lst, pad_length):
    extra_length = pad_length - len(lst)
    lst.extend([lst[-1]] * extra_length)
    return lst

lst = [2, 3, 5]
padding_length = 7
result = pad_list_right(lst, padding_length)
print(result)"
Create a Python program which concatenates two sentences and prints the result.,"The sentence to be concatenated is ""I am writing a Python program."" and ""It is exciting to learn something new.""","sentence1 = ""I am writing a Python program.""
sentence2 = ""It is exciting to learn something new.""

# Concatenate both strings
concatenated_sentence = sentence1 + "" "" + sentence2

# Print the result
print(concatenated_sentence)"
Create an algorithm in Python to sort an array of integers.,"The array to be sorted: [2, 1, 6, 5, 8]","def quicksort(array):
  if len(array) <= 1:
    return array
  
  pivot = array[len(array) // 2]
  left = [x for x in array if x < pivot]
  middle = [x for x in array if x == pivot]
  right = [x for x in array if x > pivot]
  return quicksort(left) + middle + quicksort(right)

# test
array = [2, 1, 6, 5, 8]
print(quicksort(array))"
Create a program to find the minimum depth of a binary tree using Python.,"3
        /  \
       9   20
           / \
          15  7","def minDepth(root):
    if root is None:
        return 0
    if root.left is None and root.right is None:
        return 1
    elif root.left is None:
        return minDepth(root.right) + 1
    elif root.right is None:
        return minDepth(root.left) + 1
    else:
        return min(minDepth(root.left), minDepth(root.right)) + 1"
Generate a python program that takes two sets of integers as input and outputs the intersection of those sets.,"set1 = {1, 2, 3, 4}
set2 = {3, 4, 5, 6}","def intersection(set1, set2): 
   return set1 & set2

result = intersection(set1, set2) 
print(result)"
Create a Python function to calculate the particle diameter of a given radius.,radius = 0.75,"def particle_diameter(radius):
    return 2 * radius

diameter = particle_diameter(0.75)
print(diameter) # Output: 1.5"
Write a Python program to specify the order of element when given an array and a number.,"arr=[1,2,3,4], k=3","def order_elements(arr, k):
    k_arr = []
    j_arr = []
    for i in arr:
        if i <= k:
            k_arr.append(i)
        else:
            j_arr.append(i)
    k_arr.extend(j_arr)
    return k_arr"
Convert a given SQL statement into a Python Pandas DataFrame.,SELECT * FROM book;,"import pandas as pd

df = pd.read_sql_query(""SELECT * FROM book;"", conn)"
Create a Python program to find out the prime numbers in a given range.,"lower =100
upper =1000","def is_prime_number(n):
    for i in range(2,n):
        if (n % i == 0):
            return False
    return True

# Find all prime numbers in a given range
lower = 100
upper = 1000

for num in range(lower, upper + 1):
    if is_prime_number(num):
        print(num)"
Write a Python function that takes in a list of elements and removes all the duplicate elements.,"[1, 2, 2, 3, 3, 3]","def remove_duplicates(nums):
  new_list = []
  for num in nums:
    if num not in new_list:
      new_list.append(num)
  return new_list
  
result = remove_duplicates([1, 2, 2, 3, 3, 3])
print(result)"
Create a Python program to compare two lists and find their common elements.,"list1 = [1, 2, 3, 4, 5]
list2 = [3, 4, 5, 6, 7]","def compare_lists(list1, list2):
    common_elements = []
    for element in list1:
        if element in list2:
            common_elements.append(element)
    return common_elements

list1 = [1, 2, 3, 4, 5]
list2 = [3, 4, 5, 6, 7]

common_elements = compare_lists(list1, list2)
print(common_elements)"
Construct a Python program that computes the area of a circle with the given radius.,radius = 5,"import math

def area_circle(radius):
 return math.pi * (radius ** 2)

area = area_circle(radius)
print('The area of the circle is %.2f' % area)"
Improve the following Python script to load the data in the absence or presence of the header.,"import pandas as pd
data = pd.read_csv('mydata.csv')","import pandas as pd

#Variable to indicate presence of Header
has_header = False

#Read CSV
data = pd.read_csv('mydata.csv',header=None) 

#Check for presence of Header
if data.iloc[0,0] != 'Column1':
  has_header = True

#Read again with header
if has_header:
  data = pd.read_csv('mydata.csv')"
Shorten the following code using appropriate Python statement,"x = 1
if x == 0:
    print(""x is 0"")
elif x == 1:
    print(""x is 1"")
else:
    print(""x is not 0 or 1"")","x = 1
print(""x is"", (""0"" if x == 0 else ""1"" if x == 1 else ""not 0 or 1""))"
Implement a function in Python that takes as input an integer and prints out the Fibonacci sequence up to the entered value.,10,"def fibonacci(n):
    arr = [0, 1]
    for i in range(2, n+1):
        arr.append(arr[i-2] + arr[i-1])
    return arr[:n+1]

print(fibonacci(10))"
"Using Python, construct a program to calculates the average of three numbers (input provided).","4, 9, 10","num1 = 4
num2 = 9
num3 = 10

total = num1 + num2 + num3
average = total / 3
print(""Average ="", average)  # Output: Average = 7.66"
Create a program in Python to calculate the prime factors of a given number.,15,"def find_factors(num): 
    """"""Function to find prime factors""""""
    factors = [] 
    i = 2
    while i * i <= num: 
        if num % i: 
            i += 1 
        else: 
            num //= i 
            factors.append(i) 
    if num > 1: 
        factors.append(num) 
    return factors 
  
num = 15
print(find_factors(num))"
Create a Python regex pattern to match words containing certain characters.,Characters: abc,pattern = re.compile(r'\b[abc]+\w*\b')
Write a Python program to calculate the average monthly temperature of a given city for the last 10 years.,"City: Los Angeles, California
10 year average temperature from 2010 to 2020","import csv

def avg_month_temp(city):
 result = 0
 counter = 0
 temperatures = csv.reader(open('weatherdata.csv'))
 for row in temperatures:
 if row[1] == city:
 result += float(row[2])
 counter += 1
 return result/counter"
Edit the given Python code to make it work for a list of dictionaries.,"list_data = [{'id': 1, 'name': 'Tom'}, {'id': 2, 'name': 'Bob'}]

for element in list_data:
  print(element)","list_data = [{'id': 1, 'name': 'Tom'}, {'id': 2, 'name': 'Bob'}]

for element in list_data:
  print(element['name'])"
Correct the syntax error in the below Python code.,"def fibonacci_sequence(max): 
    nums = [] 
    current, nxt = 0, 1
    while current < max: 
        current, nxt = nxt, nxt+current
        nums.append(current)
    
    return numbers","def fibonacci_sequence(max): 
    nums = [] 
    current, nxt = 0, 1
    while current < max: 
        current, nxt = nxt, nxt+current
        nums.append(current)
    
    return nums"
Construct an algorithm in Python to find the top three numbers in a list.,"[10, 8, 3, 11, 7, 14, 13]","def top_three(lst): 
  sorted_lst = sorted(lst, reverse=True) 
  return sorted_lst[:3]

print(top_three([10, 8, 3, 11, 7, 14, 13]))"
Program a Python script to convert a given temperature in degree Fahrenheit to degree Celsius.,F = 100,"def f_to_c(F):
    C = (F - 32) * 5/9
    return C"
Create an algorithm in Python to find the average of numbers in a list.,"[3, 5, 7, 9, 11]","def find_average(lst):
    sum = 0
    for num in lst: 
        sum += num 
    # average calculation 
    avg = sum / len(lst)  
      
    return avg

average = find_average([3, 5, 7, 9, 11])
print(""The average of the numbers in the list is:"", average)"
"Given a list of integers, write a Python program to print the latest 3 largest numbers.","[5, 1, 10, 25, 74, 17, 2]","def print_largest_three_numbers(numbers): 
    numbers.sort(reverse=True) 
    print(*numbers[:3], sep = "", "") 

print_largest_three_numbers([5, 1, 10, 25, 74, 17, 2])

Output:
74, 25, 17"
Create a function in Python that prints each element of a list one by one.,"list1 = [1,2,3,4,5]","def print_list(list1):
    for element in list1:
        print(element)

list1 = [1,2,3,4,5]

print_list(list1)"
Create a function in Python that takes a list of integers and returns the largest integer.,"[1, 5, 4, 9, 2]","def biggest_number(num_list):
  return max(num_list)

biggest = biggest_number([1, 5, 4, 9, 2])
print(biggest) # prints 9"
Create a Python script to validate a JSON string.,"""{""name"":""John"",""age"":30}""","import json

def validate_json_string(s):
    try:
        json_obj = json.loads(s)
        return True
    except json.JSONDecodeError:
        return False"
Create a Python program that counts the occurrence of a specific character in a list,"['a', 'b', 'c', 'd', 'e', 'f', 'g'], 'f'","def count_char(my_list, char):
    count = 0
    for i in my_list:
        if i == char:
            count += 1
    return count"
Create a Python procedure to determine if two numbers are divisible.,14 and 7,"def divisible(x, y):
    if x % y == 0:
        return True
    else:
        return False"
"Write a function in Python to generate a random integer between two numbers, a and b.","a = 4
b = 15","import random

def random_int_generator(a, b):
    return random.randint(a, b)"
"Using Python, write a program to find the most common element among a list of numbers","[4, 8, 9, 4, 6, 4, 8]","def most_frequent(list): 
    return max(set(list), key = list.count) 
  
list = [4, 8, 9, 4, 6, 4, 8]
print(most_frequent(list))"
Write a Python program to create a flag made up of stars (*).,flagSize = 5,"# Generate a flag made up of *
flagString = """"

for i in range(flagSize):
    flagString += ""*""

print(flagString)"
Generate a Python program to reverse the digits of an integer.,n = 123,"def reverse_int(n):
    rev = 0
    while n > 0:
        rem = n % 10
        rev = rev * 10 + rem
        n = n // 10
    return rev

n = 123
print(reverse_int(n))"
Classify numbers into odd and even using Python.,"list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","odd_list = []
even_list = []

for x in list:
    if x % 2 == 0:
        even_list.append(x)
    else:
        odd_list.append(x)
        
print(""Odd numbers: "", odd_list)
print(""Even numbers: "", even_list)"
Create a Python function that takes two arrays as input and returns a new array containing the elements of both inputs.,"array1 = [1, 2, 3]
array2 = [4, 5, 6]","def merge_arrays(array1, array2):
    merged_array = array1 + array2
    return merged_array

array1 = [1, 2, 3]
array2 = [4, 5, 6]
merged_array = merge_arrays(array1, array2)
print(merged_array)"
Optimize a Python program that calculates the sum of the numbers up to a given integer.,"integer = 5

def calculateSum(n):
	sum = 0
	for i in range(n+1):
		sum = sum + i
	
	return sum

print(calculateSum(integer))","def calculateSum(n):
	return (n * (n+1))//2

print(calculateSum(integer))"
Create a Python program to classify the words in a sentence into verbs and nouns.,"Sentence = ""The cat is playing with a ball.""","sentence = ""The cat is playing with a ball.""
words = sentence.split()

verbs = []
nouns = []

for word in words:
  if word in [""is"", ""playing""]:
    verbs.append(word)
  elif word in [""The"", ""cat"", ""a"", ""ball""]:
    nouns.append(word)

print(""Verbs:"", verbs)
print(""Nouns:"", nouns)"
Generate a Python program to perform matrix multiplication.,"A = [[1, 2, 3],
     [4, 5, 6],
     [7, 8, 9]] 

B = [[7, 8, 9],
     [4, 5, 6],
     [1, 2, 3]]","def matrixMultiplication(A,B): 
 
    return [[sum(a*b for a,b in zip(A_row,B_col))  
                 for B_col in zip(*B)] for A_row in A] 

A = [[1, 2, 3], 
     [4, 5, 6], 
     [7, 8, 9]] 

B = [[7, 8, 9], 
     [4, 5, 6], 
     [1, 2, 3]]

C = matrixMultiplication(A,B) 

for i in range(len(C)): 
    print(C[i])"
Create a for loop in Python that prints the output of a multiplication table for numbers from 1 to 10.,-,"for i in range(1, 11):
  for j in range(1, 11):
    print(i * j, end='\t')
  print()"
Create a Python program that looks through a list of colors and returns those colors that are dark.,"['Red', 'Orange', 'Green', 'Purple', 'Black', 'White']","def find_dark_colors(colors):
    dark_colors = []
    for color in colors:
        if color == 'Black' or color == 'Purple':
            dark_colors.append(color)
    return dark_colors

result = find_dark_colors(['Red', 'Orange', 'Green', 'Purple', 'Black', 'White'])
print(result)"
Create a Python function to evaluate a given polynomial equation,P(x) = x^2 - 4x + 6,"def poly_evaluation(x):
  return x**2 - 4*x + 6

x = 2
result = poly_evaluation(x)
print(result) # prints 0"
Develop a Python script for checking for palindromes.,<none>,"def is_palindrome(word):
  rev_word = word[::-1]
  if word == rev_word:
    return True
  return False"
"You need to classify if a given python code contains an error or not. Output true if there is an error, false if there is not.","x=1
y=""2""
z=x+y",TRUE
Create a method in Python that takes a list of numbers and returns its average.,"[7, 8, 10, 4, 11]","def avg(list): 
	sum = 0
	for item in list:
		sum += item 
	return sum / len(list) 

list1 = [7, 8, 10, 4, 11]
result = avg(list1) 
  
print(""Average of all items: "", result)"
Optimize an existing Python code snippet to print all even numbers between 1 and 10.,"num = 1
while num<=10:
    print(num)
    num+=1","num = 0
while num<=10:
    if num % 2 == 0:
        print(num)
    num+=1"
Write a Python program to parse a JSON string and store the result in a new dictionary.,"json_string = '{""name"": ""John"", ""age"": 30, ""city"": ""New York""}'","import json

# parse JSON string into a dictionary
json_dict = json.loads(json_string) 
  
# result 
print(json_dict) 

# Output:
{'name': 'John', 'age': 30, 'city': 'New York'}"
Generate a Python code to automatically add an item to the beginning of a given array.,"arr = [1,2,3,4,5]
new_item = 7","def add_item_to_beginning(arr, new_item):
    return [new_item] + arr"
Write a Python program to randomly select a number of elements from a list without any repeat,"[1,2,3,4,5]","import random

def random_select(arr, k):
    new_arr = random.sample(arr,k)
    return new_arr"
Generate a list comprehensions in Python that takes a positive integer and creates a list with all its factors.,15,"factors = [list_element for list_element in range(1,15+1) if 15%list_element == 0]"
Produce a logic in Python to truncate a given string after the given number of characters.,"String = ""Hello World"", length = 4","def string_truncate(string, length):
    if length > len(string):
        return string
    else:
        return string[:length] + '...'"
Sort the given list of numbers in ascending order using quick sort in Python.,"arr = [7, 4, 6, 5, 9, 4]","def quick_sort(arr):
    if len(arr) <= 1:
        return arr
 
    pivot = arr[len(arr) // 2]
    left = [x for x in arr if x < pivot]
    middle = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]
    return quick_sort(left) + middle + quick_sort(right)"
Write a for loop to print all the keys and values of a Python dictionary.,"my_dict = {
    ""name"": ""John"",
    ""age"": 30,
    ""city"": ""New York""
}","for key,value in my_dict.items(): 
    print(key,"" :"",value)"
Generate a Python program to find the distinct pair of the numbers whose product is equal to a given number.,product = 24,"def distinct_pair(product):
    pairs = []
    for i in range(1,product):
        if product % i == 0:
            pairs.append((i,product//i))

    return set(pairs)"
Design a function in Python to remove the vowels from a given string.,"text = ""Hello World""","def remove_vowels(text):
    """"""Remove the vowels from a given string.""""""
    vowels = [""a"", ""e"", ""i"", ""o"", ""u""]
    result = """"
    for char in text:
        if char.lower() not in vowels:
            result += char
    return result

# Output
print(remove_vowels(text))"
Convert the following function written in Python to Java.,"def add_two_numbers(a, b):
    return a + b","public int add_two_numbers(int a, int b){
    return a + b;
}"
Create a Python program to read a list of strings and display the same strings in a reverse order.,"[""Apple"", ""Banana"", ""Mango"", ""Orange""]","def reverse_strings(string_list):
 reversed_string_list = []
 for string in string_list:
 reversed_string_list.insert(0, string)
 return reversed_string_list

string_list = [""Apple"", ""Banana"", ""Mango"", ""Orange""]
print(reverse_strings(string_list))"
Write a python function to count the number of words in a sentence that are longer than the given length.,"sentence = ""This is a sample sentence""
length = 4","def count_long_words(sentence, length):
    words = sentence.split()
    count = 0
    
    for word in words:
        if len(word) > length:
            count += 1
    return count"
Write a Python program that returns the factorial of a number.,5,"def factorial(n):
    if n == 1:
        return 1
    else:
        return n * factorial(n-1)

result = factorial(5)
print(result)"
Write a function in Python that takes a given string and checks if it is a palindrome or not.,"""racecar""","def isPalindrome(s):
    left = 0 
    right = len(s)-1 
      
    while(left < right ): 
        if (s[left] != s[right]): 
            return False
        left += 1
        right -= 1
    return True
  
print (isPalindrome(""racecar""))"
Transform the following code written in Java to code written in Python.,"public static int largest(int[] array) {
 int largest = array[0];
 for (int i = 1; i < array.length; i++) {
  if (array[i] > largest) {
   largest = array[i];
  }
 }
 return largest;
}","def largest(array):
 largest = array[0]
 for i in range(1, len(array)):
  if array[i] > largest:
   largest = array[i]
 return largest"
Optimize a given program written in Python.,"def get_factorial(n):
    if n == 1 or n == 0:
        return 1
    else:
        return n * get_factorial(n-1)","def get_factorial(n):
    result = 1
	for i in range(1, n + 1):
		result *= i
	return result"
Generate a function in Python to optimize a function based on the mean squared error metric.,"def f(weights):
 cost = 0
 for i in range(len(weights)):
 cost += weights[i]**2
 return cost","import gradientDescent as GD

def optimize(weights):
 cost, gradient = GD.cost_function(f, weights)
 optimizer = GD.Optimizer(learning_rate=0.01, momentum=0.9, decay=0.001)
 optimizer.run(cost, gradient)
 return optimizer.weights"
Store the provided data into a key-value object in Python.,"first_name: John

last_name: Doe

age: 28","person_data = {
    ""first_name"": ""John"",
    ""last_name"": ""Doe"",
    ""age"": 28
}"
"Using Python, can you calculate the sum of all numbers in a list?","[1, 3, 5, 7, 9]","sum = 0
for num in [1, 3, 5, 7, 9]:
    sum += num

print(sum) # 25"
Modify the following code to reverse a string without using the built-in reverse() method in Python.,"""Hello World!""","def reverseString(string):
    newString = """"
    length = len(string)
    for i in range(length - 1, -1, -1):
        newString += string[i]
    return newString

print(reverseString(""Hello World!""))"
Create a function in Python to print Pascal's Triangle of a given number of rows.,6,"def pascal_triangle(n):
    triangle = []

    for i in range(n):
        row = [1] * (i+1)
        triangle.append(row)

        for j in range(1,i):
            row[j] = triangle[i-1][j-1] + triangle[i-1][j]

    for row in triangle:
        print(row)

pascal_triangle(6) 
# Output: [1]
# [1, 1]
# [1, 2, 1]
# [1, 3, 3, 1]
# [1, 4, 6, 4, 1]
# [1, 5, 10, 10, 5, 1]"
Write a Python Program to take multiple inputs and prints the highest among them.,"14, 16, 2","values = [14, 16, 2]
 
highest = values[0]
 
for i in values:
    if highest < i:
        highest = i
 
print(""The highest value is: "", highest)"
Write a Python program to create a dictionary from two lists where the first list contains keys and the second list contains values.,"keys = ['a', 'b', 'c', 'd']
values = [1, 2, 3, 4]","def create_dictionary(keys, values):
  dictionary = dict(zip(keys, values))
  return dictionary

dictionary = create_dictionary(keys, values)
print(dictionary)"
Create a function to parse a JSON string and return a Python dictionary.,"'{""name"": ""John"", ""age"": 32}'","import json

def parseJSON(json_string):
    return json.loads(json_string)

dictionary = parseJSON('{""name"": ""John"", ""age"": 32}')"
"Given an array of strings, build an algorithm in Python to determine the index of the element that contains the smallest number of characters.","[""Hello"", ""World"", ""Python"", ""is"", ""Fun""]","def min_length_index(arr):
  min = float('infinity')
  min_i = 0
  for i in range(len(arr)):
    if len(arr[i]) < min:
      min = len(arr[i])
      min_i = i
  return min_i

print(min_length_index([""Hello"", ""World"", ""Python"", ""is"", ""Fun""])) # 3"
Write a Python function to sort a list of tuples according to the second element of each tuple.,"[(4, 3), (2, 5), (0, 1)]","def sort_by_tuple_second(tuple_list):
    tuple_list.sort(key=lambda x: x[1])
    return tuple_list"
Create a Python program that separates odd and even numbers.,"[3, 4, 7, 12, 19]","def odd_even(numbers):
    odd = []
    even = []
    for num in numbers:
        if num % 2 == 0:
            even.append(num)
        else:
            odd.append(num)
    return odd, even

odds, evens = odd_even([3, 4, 7, 12, 19])
print(odds) # prints: [3, 7, 19]
print(evens) # prints: [4, 12]"
Generate a Python program that takes a list of numbers and an integer threshold as inputs and returns the list elements that are greater than or equal to the threshold.,"[2, 8, 10, 13, 15], 10","def filter_numbers(nums, threshold):
 return [num for num in nums if num >= threshold]
 
 numbers = [2, 8, 10, 13, 15]
 threshold = 10
 
 print(filter_numbers(numbers, threshold))
# Output: [10, 13, 15]"
Generate a function in Python that returns the cumulative sum of a list of numbers.,"[1, 2, 3, 4]","def cumulative_sum(nums):
 sums = []
 current_sum = 0
 
 for n in nums:
 current_sum += n
 sums.append(current_sum)
 
 return sums
 
print(cumulative_sum([1, 2, 3, 4]))    # [1, 3, 6, 10]"
Write a Python script to parse and extract a list of names from a provided sentence.,"""Joe, Mary, and Jake""","names = []

sentence = ""Joe, Mary, and Jake""

words = sentence.split()

for word in words:
 if word.endswith(','):
  names.append(word[:-1])
 elif word.startswith('and'):
  names.append(word[4:])
 else:
  names.append(word)
  
print(names) # Output: ['Joe', 'Mary', 'Jake']"
Design an algorithm in Python to find the maximum key from a given dictionary.,"{1: 'one', 4: 'four', 5: 'five', 8: 'eight', 10: 'ten', 13: 'thirteen'}","def max_key(dict):
    max_key = -1
    max_val = -1
    for key, val in dict.items():
        if key > max_key and val > max_val:
            max_key = key
            max_val = val
    return max_key"
Improve the following small python program to make a valid babynames list.,"babynames = ['bob', 'alice', 'billy']","babynames = ['Bob', 'Alice', 'Billy']"
Write a Python program to count the number of even and odd numbers in a given list of integers.,"[1, 2, 3, 4, 5, 6]","def count_even_odd(numbers):
 even_count = 0
 odd_count = 0
 for num in numbers:
     if num % 2 == 0:
         even_count += 1
     else:
         odd_count += 1
 return even_count, odd_count"
Create an algorithm in Python to find the number of pairwise disjoint subsets of a given set.,"{1, 2, 3, 4, 5}","def subsets(s):
    res = []
    for i in range(1 << len(s)):
        subset = [list(s)[x] for x in range(len(s)) if i & (1 << x)]
        if not any(set(subset).issubset(r) for r in res):
            res.append(subset)
    return res"
Write a Python program to remove all the elements in a dictionary with a given value.,"dictionary: {'a': 1, 'b': 2, 'c': 3, 'd': 3}, value: 3","dictionary = {'a': 1, 'b': 2, 'c': 3, 'd': 3}
value = 3

dictionary = {key:val for key, val in dictionary.items() if val != value}

print(dictionary)"
Create a Python function to return a list that its elements are in descending order based on input parameter.,"[7, 4, 3, 10, 2, 1]","def sort_descending(lst):
    return sorted(lst, reverse=True)
  
# Example 
list_sample = [7, 4, 3, 10, 2, 1]
result = sort_descending(list_sample)  
print(result) 
# Output: [10, 7, 4, 3, 2, 1]"
Write a Python program that takes a string as input and returns a new string with all vowels removed.,hello,"# Function to remove vowels
def removeVowels(str):
  vowels = ('a', 'e', 'i', 'o', 'u')
  for x in str.lower():
    if x in vowels:
      str = str.replace(x,"""")
  print(str)  

# Driver program
str = ""Hello""
removeVowels(str)

# Output:
Hll"
"Create a Python function that takes two parameters, a number (n) and a word (w), and prints out the word n number of times.","3, ""Hello""","def repeat(n, w):
    for i in range(n):
        print(w)

repeat(3, ""Hello"")  # Output: Hello Hello Hello"
Design a function in Python to find the area of a circle from the given radius.,5,"def areaCircle(radius):
    pi = 3.14
    area = pi * (radius**2)
    return area

print(areaCircle(5)) # 78.5"
Write code in Python to generate all the possible permutations of a given list.,"list = [1,2,3]","import itertools

def permute(list):
    return list(itertools.permutations(list))"
Classify the following Python code as syntactically correct or incorrect,"def add():
 a=1
    b=2
    c=a+b
    print(c)",incorrect
Generate a code to convert a given name to its uppercase version.,john,"""""""
Python program to convert a name to uppercase
""""""

def to_uppercase(name):
 return name.upper()

name = ""john"" 
print(to_uppercase(name))"
Create a Python function to shuffle a list of numbers.,"[1, 2, 3, 4, 5]","import random

def shuffle_list(nums):
 random.shuffle(nums)
 return nums

shuffled_list = shuffle_list([1, 2, 3, 4, 5])
print(shuffled_list) #[3, 5, 2, 4, 1]"
"Using Regular Expressions, create a Python program that finds all the words in a given sentence that end with 'ing'.",This is a sentence containing a lot of words ending in 'ing'.,"import re
 
sentence = ""This is a sentence containing a lot of words ending in 'ing'.""
pattern = r""\w+ing\b""
 
words = re.findall(pattern, sentence)
 
print(words)
 
# Output: ['containing', 'ending']"
Create a Python lambda expression that prints out the square of each item in an input list.,"[1, 2, 3]","square = lambda nums: [x*x for x in nums]

squares = square([1,2,3])
print(squares)"
"Create a Python function that takes in two parameters, a list of numbers and a number to be compared to the list. The function should return the number of elements in the list that are larger than the parameter number.","nums = [3,5,7,1,2]
num_to_compare = 3","def larger_than_num(nums, num_to_compare):
  count = 0
  for num in nums:
    if num > num_to_compare:
      count += 1
  
  return count

print(larger_than_num(nums, num_to_compare)) # 3"
Write a Python program to check if an item exists in a given list.,"mylist = [1,2,3,4,5]","def item_exists(mylist, element):
    if element in mylist:
        return True
    return False

result = item_exists([1,2,3,4,5], 3)
print(result)"
Design a Python program to remove duplicates from a given array.,"[1, 3, 5, 1, 5, 9]","def remove_duplicates(arr): 
    final_list = [] 
    for num in arr: 
        if num not in final_list: 
            final_list.append(num) 
    return final_list"
Generate a Python program to add a prefix and suffix to each elements of a list.,"[apple, banana, cherry]","def add_prefix_suffix(lst, prefix, suffix): 
	return [prefix + i + suffix for i in lst]"
"Using Python, build a dictionary containing the numbers from 1 to n as the key and the square of each number as the value.",n = 10,"my_dict = {}

for i in range(1,n+1):
 my_dict[i] = i**2

print(my_dict)"
Write a Python function to transpose a given matrix of size (m x n).,"[[1, 2], 
 [3, 4], 
 [5, 6]]","def transposeMatrix(matrix): 
 m = len(matrix) 
 n = len(matrix[0]) 
  
 # Create a new matrix 
 transpose = [[0 for x in range(m)] for y in range(n)] 
  
 # Iterate through the original matrix 
 for i in range(m): 
 for j in range(n): 
 transpose[j][i] = matrix[i][j] 
 return transpose"
Edit this Python code to make the while loop break when the user inputs an empty string.,"user_input = input(""Please enter a word:"")
while user_input:
    print(user_input)
    user_input = input(""Please enter a word:"")","user_input = input(""Please enter a word:"")
while user_input != """":
    print(user_input)
    user_input = input(""Please enter a word:"")"
Create a function in Python that takes a list of integers as an argument and then returns the maximum integer.,"[3, 5, 12, 20, 6, 4]","def find_max(a):
  max = a[0]
  for i in a:
    if i > max:
      max = i
  return max

print(find_max([3, 5, 12, 20, 6, 4]))
# 20"
Write a Python program to format a number with a given number of decimal places.,"number = 123.4567
decimal_places = 3","def format_number(number, decimal_places):
 return f""{number:.{decimal_places}f}"""
"Create a python script that checks if all numbers in an array are greater than, equal to, or less than a given number.","[3, 5,7], 4","def checkNum(arr, num):
    response = []
    for element in arr: 
        if element > num: 
            response.append('greater than')
        elif element < num:
            response.append('less than')
        else:
            response.append('equal to')
    return response

nums = [3,5,7]
out = checkNum(nums, 4)
print(out)"
"Using the comment as a guide, replace all the variables with their corresponding values in the given Python code.","a = 10
b = 25

# TODO: Replace the variables with their values
result = a + b","# TODO: Replace the variables with their values
result = 10 + 25"
Generate a syntax to input random numbers into a python program,N = 10,"import random

# Generates N random numbers
numbers = [random.randint(0, N) for i in range(N)]"
Complete the following Python function to sort a list of numbers in ascending order.,"[7, 1, 5, 4]","def sort_list(nums):
    for i in range(len(nums) - 1):
        for j in range(i + 1, len(nums)):
            if nums[i] > nums[j]:
                nums[i], nums[j] = nums[j], nums[i]
    return nums"
Create a Python program to calculate the Fibonacci numbers up to a certain value.,The value is 50.,"def fib(n): 
 if n <= 1: 
  return n 
 else: 
  return(fib(n-1) + fib(n-2)) 

# Take input from the user 
n = int(input(""Enter a number: "")) 

# Print Fibonacci sequence up to n 
print(""Fibonacci sequence:"") 
for i in range(n): 
 print(fib(i))"
Design a Python program to calculate the area of a triangle given three side lengths.,"3, 4, 5","def calculate_triangle_area(a, b, c):
    # Calculate the semi-perimeter
    s = (a + b + c) / 2
    # Calculate the area of the triangle
    area = (s * (s - a) * (s - b) * (s - c)) ** 0.5
    return area

a = 3
b = 4
c = 5

area = calculate_triangle_area(a, b, c)
print(""Area of the triangle is: {}"".format(area))"
Write a Python program to group a list of string elements into a dictionary of word counts.,"['hello', 'world', 'hello', 'world', 'this', 'is', 'a', 'test']","words = ['hello', 'world', 'hello', 'world', 'this', 'is', 'a', 'test']

word_counts = {word: words.count(word) for word in words}

print(word_counts)
# Output: {'hello': 2, 'world': 2, 'this': 1, 'is': 1, 'a': 1, 'test': 1}"
Create a Python program that takes in a list of numbers and outputs the sum of itself and all its previous numbers (including the number itself).,"[2, 3, 4, 5, 6]","def sum_of_all(nums):
    sum = 0
    for i in range(len(nums)):
        sum += sum(nums[:i+1])
    return sum

#Test
print(sum_of_all([2, 3, 4, 5, 6])) # Output: 20"
Create a program to find the smallest number in a given list using a for loop in Python.,"Example list: [12, 4, 16, 15]","def find_smallest_number(lst):
  smallest = lst[0]
  for number in lst:
    if number < smallest:
      smallest = number
  return smallest

print(find_smallest_number([12, 4, 16, 15]))
# Output: 4"
Write a Python program to extract all the numbers from a specified string.,This is 3 string with 4 numbers,"def extract_numbers(s):
    numbers = []
    for char in s:
        if char.isdigit():
            numbers.append(int(char))
    return numbers

result = extract_numbers(""This is 3 string with 4 numbers"")
print(result)"
Implement a search algorithm in Python that takes a list and a query as input and returns all matching elements.,"list = [1, 2, 3, 4, 5, 6]
query = 4","def search(list, query): 
    results = []
    for item in list:
        if item == query: 
            results.append(item) 
    return results

list = [1, 2, 3, 4, 5, 6]
query = 4

result = search(list, query)
print(result)"
Modify the given Python program so that it checks the spelling of the given word using an external library.,"word = ""Hello""","import spellchecker

word = ""Hello""

correct_word = spellchecker.correction(word)
if word != correct_word:
 print(""Did you mean"", correct_word, ""?"")"
Write a Python program for finding the root of a given quadratic equation.,"a = 1, b = 5, c = 4","def quadratic(a, b, c):
    # calculate the discriminant
    d = (b**2) - (4*a*c)

    # find the two roots
    root1 = (-b-d**0.5)/(2*a)
    root2 = (-b+d**0.5)/(2*a)
    return root1, root2"
Optimize a Python code to minimize program execution time,"def sum_array(array):
    res = 0
    for i in range(len(array)):
        res += array[i]
    return res","def sum_array(array):
    return sum(array)"
Write code to generate a multidimensional array containing two lists of strings in Python.,"Two lists of strings

List 1: [""apple"", ""banana"", ""carrot""]
List 2: [""french fries"", ""rice"", ""salad""]","arr = [[""apple"", ""french fries""],
 [""banana"", ""rice""],
 [""carrot"", ""salad""]]"
Edit the given Python code to calculate the Fibonacci sequence up to the 15th number.,"def fibonacci(n): 
   if n <= 1: 
       return n 
   else: 
       return(fibonacci(n-1) + fibonacci(n-2))","def fibonacci(n): 
   if n<= 0: 
      print(""Incorrect input"") 
   elif n==1: 
       return 0
   elif n==2: 
       return 1
   else: 
       return(fibonacci(n-1) + fibonacci(n-2)) 

# Function calls
fibonacci(15)"
Write a Python function that takes in a list of strings and returns a new list with all duplicates removed.,"[""apple"",""apple"",""banana"",""orange"",""pear"",""banana""]","def remove_duplicates(lst):
    new_list = []
    for x in lst:
        if x not in new_list:
            new_list.append(x)
    return new_list

print(remove_duplicates([""apple"",""apple"",""banana"",""orange"",""pear"",""banana""]))"
Create a Python program to convert a given string from lower to upper case.,String: “hello world”,"def convert_to_upper_case(string):
    '''This function will take a string as input and convert it to upper case'''
    return string.upper()

converted_string = convert_to_upper_case(""hello world"")
print(converted_string)"
Develop a Python script to calculate the average of all the numbers present in a list.,"list_num = [1, 5, 9, 10, 6]","def avg(list_num):
    sum = 0
    
    for num in list_num:
        sum += num
    
    return sum / len(list_num)

print(""Average is:"", avg(list_num))"
Create a Python script to build a dictionary from string to string of the given samples.,"Samples:
apple->red
banana->yellow
cherry->red","def build_dictionary(samples):
 dictionary = {}
 for sample in samples:
  key, value = sample.split(""->"")
  dictionary[key] = value
 return dictionary
 
samples = [""apple->red"", ""banana->yellow"", ""cherry->red""]
dictionary = build_dictionary(samples)

print(dictionary)"
Create a python function which takes a list of string and converts each string to its uppercase equivalent.,"['Hello', 'World']","def to_uppercase(items):
    return [item.upper() for item in items]

result = to_uppercase(['Hello', 'World']) 
print(result)"
"Express the following task using Python code: Calculate the area of a triangle, given the base and height.","base = 10
height = 8","def triangle_area(base, height):
    return 0.5 * base * height"
Construct a code to sum all the numbers in a list in Python.,"[3, 4, 7, 1]","sum = 0
for num in [3, 4, 7, 1]:
  sum += num

print(sum) # Output is 15"
Write a Python program to calculate the standard deviation of given data.,"[20, 10, 15, 25]","import statistics
def calculate_std_dev(arr):
	return statistics.stdev(arr)"
Generate a clickable GUI for a Python application.,Python functions,"# Imports
from tkinter import *

# Create window
root = Tk()

# Define functions
def func1(): 
    pass

def func2():
    pass

# Add elements to GUI
btn1 = Button(root, text=""Function 1"", command=func1)
btn2 = Button(root, text=""Function 2"", command=func2)

btn1.pack()
btn2.pack()

# Run the window 
root.mainloop()"
Optimize a given Python function to increase its performance.,"def factorial(n):
    if n == 0 or n == 1:
        return 1
    else:
        return n * factorial(n-1)","def factorial(n):
    """"""Calculates the factorial of `n` using an optimized approach. """"""
    result = 1
    for i in range(2,n+1):
        result *= i
    return result

if __name__ == '__main__':
    print(factorial(4)) # 24"
Compose a Python program that evaluates a given expression provided as a string and prints its result.,"""1+1""","def evaluate_expression(expression):
    try:
        result = eval(expression)
        print(result)
    except:
        print(""Error: invalid expression"")

evaluate_expression(""1+1"")"
"Create a python function that takes in a string, and returns the string with the first letter of each word capitalized.","string = ""hello there people""","def capitalize_string(string):
    words = string.split(' ')
    capitalized_words = []
    for word in words:
        capitalized_words.append(word.capitalize())
    
    return ' '.join(capitalized_words)"
Create a Python script to sort the numbers in an array.,"[2, 4, 5, 1, 3]","def sort_array(array):
    array.sort()
    return array

result = sort_array([2, 4, 5, 1, 3])
print(result)"
Write a Python program to generate a random array of integers of length N with values between 1 and M (inclusive).,#NAME?,"import random 

N = 10
M = 100

random_array = [random.randint(1, M) for _ in range(N)] 
print(random_array) 
# Output: [3, 82, 83, 32, 45, 44, 6, 67, 25, 29]"
Write a python script that sorts a list of strings by length.,"['the', 'quick', 'brown', 'fox', 'jumped', 'over', 'the', 'lazy', 'dog']","def sort_strings_by_length(strings):
    # Sort strings by length in ascending order
    strings.sort(key=len)
    return strings"
Write a Python program to convert all the lower case letters in a string to upper case.,"""hello World""","print(''.join([i.upper() for i in ""hello World""])) # HELLO WORLD"
Create a Python program to parse a string for any numbers and calculate the sum.,"string = ""My age is 25 and my friend's age is 30.""","import re

# Input string
string = ""My age is 25 and my friend's age is 30.""

# Find all the numbers in the string
numbers = re.findall(""\d+"", string)

# Calculate the sum
sum = 0
for number in numbers:
 sum += int(number)

# Print the sum
print(""The sum of the numbers is:"", sum)"
Write a python program to calculate the sum of the given numbers and return the result.,"[1, 2, 3, 4, 5]","def sum_numbers(arr):
    result = 0
    for num in arr:
        result += num
    return result"
Write a Python program to concatenate all the elements in a given list of strings.,"list_of_strings = [""a"", ""b"", ""c"", ""d"", ""e""]","def concatenate_strings(list_of_strings):
    result = """"
    for string in list_of_strings:
        result += string
    return result"
"In this Python code, identify the type of data structure being used and write down advantages and disadvantages of using this type of data structure.","my_list = [""Apple"", ""Banana"", ""Orange"", ""Mango""]","A list is being used in this code snippet. Advantages of using a list are that it is mutable, can store duplicate data, and allows for indexing. Disadvantages of using a list are that it can be slow if the list is very long and operations take a long time."
Edit the following Python program to handle user input as an integer,"num = input(""Enter an integer"")
print(""The number is: "" + num)","num = int(input(""Enter an integer: ""))
print(""The number is:"", num)"
Develop a Python code to generate the nth number in the Fibonacci series.,n = 8,"""""""
Develop a Python code to generate the nth number in the Fibonacci series.
""""""

def generate_fibonacci(n):
    if n == 1 or n == 2:
        return 1
    else:
        a = 1
        b = 1
        for i in range(2, n):
            a, b = b, a + b
        return b
    
if __name__ == '__main__':
    n = 8
    print(generate_fibonacci(n))"
Optimize the following Python code for calculating the sum of an array.,"arr = [1, 2, 3, 4, 5, 6]
total = 0
for el in arr:
 total += el","arr = [1, 2, 3, 4, 5, 6]
total = sum(arr) # use sum() to sum up all elements of the array in one line"
"Create a Python program that takes a list and an integer, and returns whether the list contains a sublist with the given sum.","List: [2, 3, 4]
Integer: 8","def has_sublist_with_sum(list, n):
    for i in range(len(list) - 1):
        sum = 0
        for j in range(i + 1, len(list)):
            sum += list[j]
            if sum == n:
                return True
    
    return False

list = [2, 3, 4]
n = 8

print(has_sublist_with_sum(list, n)) # prints True"
Write a Python program that prints the nth prime number.,n=5,"def nth_prime_number(n):
    prime_numbers = [2]
    number = 3

    while len(prime_numbers) < n:
        is_prime = True
        for prime in prime_numbers:
            if number % prime == 0:
                is_prime = False
                break
        if is_prime:
            prime_numbers.append(number)
        number += 2
    return prime_numbers[-1]

print(nth_prime_number(5))"
Write a Python program to classify a given text as having positive or negative sentiment.,The customer service was fantastic but the meal was terrible.,positive
Create a Python script to detect when a song has ended.,Sample song length in seconds: 300,"import time
 
# Define a song length
song_length = 300

# Start the progress bar
progress_bar = 0
for x in range(0, song_length):
    # Update the progress bar
    progress_bar += 1
    # Sleep a second
    time.sleep(1)
    print(""Progress Bar: {}%"".format(progress_bar/song_length * 100))

# Song has ended
print(""Song Ended!"")"
Generate Python code to fetch an item from a dictionary based on a given key.,"dictionary = {
""name"": ""John"",
""age"": 40
}
key = ""name""","dictionary = {
""name"": ""John"",
""age"": 40
}
key = ""name""

for key, value in dictionary.items():
  if key == key:
    print(value)
    break"
Write a Python code to decode a JSON string.,"{
 ""name"": ""John"",
 ""age"": 30,
 ""is_married"": False
}","import json

json_string = '{""name"": ""John"", ""age"": 30, ""is_married"": false}'

data = json.loads(json_string)
name = data['name']
age = data['age']
is_married = data['is_married']

print('Name: ', name)
print('Age: ', age)
print('Is Married: ', is_married)"
Generate a python program to read a integer of length 5 digits and split them into single digits.,12345,"def split_digits(num):
    '''This function takes an integer of length 5 and return a list of single digits'''
    result = []
    while num > 0:
        result.append(num%10)
        num = num//10
    return result[::-1]

num = int(input('Please enter a number of length 5 digits: '))

if len(str(num)) == 5:
    print(split_digits(num))
else:
    print('Invalid input!')"
Construct a Python program to recursively count down from a given number?,num = 5,"def countdown(num):
    if num == 0:
        return
    else:
        print(num)
        num -= 1
        countdown(num)

countdown(5)"
Create a function to classify a given text into list of pre-defined categories.,"text = 'I'm writing a Python program now'
categories = ['Python', 'Java', 'HTML', 'C++']","text = 'I'm writing a Python program now'
categories = ['Python', 'Java', 'HTML', 'C++']

def classify(text, categories):
  for category in categories:
    if category in text:
      return category
  return ""Not found""

print(classify(text, categories))"
Generate a Python program that collects contact information from a given list of numbers.,"[917, 732, 514, 614, 461, 201]","def collect_contact_information(numbers):
    
    results = []
    
    for number in numbers:
        contact_info = {}
        contact_info[""number""] = number
        
        # collect rest of contact info from number
        # e.g. enter into database and look up address, etc.
        
        results.append(contact_info)
        
    return results"
Create an algorithm in Python to find the largest element in an unsorted list of numbers.,"[10, 5, 20, 8, 9, 12]","def find_large_element(lst):
  largest_number = lst[0]
  for i in range(1, len(lst)):
    if lst[i] > largest_number:
      largest_number = lst[i]
  return largest_number

my_list = [10, 5, 20, 8, 9, 12]
print(find_large_element(my_list)) # 20"
Create a program that implements the following pseudocode and express it in Python,"for x in range(1, 10):
    if x < 4:
        print(""Low"")
    else:
        print(""High"")","for x in range(1, 10):
    if x < 4:
        print(""Low"")
    else:
        print(""High"")"
"Write a code to detect if a given text contains the word ""python"".",This post is about programming in python.,"def contains_python(text):
    return ""python"" in text"
Create a lists of objects using Python based on a provided list of identifiers.,"Identifiers: ['a', 'b', 'c']","objects = [
    {'name': 'a', 'value': None},
    {'name': 'b', 'value': None},
    {'name': 'c', 'value': None}
]"
Write a Python program to return the greatest common divisor between two numbers.,"num1 = 15
num2 = 25","def gcd(num1, num2):
while num2 != 0:
   temp = num1
   num1 = num2
   num2 = temp % num2
return num1

print(gcd(num1,num2))"
"Write a Python program that takes a dictionary as an input, and prints the keys and values in alphabetical order.","{'a': 1, 'b': 2, 'c': 3}","def print_dict_alphabetically(d):
 sorted_dict = {k: d[k] for k in sorted(d)}
 for key, value in sorted_dict.items():
  print(key, value)

print_dict_alphabetically({'a': 1, 'b': 2, 'c': 3})"
Design an algorithm to check if a given number is prime in Python.,n = 19,"def is_prime(n):
    """"""Check if a given number is prime.""""""
    # Corner case
    if n <= 1:
        return False

    # Check for divisibility
    for i in range(2, n):
        if n % i == 0:
            return False
    # Return true if it is not divisible by any number
    return True

# Output
print(is_prime(n))"
Debug this Python function to find and correct any errors.,"def sumN(num): 
  response = 0
  for i in range(1, num + 1):
    response *= i
  return response","def sumN(num): 
  response = 0
  for i in range(1, num + 1):
    response += i
  return response"
Develop a web scraper in Python that visits a website and retrieves the contents of the web page.,The URL of the website:  https://www.example.com,"import requests

url = ""https://www.example.com""

response = requests.get(url)
if response.status_code == 200:
 html = response.content
 print(html)"
Develop an algorithm to identify the occurrence of all the languages in a given text.,"""This model works in python, but also supports JavaScript and Go.""","def get_languages(text):
   
    languages = []
    words = text.split()
 
    for word in words:
        if word == ""python"" or word == ""JavaScript"" or word == ""Go"":
            languages.append(word)
 
    return languages"
Write a function in Python that takes a list of strings and returns all unique strings from the list.,"[""one"", ""two"", ""three"", ""two"", ""four"", ""five"", ""six""]","def find_unique_strings(strings):
 
    unique_strings = []
    for s in strings:
        if s not in unique_strings:
            unique_strings.append(s)
 
    return unique_strings"
Generate Python code to perform a binary search on a given array.,"array = [1, 2, 3, 4, 5, 6, 7, 8, 9]","def binary_search(arr, item):
    start = 0
    end = len(arr)-1
    
    while start <= end:
        mid = (start + end) // 2
        guess = arr[mid]
        if guess == item:
            return mid
        else:
            if guess > item:
                end = end - 1
            else:
                start = start + 1
    return None"
Generate a Python program to generate a list comprehension of a given set or range.,"words = [""tea"", ""eat"", ""apple""]",result = [i[::-1] for i in words]
Can you generate a python program to reverse a given string?,Hello,"def reverse_string(string):
    reversed_string = """"
    for char in string:
        reversed_string = char + reversed_string
    return reversed_string

string = ""Hello""
reversed_string = reverse_string(string)
print(reversed_string)  # olleH"
Generate a Python program to filter a list of numbers and return the numbers that are divisible by 7.,"[14, 21, 28, 35, 42]","def filter_by_seven(nums):
    filtered_nums = [num for num in nums if num % 7 == 0]
    return filtered_nums

result = filter_by_seven([14, 21, 28, 35, 42])
print(result)"
Write a Python program that replaces all the occurrences of the letter ‘a’ with ‘$’ in a given string.,text = 'show me the money',"def replace_letter(text):
    result = ''
    for letter in text:
        if letter == 'a':
            result += '$'
        else:
            result += letter
    return result

text = 'show me the money'

print(replace_letter(text))"
Write a Python program to sum all the items in a list.,"list = [1,2,3,4,5]","def sum_list_items(list):
    sum = 0
    for item in list:
        sum += item
    return sum

print(sum_list_items(list))"
Write a Python program to extract the first 100 characters from a given string.,This is a test string,"def extract_first_100_chars(string):
    return string[:100]"
Create a Python program to find the maximum profit of a stock given its maximum and minimum price.,The maximum and minimum price of the stock are 12 and 9 respectively,"def getMaxProfit(maxPrice, minPrice): 
    # Calculate the maximum profit 
    return maxPrice - minPrice 
  
# Driver code 
maxPrice = 12
minPrice = 9
  
print(getMaxProfit(maxPrice, minPrice))"
Generate a code in Python for validating a given password,"Minimum length of 8 characters and must contain at least 1 uppercase letter, 1 lowercase letter, 1 special character and 1 number","import re

def validate_password(passwd):  
    Rule = re.compile(r""^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*#?&])[A-Za-z\d@$!#%*?&]{8,}$"")  
    return Rule.search(passwd)"
Modify this Python code to insert the number 5 into a list at the 5th position.,"data = [1, 2, 3, 4]","data = [1, 2, 3, 4] 

# insert element '5' at 5th position 
data.insert(4, 5) 
print(""Modified list:"") 
print(data)"
Use an if-else statement in Python to determine if a number is even or odd.,n = 7,"if n % 2 == 0:
    print(n, 'is an even number')
else:
    print(n, 'is an odd number')"
Write a Python script for finding the maximum and minimum value in a given list.,"[1,5,6,8,7]","list = [1,5,6,8,7]
min_val = min(list)
max_val = max(list)

print(""Minimum value in list is: %d""%min_val)
print(""Maximum value in list is: %d""%max_val)"
Write a Python program to print out the triangle pattern given an height n as input.,height = 4,"def print_triangle(n): 

    for i in range(n): 
        for j in range(i+1): 
            print(""*"",end="""") 
        print() 
  
n = 4
print_triangle(n)

# Output
# *
# **
# ***
# ****"
Design a function to tell if a number is even or odd using Python.,x = 5,"def isEven(x):
    if x % 2 == 0:
        return True
    else:
        return False

x = 5

if isEven(x):
    print(""It is even"")
else:
    print(""It is odd"")"
Create a Python script that takes two inputs from the user: a list of numbers and an integer. The script should loop over the input list and check if any two numbers in the list add up to the input integer.,"list = [3, 5, 10, 15]
integer = 17","list = [3, 5, 10, 15]
integer = 17

total = 0

for i in list:
 for j in list:
 total = i + j
 if total == integer:
 print(""Two numbers that add up to"", integer, ""are"", i, ""and"", j)
 break"
Create a function to reverse a string in Python.,Hello,"def reverse_string(string):
    result = """"
    for i in range(len(string) - 1, -1, -1):
        result += string[i]
    return result

reverse_string(""hello"")"
Write a Python function which takes an array as input and prints out all the even numbers in the array.,"[1, 4, 5, 8, 9, 11]","def print_even(nums):
  for num in nums:
    if num % 2 == 0:
      print(num)
      
print_even([1, 4, 5, 8, 9, 11])"
Can you construct a Python program that takes a string of words and counts the occurrences of each word?,"""This is an example of a string of words""","words = ""This is an example of a string of words"".split()

word_freq = {}
for word in words:
    if word not in word_freq:
        word_freq[word] = 1
    else:
        word_freq[word] += 1

for key, value in word_freq.items():
    print(f""{key} : {value}"")"
Create a Python program to sort and print out the elements of an array of integers.,"[17, 41, 5, 22, 54, 6, 29, 3, 13]","arr = [17, 41, 5, 22, 54, 6, 29, 3, 13]

arr.sort()

print(arr)

# Output: [3, 5, 6, 13, 17, 22, 29, 41, 54]"
Create a mapping between the two objects in Python.,"object1 = [""a"", ""b"", ""c"", ""d"", ""e""]
object2 = [""apple"", ""banana"", ""carrot"", ""date"", ""eggplant""]","objectMap = {
""a"": ""apple"",
""b"": ""banana"",
""c"": ""carrot"",
""d"": ""date"",
""e"": ""eggplant""
}"
Write a Python function that takes two lists as input and returns a new list containing the intersection of the two lists.,"[1, 2, 3, 4], [3, 4, 5, 6]","def intersection_of_lists(list1, list2):
    return [value for value in list1 if value in list2]

result = intersection_of_lists([1, 2, 3, 4], [3, 4, 5, 6])
print(result)
# [3, 4]"
Write a Python program to identify the longest line in a string.,"Sentence 1
Sentence 2
Sentence 3 (longest sentence)
Sentence 4","test_str = 'Sentence 1\nSentence 2\nSentence 3 (longest sentence)\nSentence 4'

# Get all lines in test_str into a list
str_lines = test_str.split('\n')

# Find the longest line in the list
longest_line = max(str_lines, key=len)

# Print the longest line
print(f'The longest line is: {longest_line}')"
How would you format a JSON string using Python?,"""{\""name\"":\""John Doe\"",\""age\"":30}""","import json

# Get json string
json_string = ""{\""name\"":\""John Doe\"",\""age\"":30}""

# Parse the json string
parsed_string = json.loads(json_string)

# Pretty print the parsed string
pretty_string = json.dumps(parsed_string, indent=4, sort_keys=True)

# Show output
print(pretty_string)
# Output:
{
    ""name"": ""John Doe"",
    ""age"": 30
}"
Design a code generator in Python to generate content based on the provided input.,Create a program to generate retweets to a post.,"def generate_retweets(post_id):
    retweets = []
    for _ in range(10):
        # Retrieve post from API using post_id
        post = get_post(post_id)

        # Generate a random retweet of the post
        retweet = f'RT @{post['author']}: {post['message']}'
        retweets.append(retweet)
    
    return retweets"
Generate a function in Python that takes in a dictionary (string → integer) and returns the sum of all values in the dictionary.,"my_dict = {
   ""a"": 5,
   ""b"": 10,
   ""c"": 15
}","def compute_dict_sum(input_dict):
    result = 0
    for val in input_dict.values():
        result += val
    return result

print(compute_dict_sum(my_dict))"
Design a function  in Python to count the total number of prime numbers between the two given numbers (inclusive).,"Start = 10, End = 20","def count_primes(start, end):
    count = 0
    for i in range(start, end+1):
        if is_prime(i):
            count += 1
    return count

def is_prime(num):
    for i in range(2, int(num**0.5) + 1):
        if num % i == 0:
            return False
    return True"
Create a Python program that takes a list of strings as parameters and returns a new list with the strings sorted in alphabetical order.,"[“Windows”, “MacOS”, “Unix”, “CentOS”, “RedHat”]","def sort_alphanumeric(items):
    return sorted(items, key=lambda item: item.lower())

def main():
    items = [“Windows”, “MacOS”, “Unix”, “CentOS”, “RedHat”]
    sorted_items = sort_alphanumeric(items)
    print(sorted_items)

if __name__ == “__main__”:
    main()"
Implement a program in Python to find the average of an array of length n.,"Input: [2, 4, 6, 8, 10]","def findAverage(arr):
    # Initialize sum
    sum = 0
 
    # Iterate over the array to calculate sum
    for n in arr:
        sum += n
 
    # Calculate the average and return  
    return sum/len(arr)


# Driver code
arr = [2, 4, 6, 8, 10]
print(findAverage(arr))"
Create a Python program that takes in a sentence as an input and prints out the same sentence in Pig Latin.,The quick brown fox,"def pig_latin(sentence):
 words = sentence.split()
 translated_words = []
 for word in words:
 translated_words.append(word[1:] + word[0] + ""ay"")
 return "" "".join(translated_words)
 
sentence = input(""Enter a sentence to translate: "")
print(pig_latin(sentence))"
Construct a Python program to split a string at a given character occurrence index.,"Input String: Hello World
Index: 6","def split_string(string, index):
  return string[:index] + "","" + string[index+1:]

s = ""Hello World""
index = 6

new_string = split_string(s, index)
print(new_string)

Output:
Hello,World"
Create an algorithm in Python to search an element from a given array of integers.,"arr = [3, 5, 6, 9, 11]","def searchElement(arr, element):
    for i in range(len(arr)):
        if arr[i] == element:
            return i
    return -1"
Develop a python script that extracts the titles of all articles from a given website.,www.example.com,"import requests
from bs4 import BeautifulSoup

# specify url
url = 'www.example.com'

# fetch the page
response = requests.get(url)
html = response.content

# parse page content
soup = BeautifulSoup(html)

# extract titles
titles = []
for title in soup.find_all('title'):
 titles.append(title.text)

# print titles
print(titles)"
Create a Python program to tokenize a sentence and calculate the frequency of each word in the sentence.,The quick brown fox jumps over the lazy dog,"import nltk

sentence = ""The quick brown fox jumps over the lazy dog""

words = nltk.word_tokenize(sentence)

word_freq = {}

for word in words:
 if word in word_freq:
  word_freq[word] += 1
 else:
  word_freq[word] = 1

print(word_freq)"
Design a python script to convert a list of strings to a dictionary,"my_list = [""Apple"", ""Banana"", ""Cherry""]","my_list = [""Apple"", ""Banana"", ""Cherry""]

def list_to_dict(lst):
    dictionary = dict(zip(lst, range(len(lst))))
    return dictionary
    
dictionary = list_to_dict(my_list)
print(dictionary)"
Create a Python function that takes an array of strings and finds the longest string.,"[""Hello"", ""world"", ""Hi"", ""there""]","def find_longest_string(arr):
    longest_string = """"
    for s in arr:
        if len(s) > len(longest_string):
            longest_string = s
    return longest_string

string_array = [""Hello"", ""world"", ""Hi"", ""there""]
print(find_longest_string(string_array))"
Create a Python program that converts degrees Celsius to Fahrenheit.,35,"def celsius_to_fahrenheit(celsius):
 return celsius * 9/5 + 32

celsius = 35
fahrenheit = celsius_to_fahrenheit(celsius)
print(""{} °C is {} °F"".format(celsius, fahrenheit))"
Generate a Python program to count the number of pairs with given sum x,X = 10,"def count_pairs(numbers, x):
    count = 0
    i, j = 0, len(numbers) - 1
    while i < j: 
        sum = numbers[i] + numbers[j]
        if sum == x: 
            count += 1
            i += 1
        elif sum < x: 
            i += 1 
        else: 
            j -= 1
    return count"
Write a python script to remove all occurrences of a particular string from a given text.,"Text: “I like cats, cats and cats”, String: “cats”","text = ""I like cats, cats and cats""
string = ""cats""

# Replace all occurrences of the string with an empty string
modified_text = text.replace(string, """")
print(modified_text)
# Output: ""I like , and """
Create a python program to filter a list of numbers to include only the prime numbers,"[2, 3, 7, 11, 12, 15]","def isPrime(n): 
    for i in range(2,n): 
        if n % i == 0: 
            return False
    return True

numbers = [2, 3, 7, 11, 12, 15] 
primes = filter(isPrime, numbers)
print('Prime numbers are:') 
print(list(primes))"
Suggest a completion for the following Python code to check if a given number is an Armstrong number.,def is_armstrong_number(num):,"def is_armstrong_number(num):
  order = len(str(num))
  sum = 0
  temp = num
  while temp > 0:
    digit = temp % 10
    sum += digit ** order
    temp //= 10
  if num == sum:
    return True  
  else:
    return False"
"Write a Python function that given a list of strings and an integer n, returns the strings that have a length greater than n.","['Cat', 'Dog', 'Rabbit', 'Elephant'], n = 5","def filter_strings(strings, n):
    return [s for s in strings if len(s) > n]"
Generate a script that parses a JSON string and prints out the corresponding Python dictionary.,"{""name"": ""John"", ""age"": 30, ""city"": ""New York""}","import json

json_string = '{""name"": ""John"", ""age"": 30, ""city"": ""New York""}'
parsed_json = json.loads(json_string)

print(parsed_json)"
Create a program in Python that takes a number of words as input and prints out a poem.,"words: 'love', 'wings', 'stars', 'moon', 'ocean'","words = ['love', 'wings', 'stars', 'moon', 'ocean']
 
poem = """"
 
for word in words:
    poem += f""The {word} so strong and bright\nTurns shadows into light\n""

poem += f""The universe so vast and wide\nSurrounds us all with its pride\n""

print(poem)"
Write a Python script that sorts an array of strings in alphabetical order case insensitively.,"[""Apple"", ""Banana"", ""orange""]","def sort_array(arr): 
    arr.sort(key = lambda x: x.lower()) 
    return arr

# driver code 
arr = [""Apple"", ""Banana"", ""orange""] 
print(sort_array(arr)) 
# Output: ['Apple', 'Banana', 'orange']"
Create an algorithm in Python 3 to find the largest number in a list.,"Input list: [1, 7, 3, 4, 9, 2]","def find_largest(list): 
    n = len(list) 
    max = list[0] 
    for i in range(1,n): 
        if list[i] > max: 
            max = list[i] 
    return max 

list = [1, 7, 3, 4, 9, 2]
largest_number = find_largest(list) 
print(""Largest number in the given list is:"", largest_number)"
Convert the given code from one programming language to another.,"//JavaScript code
function printHello(){
    console.log(""Hello World!"");
}","#Python code
def printHello():
    print(""Hello World!"")"
Create a Python program to remove punctuation from a block of text.,"Text: Wel,come to the wo,rld of 'programming'.","import string

def remove_punctuation(text):
    return text.translate(str.maketrans("""","""", string.punctuation))

text = ""Wel,come to the wo,rld of 'programming'.""
print(remove_punctuation(text))
Output:
Welcome to the world of programming"
Generate a program in Python for summing up the elements of an array.,"[1, 4, 6]","def sumArrayElements(arr):
    total = 0
    for num in arr:
        total += num
    return total

arr = [1, 4, 6]
result = sumArrayElements(arr)
print(result)"
Create a program in Python to compute and print the factorial of a given number.,Number: 5,"def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n-1)

num = 5

print(""The factorial of"", num, ""is"", factorial(num))"
Create a Python program to search a list for the maximum value.,"list = [1, 2, 3, 9, 8, 4]","def findMax(list): 
    max = list[0] 
    for i in range(1, len(list)): 
        if list[i] > max: 
            max = list[i] 
    return max

list = [1, 2, 3, 9, 8, 4] 
print(""The maximum element in the list is:"", findMax(list))"
Write a Python function to create a new list filled with the divided result of a given list and a specific number.,"numbers = [2, 8, 10]
divisor = 2","def divide_list(numbers, divisor):
 return [i/divisor for i in numbers]"
Write an algorithm in Python to sort a given list of strings in alphabetical order.,"[‘cat’, ‘dog’, ‘apple’, ‘zebra’]","def sort_string_list(strings):
  strings.sort()
  return strings

my_list = ['cat', 'dog', 'apple', 'zebra']
print(sort_string_list(my_list))"
Edit the following code to apply the insert sorting algorithm in Python.,"def insertion_sort(list):
    pass","def insertion_sort(list):
    for i in range(1, len(list)):
        key = list[i]
        j = i - 1
        while j >= 0 and list[j] > key:
            list[j + 1] = list[j]
            j = j - 1
        list[j + 1] = key"
Write a conditional statement in Python that checks if two lists have the same items.,"list1 = [9,8,7]
list2 = [7,8,9]","list1 = [9,8,7]
list2 = [7,8,9]

if list1 == list2:
    print(""The lists have the same items."")
else:
    print(""The lists do not have the same items."")"
Implement a sorting algorithm in Python that sorts a list of strings in descending order of length.,"arr = [""Apple"", ""Banana"", ""Cat"", ""Elephant""]","def sort_by_length(arr): 
    for i in range(len(arr)):
        for j in range(i + 1, len(arr)):
            if len(arr[i]) < len(arr[j]): 
                arr[i], arr[j] = arr[j], arr[i] 
    return arr
  
print(sort_by_length(arr))"
Write a Python program to compute the average of the numbers in the list.,"numbers = [1, 3, 5, 7, 9]","def compute_average(numbers):
sum = 0
for num in numbers:
 sum += num
return sum/len(numbers)

numbers = [1, 3, 5, 7, 9]
average = compute_average(numbers)
print(""Average is "" + str(average))"
Create a program in Python to calculate the average word length in a given title.,"""The Cat in the Hat""","def calculate_average_word_length(title):
  words = title.split()
  total_length = 0
  for word in words:
    total_length += len(word)
  return total_length / len(words)

result = calculate_average_word_length(""The Cat in the Hat"")
print(result)"
Generate a code snippet to add two numbers in Python.,"x = 2, y = 4","result = x + y
print(result) # Prints 6"
Create a program that makes an HTTP request using Python and parses the response.,Request URL: https://www.example.com/userdata?query=example,"import requests

# make HTTP request
r = requests.get(""https://www.example.com/userdata?query=example"")
if r.status_code == 200:
    # parse response
    data = r.json()
    # do something with the data
    # ..."
Create an application in Python that can encode a string into Base64.,The quick brown fox,"import base64

def encode_base64(string):
 encoded_string = base64.b64encode(string.encode('utf-8'))
 return encoded_string

string = ""The quick brown fox""
encoded_string = encode_base64(string)
print(encoded_string)
# Output: VGhlIHF1aWNrIGJyb3duIGZveA=="
Design a function in Python to find an element in a given list.,"[3, 2, 4, 5, 6, 7], 4","def findElement(arr, element):
    for i in range(0, len(arr)):
        if arr[i] == element:
            return True
    return False"
Create a Python program which prints the calendar for a given year.,year = 2019,"import calendar

c = calendar.TextCalendar(calendar.SUNDAY)
str = c.formatyear(2019, 2, 1, 1, 3)
print (str)"
Develop a python code to print a dictionary’s key-value pairs in sorted order of keys.,"{'a': 5, 'c': 10, 'b': 4}","my_dict = {'a': 5, 'c': 10, 'b': 4}

for key in sorted(my_dict):
    print(key, my_dict[key])

# Output:
# a 5
# b 4
# c 10"
Create an algorithm in Python that takes a string and returns a new string with all the consonants replaced with underscores.,"""Hello World""","def replace_consonants(string): 
    new_str = """" 
  
    VOWELS = (""a"", ""e"", ""i"", ""o"", ""u"") 
  
    for letter in string: 
        if letter.lower() in VOWELS: 
            new_str += letter 
        else: 
            new_str += ""_""
  
    return new_str
  
print(replace_consonants(""Hello World""))"
Suggest an edit to the following Python program to improve its time complexity.,"my_list = [1, 2, 3, 4, 5, 6]
for i in range(len(my_list)-1):
        for j in range(1, len(my_list)):
                if my_list[i] < my_list[j]:
                        temp = my_list[i]
                        my_list[i] = my_list[j]
                        my_list[j] = temp",my_list.sort(reverse=True)
Optimize a function in Python.,"def sum_of_list(lst): 
    sum = 0
    for n in lst: 
        sum += n 
    return sum","def sum_of_list(lst): 
    return sum(lst)"
Build a program in Python that calculates the area of a triangle.,"base = 10
height = 15","def calculate_triangle_area(base, height):
    return 0.5 * base * height

base = 10
height = 15

area = calculate_triangle_area(base, height)
print('Area of the triangle: ', area)"
Create a Python function that takes a single argument and prints the Fibonacci sequence from 0 to the argument value.,Argument value: 9,"def print_fibonacci_sequence(num):
 a = 0
 b = 1
 
 print(a, end="" "")
 print(b, end="" "") 
 
 for i in range(2,num):
  c = a + b
  a = b
  b = c
  print(c, end="" "")

print_fibonacci_sequence(9) # prints 0 1 1 2 3 5 8 13 21"
Modify the following Python code to use a loop instead of recursion.,"def GCD(x, y):
if y == 0:
 return x
 else:
 return GCD(y, x%y)","def GCD(x, y):
    while(y != 0):
        temp = y
        y = x % y
        x = temp
    return x"
Write a Python program that takes a string input representing an arithmetic expression and calculates the result.,"""(20 * 8) + (2 * 4)""","def evaluate(expression):
    try:
        return eval(expression)
    except SyntaxError:
        print('Invalid expression.')

print(evaluate(""(20 * 8) + (2 * 4)""))

Output: 164.0"
Create an object in Python that stores an employee's name and age.,"""John"" 28","employee = {
 'name': 'John',
 'age': 28
}"
Extend a Python class to create another class with similar behavior.,"class Vehicle:
	def __init__(self):
		self.speed = 0
		self.odometer = 0
		self.time = 0","class Motorcycle(Vehicle):
    def __init__(self):
        super().__init__()
        self.num_wheels = 2
        self.type = 'motorcycle'

    def accelerate(self):
        self.speed += 10

    def brake(self):
        self.speed = max(self.speed - 7, 0)"
Create a Python function to normalize a list of strings by converting each string to lowercase and stripping any leading and trailing whitespaces.,"['  this  ', 'Is A TEST', 'WoRd']","def normalize(words):
    """"""Normalizes a list of strings by converting each to lowercase and stripping any leading or trailing whitespaces.""""""
    return [word.lower().strip() for word in words]"
Create a Python function that takes a list and an integer as inputs and returns a new list with every item in the original list multiplied by the integer.,"list = [3, 2, 1]
integer = 5","def multiply_list(lst, i):
  return [j * i for j in lst]

result = multiply_list(list, integer)
print(result) # [15, 10, 5]"
Edit the following Python code to reverse the list.,"list1 = [1,2,3,4,5,6]","list1 = [1,2,3,4,5,6]

# Reversing the list
list1 = list1[::-1] # Output: [6, 5, 4, 3, 2, 1]"
Create a Python program that takes an input of numbers and returns the maximum number.,"nums = [3, 6, 9, -3]","def find_max(nums):
    max_num = nums[0]
    for num in nums[1:]:
        if num > max_num:
            max_num = num 
    return max_num

max_num = find_max(nums)
print(max_num) # 9"
Create a function in Python that takes two strings and checks if they are anagrams of each other.,"""apple"", ""pleap""","def is_anagram(str1, str2): 
    if len(str1)!= len(str2): 
        return False
    first_list = list(str1.lower())
    second_list = list(str2.lower())
    first_list.sort()
    second_list.sort()
    return first_list == second_list

print(is_anagram(""apple"",""pleap""))"
Write a loop in Python to traverse a given list of numbers in reverse order,"[1, 2, 3, 4, 5]","for i in range(len(numbers)-1, -1, -1):
    print(numbers[i])"
Write a Python program to calculate the roots of a quadratic equation.,"-2, 5, -3","import math

def quadratic_roots(a, b, c):
    d = (b ** 2) - (4 * a * c) 
    if d < 0:
        return None  # No real roots
    elif d == 0:
        return -b / (2 * a)  # One root 
    else:
        x1 = (-b + math.sqrt(d)) / (2 * a) 
        x2 = (-b - math.sqrt(d)) / (2 * a) 
        return (x1, x2)  # Two roots

print(quadratic_roots(-2, 5, -3))"
Construct a Python program that will search for a given word in a web page and return the number of occurrences.,"word=""Python""
url=""www.example.com""","import requests

url = ""www.example.com""
word = ""Python""

html_content = requests.get(url).text

words = html_content.split()

occurrences = 0

for w in words:
    if w == word:
        occurrences += 1

print(""Found %d occurrences of '%s'"" % (occurrences, word))"
Write a Python program to find the common elements between two lists,"list1: [2, 4, 6, 8]
list2: [4, 6, 10, 12]","def common_elements(list1, list2):
    # Make a copy of list 
    list_copy = list2[:] 

    # Iterate the original list  
    for item in list1: 
        if item in list_copy: 
            list_copy.remove(item) 

    # Return the common elements  
    return list(set(list1) & set(list2))"
Provide a python program that computes the maximum value from a given set of values,"values = [13, 33, 45, 3, 5, 17, 19, 21]","# Create a list for our values
values = [13, 33, 45, 3, 5, 17, 19, 21]

# Initialize maximum value
max_val = 0

# Iterate over the list
for val in values:
    # Compare with current maximum value
    if val > max_val:
        # Update maximum value
        max_val = val

# Print the maximum value
print(""Maximum value:"", max_val)"
Generate a code to calculate the mean absolute difference of items in a list in Python.,"my_list = [1, 2, 3, 4, 5]","def mean_absolute_difference(my_list):
    diff = 0
    for i in range(len(my_list) - 1):
        diff += abs(my_list[i] - my_list[i + 1])
    return diff / (len(my_list) - 1)

if __name__ == ""__main__"":
    print(mean_absolute_difference(my_list))"
"Write a Python program that combines two lists, eliminating duplicate entries.","list_1 = [1, 2, 3]
list_2 = [2, 3, 4]","list_1 = [1, 2, 3]
list_2 = [2, 3, 4]

final_list = []

for item in list_1:
 if item not in final_list:
 final_list.append(item)

for item in list_2:
 if item not in final_list:
 final_list.append(item)

print(final_list)"
Generate an algorithm in Python to count the number of inversions in an array.,"[3, 5, 2, 1, 4]","def count_inversions(arr):
  inv_count = 0
  for i in range(len(arr)):
    for j in range(i + 1, len(arr)):
      if arr[i] > arr[j]:
        inv_count += 1
  return inv_count

arr = [3, 5, 2, 1, 4] 
print(count_inversions(arr))"
Create a Python program to check if a given string can be formed from a given set of words.,"String: ""justdoit""
Set of words: [""just"", ""do"", ""it""]","def word_set(string, words):
    words_set = set(words)
    string_set = set(string)
    
    if string_set.issubset(words_set):
        return True 
    else:
        return False

word_set(""justdoit"", [""just"", ""do"", ""it""])"
Generate a Python program to generate random passwords of length n.,Length: 8,"import string
import random
 
def random_password(length):
 chars = string.ascii_uppercase + string.ascii_lowercase + string.digits
 random_password = ''.join(random.choice(chars) for i in range(length))
 return random_password
  
length = 8
print(random_password(length))"
Generate a Python program which multiplies all the numbers between two given numbers.,"start: 2
end: 10","def multiply_between(start, end):
    result = 1
    for i in range(start, end + 1):
        result *= i
    return result

print(multiply_between(2, 10))"
Generate a program in Python to evaluate the following expression: (x*x) − (𝑦*𝑦),"x=10
y=5","x = 10
y = 5

result = (x*x) - (y*y)
print(result)"
Write a query to select the first four characters of a given string.,String: python_program,"SELECT SUBSTRING(string, 1, 4) 
FROM table 
WHERE string = 'python_program'"
Develop a Python program that takes two lists of numbers and returns all the common elements contained in both lists?,"list1 = [1, 2, 3, 4], list2 = [2, 3, 4, 5]","def find_common_elements(list1, list2):
    common_elements = []
    for element in list1:
        if element in list2:
            common_elements.append(element)
    
    return common_elements

list1 = [1, 2, 3, 4]
list2 = [2, 3, 4, 5]

result = find_common_elements(list1, list2)
print(result) # [2, 3, 4]"
Create a data structure in Python to store employee names and their corresponding salaries.,"Michael $45000, Andrew $55000, Mark $70000","employee_data = {
    ""Michael"": 45000,
    ""Andrew"": 55000,
    ""Mark"": 70000
}"
Generate a procedure in the form of a Python script to automate the process of downloading a list of websites.,"website_list: [""www.example.com"", ""www.google.com"", ""www.facebook.com""]","import requests

for website in website_list:
    response = requests.get(website)
    with open(website.split('.')[0]+'.html', 'wb') as file:
        file.write(response.content)"
Generate a python program to normalize a list of values in the range 0 and 1,"[-1, 0, 1, 2]","def normalize_list(input_list):
    min_val = min(input_list)
    max_val = max(input_list)
    output_list = []
    for value in input_list:
        normalized_value = (value - min_val) / (max_val - min_val)
        output_list.append(normalized_value)
    return output_list"
Create a python script to print the following output with the help of list and dictionary.,"{
    ""Name"": ""Harry"",
    ""Age"": 23,
    ""Country"": ""India""
}","name = {
    ""Harry""
}
age = {
    23
}
country = {
    ""India""
}

data_list = [name, age, country]

for item in data_list:
    print(item)"
Create a Python program to crop a list to a specific length,"list = [1, 2, 3, 4, 5, 6], length = 4","def crop_list(input_list, length):
    output_list = []
    for i in range(length):
        output_list.append(input_list[i])
    return output_list

my_list = [1, 2, 3, 4, 5, 6]
length = 4
result = crop_list(my_list, length)
print(result)"
Translate the following pseudo code into a Python program.,"for i in range(0, n-1):
  j = i + 1
  while j < n:
    swap(list[i],list[j])
    j = j + 1","def swap(list, i, j):
  temp = list[i]
  list[i] = list[j]
  list[j] = temp

def permutations(list, n):
  for i in range(0, n-1):
    j = i + 1
    while j < n:
      swap(list,i,j)
      j = j + 1

list = [10, 11, 12]
n = len(list)
permutations(list, n)"
Create a program in Python that has the following purpose: To determine if a given string is a palindrome,"""radar""","def check_palindrome(inputStr): 
     
    revStr = reversed(inputStr)
  
    if list(inputStr) == list(revStr): 
        return True
    else: 
        return False
      
userInput = ""radar""

if(check_palindrome(userInput)): 
    print(""Yes"") 
else: 
    print(""No"")"
Create a program in Python to edit a given text by removing unwanted characters.,"text = ""Hello, World!""","def remove_unwanted_chars(text):
    return ''.join(c for c in text if c.isalnum() or c in [' ', ','])

text = ""Hello, World!""
print(""Text after removing unwanted characters:"", remove_unwanted_chars(text))"
Create a function in Python that takes a list of strings and count all occurrences of a particular word in the list.,"[""how"", ""how"", ""are"", ""you"", ""how"", ""are"", ""you""], ""how""","def countOccurrences(words, target):
    count = 0
    for word in words:
        if word == target:
            count += 1
    
    return count

print(countOccurrences([""how"", ""how"", ""are"", ""you"", ""how"", ""are"", ""you""], ""how""))"
Generate python code to clean up a string.,This string includes non-letter characters. This includes %$#& etc.,"def clean_string(string):
    excluded_characters = ""*&#$@!""
    cleaned_string = ''
    for character in string:
        if character not in excluded_characters:
            cleaned_string += character
    return cleaned_string"
Create an application in Python which will take an array of numbers and returns the median.,"[3, 4, 9, 6, 5]","def get_median(arr):
 arr.sort()
 n = len(arr)
 if n % 2 == 0:
 return (arr[n//2] + arr[n//2 - 1])/2
 else:
 return arr[n//2]

if name == ""main"":
 arr = [3, 4, 9, 6, 5]
 print(get_median(arr)) # Output -> 5.5"
Compose a Python program for finding the median value of an unsorted array.,"[4, 5, 6, 7, 8, 1, 2]","def median(arr):
    # Sort the array
    arr.sort()

    # Calculate length
    n = len(arr)

    # Check if n is even
    if n % 2 == 0:
        median1 = arr[n // 2]
        median2 = arr[n // 2 - 1]
        median = (median1 + median2) / 2
    else:
        median = arr[n // 2]

    return median

arr = [4, 5, 6, 7, 8, 1, 2]
result = median(arr)
print(result) # 4.5"
Find the maximum of three numbers using a Python function.,"a = 10, b = 5, c = 20","def maximumOfThreeNumbers(a, b, c):
   if (a >= b) and (a >= c):
     return a
   elif (b >= a) and (b >= c):
     return b
   else:
     return c

maximum = maximumOfThreeNumbers(10, 5, 20)
print(""The maximum number is:"", maximum)"
Create an algorithm in Python that takes a list and returns the sum of the list items.,"[1, 2, 3]","def listSum(lst):
    s = 0
    for i in range (len(lst)):
        s += lst[i]
    return s

print (listSum([1,2,3])) # 6"
Create a Python function to convert a list of strings into a dictionary of the form {string: count}.,"myList = [‘a’, ‘a’, ‘b’, ‘c’]","def list_to_dict(myList):
 dict = {}
 for val in myList:
  if val in dict:
   dict[val] += 1
  else:
   dict[val] = 1
 return dict

myList = ['a', 'a', 'b', 'c']
print(list_to_dict(myList))

# Output: 
# {'a': 2, 'b': 1, 'c': 1}"
Create an algorithm in Python that takes a list of numbers and returns a new list with only the even numbers.,"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","def get_even_numbers(nums_list):
  even_numbers = []
  for num in nums_list:
    if num % 2 == 0:
      even_numbers.append(num)
  return even_numbers

nums_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
even_numbers = get_even_numbers(nums_list)
print(even_number)"
Can you write a python program to detect whether the given sentence contains a palindrome or not?,"Sentence: ""Anna went to vote in the election.""","sentence = ""Anna went to vote in the election.""

def is_palindrome(sentence):
    clean_sentence = sentence.replace(' ', '').lower()
    reversed_sentence = clean_sentence[::-1]
    return clean_sentence == reversed_sentence

print is_palindrome(sentence)"
Design a program in Python that takes in a string and finds the characters that appear only once.,"String = ""This is a test""","def findUniqueChars(str):
    result = """"
    for char in str:
        if str.count(char) == 1:
            result += char

    return result 

result = findUniqueChars(""This is a test"")
print(result)"
Generate a function to add two matrices of the same size in Python.,"A = [[1,2],[3,4]] 
B = [[5,6],[7,8]]","def add_matrix(A, B):
    """"""Add two matrices of the same size.""""""
    n = len(A)
    m = len(A[0])
    result = [[0 for _ in range(m)] for _ in range(n)] 
    for i in range(n):
        for j in range(m):
            result[i][j] = A[i][j] + B[i][j]
            
    return result

# Output
print(add_matrix(A,B))"
Create a Python function that takes in one integer argument and returns an integer with the absolute value.,number = -3,"def getAbsoluteValue(number):
    if (number < 0):
        return number * -1
    else:
        return number

print(getAbsoluteValue(-3)) # Outputs 3"
Write a Python program to delete all characters in a string that matches a given pattern.,"string = ""The qick brown fox jumps over the lazy dog.""
pattern = ""q[a-z]ck""","import re
def delete_pattern_characters(string, pattern):
 return re.sub(pattern, """", string)"
Create a script in Python to print the squares of all numbers in the given list.,"[1, 2, 3, 4, 5]","for n in [1, 2, 3, 4, 5]:
 print(n**2)"
Create a Python function that takes a list and returns a list of the unique elements of that list.,"myList = [1, 2, 3, 4, 5, 1, 2]","def uniqueList(myList):
    uniqueList = []
    for el in myList:
        if el not in uniqueList:
            uniqueList.append(el)
    return uniqueList"
Develop a Python program to generate the Fibonacci sequence of a given number of terms.,terms = 10,"def Fibonacci(terms): 
  Fibonacci_num = [0, 1] 
  a = 0
  b = 1
  for i in range(2,terms): 
    c = a + b
    Fibonacci_num.append(c)
    a = b
    b = c
  return Fibonacci_num 
  
nterms = 10
print(""Fibonacci sequence:"")
print(Fibonacci(nterms))"
Build a function in Python to compute the Fibonacci numbers up to a given maximum.,maximum = 15,"def fibonacciGenerator(maximum):
    i1, i2 = 0, 1
    while i1 < maximum:
        yield i1
        i1, i2 = i2, i1 + i2

fibonacci = list(fibonacciGenerator(15))
print(fibonacci)"
Create a function to normalize a given string using Python.,"""Hello, World!""","def normalize_string(s):
    return s.lower().strip()"
Transform the following Python function into a list comprehension.,"numbers = [1, 2, 3, 4, 5]
result = []
for num in numbers:
    result.append(num * 2)","numbers = [1, 2, 3, 4, 5]
result = [num * 2 for num in numbers]"
Write a Python code that accepts an input string and returns a list of its capitalized words.,"""python is powerful""","string = ""python is powerful""
list_words = string.split()
output = [i.capitalize() for i in list_words]"
Develop a Python Webscraper for collecting data from a given URL.,Example URL: http://example.com/data,"import requests
from bs4 import BeautifulSoup

URL = 'http://example.com/data'

# Send a request to the URL
page = requests.get(URL)

# Parse the page
soup = BeautifulSoup(page.content, 'html.parser')

# Get the data
data = soup.find_all('div', class_='data')

# Print the data
for item in data:
 print(item.text)"
Create a Python function that takes in an array-like data structure and returns the difference of its maximum and minimum values.,"[100, 45, 56, 30, 90, 100]","def get_difference(arr):
    return max(arr) - min(arr)

input_arr = [100, 45, 56, 30, 90, 100]
difference = get_difference(input_arr)
print(difference)  # Output: 70"
Write a Python program to calculate the sum of two numbers (input in separate lines) and print it.,"2
3","num1 = int(input())
num2 = int(input())
sum_of_nums
print(sum_of_nums)"
Optimize a Python function to compute the maximum value in a list of integers.,"list = [1, 3, 2, 5, 6, 4]","def get_max(list): 
  
  # Initialize the maximum
  max_v = list[0]

  # Compute the maximum
  for i in range(1, len(list)):
    if list[i] > max_v:
      max_v = list[i]

  # Return the maximum
  return max_v"
Generate a structured array from a given dictionary in Python.,"dictionary = {
  ""name"": ""John"",
  ""age"": 24,
  ""nationality"": ""American""
}","import numpy as np
data = np.array(list(dictionary.values()),
      dtype=[('name','U20'),('age','i4'),('nationality','U10')]
)"
Generate a two-dimensional array of ones using Python.,"r = 4, c = 5","import numpy as np 

arr = np.ones((r,c))"
Modify the given Python code to be more efficient.,"def my_function(N):
    list1 = []
    for i in range(N):
        list2 = []
        for j in range(N):
            list2.append(i+j)
        list1.append(list2)
    return","def my_function(N):
    list1 = [[i+j for j in range(N)] for i in range(N)]
    return list1"
"Convert the following Algorithm into Python code.

Input: two numbers

Algorithm:
1. Check if the two numbers are equal.
2. If true, return 0.
3. Else check the which is higher.
4. Return 1 if the first number is higher than the second one.
5. Return -1 otherwise.","num1 : 5
num2 : 10","def compare_numbers(num1, num2):
 if num1 == num2:
  return 0
 elif num1 > num2:
  return 1
 else:
  return -1

num1 = 5
num2 = 10
result = compare_numbers(num1, num2)

print(result)"
Write a Python function that takes a list of words and removes all words that are not equal to the given word.,"word = 'Hello'
words = ['Hi', 'there', 'Hello', 'Goodbye']","def remove_words(word, words):
    return [w for w in words if w == word]"
Generate a Python script for sorting a list in ascending order.,"[3, 4, 8, 5, 10]","def sortList(list): 
    list.sort() 
    return list
    
unsorted_list = [3, 4, 8, 5, 10]
sorted_list = sortList(unsorted_list)

print(""Sorted list:"", sorted_list)"
Write a Python program to print a calendar of the given month and year,"month = 11
year = 2020","import calendar

c = calendar.TextCalendar(calendar.SUNDAY)
str = c.formatmonth(year, month)
print(str)"
Design an API in Python to compare two strings and provide an output/ match score.,"String1 = ""Hello World""
String2 = ""Hello Everyone""","import difflib

def compare_strings(string1, string2):
    # Convert strings to lowercase
    string1 = string1.lower()
    string2 = string2.lower()

    # Compute match score
    score = difflib.SequenceMatcher(None, string1, string2).ratio()

    # Return the match score
    return score"
"Write a python program to clean the text by removing extra spaces, punctuations and other special characters.",Hello  World!!!,"def remove_special_characters(text):
    cleaned_text = ''
    for char in text:
        if char.isalnum():
            cleaned_text = cleaned_text + char
    return cleaned_text

print(remove_special_characters('Hello  World!!!')) # Output = HelloWorld"
Create a Python code snippet to convert a given JSON string into a Python dictionary.,"'{""name"": ""John"", ""age"": 30, ""city"": ""New York""}'","import json

json_string = '{""name"": ""John"", ""age"": 30, ""city"": ""New York""}'
python_dict = json.loads(json_string)

print(python_dict)"
Create a for loop in python to search for a word in a given list.,"The list is ['cat', 'dog', 'bird', 'tiger']","def find_word(my_list, word):
    for i in my_list:
        if i == word:
            return True
    return False"
Create a python program to filter a list of items by a condition,"Given a list of numbers example: [1,2,3,4,5] filter for items thats greater than or equal to 3.","def filter_list(list_input):
    filtered_list = [i for i in list_input if i >= 3]
    return filtered_list

list_input = [1,2,3,4,5]
filtered_list = filter_list(list_input)
print(filtered_list) # [3, 4, 5]"
Write a Python program to find the smallest number using the given array of numbers.,"[13, 45, 7, 23]","def smallest_number(arr):
    min_number = arr[0]
    for num in arr[1:]:
        if num < min_number:
            min_number = num
    return min_number"
Create a Python program that counts the number of occurrences of a character in a string,"String = 'Hello World', Character = 'o'","def count_char(string, char):
    count = 0
    for c in string:
        if c == char:
            count += 1
    return count"
Optimize a piece of Python code that enumerates all substrings of a string.,"string = ""Supercalifragilisticexpialidocious""","def enumerate_substrings(string):
    substrings = set()
    for i in range(len(string)):
        for j in range(i, len(string)):
            substrings.add(string[i:j+1])
    return substrings

string = ""Supercalifragilisticexpialidocious""
substrings = enumerate_substrings(string)
print(substrings)"
Optimize the following Python code for calculating the square of a number.,"def calculateSquare(x):
    return x * x","def calculateSquare(x):
    return x ** 2"
Make a program in Python to calculate the square of a number when the number is given as an input.,5,"num = int(input('Enter a number: '))
square = num**2
print(f'Square of {num} is {square}')"
Convert an existing function from Python 3 to Python 2.,"def check_anagram(string1, string2):
    if(sorted(string1) == sorted(string2)):
        return True
    else:
        return False","def check_anagram(string1, string2):
    if(sorted(list(string1)) == sorted(list(string2))):
        return True
    else:
        return False"
Create a Python function that takes in two strings and returns True if they are anagrams (they contain the same letters).,"string1 = ""pizza""
string2 = ""appaiz""","def isAnagram(string1, string2):
 s1 = sorted(string1.lower())
 s2 = sorted(string2.lower())

 if s1 == s2:
 return True
 else:
 return False

string1 = ""pizza"";
string2 = ""appaiz"";

isAnagram(string1, string2); // True"
Write a Python program to check an array if it contains consecutive integers.,"[2, 3, 4, 5, 6]","def check_array_for_consecutive(arr):
    arr.sort()
    for i in range(len(arr)-1):
        if arr[i+1] - arr[i] != 1:
            return False
    return True

arr = [2, 3, 4, 5, 6]
print(check_array_for_consecutive(arr))"
Write a Python function make_float that converts a given string argument to a float.,"""25.42""","def make_float(string):
  return float(string)"
Modify the the following python program so that it can be run in Python 3,"words = raw_input(""Enter words:"")
print words","words = input(""Enter words:"")
print(words)"
Create a Python script that checks whether a given word is a palindrome.,"""racecar""","def is_palindrome(word):
  rev_word = word[::-1]
  if rev_word == word:
    return True
  else:
    return False
  
word = ""racecar""
print(is_palindrome(word)) # True"
Convert the following JSON object to Python dictionary.,"{""name"": ""John"", ""age"": ""25""}","import json

def convert_json_to_dict(json_object):
    return json.loads(json_object)"
Insert missing keyword in this Python statement.,for i in range():,for i in range(10):
Create a function in Python that takes in a list and sorts it in ascending order.,"[3, 5, 1, 2, 9]","def sortList(list):
 list.sort()
 return list

print(sortList([3, 5, 1, 2, 9])) # Output: [1, 2, 3, 5, 9]"
Create a function in Python to produce a ``new_list`` which contains substring elements from the given ``list``,"list = [""apple"",""banana"",""orange"",""carrot""]","def produce_new_list(list):
    '''This function will return a new list containing substrings from the given list'''
    new_list = []

    for item in list:
        for i in range(0, len(item)):
            new_list.append(item[0:i+1])  

    return new_list"
Optimize the following code and provide an algorithm to solve it in Python.,"def fibonacci(n):
    if n <= 1:
        return n
    return fibonacci(n-1) + fibonacci(n-2)","def fibonacci(n):
    # Store the Fibonacci numbers in an array 
    a = [0] * (n + 1)
    
    # Base cases 
    a[1] = 1
    for i in range(2, n + 1):
        a[i] = a[i - 1] + a[i - 2]
 
    return a[n]"
Generate the Python code that calculates the numbers of characters in a given string.,"""Hello, World!""","myString = ""Hello, World!""

charCount = 0
for char in myString:
    charCount += 1
    
print(""Number of characters:"", charCount)"
Write a Python program to clean a given dataset for an AI system.,"Dataset:

{
   ""name"": ""John"",
   ""age"": 50,
   ""height"": ""180 cm"",
   ""weight"": ""75 kg""
}","def clean_dataset(dataset):
 cleaned_dataset = dataset.copy()
 cleaned_dataset['age'] = int(dataset['age'])
 cleaned_dataset['height'] = float(dataset['height'].split(' cm')[0])
 cleaned_dataset['weight'] = float(dataset['weight'].split(' kg')[0])
 return cleaned_dataset"
Write an algorithm in Python to detect the monotonic increasing pattern in a given array.,"[2, 3, 4, 5, 6, 7, 8, 1]","def increasingPattern(arr):
	status = False
	check = arr[0]
	for i in range(1,len(arr)): 
		if check < arr[i]:
			check = arr[i]
			status = True
		else:
			status = False
			break
	return status


# Test case
arr = [2, 3, 4, 5, 6, 7, 8, 1]
print(increasingPattern(arr))  # Output: False"
Generate a Python program that automatically generates bar charts for given data,"[1, 2, 3, 6, 5, 4, 7]","import matplotlib.pyplot as plt 
 
# Data to plot
data = [1, 2, 3, 6, 5, 4, 7]
 
# Create the graph object
plt.bar(range(len(data)), data, align='center')
 
# Label the graph
plt.xticks(range(len(data)), range(1, len(data)+1))
plt.xlabel('x')
plt.ylabel('y')
plt.title('Bar Graph')
 
# Display the graph
plt.show()"
Write a Python function to sort a dictionary of string keys by their length.,"d = {""three"": 3, ""four"": 4, ""five"": 5, ""one"": 1, ""two"": 2}","def sort_by_length(d):
    sorted_d = {}
    keys_list = list(d.keys())
    keys_list.sort(key=len)
 
    for key in keys_list:
        sorted_d[key] = d[key]
 
    return sorted_d"
Create a script in Python to classify a given array of integers into even and odd numbers.,"[1, 2, 3, 4, 5]","def classify(arr):
    even = []
    odd = []
    for x in arr:
        if x % 2 == 0:
            even.append(x)
        else:
            odd.append(x)
    return even, odd

even, odd = classify([1, 2, 3, 4, 5])
print(""Even numbers: "", even)
print(""Odd numbers: "", odd)"
Optimize a given Python code snippet such that the running time is reduced.,"for x in range(1, 1000):
    for y in range(1, 1000):
        if x*y == 10:
            print(x,y)","for x in range(1, 11):
    y = 10//x
    if x*y == 10:
        print(x, y)"
Create an Elasticsearch algorithm to search for documents based on specific criteria.,Search for documents containing the term 'Python' in the body field.,"GET products/_search
{
 ""query"": {
  ""term"": {
   ""body"": ""Python""
  }
 }
}"
Write some Python code to detect bias in text using the Gender Bias Detection software?,The software requires a text string to query.,"from gender_bias_detection import detect_bias

text = ""The software requires a text string to query.""

bias_signal = detect_bias(text)

# Checking is the detected bias is positive
if bias_signal > 0:
  print(""The text contains gender bias."")
else:
  print(""The text does not contain gender bias."")"
Create a function in Python to compute the average of two numbers.,"8, 10","def average(a, b): 
    return (a + b)/2 
  
a = 8
b = 10
print(""Average of"", a, ""and"", b, ""is"", average(a, b))"
Create a Python script to calculate the median of an array of integers.,"[3, 1, 4, 5, 2]","def median(arr): 
 # Sort the array 
 arr.sort() 
 n = len(arr) 
  
 # If number of elements is odd, 
 # return the middle element 
 if n % 2 != 0: 
  return arr[n//2] 
  
 # If number of elements is even, 
 # return the average of the middle 
 # two elements 
 else:
  return (arr[n//2] + arr[(n//2)-1]) / 2

# Driver code 
arr = [3, 1, 4, 5, 2] 
print(median(arr))"
Write a Python program to classify a given list of numbers into three groups based on their range.,"[1, 2, 5, 9, 20]","def classify_list(list):
    result = {""low"": [], ""mid"": [], ""high"": []}
    for num in list:
        if num < 4:
            result[""low""].append(num)
        elif num < 10:
            result[""mid""].append(num)
        else:
            result[""high""].append(num)
    return result"
Write a python script to detect duplicate words in a sentence.,"Sentence: ""She was driving, driving down the road.""","sentence = 'She was driving, driving down the road.'
list_words = sentence.split("" "")
duplicates = {i for i, x in enumerate(list_words) if list_words.count(x) > 1}
print(""Duplicate words in the sentence are: "", end="""")
for duplicate in duplicates:
    print(list_words[duplicate], end="" "")"
Utilize ajax to send a request to a given web page and write a Python script to parse the response.,"url = ""www.example.com""","import requests

url = ""www.example.com""

try:
    request = requests.get(url)  # Send ajax request
    response = request.json()  # Get response in JSON
    for data in response['data']:
        # Do something with data  # Parse JSON response
except Exception as e:
    print(e)"
Embed a mathematical expression in Python and print the expression.,x**3 + 2*x**2 + 3,"expression = 'x**3 + 2*x**2 + 3'

print(eval(expression))"
Create an algorithm in Python to find the GCD of two numbers.,"Number 1: 28
Number 2: 56","# function to calculate GCD 
def gcd(x, y): 
  
    # This function implements the Euclidian 
    # algorithm to find GCD 
    while(y): 
        x, y = y, x % y 
  
    return x 

# Driver program to test above function 
n1 = 28
n2 = 56
print(""GCD of"", n1, ""and"", n2, ""is"", gcd(n1, n2))"
Write a Python program to find the first non-repeated character of a given string.,"string = ""teststring""","def first_non_repeated_char(string):
    for ch in string:
        if string.count(ch) == 1:
            return ch"
Write a Python program to print the largest number from a given list.,"my_list = [1, 5, 10, 20, 8]","my_list = [1, 5, 10, 20, 8]

largest = max(my_list)
print(""The largest number from the given list is: "" + str(largest))"
Generate a python program to compute the cartesian product of two lists.,"list1 = [1,2,3]
list2 = [4,5]","def cartesian_product(list1, list2):
    result_list = []
    for i in list1:
        for j in list2:
            result_list.append([i,j])
    return result_list

list1 = [1,2,3]
list2 = [4,5]

cartesian_product_list = cartesian_product(list1, list2)

print(cartesian_product_list)  # [[1,4],[1,5],[2,4],[2,5],[3,4],[3,5]]"
Design a Python program to sort a list of dictionaries by a given field.,"[
	{
		""name"": ""A"",
		""age"": 25,
		""salary"": 100
	},
	{
		""name"": ""B"",
		""age"": 35,
		""salary"": 200
	},
	{
		""name"": ""C"",
		""age"": 15,
		""salary"": 50
	},
]","def sort_dicts_by_field(dict_list, field):
    sorted_list = sorted(dict_list, key=lambda k: k[field])
    return sorted_list"
"Write a Python function that takes two lists as arguments, and calculates their dot product.","list1 = [1,2,3]
list2 = [4,5,6]","def dot_product(list1, list2):
  if len(list1) != len(list2):
    raise ValueError('List lengths must be the same.')
  dot_product = 0
  for i, val in enumerate(list1):
    dot_product += val * list2[i]
  return dot_product

list1 = [1,2,3]
list2 = [4,5,6]

dot_product_result = dot_product(list1, list2)
print(dot_product_result) # 32"
Construct a python program that takes a positive integer as input and outputs its factorial,Input Number: 5,"def factorial(inp):
    if inp == 0:
        return 1
    else:
        return inp*factorial(inp-1)"
Create a Python script to merge all the elements in a given list of lists.,"[[1, 2, 3], [4, 5], [6]]","def merge_lists(l):
    result = []
    for sublist in l:
        for item in sublist:
            result.append(item)
    return result

print(merge_lists([[1, 2, 3], [4, 5], [6]]))"
Generate a Python function that takes an integer array as input and returns the number of unique elements in the array.,"[1, 2, 3, 2, 1, 4, 7, 8, 9, 8]","def num_unique_elements(arr):
    unique_arr = set(arr)
    return len(unique_arr)

print(num_unique_elements([1, 2, 3, 2, 1, 4, 7, 8, 9, 8]))"
Write a Python function to sum up elements in a given array.,"[1, 2, 3, 4, 5]","def sum_array(arr):
 result = 0
 for item in arr:
 result += item
 return result"
Write a Python program to arrange two dictionaries in order of their keys.,"dct1 = {'a':1, 'b':2, 'c':3}
dct2 = {'e':4, 'd':5, 'f':6}","def sort_dicts_by_keys(dct1, dct2):
    result = {}
    keys = sorted(list(dct1.keys()) + list(dct2.keys()))
    for key in keys:
        if key in dct1:
            result[key] = dct1[key]
        else:
            result[key] = dct2[key]
        
    return result"
Write a regex to identify all the words starting with 't' and ending with 'e' in a given string.,"str1=""this is a python program""","import re

def identify_words(str1):
    regex = ""\w*t\w*e\b""
    words = re.findall(regex, str1)
    return words

print(identify_words(""this is a python program""))"
Develop an algorithm in Python to reverse the order of words in a sentence.,Sentence: I love programming,"def reverse(sentence):
 words = sentence.split(' ')
 words.reverse()
 
 return ' '.join(words)

print(reverse(""I love programming""))  // Output: ""programming love I"""
Generate a Python program to search for a specific string in a list.,"lst = [""hello"", ""world"", ""this"", ""is"", ""a"", ""test""]
str = ""test""","def search_string(lst, str):
    for item in lst:
        if item == str:
            return True
    return False

lst = [""hello"", ""world"", ""this"", ""is"", ""a"", ""test""]
str = ""test""
print(search_string(lst, str))"
Create a python list comprehension to print the square of each odd number in a given list.,"[1, 2, 3, 4, 5, 6]","[x**2 for x in [1, 2, 3, 4, 5, 6] if x % 2 != 0]"
Create an algorithm for sorting a list of integers in descending order in Python.,"[6, 2, 12, 5]","def sortDescending(numbers):
    for i in range(len(numbers)): 
        for j in range(i):
            if numbers[j] < numbers[j+1]:
                temp = numbers[j] 
                numbers[j] = numbers[j+1] 
                numbers[j+1] = temp 
  
    return numbers

print(sortDescending([6,2,12,5]))"
Create a web scraper in Python to extract information from a website. The scraper should find all the links in the given webpage and store them in a list.,https://www.example.com,"import requests
from bs4 import BeautifulSoup

url = 'https://www.example.com'
response = requests.get(url)
html = response.content
soup = BeautifulSoup(html, 'html5lib')

links = []
for link in soup.find_all('a', href=True):
 links.append(link['href'])
 
print(links)"
Write a function in Python to predict a label for a given input.,"[5, -2, 4]","def predict(x):
    if x[0] > 0:
        return 'positive'
    if x[1] < 0:
        return 'negative'
    if x[2] > 0:
        return 'positive'
    return 'neutral'"
"Given a string, write a Python program to check if the characters in the string form a palindrome.","string = ""racecar""","def is_palindrome(string):
 return string == string[::-1]
 
result = is_palindrome(string)
print(result) # True"
Develop a Python code to print the pairs of the numbers in the given list which adds up to the given target number.,"[1, 5, 9, 4], 10","def pairs_adding_to_target(nums, target): 
 
	result = [] 
	for i in range(0, len(nums)): 
		for j in range(i+1, len(nums))	: 
			if nums[i] + nums[j] == target:	 
				result.append([nums[i], nums[j]]) 
	return result 

result = pairs_adding_to_target([1, 5, 9, 4], 10)
print(result)"
Generate a python function to detect whether all elements in a given array are equal.,"arr = [1, 1, 1, 1]","def all_equal(arr):
    return len(set(arr)) == 1"
Create an algorithm in Python that takes an integer as input and returns a boolean output of whether the number is prime or not.,17,"def is_prime(num):
    if num <= 1:
        return False
    for i in range(2, num):
        if num % i == 0:
            return False
    return True

print(is_prime(17))"
Calculate the computational complexity of this Python code.,"def find_max(list):
    max_num = -1
    for item in list:
        if item > max_num:
            max_num = item
    return max_num","The computational complexity of this code is O(n) because the code iterates through each element in the list only once. Therefore, the complexity is directly proportional to the length of the list, n."
Create a function to sort a list of strings alphabetically in Python.,"[""zzz"",""ccc"",""aaa"",""rrr"",""bbb""]","def sort_strings(string_list): 
    return sorted(string_list)"
Generate a graphical representation of a network using Python and matplotlib.,Number of nodes = 10,"import matplotlib.pyplot as plt

node_list = []
for i in range(10):
    node_list.append(i)

G = nx.Graph()
G.add_nodes_from(node_list)

nx.draw(G, with_labels=True)
plt.show()"
Create a function that takes a key and value as 1 pair to add to a Python dictionary.,"key: age, value: 23","def add_key_value_pair(dict, key, value): 
    dict[key] = value
    return dict

my_dict = {}
my_dict = add_key_value_pair(my_dict, 'age', 23)
print(my_dict)"
Design a program in Python that accepts a string as input and checks whether or not it is palindrome.,madam,"def isPalindrome(str): 
    for i in range(0, int(len(str)/2)):  
        if str[i] != str[len(str)-i-1]: 
            return False
    return True

inputStr = 'madam'

if (isPalindrome(inputStr)): 
    print(""Yes"")
else: 
    print(""No"")"
Write a command line program in Python that prints out the Fibonacci numbers up to n.,5,"# Program to print the Fibonacci numbers up to n

# Function to return the nth Fibonacci number
def fibonacci(n):
 # Base case
 if n == 0:
  return 0
 elif n == 1 or n == 2:
  return 1
 else:
  return fibonacci(n-1) + fibonacci(n-2)
 
# Main function
num = int(input(""Enter a number: ""))
for i in range(num + 1):
 print(fibonacci(i))"
Write an algorithm in Python to find the maximum and minimum of two given numbers.,"a = 10, b = 12","def max_and_min(a,b):
    """"""Function to find the maximum and minimum of two given numbers.""""""
    max = a if a > b else b
    min = a if a < b else b
    return max, min

#Example:
print(""Maximum is: "",max_and_min(a,b)[0])
print(""Minimum is: "",max_and_min(a,b)[1])"
Create a method in Python which takes a string as input and outputs all distinct words in the string.,"String: ""Hello, there! How are you?""","def getDistinctWords(string):
    wordlist = string.split()
    lst = []
    for word in wordlist: 
        if word not in lst:
            lst.append(word)
    return lst

print(getDistinctWords(""Hello, there! How are you?""))
# Output: ['Hello,', 'there!', 'How', 'are', 'you?']"
Write Python code to remove all duplicates from a given list,"[1,2,3,4,4,4,5]","def remove_duplicates(input_list):
    output_list = []
    for i in input_list:
        if i not in output_list:
            output_list.append(i)
    return output_list

result = remove_duplicates([1, 2, 3, 4, 4, 4, 5])
print(result)"
Create a Python function that takes a number as input and returns the Fibonacci number at the same position in the sequence.,3,"def fibonacciNum(n): 
  a = 0
  b = 1
  if n < 0: 
    print(""Incorrect input"") 
  elif n == 0: 
    return a 
  elif n == 1: 
    return b 
  else: 
    for i in range(2,n+1): 
        c = a + b 
        a = b 
        b = c 
    return b 

fibonacciNum(3)"
"Write a function in Python that takes a set of numbers and prints the sum, mean and standard deviation of the numbers.","[1, 2, 3, 4, 5]","def print_stats(numbers):
    sum = 0
    for i in numbers:
        sum = sum + i
    mean = sum / len(numbers) 

    ssd = 0
    for i in numbers:
        ssd = ssd + (i-mean)**2
    ssd = ssd / len(numbers)
    standard_dev = sqrt(ssd)
    
    print(""Sum = "", sum)
    print(""Mean = "", mean)
    print(""Standard Deviation = "", standard_dev)"
Modify the following Python code to add a few lines of logic.,"def calculate_discount(price, discount):
    '''This function takes price and discount as input and returns the discounted price'''
    return price * (1 - discount)","def calculate_discount(price, discount):
    '''This function takes price and discount as input and returns the discounted price'''
    discount = min(max(0, discount), 1)
    return round(price * (1 - discount), 2)"
Write a Python script to iteratively apply a function to all the elements in a list.,"list = [1, 2, 3, 4]","""""""
Write a Python script to iteratively apply a function to all the elements in a list.
""""""

def applyFunc(list_data, func):
    result = []
    for item in list_data:
        result.append(func(item))
    return result

list_data = [1, 2, 3, 4]

def square(x):
    return x**2

squares = applyFunc(list_data, square)
print(squares)"
Create a function in Python to construct the following pattern,The maximum number of lines is 10,"def construct_pattern(n):
    for i in range(1,n+1):
        for j in range(i):
            print(""*"",end="""")
        print("""")
    for i in range(n-1,0,-1):
        for j in range(i):
            print(""*"",end="""")
        print("""")"
Create an algorithm in Python to generate random numbers between 1 and 10 without repetition.,Number of random numbers needed is 5,"import random

def generate_random_numbers(n):
 result = random.sample(range(1, 11), n)
 return result

random_numbers = generate_random_numbers(5)
print(random_numbers) # Example output: [4, 9, 2, 6, 8]"
Generate a function in Python to create a list of the nth prime number.,n=3,"def get_nth_prime(n): 
    prime_nums = [2] 
    check_num = 3 
    while len(prime_nums) < n: 
        is_prime = True 
        for i in prime_nums: 
            if check_num % i == 0: 
                is_prime = False 
                break 
        if is_prime: 
            prime_nums.append(check_num) 
        check_num += 2 
    return prime_nums[-1]"
Construct a Python program to find a missing number in an array of n distinct numbers.,"[1, 3, 8, 5, 6]","def find_missing_num(arr):
    n = len(arr)+1
    sum_of_n = int(n*(n+1)/2)
    sum_of_arr = 0
    for i in arr:
        sum_of_arr += i
    return sum_of_n - sum_of_arr"
"Create a Python function to count the number of strings that contain the substring ""cat"".","[""cat keeper"", ""cat lover"", ""lizard wrangler"", ""cat wrangler""]","def count_substring_cat(string_list):
    count = 0
    for string in string_list:
        if ""cat"" in string:
            count += 1
    return count

string_list = [""cat keeper"", ""cat lover"", ""lizard wrangler"", ""cat wrangler""]
result = count_substring_cat(string_list)

print(result)"
Create a Python script to filter out elements in a list that are divisible by 3.,"[9, 8, 10, 27, 12, 15]","numbers = [9, 8, 10, 27, 12, 15]

def filter_div_by_3(numbers):
    return [num for num in numbers if num % 3 != 0]

filtered_numbers = filter_div_by_3(numbers)
print(filtered_numbers)"
Write a Python script that prints all the prime numbers between 0 and the given number.,10,"def prime_numbers(num):
    primes = []
    for n in range(2, num + 1):
        is_prime = True
        for i in range(2, n):
            if n % i == 0:
                is_prime = False
                break
        if is_prime:
            primes.append(n)
    return primes

print(prime_numbers(10)) # Outputs: [2, 3, 5, 7]"
Create a Python program to search for a particular string in an array of strings and return the indices of the matches.,"[""hello"", ""world"", ""hello"", ""world""], ""world""","def find_string(arr, query):
 indices = []
 for i in range(len(arr)):
  if arr[i] == query:
    indices.append(i)
 return indices

print(find_string([""hello"", ""world"", ""hello"", ""world""], ""world""))"
Write a Python program which prints the index of the given value in a list.,"my_list = [2, 4, 6, 8]
value = 4","def find_index(my_list, value):
    for i in range(len(my_list)):
        if my_list[i] == value:
            return i"
Implement a Python program to recursively reverse a string.,String: Python,"def reverse(string): 
	if len(string) == 0: 
		return string 
	else: 
		return reverse(string[1:]) + string[0] 

# Driver code 
string = ""Python""

print (reverse(string))"
Merge two dictionaries into one using Python.,"dict1 = {'a': 1, 'b': 2}
dict2 = {'c': 3, 'd': 4}","def merge_dictionaries(dict1, dict2):
    res = {**dict1, **dict2} 
    return res

print(merge_dictionaries(dict1, dict2)) # Output: {'a': 1, 'b': 2, 'c': 3, 'd': 4}"
Design and program a Python function to find the maximum number from an array of integers,"[10, 2, 4, 6, 8, 9]","def max_num(arr):
    max_num = arr[0]
    for i in arr:
        if i > max_num:
            max_num = i
    return max_num

if __name__ == '__main__':
    arr = [10, 2, 4, 6, 8, 9]
    print('The maximum number in array is', max_num(arr))"
Modify the Python program to calculate the sum of an array so that it finds the largest number in the array.,"array = [1, 2, 3, 4, 5]","def array_sum(arr):
 largest = 0
 for num in arr:
 largest = max(largest, num)
 return largest

print(array_sum([1, 2, 3, 4, 5]))"
Edit the given Python code to sort a list of words by their length.,"lst = ['bar','bird','cat']","lst = sorted(lst, key=len)"
Create a python function that takes a string of characters as input and checks if it is a valid identifier.,"name = ""myVar""","import string

def isValidIdentifier(name):
    validChar = string.ascii_letters + ""_""
    if name[0] not in string.ascii_letters:
        return False
    for char in name[1:]:
        if char not in validChar:
            return False
            
    return True

validResult = isValidIdentifier(name)
print(validResult)"
Identify the best algorithm to find the maximum sum of a subarray in a given array and write a Python code snippet accordingly.,"arr = [-2, 1, -3, 4, -1, 2, 1, -5, 4]","def maxSubarraySum(arr): 
    max_so_far = 0
    max_ending_here = 0
  
    for i in range(0, len(arr)): 
        max_ending_here += arr[i] 
        if max_ending_here < 0: 
            max_ending_here = 0
        if (max_so_far < max_ending_here): 
            max_so_far = max_ending_here 
    return max_so_far"
Develop a Python script that receives two lists and returns a new list that contains a unique combination of all elements in the two lists.,"list1 = [1, 2, 3], list2 = [2, 3, 4]","def combine_lists(list1, list2):
 result = list1 + list2
 return list(set(result))

list1 = [1, 2, 3]
list2 = [2, 3, 4]

print(combine_lists(list1, list2)) # [1, 2, 3, 4]"
Develop a function in Python to convert a given word into its Pig Latin form.,"""Hello""","def pig_latin(word):
    first_letter = word[0]

    # check if the word starts with a vowel 
    if first_letter in ""aeiou"":
        latin_word = word + ""ay""
    else:
        latin_word = word[1:] + first_letter + ""ay""

    return latin_word"
Write a Python program to display the most commonly occurring item in a list.,"list_items = [1, 7, 3, 8, 2, 9, 3, 5, 5, 8, 7, 3]","from collections import Counter

list_items = [1, 7, 3, 8, 2, 9, 3, 5, 5, 8, 7, 3]

counter = Counter(list_items)
most_common_item = counter.most_common()[0][0]

print(f'The most commonly occuring item in the list is {most_common_item}.')"
Design a Python program for converting a given string of characters into its corresponding ASCII code.,"String: ""Hello""","def getAscii(string):
    result = []
    for char in string:
        result.append(ord(char))
    return result

print(getAscii('Hello'))
# Output: [72, 101, 108, 108, 111]"
Implement a Python module that converts a given date to ISO format,25-Dec-24,"import datetime

def convertToISO(dateString):
 date = datetime.datetime.strptime(dateString, ""%d %B %Y"").isoformat()
 return date

# test
dateString = '25 December 2024'
print(convertToISO(dateString))

# Output: 2024-12-25T00:00:00"
Design a function in Python that takes in a string and returns a list of words from the string in reverse order.,The quick brown fox.,"def reverseString(userString):
 wordList = userString.split("" "")
 reversedStringList = list(reversed(wordList))

 return reversedStringList

print(reverseString(""The quick brown fox.""))"
Design an algorithm in Python that reads an unordered array of integers and prints the integers in sorted order.,"[98, 45, 21, 99, 74, 44]","def sortArray(arr): 
    for i in range(len(arr)): 
        if (arr[i] > arr[i+1]):
            temp = arr[i] 
            arr[i] = arr[i+1] 
            arr[i+1] = temp 
    return arr

print(sortArray([98, 45, 21, 99, 74, 44])) # Output: [21, 44, 45, 74, 98, 99]"
Write a python program that sums up all the values from a list of dictionaries,"data = [{'key1':1, 'key2':2}, {'key1':2, 'key2':5}]","def sum_dictionaries(data):
  total = 0
  for dic in data:
    total += sum(dic.values())
  return total"
Modify a given Python function to accept additional arguments.,"def divide(a, b):
    return a / b","def divide(a, b, c=1, d=1):
    return (a / b) / (c / d)"
Create a function in Python that takes a list of numbers and returns the sum of all of the squared elements in the list.,"[1, 2, 3, 4]","def sum_squares(nums): 
  total = 0
  for num in nums:
    total += num**2
  return total

print(sum_squares([1, 2, 3, 4])) 
# Output: 30"
"Design a function in Python that takes a string, replaces all occurrences of the word ""dog"" with ""cat"" and returns the modified string.","""I love my dog""","def replace_word(string):
    modified_string = string.replace(""dog"", ""cat"")
    return modified_string

result = replace_word(""I love my dog"")
print(result)"
Create a program in Python that takes two integer values and finds the greatest common divisor (GCD).,Integer values: 18 and 54,"# function to find the GCD of two numbers using Euclidean algorithm
def gcd(a, b):
    if b == 0:
        return a
    return gcd(b, a % b)
 
# take input from the user
a = 18
b = 54

# find GCD
gcd = gcd(a,b) 

# display result
print(""The GCD of {} and {} is {}"".format(a, b, gcd))"
Generate a Python program to convert an array from the cartesian to the polar coordinate system.,"[1, 2]","def cartesian_to_polar(arr):
    x = arr[0]
    y = arr[1]
 
    radius = (x**2 + y**2)**0.5
    theta = math.atan2(y,x)
 
    return [radius, theta]
    
arr = [1, 2]
result = cartesian_to_polar(arr)
print(result)"
Create a python function to normalize a given matrix.,"[[1, 2, 3],
[4, 5, 6],
[7, 8, 9]]","def norm(mat):
  result = [[0 for row in range(len(mat[0]))] for col in range(len(mat))] 
  for i in range(0, len(mat)):
    for j in range(0, len(mat[0])):
        result[i][j] = mat[i][j] / sum(mat[i])
  return result

print(norm([[1, 2, 3], [4, 5, 6], [7, 8, 9]]))"
Generate a Python program to check if any element of a given list is palindrome or not.,"list1 = [12, 121, 3]","list1 = [12, 121, 3]

# Iterate through the list
for element in list1:
    # Convert the element to a string
    element = str(element)
    
    # Check if the element is a palindrome
    if element == element[::-1]:
        print(element + "" is a palindrome"")
    else:
        print(element + "" is not a palindrome"")"
Design a Python function that takes a string as a parameter and returns a string with extra spaces in between each character.,"my_string = ""Hello World""","def add_spaces(string):
 new_string = """"
 for char in string:
 new_string += char + "" ""
 return new_string

my_string = add_spaces(""Hello World"")
print(my_string)
# H e l l o   W o r l d"
Convert the following Python code from imperative to functional style.,"nums = [1, 2, 3]
sum = 0
for n in nums:
 sum += n","sum = reduce(lambda x, y: x + y, nums)"
Write Python code to create a new list from the given list based on a condition,"Given list : [1,2,3,4,5], condition: only include elements whose corresponding index is divisible by 2.","new_list = []
for i, v in enumerate(list):
    if (i+1) % 2 == 0: # +1 since your list is 0 indexed
        new_list.append(v)
print(new_list) # prints [2,4]"
Write a Python program to print a frequency table for the given data.,"data = [2, 4, 7, 1, 6, 4, 7, 2, 6, 3]","from collections import Counter

data = [2, 4, 7, 1, 6, 4, 7, 2, 6, 3]

counts = Counter(data)

for item, count in counts.items():
    print(f'{item} : {count}')

# Output
# 2 : 2
# 4 : 2
# 7 : 2
# 1 : 1
# 6 : 2
# 3 : 1"
Write a PYTHON program to find the profit or loss after selling a product.,"cost_price = 10
selling_price = 15","def find_profit(cost_price, selling_price):
    profit = selling_price - cost_price
    return profit"
Optimise the Python program to reduce the time complexity for finding the maximum element in an array.,"[5, 10, 15, 20]","def findMax(arr):
    max = arr[0]
    curr_max = arr[0]
    for i in arr[1:]:
        curr_max = max = max if max > i else i 
    return curr_max

print(findMax([5, 10, 15, 20]))"
Write a Python function that takes a string and an integer as an argument and returns a string containing the string repeated the specified number of times.,"""Hello!"", 3","def repeat_string(string, num_times):
    return string*num_times

result = repeat_string(""Hello!"", 3)
print(result)"
Develop an algorithm in Python to determine the greatest common divisor (GCD) of two numbers.,"8, 12","def gcd(a, b): 
    # base case 
    if (a == 0):  
        return b 
    if (b == 0):  
        return a 
  
    # a is greater 
    if (a > b): 
        return gcd(a%b, b) 
          
    return gcd(a, b%a) 

print(gcd(8, 12)) # 4"
Construct a Python program to detect pattern,"Given an array of numbers, detect all the consecutive numbers in the array.","def detect_pattern(arr):
    consec_nums = []

    for i in range(1, len(arr)):
        if arr[i] == arr[i-1] + 1:
            # if consecutive numbers are detected 
            # add the number to the list
            consec_nums.append(arr[i - 1])
            consec_nums.append(arr[i])
    
    return consec_nums"
Write Python code to remove all the vowels from a given string.,string = 'Hello World!',"def remove_vowels(string):
    # Replace all the vowels with empty string
    without_vowels = string.replace('a', '').replace('e', '').replace('i', '').replace('o', '').replace('u', '') 
    return without_vowels

if __name__ == '__main__':
    print(remove_vowels('Hello World!'))"
Find and fix a bug in this piece of Python code,"def sum_list(list_of_numbers):
    # calculates the sum of a list of numbers
    result = 0
    for number in list_of_numbers:
        result += number
    return result","def sum_list(list_of_numbers):
    # calculates the sum of a list of numbers
    result = 0
    for number in list_of_numbers:
        result += number
    return int(result) # convert to an integer before returning the result"
Create a Python script to sort the given integers in descending order.,"[3, 7, 2, 8, 10]","input_list = [3, 7, 2, 8, 10]
input_list.sort(reverse=True)
print(input_list)"
Create a Python program to check if a given date is valid or not.,"The date to be checked is ""2019/02/29"".","from datetime import datetime
 
date_string = '2019/02/29'
try:
 date = datetime.strptime(date_string, '%Y/%m/%d')
 
 if date.year % 4 == 0 and date.month == 2 and date.day == 29:
 print('Valid Date')
 else:
 print('Invalid Date')
except ValueError:
 print('Invalid Date')"
Create a Python script that takes an input string and reverses its letters.,"""Hello Python!""","def reverse_string(string):
 result = []
 
 for i in string:
 result.insert(0,i)
 
 return ''.join(result)
 
if __name__ == ""__main__"":
string = ""Hello Python!""
print(reverse_string(string))  # Output: !nohtyP olleH"
Translate this code from Python to Java.,"# Python
def find_max(nums):
  max_num = nums[0]
  for num in nums:
    if num > max_num:
      max_num = num
  
  return max_num","// Java
public static int findMax(int[] nums) {
    int maxNum = nums[0];
    for (int num : nums) {
        if (num > maxNum) {
            maxNum = num;
        }
    }
    
    return maxNum;
}"
Consider the following statement and write a code for it in Python,A list of integers of length 5 is given. Calculate its sum and average.,"my_list = [1,2,3,4,5]
total_sum = 0

for x in my_list:
    total_sum = total_sum + x 
  
average = total_sum / len(my_list)

print(""Sum of all elements in given list: "" + str(total_sum))
print(""Average of all elements in given list: "" + str(average))"
Write a Python program to sort a given list of dictionaries based on a given key.,"list = [{'name': 'Alice', 'age': 24}, {'name': 'Bob', 'age': 27}, {'name': 'David', 'age': 29}]","def sort_dictionaries(list, key):
 return sorted(list, key=lambda i: i[key])"
Generate a single Python line to create a list that contains elements from another list.,"given_list = [1, 2, 3, 4, 5]",new_list = [element for element in given_list]
"Using the input provided, write a Python script to store the words in a dictionary and get the count of each word.","words= [""Hello"", ""World"", ""Hello"" , ""again""]","word_count = {}

for word in words:
    if word not in word_count:
        word_count[word] = 1
    else:
        word_count[word] += 1

print(word_count) # output: {'Hello': 2, 'World': 1, 'again': 1}"
Create a function in Python that takes two strings as input and returns their concatenated string.,"""Hello"", ""World""","def concat_strings(str1, str2):
  return str1 + str2

result = concat_strings(""Hello"", ""World"")
print(result)"
Write a Python program that takes in a list and outputs the sum of the elements in the list.,"[1, 2, 3, 4, 5]","sum = 0
for x in [1,2,3,4,5]:
 sum += x
print(sum)"
"Using Python, write a program to calculate the sum (full addition) of two decimal numbers.","3.4, 2.6","def addDecimals(a, b):
    return a + b

x = 3.4
y = 2.6
print (addDecimals(x, y)) # 6.0"
Create a program in Python that takes a string as an input and removes all the characters whose ASCII value is odd.,"str = ""Hello world!""","def remove_odd_ascii_chars(str):
    new_str = """"
    for ch in str:
        if ord(ch) % 2 == 0:
            new_str += ch
    return new_str

str = ""Hello world!""
new_str = remove_odd_ascii_chars(str)
print(new_str)"
Create a functional programming program to calculate the value of the Fibonacci number up to the n-th number in Python.,The number should be 9.,"def fibonacci(n):
 if n < 0:
 raise ValueError(""Negative number"")
 if n == 0 or n == 1:
 return n
 return fibonacci(n-1) + fibonacci(n-2)
 
# calculate 9th Fibonacci number
print(fibonacci(9))"
Create a Python program to calculate the customer's total purchase amount from a list of items and amounts.,"The list of items and amounts:

item1: 10
item2: 20
item3: 30","items = [
 {'name': 'item1', 'amount': 10},
 {'name': 'item2', 'amount': 20},
 {'name': 'item3', 'amount': 30},
]

total = 0

for item in items:
 total += item['amount']

print(f""Total: {total}"") # Output: Total: 60"
Write a Python program to find the first non-repeating character in a given list.,"lst = [1, 2, 3, 4, 4, 3, 2, 1]","def first_non_repeating_char(lst):
    dct = {}
    
    for l in lst:
        if l in dct:
            dct[l] += 1
        else:
            dct[l] = 1
            
    for l in lst:
        if dct[l] == 1:
            return l
            
    return None

lst = [1, 2, 3, 4, 4, 3, 2, 1]
print(first_non_repeating_char(lst))"
"Using the data provided, write a Python program to find and print the root of the quadratic equation ax2 + bx + c = 0","a = 1, b = 5, c = 6","import math

a = 1
b = 5
c = 6

# calculate the discriminant
d = (b**2) - (4*a*c)

# find the two solutions 
sol1 = (-b-math.sqrt(d))/(2*a)
sol2 = (-b+math.sqrt(d))/(2*a)

print('The solutions are {0} and {1}'.format(sol1, sol2))"
Create a Python program to generate a random subsample of a given list of items.,"List: [1,2,3,4,5,6,7,8,9]
Sample Size: 4","import random

def random_sample(items, sample_size):
    sample = random.sample(items, sample_size)
    return sample

result = random_sample([1,2,3,4,5,6,7,8,9], 4)
print(result)"
Sort a given list of strings into alphabetical order.,"my_list = [""Python"", ""JavaScript"", ""Java"", ""C++""]","def sort_alphabetically(my_list):
    return sorted(my_list)

print(sort_alphabetically(my_list)) # ['C++', 'Java', 'JavaScript', 'Python']"
Develop a program in Python to check whether a string contains only digits.,"""0123""","def is_digit_only(string):
    for char in string:
        if not char.isdigit():
            return False
    return True

print(is_digit_only(""0123""))"
"Given a Python dictionary, convert it into a list of tuples.","test_dict = {‘A’: 1, ‘B’: 2, ‘C’: 3}",list(test_dict.items())
Produce an algorithm in Python to determine the maximum difference between any two elements in an array.,"[2, 7, 9, 5, 1, 3, 5]","def max_diff(array):
    max_diff = -float('inf')
    for i in range(1, len(array)):
        for j in range(i):
            diff = array[i]-array[j]
            if diff > max_diff:
                max_diff = diff
    return max_diff"
Create a function in Python using Pandas to recode a column in the following dataframe.,"name,age,city
John,30,New York
Mary,25,London
Mike,38,Paris

Recode age such that every age greater than 30 is ""Above 30"" and every age below 30 is ""Below 30"".","import pandas as pd
 
def recode_age(data):
    data['age_recoded'] = data['age'].apply(
        lambda x: 'Above 30' if x > 30 else 'Below 30'
    )
 
df = pd.read_csv('data.csv')
recode_age(df)
print(df)"
Can you design a Python program that evaluates the following formula?,"""2*x + 4*y - z = 10""","def evaluate_formula(x, y, z):
 return 2*x + 4*y - z == 10"
Write an algorithm to find the intersection of two sorted arrays in Python.,"a = [1, 5, 8, 9, 10], b = [2, 3, 5, 8, 9, 10]","def intersection(a, b): 
intersection_list = []
for item1 in a:
    if item1 in b:
        intersection_list.append(item1)
return intersection_list

a = [1, 5, 8, 9, 10], b = [2, 3, 5, 8, 9, 10]
print(intersection(a,b))
# Output: [5, 8, 9, 10]"
Create a function in Python to calculate the sum of squares of all numbers up to a given value n.,n = 10,"def sumOfSquares(n):
  sum = 0
  for i in range(n + 1):
    sum += (i ** 2)
  return sum

print(sumOfSquares(10))"
Generate a Python program to produce text output with given conditions.,"Condition 1: Print ""Hello World""
Condition 2: Print ""Goodbye World""","def print_conditions():
    print(""Hello World"")
    print(""Goodbye World"")

print_conditions()"
Write a function in Python to parse a JSON object.,"{""movie"": ""Star Wars"", ""genre"": ""Action""}","import json

def parse_json(json_string):
 obj = json.loads(json_string)
 return obj

parsed_json = parse_json('{""movie"": ""Star Wars"",""genre"": ""Action""}')
print(parsed_json)
# Outputs {'movie': 'Star Wars', 'genre': 'Action'}"
Create a Python program to reverse a number without using any additional memory.,12345,"def reverseNumber(num):
    reverse = 0
    while num > 0:
        remainder = num % 10
        reverse = (reverse * 10) + remainder
        num = num // 10
    return reverse

print(reverseNumber(12345)) # 54321"
Design and implement a Bubble Sort algorithm for sorting an array of numbers in Python.,"[64, 34, 25, 12, 22, 11, 90]","def bubble_sort(l):
    for i in range(len(l)):
        for j in range(0, len(l)-i-1):
            if l[j] > l[j+1]:
                l[j], l[j+1] = l[j+1], l[j]

# Test code
l = [64, 34, 25, 12, 22, 11, 90]
bubble_sort(l)
print(l)"
"Create a program in Python that takes a list of strings as input, sorts the strings in alphabetical order, and prints out the list in reverse alphabetical order.","Sample List: [""cat"",""bird"",""dog"",""zebra"",""ant""]","# create a list
sample_list = [""cat"", ""bird"", ""dog"", ""zebra"", ""ant""]
 
# sort the list
sample_list.sort()
 
# reverse the list
sample_list.reverse()
 
# print the reversed list
print(sample_list)
# ['zebra', 'dog', 'cat', 'bird', 'ant']"
Can you build a program in Python to calculate the median of a given list of integers?,"[4, 9, 12, 8, 1]","def median(list): 
	list.sort() 
	length = len(list) 
	if length % 2 == 0: 
		return sum(list[int(length / 2) - 1:int(length / 2) + 1]) / 2
	else: 
		return list[int(length / 2)] 

median_of_list = median([4, 9, 12, 8, 1]) 
print(""Median of the list is: "" + str(median_of_list)) 
# Output: 8"
Design a Python function to automatically generate the next BST level based on the given level.,"Given level = [1,2,3]","def generateNextLevel(level):
  next_level = []
  for node in level:
    if node.left != None:
      next_level.append(node.left)
    if node.right != None:
      next_level.append(node.right)
  
  return next_level"
Write a Python script to perform linear regression on a given dataset.,"[[5, 6], [3, 4], [7, 9], [4, 5]]","import numpy as np
from sklearn.linear_model import LinearRegression

x = np.array([[5, 6], [3, 4], [7, 9], [4, 5]])
y = np.array([7, 5, 11, 7])

model = LinearRegression().fit(x, y)

print(model.coef_)
print(model.intercept_)"
"Create a function that takes a Python list of numbers as input, and returns the list sorted by the sum of its digits.","[ 135, 590, 69, 127 ]","def sortBySumOfDigits(lst):
    return sorted(lst, key=lambda x: sum(map(int, str(x))))

lst = [ 135, 590, 69, 127]
sorted_list = sortBySumOfDigits(lst)
print(sorted_list)"
Implement a priority queue in python with the given operations.,No Input,"class PriorityQueue:

    def __init__(self):
        self.queue = []
    
    def is_empty(self):
        return len(self.queue) == 0
    
    def insert(self, key):
        self.queue.append(key)
        self.queue.sort(reverse=True)
    
    def pop(self):
        if not self.is_empty():
            return self.queue.pop(0)
        return None"
Create a function in Python for computing the average of elements in a given list.,"[15, 16, 5, 20, 6, 8]","def calculate_average(nums):
    total = 0
    for i in range(len(nums)):
        total += nums[i]
    return total / len(nums)"
Construct an algorithm in Python to find the longest substring in a string which does not have any repeating characters.,string = 'abcaac',"def findLongestSubstring(string):
 
 # Initialize the result
 max_length = 0
 
 # Initialize substrings
 curr = ''
 
 for char in string:
  if char not in curr:
   curr += char
   max_length = max(max_length, len(curr))
  else:
   curr = char
 
 return max_length

string = 'abcaac'
print(findLongestSubstring(string))"
Generate a Python program to search for a given number in an array of integers and print out its index if it exsits.,"my_array = [2, 3, 5, 7, 11]
number = 3","def search_in_array(my_array, number):
  for i, val in enumerate(my_array):
    if val == number:
      return i
  return -1"
Develop a Python program to generate the first N Fibonacci numbers.,N = 10,"def fibonacci_numbers(n):
 result = []
 a, b = 0, 1
 while a < n:
 result.append(a)
 a, b = b, a+b
 return result

n = 10
fibonacci = fibonacci_numbers(n)

print(fibonacci)

# Output: [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]"
Generate a Python algorithm that takes an unsorted array and returns a sorted one.,"[5, 8, 1, 4, 9]","def sort_array(arr):
    sorted_arr = sorted(arr) 
    # use the built-in sorted() method 
    return sorted_arr

result = sort_array([5, 8, 1, 4, 9])
print(result)"
"Given a list of numbers and a target number, write a Python program to find a pair of numbers from the given list that add up to the given target.","Input List: [1, 2, 3, 4, 4, 5, 6]
Target: 8","def find_pair(lst, target):
    for i in range(len(lst)):
        if (target - lst[i]) in lst[i+1:]:
            return [lst[i], target-lst[i]]

find_pair([1,2,3,4,4,5,6], 8)"
Suggest a completion for the following Python code so that it prints the characters in a string in reverse order.,"my_str = ""Hello World""

for i in","my_str = ""Hello World""

for i in range(len(my_str)-1, -1, -1):
    print(my_str[i], end="""")"
Create a Python program to sort a list of tuples based on the second element in each tuple.,"[(1, 2), (4, 1), (9, 10), (13, -3)]","def sort_tuples(a):
    return sorted(a, key = lambda x: x[1])

a = [(1, 2), (4, 1), (9, 10), (13, -3)]
print(sort_tuples(a))

# Output: [(13, -3), (4, 1), (1, 2), (9, 10)]"
Write a piece of code in Python to reverse a given string.,abcdef,"string = 'abcdef'

print(string[::-1])"
Create a web service in Python that takes in a temperature value as input in Celsius and returns the equivalent value in Fahrenheit.,celsius = 21,"import flask

app = flask.Flask(__name__)

@app.route('/celsius-to-fahrenheit/<int:celsius>', methods=['GET'])
def celsius_to_fahrenheit(celsius):
 fahrenheit = celsius * 9/5 + 32
 return flask.jsonify({'celsius': celsius, 'fahrenheit': fahrenheit})
 
if __name__ == '__main__':
 app.run()"
Write a Python program to replace all occurrences of a given string with an alternate string.,"""Hello World!"", ""World"", ""Python""","def replace_string(input_string, target_string, replacement_string):
    return input_string.replace(target_string, replacement_string)

print(replace_string(""Hello World!"", ""World"", ""Python""))"
"Can you create a function in Python that takes two strings as input, and returns the number of common characters between them?","""computer"", ""science""","def countCommonChars(string1, string2):
    count = 0
    for i in string1: 
    	if i in string2: 
    		count += 1
    return count

input1 = ""computer""
input2 = ""science""
print(countCommonChars(input1, input2))"
Create a Python script to calculate the running sum of an array.,"[1, 2, 3, 4, 5]","# Create a function to compute running sum
def running_sum(lst):
    running_sum = 0
    running_lst = []
    for num in lst:
        running_sum += num
        running_lst.append(running_sum)
    return running_lst

# Test array
test = [1, 2, 3, 4, 5]

# Print the result
print(running_sum(test))"
Build a program to remove all duplicate words from a given list of strings,"[""Python"", ""Python"", ""programming"", ""language"", ""language""]","def remove_duplicates(lst):
    new_list = []
    for i in lst:
        if i not in new_list:
            new_list.append(i)
    return new_list

print(remove_duplicates([""Python"", ""Python"", ""programming"", ""language"", ""language""]))"
Generate a Python dictionary from two given lists. The dictionary should contain a list of keys and the corresponding value for each key should be the element from the second list.,"keys = [""apple"", ""orange"", ""pear""] 
values = [1, 2, 3]","my_dictionary = dict(zip(keys, values))"
Modify the following Python code to select and print out the negative elements from an array.,"[3,4,1,-6,9,10,-2,-8,-4]","my_list = [3,4,1,-6,9,10,-2,-8,-4]

def select_negative_elements(my_list):
    negative_elements = []

    for x in my_list:
        if x < 0:
            negative_elements.append(x)

    return negative_elements

print(select_negative_elements(my_list))"
Create a python script that will take in a JSON string as input and output a copied version of the same string,"{""name"": ""John Doe"", ""address"": ""123 Main Street""}","import json

jsonString = '{""name"": ""John Doe"", ""address"": ""123 Main Street""}'
jsonObject = json.loads(jsonString)
copiedString = json.dumps(jsonObject)

print(copiedString)"
Write a script in Python to evaluate an expression with multiple operators.,"expression = ""2 + 3 - 5 * 4 + 7 / 6""","# Initialize the expression
expression = ""2 + 3 - 5 * 4 + 7 / 6""

# Evaluate the expression
result = eval(expression)

# Print the result
print(""Result of the expression:"", result)"
Write a Python code that finds the sum of the two largest numbers in a given list.,"[1,2,3,4,5]","def find_largest_sum(list):
    largestNum = max(list)
    list.remove(largestNum)
    secondLargestNum = max(list)
    return largestNum+secondLargestNum

print(find_largest_sum([1,2,3,4,5])) # 9"
Create a Python program to normalize an input string. The input string should be a paragraph of text and the output should be lowercase text with no punctuation.,Welcome to the GPT Normalization Task!,"import re

def normalize_text(text):
 text = text.lower()
 text = re.sub(r'\W+', ' ', text)
 return text

input_text= 'Welcome to the GPT Normalization Task!'
output_text = normalize_text(input_text)
print(output_text)

# Output: welcome to the gpt normalization task"
Create a Python script for generating a random string of a desired length.,length of 10,"import random

def generate_random_string(length):
  chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789$%&*'
  output_str = ''
  for _ in range(length):
    output_str += random.choice(chars)
  return output_str

result = generate_random_string(10)
print(result)"
Optimize the following code written in Python to remove any redundant or inefficient code.,"def factorial(n):
  if n == 0:
    return 1
  else:
    return n * factorial(n-1)","def factorial(n):
  if n == 0 or n == 1:
    return 1
  else:
    return n * factorial(n-1)"
"Implement a basic linear search algorithm in Python that searches a list of numbers for a given target value and returns the index of the target value if it is present, otherwise it returns -1.","arr = [1, 3, 5, 6, 9, 17],
target = 6","def linear_search(arr, target):
 for i in range(len(arr)):
 if arr[i] == target:
 return i
 return -1

print(linear_search(arr, target)) # 3 (index of 6)"
Develop a Python program to check whether two given strings are anagrams of each other.,"s1 = ""listen"", s2 = ""silent""","def is_anagram(s1, s2):
    s1 = s1.lower().replace("" "", """")
    s2 = s2.lower().replace("" "", """")

    #check if both strings have exact letters
    if sorted(s1) == sorted(s2):
        print(""The strings are anagrams."")
    else:
        print(""The strings are not anagrams."")

# Driver program to check the above function
is_anagram(""listen"", ""silent"")"
Add code in python to the given argument to iterate over a list of numbers and print the even numbers.,"[1,2,3,4,5]","# Iterate over numbers
for num in [1,2,3,4,5]:
  # Check for even
  if(num % 2 == 0):
    # Print the even numbers
    print(num)"
Generate a valid Python code that will print the given message,Hello World!,"print(""Hello World!"")"
Can you generate Python code that prints the larger of two input numbers?,"37, 22","# Define the two numbers
num1 = 37
num2 = 22

# Print the larger number
if num1 > num2:
    print(num1)
else:
    print(num2)"
Develop a code in Python to compare two lists and remove the common elements,"list1 = [10, 15, 20, 25, 30, 35, 40]
list2 = [25, 40, 35]","list1 = [10, 15, 20, 25, 30, 35, 40]
list2 = [25, 40, 35]

def remove_common_elements(list1, list2):
    list1_unique = []
    
    for i in list1:
        if i not in list2:
            list1_unique.append(i)
    
    return list1_unique

print(remove_common_elements(list1, list2))"
Encode a given URL using percent-encoding.,https://www.example.com/search?q=python,"String url = ""https://www.example.com/search?q=python"";
String encodedUrl = URLEncoder.encode(url, ""UTF-8"");
System.out.println(encodedUrl);  // https%3A%2F%2Fwww.example.com%2Fsearch%3Fq%3Dpython"
Produce a Python script to convert a given Unix timestamp into human readable date format.,1545732721,"import time

# Unix timestamp in seconds
unix_timestamp = 1545732721

# Convert to readable date format
timestamp = time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(unix_timestamp))

print('Human readable date format:', timestamp)"
Generate a Python program to delete an item from a given list.,"Item: 5 
List: [8, 4, 5, 9, 2]","def remove_item(item, list): 
    list.remove(item) 
    return list
  
list_org = [8, 4, 5, 9, 2]
  
result = remove_item(5, list_org)
print(result)"
Write a Python program to solve the below puzzle.,"Given a list of integers and a number ‘X’, find two numbers in the list whose sum is equal to ‘X’","def find_sum_pair(arr, X):
  for i in range(0, len(arr)):
    for j in range(i+1, len(arr)):
      if arr[i] + arr[j] == X:
        return [arr[i], arr[j]]
  return []"
Provide an example of how to use a decorator to debug a function in Python,Noinput,"import time

def time_it(func): 
    def wrapper(*args, **kwargs): 
        start = time.time() 
        result = func(*args, **kwargs) 
        end = time.time() 
        print(""Execution time: {}"".format(end - start)) 
        return result 
  
    return wrapper 

@time_it
def my_function(arg1, arg2):
        # Some logic code..
        return 10

my_function(10, 20)"
Modify the given Python loop to also multiply the numbers by 2 at the same time.,"numbers = [1, 2, 3 , 4]

for num in numbers:
  print(num)","numbers = [1, 2, 3 , 4]

for num in numbers:
  print(num*2)"
Write a Python function to print prime numbers between two given numbers.,"low = 5, high = 10","def print_prime_numbers_between_two_numbers(low, high): 
    for numb in range(low,high + 1): 
        if numb > 1: 
            for i in range(2,numb): 
                if (numb % i) == 0: 
                    break
            else: 
                print(numb) 

#calling the function
print_prime_numbers_between_two_numbers(5, 10)"
Create a custom function in Python to change the values of a list.,"[2, 3, 1, 4]","def custom_function(input_list): 
  transformed_list = [] 

  for value in input_list: 
    transformed_value = value + 1 
    transformed_list.append(transformed_value) 
  
  return transformed_list 

input_list = [2, 3, 1, 4]
print(custom_function(input_list))"
Implement a function in Python to find the length of a given string without using the len() built-in function.,"""Hello World!""","def getStringLength(my_string): 
    # Initialize counter  
    count = 0
  
    for s in my_string: 
        count+= 1
  
    return count"
Write a Python script to filter out the given list and create a new reduced list.,"[-1, -2, 5, 0, 6, 8, 4, 9]","original = [-1, -2, 5, 0, 6, 8, 4, 9]
filtered = [x for x in original if x > 0]
print(filtered)"
"Write a Python program to assess a patient's current state based on their temperature, pulse rate and respiratory rate.","temperature = 98.6
breathing_rate = 18
pulse_rate = 70","def assess_patient(temperature, breathing_rate, pulse_rate):
 if temperature > 100:
  print('Fever present')
 if breathing_rate < 12 or breathing_rate > 20:
  print('Respiratory distress')
 if pulse_rate < 60 or pulse_rate > 100:
  print('Heart rate issue')"
Create a function in Python 3 which takes two arguments and prints their sum.,"a = 5
b = 6","def add(a, b):
    print('Sum =', a + b)
    
add(5, 6)"
Convert a Python threading program to JavaScript.,"import threading

def show_message(message):
   print(message)

thread = threading.Thread(target=show_message, args=('Hello World!',))
thread.start()","const showMessage = (message) => console.log(message);

const thread = new Worker('./thread.js');
thread.postMessage({message: 'Hello World!'});

// thread.js
onmessage = (msg) => postMessage(showMessage(msg.data.message));"
Create a function in Python to read specified properties from a list.,"props = ['name', 'age', 'gender']","def read_props(props):
    """"""
    Read listed properties from a list.
    
    Args:
        props (list): The list containing properties to be read.
    
    Returns:
        tuple: Returns a tuple with values of the specified properties.
    """"""
    data = list()
    for prop in props:
        data.append(input(""Enter {}: "".format(prop)))
    return tuple(data)"
Write a Python function to sort a list of tuples based on their third elements.,"list = [('a', 1, 3), ('e', 5, 8), ('b', 6, 9), ('d', 2, 4)]","def sort_by_third_element(list):
  return sorted(list, key=lambda x: x[2])

list = [('a', 1, 3), ('e', 5, 8), ('b', 6, 9), ('d', 2, 4)]

res = sort_by_third_element(list) 

# The result is
[('a', 1, 3), ('d', 2, 4), ('e', 5, 8), ('b', 6, 9)]"
Generate a python program to assign each row of a 2D array to a variable.,<No input>,"def assign_variables(matrix):
    # Create an empty list to contain all the row variables
    variables = []
    
    # Iterate over the matrix
    for row in matrix:
        # Assign each row to a variable
        rowVar = row
        # Add the row variable to the list
        variables.append(rowVar)
        
    # Return the list of row variables
    return variables"
Write Python code to select values greater than 2 in a given list.,"[1, 2, 3, 4, 5]","list = [1, 2, 3, 4, 5]
 
result = [value for value in list if value > 2]
 
print(result)"
Create a Python program to print out the prime numbers between the given input range.,"min = 1
max = 10","def print_primes(min, max):
  for num in range(min, max+1):
    if num > 1:
      for i in range(2, num):
        if (num % i) == 0:
          break
      else:
        print(num)
  
# Driver Code
min = 1
max = 10

print_primes(min, max)

# Output:
# 2
# 3
# 5
# 7"
Create a code snippet to sort a given array of strings in descending order based on their lengths in Python.,"arr = [""Python"", ""Javascript"", ""Ruby"", ""Java""]","arr.sort(key=lambda x: len(x), reverse=True)
print(arr)"
Find the 5 most frequent words in the given text.,Text: Python is a high-level programming language.,"from collections import Counter

text = "" Python is a high-level programming language.""
words = text.split()

frequencies = Counter(words)

# printing five most frequent words 
frequent_words = frequencies.most_common(5)

print(frequent_words)"
Write a Python program that finds all numbers in a given string and prints their sum?,"""15 apples, 4 bananas and 6 oranges""","import re

def find_numbers(s):
    numbers = re.findall('\\d+', s)
    ints = list(map(int, numbers))
    return sum(ints)

s = ""15 apples, 4 bananas and 6 oranges""

print(find_numbers(s)) # output: 25"
Rewrite the following code from Java to Python:,"public class Main {
 public static void main(String[] args) {
 int a = 5;
 int b = 10;
 int c = a + b;
 
 System.out.println(c);
 }
}","a = 5
b = 10
c = a + b

print(c)"
Write a code to create a dictionary from given list of words.,"words = ['Python', 'is', 'an', 'interpreted', 'high-level', 'programming', 'language', 'for', 'general-purpose', 'programming']","word_dict = {'Python': 1, 'is': 2, 'an': 3, 'interpreted': 4, 'high-level': 5, 'programming': 6, 'language': 7, 'for': 8, 'general-purpose': 9, 'programming': 10 }"
Write a Python code to edit the given sentence by replacing all the '@' symbols with '#' symbols.,"Sentence: ""This is a sentence with @ symbols.""","sentence = ""This is a sentence with @ symbols.""
sentence = sentence.replace('@', '#')
print(sentence) # This is a sentence with # symbols."
Design a Python program to read numbers from a given array and determine if all numbers are divisible by 5.,"array = [10, 15, 20, 25, 30]","def checkDivisible(array):
  for num in array:
    if num % 5 != 0:
      return False
  return True

array = [10, 15, 20, 25, 30]

if checkDivisible(array):
  print('All numbers are divisible by 5')
else:
  print('Not all numbers are divisible by 5')"
Design an algorithm in Python to calculate the Fibonacci numbers up to N.,5,"def fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n+1): 
            c = a + b 
            a = b 
            b = c 
        return b 

print(fibonacci(5)) # 5"
Create a Python function that calculates the area of a circle.,radius=3,"import math

def area_circle(radius):
    return math.pi * (radius ** 2)
    
print(area_circle(3))"
Generate a python code that returns all distinct values of a given list.,"my_list = [2,2,4,4,6,2]","def get_distinct_elements(list):
    distinct_list = []
    for item in list:
        if item not in distinct_list:
            distinct_list.append(item)
    return distinct_list

distinct_list = get_distinct_elements(my_list)"
Develop a Python script which extracts data from a given website.,URL: https://www.example.com,"import requests
from bs4 import BeautifulSoup

url = ""https://www.example.com""
page = requests.get(url)
soup = BeautifulSoup(page.content, 'html.parser')

# Extract all Anchor Tags
links = soup.find_all('a')

# Extract all the contents of Anchors
for link in links:
    print(link.text, link.get('href'))"
Write a Python code to filter out the strings containing two or more words in a given list.,"string_list = [""Hello"", ""Hi"", ""two words"", ""text string"", ""more than two words!""]","def filter_words(string_list):
  result = []
  for string in string_list:
    if len(string.split()) < 2:
      result.append(string)
  return result

string_list = [""Hello"", ""Hi"", ""two words"", ""text string"", ""more than two words!""]
print(filter_words(string_list))

#Output
['Hello', 'Hi']"
Create a Python function that takes in two sets and returns a set containing the items that are in the first set but not in the second.,"set_A = {1, 2, 3, 4}, set_B = {2, 3, 5}","def diff(set_A, set_B):
  res= set_A.difference(set_B)
  return res

set_A={1, 2, 3, 4}
set_B={2, 3, 5}

result = diff(set_A, set_B)
print(result)"
"Create a program in Python to identify whether a character is uppercase, lowercase or a digit.",char = 'A',"def char_type(char):
    # check if character is uppercase 
    if char.isupper(): 
        print('Uppercase') 
 
    # check if character is lowercase  
    elif char.islower(): 
        print('Lowercase') 
 
    # check if character is digit 
    elif char.isdigit(): 
        print('Digit') 
    else: 
        print('Special Character') 

char_type('A')"
Implement a sorting algorithm in Python that sorts a given array of numbers.,"array = [2, 7, 4, 1, 5, 3]","def sort_array(array):
    for i in range(len(array)): 
        min_idx = i 
        for j in range(i+1, len(array)): 
            if array[min_idx] > array[j]: 
                min_idx = j       
        array[i], array[min_idx] = array[min_idx], array[i]
    return array
result = sort_array(array)
print(result) // Output: [1, 2, 3, 4, 5, 7]"
Create a Python program that takes two integers as inputs and prints the largest number of them.,"First Integer: 12
Second Integer: 44","num1 = 12
num2 = 44

if (num1 > num2):
    print(num1)
elif (num2 > num1):
    print(num2)
else:
    print(""Both numbers are equal"")"
Create a Python program to interpret a user command from a given set of instructions and execute it.,Taking a break,"command = input(""Please enter your command: "")
 
if command == ""Taking a break"":
 print(""Taking a five minute break"")
 # code to execute the taking a break command
else:
 print(""Invalid command"")"
Write a code to check how many consecutive elements are equal in a given Python list.,"[1, 2, 3, 4, 4, 4, 5]","def check_consecutive_equal(lst): 
    count = 1
    max_count = 0
    
    for i in range(1, len(lst)):
        if lst[i] == lst[i-1]: 
            count+=1
        else:
            if max_count < count:
                max_count = count
            count = 1
  
    return max(max_count, count)"
Write a Python program to classify the following data into classes.,"Student 1: {Name: Peter, Age: 34, Marks: 69}
Student 2: {Name:Alice, Age: 20, Marks: 89}","def classify_data(students):
    for student in students:
        if student['Marks'] < 70:
            student['Class'] = 'Average'
        elif student['Marks'] >= 70 and student['Marks'] < 90:
            student['Class'] = 'Good'
        elif student['Marks'] >= 90:
            student['Class'] = 'Excellent'"
Rewrite a Python program from imperative to functional style.,"def find_even_numbers(numbers):
  even_numbers = []
  for num in numbers:
    if num % 2 == 0:
      even_numbers.append(num)
  return even_numbers","def find_even_numbers(numbers):
    even_numbers = filter(lambda num: num % 2 == 0, numbers)
    return list(even_numbers)"
Write code to establish a connection between a Python backend and a MySQL database.,"Host = 'localhost'
Username = 'root'
Password = '123456'
Database = 'sample_database'","import mysql.connector 
  
#Create MySQL Connection 
connection = mysql.connector.connect(host = Host, database = Database, user = Username, password = Password) 

#Check whether connection is established or not
if connection.is_connected(): 
    print(""Connection established successfully"")"
Rewrite the given Python code to use list comprehension.,"numbers = [1, 2, 3, 4, 5]

new_numbers = []
for n in numbers:
    new_numbers.append(n * 2)","numbers = [1, 2, 3, 4, 5]

new_numbers = [n * 2 for n in numbers]"
Generate a Python program that identifies all the words with more than five characters in a given list.,"words = [""red"", ""green"", ""blue"", ""yellow"", ""orange""]","def more_than_five_characters(words):
    result = []
    for word in words:
        if len(word) > 5:
            result.append(word)
    return result

words = [""red"", ""green"", ""blue"", ""yellow"", ""orange""]
print(more_than_five_characters(words))"
Replace the given SQL query with a Python program to calculate the sum of all the column values.,SELECT SUM(column) FROM table;,"import pandas as pd

data = pd.read_sql

  query = ""SELECT * FROM table""

df = pd.read_sql(query, conn)

sum_column = df['column'].sum()

print(sum_column)"
Construct a Python script to filter the elements of a given list which are divisible by 3.,"[1,2,3,4,5,6,7,8,9]","my_list = [1,2,3,4,5,6,7,8,9]

filtered_list = list(filter(lambda x: x % 3 == 0, my_list))
print(filtered_list)"
Write a Python program to generate N random numbers.,5,"import random

random_numbers = []

for _ in range(5):
  random_numbers.append(random.random()) 

print(random_numbers)"
Create a python program that calculates the total cost of an item given the quantity and price.,"Quantity: 5, Price: 10","def calcTotalCost(quantity, price):
    totalCost = quantity * price
    return totalCost

result = calcTotalCost(5, 10)
print(result)"
Write a Python program to find all possible subsets of a given set.,"s = {1,2,3}","def find_subsets(s):
    subsets = []

    for i in range(len(s)+1):
        for subset in itertools.combinations(s, i):
            subsets.append(subset)

    return subsets

s = {1,2,3}
result = find_subsets(s)
print(result)"
Transform the following algorithm description into a working python function.,"Given a list of numbers, find the sum of the elements in the list.","def sum_list(nums_list):
    total = 0
    for num in nums_list:
        total += num
    return total"
Create code to multiply two matrices in Python.,"A = [[1, 2],
     [3, 4]]
B = [[4, 3],
     [2, 1]]","def matrixMultiplication(A, B):
	N = len(A)
	C = [[0 for x in range(N)] for y in range(N)]

	for i in range(N):
		for j in range(N):
			for k in range(N):
				C[i][j] += A[i][k] * B[k][j]

	return C

A = [[1,2],
     [3,4]]
B = [[4,3],
     [2,1]]

print(matrixMultiplication(A, B))

#output: [[8, 5], [20, 13]]"
Create a python program to calculate the sum of two numbers and show the result in the console.,"12, 7","# Calculate the sum of two numbers
num1 = 12
num2 = 7
sum = num1 + num2

# Print the result
print('The sum of two numbers is ', sum)"
Combine multiple lists using Python and preserve duplicates.,"list1 = [1, 2, 3]
list2 = [2, 3, 4]","combined_list = list1 + list2

# preserves duplicates
print(list(set(combined_list)))"
Create a Python script to calculate the total number of visitors on a Web page.,"Number of visitors per day (example: 2000, 1500, 2500, 1800)","visitors_per_day = [2000, 1500, 2500, 1800]
total_visitors = sum(visitors_per_day)

print(""Total number of visitors:"", total_visitors)"
Generate the syntax tree for a given Python expression.,"expression = ""(A + B) * (C + D)""","import ast

tree = ast.parse(expression)"
Create a recursive Python program to find the sum of all the odd numbers between a given number x and 0.,x = 4,"def sum_odd_recurse(num):
    if num == 0:
        return 0
    elif num % 2 != 0:
        return num + sum_odd_recurse(num - 1)
    else:
        return sum_odd_recurse(num - 1)

# driver code
x = 4
print(sum_odd_recurse(x)) # Output: 9 (1+3+5)"
Suggest a completion for the following Python code that finds the median of a list of numbers.,"def median(nums):
    nums.sort()","def median(nums):
    nums.sort()
    if len(nums) % 2 == 0:
        left = len(nums) // 2 - 1
        right = len(nums) // 2
        return (nums[left] + nums[right]) / 2
    else:
        middle = len(nums) // 2
        return nums[middle]"
Create a for loop in Python to reverse a given string.,Text,"text = ""Text""
rev_text = """" 
  
for i in range(len(text) - 1, -1, -1): 
    rev_text = rev_text + text[i] 
  
print(rev_text)"
Create an algorithm in Python to rotate an array of numbers by k elements.,"Array: [1,2,3,4,5], k=2","def rotate_array(arr, k):
 n = len(arr)
 
 for i in range(k):
  temp = arr[n-1]
  for i in range(n-1,0,-1):
   arr[i] = arr[i-1]
  arr[0] = temp
  
 return arr
 
print(rotate_array([1,2,3,4,5],2)) # prints [4,5,1,2,3]"
Create a Python program which takes a series of integers as input and returns the largest.,"ins = [1, 5, 8, 3]","def get_max(ins):
    return max(ins)"
Design an algorithm in Python to replace an element in a given list of numbers at a given position with another number.,"list: [1, 2, 3, 4, 5],  element: 8,  position: 3","def replace_elem(lst, val, pos):
    lst[pos] = val
    return lst

list = [1, 2, 3, 4, 5]
element = 8
position = 3

result = replace_elem(list, element, position)
print('After replacing element: ', result)"
Re-structure the following code so that it can be written using a for loop in Python.,"i = 1
while i < 5:
 print(i)
 i += 1","for i in range(1, 5):
    print(i)"
Write a Python function to insert a list of elements into a given list according to the given index.,"list = [1, 2, 3] 
index = 1 
elements = [4,5]","def insert_list(list, index, elements): 
    return (list[0:index] + elements + list[index:])"
Optimize the following Python code for faster runtime performance,"for i in range(5):
    print(""Hello"")","for i in range(5):
    print(""Hello"", end=""\n"")"
"Create a function in Python to normalize an array of integers to range [0,1].","[3, 4, 6, 8, 10]","def normalize(arr):
    minVal = min(arr)
    maxVal = max(arr)
    normalizedArr = [(x - minVal) / (maxVal - minVal) for x in arr]
    return normalizedArr

result = normalize([3, 4, 6, 8, 10])
print(result)  // [0.0, 0.2, 0.4, 0.6, 0.8]"
Construct a for loop in Python to print the characters in a string.,"""Hello World""","for char in ""Hello World"":
    print(char)"
"Given a list of numbers, write a Python program to calculate the mean.","=[5,2,10,3,7]","def calculate_mean(nums):
    return sum(nums) / len(nums)

nums = [5,2,10,3,7]
mean = calculate_mean(nums)
print(mean)  # Output: 5.6"
Optimize the given Python code so that it runs more efficiently.,"def calculateSum(a, b): 
    total = 0 
    
    for i in range(a,b+1): 
        total += i 
 
    return total","def calculateSum(a, b): 
    return int((b - a + 1) * (a + b) / 2)"
"Generate a Python function that takes a list as input, and returns the number of values in the list that are greater than the average of the values in the list.","input_list = [4, 8, 6, 3, 10]","def count_above_average(input_list): 
 average = sum(input_list)/len(input_list)
 count = 0
 for value in input_list: 
  if value > average:  
   count += 1
 return count"
Rewrite the following Python program using the try/except approach.,"a = 3
b = 0
c = a / b","try:
    c = a / b
except ZeroDivisionError:
   print(""Division by zero error!"")"
Rewrite a Python function given a few specific requirements.,"def is_prime(n):
 if n < 2:
 return False
 for i in range(2, n):
 if n % i == 0:
 return False
 return True","def is_prime(n):
 if n < 2:
 return False
 elif n == 2:
 return True
 elif n > 2 and n % 2 == 0:
 return False
 for i in range(3, int(n**0.5)+1, 2):
 if n % i == 0:
 return False
 return True"
Write a Python function that takes a list of words as input and capitalizes the first character of each element in the list.,"[""apple"", ""banana"", ""strawberry""]","def capitalize(words):
  return [word.capitalize() for word in words]

input_words = [""apple"", ""banana"", ""strawberry""]
capitalized_words = capitalize(input_words)
print(capitalized_words)"
"Write a code for sorting the words within a sentence, alphabetically.",Python is a great language,"""""""
Write a code for sorting the words within a sentence, alphabetically.
""""""

def sort_words_alphabetically(sentence):
    words = sentence.split()
    words.sort()
    return ' '.join(words)

if __name__ == '__main__':
    sentence = 'Python is a great language'
    print(sort_words_alphabetically(sentence))"
Create a Python program that multiplies two input numbers and prints the result.,"a = 3
b = 4","def multiply(a, b):
    result = a * b
    print(result)

multiply(a, b)"
Write a python program to calculate the absolute differences between corresponding elements of two arrays of the same size.,"arr1 = [1, 4, 5]
arr2 = [3, 2, 1]","def calc_diff(arr1, arr2):
    # Initialize difference array
    diff = []

    # Iterate through arrays
    for i in range(len(arr1)):
        # Calculate the difference between two elements
        diff.append(abs(arr1[i] - arr2[i]))
        
    return diff"
"Create a Python program that receives a list of numbers, and generates two new lists: one containing the even elements from the original list, and one containing the odd elements.","[1, 2, 3, 4, 5, 6]","def find_even_odd(nums):
  even_list = []
  odd_list = []
  for num in nums:
    if num % 2 == 0:
      even_list.append(num)
    else:
      odd_list.append(num)
  
  return even_list, odd_list
  
print(find_even_odd([1, 2, 3, 4, 5, 6]))"
Implement a Python program to find the length of a given string.,"string = ""Hello World""","def stringLength(string):
    return len(string)

result = stringLength(""Hello World"")
print(result)"
Write a Python function to find the sum of a series of numbers.,"[1, 2, 3, 4, 5]","def sumSeries(arr):
  total = 0
  for num in arr:
    total += num
  return total

result = sumSeries([1, 2, 3, 4, 5])
print(result)"
Rewrite the javascript code with python code.,"// This program prints the values 1 to 10
for (var i = 1; i <= 10; i++) {
  console.log(""The number is "" + i);
}","# This function prints the values 1 to 10
def print_numbers(): 
    for i in range(1,11): 
        print(""The number is "" + str(i)) 
          
print_numbers()"
"Given an array of strings, you need to write a Python program to move the elements that contain a certain letter to the end of the array.","strings = [""abcd"", ""efgh"", ""ijkl"", ""mnop"", ""qrst""]
letter = ""m""","def move_letter(strings, letter):
 new_list = []
 for s in strings:
  if letter not in s:
   new_list.append(s)
  else:
   new_list.append(s)
 return new_list"
Write a Python program to generate a bar chart with labels using matplotlib from a given list of numbers.,"list = [1, 2, 3, 4, 5]","import matplotlib.pyplot as plt

list = [1, 2, 3, 4, 5]

plt.bar(range(len(list)), list)
plt.xlabel('Index')
plt.ylabel('Value')
plt.title('My Bar Chart')

plt.show()"
Write a Python program to take a string as input and to create an object that contains all unique characters in the string as keys and the number of occurrences of the character as values.,"string = ""This is a string""","def char_freq(string):
 freq_dict = {}
 
 for char in string:
 if char in freq_dict:
 freq_dict[char] += 1
 else: 
 freq_dict[char] = 1
 
 return freq_dict"
Create a REST API endpoint in Python with a GET route to query a database. The route should accept a 'name' as a query parameter and return a list of results from the query.,name= 'John',"@app.route('/api/search', methods=['GET'])
def search():
name = request.args.get('name')
query = _db.execute(""SELECT * FROM users WHERE name=?"", [name]).fetchall()
return jsonify(query)"
Write a python program to print the elements in a list which are not repeated more than once.,"[1, 2, 3, 2, 4, 2, 3]","result = []
for ele in list:
    if list.count(ele) == 1:
        result.append(ele)
print(result) # Output: [1, 4]"
Write a Python script that finds the most common element of a given list.,"list = [3, 5, 6, 3, 7, 8, 3, 4]","def find_most_frequent_element(list):
 count_map = {}
 max_element= list[0]
 max_count = 1
 for num in list:
  if num in count_map:
   count_map[num] += 1
  else:
   count_map[num] = 1
 for num in count_map:
  if count_map[num] > max_count:
   max_element = num
   max_count = count_map[num]
 return max_element"
Generate a Python program to calculate the square root of a given number using Newton’s Method.,x = 36,"def square_root(x):
    guess = x/2
    while True:
        next_guess = 0.5 * (guess + (x/guess))
        if abs(guess - next_guess) < 0.0001:
            break
            guess = next_guess
    return guess

print(square_root(36)) # prints 6.0"
Create a Python function to sum all the middle elements of a given list.,"numbers = [5, 10, 15, 20]","def middle_sum(numbers):
    if len(numbers) == 0:
        return None
    
    if len(numbers) % 2 == 1:
        return numbers[len(numbers) // 2]
    else:
        return numbers[len(numbers) // 2 - 1] + numbers[len(numbers) // 2]"
Generate a Python program that searches a list of given integers for a given target value and returns its index if found.,"list = [2, 3, 4, 5, 6], target = 4","def search(list, target):
  for i in range(len(list)):
    if list[i] == target:
      return i
  return -1

list = [2, 3, 4, 5, 6]
target = 4

index = search(list, target)
if index == -1:
  print(""The target was not found."")
else:
  print(""The target was found at index %d."" % index)"
"Create a program in Python that takes a list of integers, and prints the sum of the even numbers and the sum of the odd numbers.","list=[2,4,5,7,1,3]","list=[2,4,5,7,1,3]

even_sum= 6
odd_sum= 15

def sum_even_odd(list):
    even_sum=0
    odd_sum=0
    
    for num in list:
        if num % 2 == 0:
            even_sum+=num
        else:
            odd_sum+=num 
    
    print(""even_sum="",even_sum)
    print(""odd_sum="",odd_sum)
    
sum_even_odd(list)"
Trace the recursive Fibonacci algorithm in Python and test its execution time for different values of n.,num = 10,"import time 

def fib(n): 
 if n<0: 
  print(""Incorrect input"") 
 elif n==1: 
  return 0
 elif n==2: 
  return 1
 else: 
  return fib(n-1)+fib(n-2) 

start = time.time() 

num = 10 
print(fib(num))

print(""Time taken:"", time.time()-start)"
Develop an algorithm to check if a string S is a palindrome in Python.,"String S = ""racecar""","def is_palindrome(s):
    # Convert strings to lowercase
    s = s.lower()
 
    # Iterate through middle of string with indices 
    for i in range(len(s) // 2):
        if s[i] != s[len(s) - i - 1]:
            return False
    return True"
Can you write a python program to produce the intersection of two given lists?,"list 1: [2, 3, 4] 
list 2: [3, 5, 6, 4]","list1 = [2, 3, 4] 
list2 = [3, 5, 6, 4]

# create a set of elements in list1
s1 = set(list1)

# create a set of elements in list2
s2 = set(list2)

# find the intersection 
intersection = s1.intersection(s2)

# print the intersection 
print(intersection) 
# prints {3, 4}"
Create a Python program to convert a comma-separated string into a list.,"""1,2,3,4,5""","string = ""1,2,3,4,5""
list = string.split("","")
print(list)"
"Create a Python program which takes a list of words as input, and prints out the frequent words.","Words: [""python"", ""is"", ""a"", ""programming"", ""language""]","from collections import Counter

words = [""python"", ""is"", ""a"", ""programming"", ""language""]

word_count = Counter(words) 

for k,v in word_count.items(): 
    print(k,v) 

# To get the most frequent word 
most_freq_word = max(word_count, key=word_count.get) 

print(""Most frequent word is:"", most_freq_word)"
Optimize the following Python code to maximize performance.,"for row in records:
    for key, value in row.items():
        do_something(key, value)","for row in records:
    for key, value in row.items():
        try:
            do_something(key, value)
        except Exception:
            pass"
Create a Python method to get the index of the largest element in an array.,"[1,2,3,4,5]","def find_largest_index(arr):
    largest = float('-inf')
    largest_index = 0
    for i in range(len(arr)):
        num = arr[i]
        if num > largest:
            largest = num
            largest_index = i
    return largest_index 

print(find_largest_index([1,2,3,4,5])) # 4"
Write a Python program to convert a given time in 12 hour format to 24 hour format.,12:05 PM,"def convert_to_24(time):
    if time[-2:] == ""PM"" and time[:2] != ""12"":
        return str(int(time[:2])+12)+time[2:-2]
    elif time[-2:] == ""AM"" and time[:2] == ""12"":
        return ""00""+time[2:-2]
    else:
        return time[:-2]"
Create an algorithm in Python to sort an array of numbers.,"[9, 3, 5, 1, 6]","def sortArray(arr):
    for i in range(len(arr)):
        for j in range(i+1,len(arr)):
            if arr[i] > arr[j]:
                temp = arr[i]
                arr[i] = arr[j]
                arr[j] = temp
    return arr

arr = [9, 3, 5, 1, 6]
print(sortArray(arr))"
Translate this code from JavaScript to Python,"const helloWorld = () =>  console.log(""Hello World!"")","def hello_world():
    print(""Hello World!"")"
Edit the following Python program to count the occurrence of the word “apple” in a given sentence.,"sentence = ""I have an apple, and the apple is delicious.""","sentence = ""I have an apple, and the apple is delicious.""

word = ""apple""

count = 0

for word in sentence.split():
    if(word == ""apple""):
        count = count + 1

print(""The no. of occurrences of the word 'apple' is:"", count)"
Generate a Python program to find all the common elements of two given lists.,"[1, 2, 3], [3, 4, 5]","def find_common_elements(list1, list2):
 return list(set(list1).intersection(set(list2)))

result = find_common_elements([1, 2, 3], [3, 4, 5])
print(result)"
Write a Python program to display the first and last colors from the following list.,"Colors: ['Red', 'Green', 'White', 'Black']","# List of colors
colors = ['Red', 'Green', 'White', 'Black']

# First color
print(colors[0])

# Last color
print(colors[-1])"
Create a python script that prints out a list of names in alphabetical order.,"Robert, Asher, Aster, Athena","list_of_names= [""Asher"", ""Aster"", ""Athena"", ""Robert""]
list_of_names.sort()

print(list_of_names)"
What is the output of the following Python code?,"def foo(x): 
  if x > 5: 
    return 1
  elif x < 0: 
    return -1
  else: 
    return 0
  
foo(3)",0
Author a Python program to check if a number is a palindrome.,1991,"def isPalindrome(num):
  numStr = str(num)
  for i in range(0, len(numStr)//2):
    if numStr[i] != numStr[len(numStr)-i-1]:
      return False
  return True

print(isPalindrome(1991)) # Output: True"
Construct a Python function to redesign a given list to meet a given sorting criteria.,"my_list = [31, 5, 42, 69, 20]","def sort_list(my_list):
    return sorted(my_list)"
Develop a Python program that takes a text string as input and displays only those words which contain the letter ‘a’.,"""This is an example of a string to test.""","input_text = 'This is an example of a string to test.'

words = input_text.split()

for word in words:
  if 'a' in word:
    print(word)

# Output: 
an
example
a
string
test."
Construct a Python program to find all substrings of a given string,String : Python,"def get_all_substrings(input_string): 
	length = len(input_string) 
	return [input_string[i:j+1] for i in range(length)  
							for j in range(i,length)] 

output = get_all_substrings('Python') 
print(output)"
Write code to find the median of an array of integers using Python.,"[2, 4, 5, 7, 8, 9, 11]","def get_median(nums):
    nums.sort()
    if len(nums) % 2 == 0:
        return (nums[int(len(nums)/2)] + nums[int((len(nums)/2) - 1)] )/ 2
    else:
        return nums[int(len(nums) / 2)]

nums = [2, 4, 5, 7, 8, 9, 11]
median = get_median(nums)
print(""Median is: "",median)"
Write a python function to reverse the words in a given sentence.,"sentence = ""hello world how are you""","def reverseWords(sentence): 
    words = sentence.split(' ') 
    words = words[::-1] 
    return ' '.join(words) 
      
print(reverseWords(sentence))"
Create a program in Python to evaluate a strinf expression and solve it.,exp = '4+2/3',"def solve_expression(exp):
 # Solve the expression
 return eval(exp)

exp = '4+2/3'
res = solve_expression(exp)
print(res) # Output: 4.666666666666667"
Write a Python program that calculates the distance between two points on a two-dimensional plane.,"Point1 (x1: 3, y1: 4); Point2 (x2: -9, y2: -2)","#include <iostream>
#include <math.h>

int main() 
{ 
    int x1 = 3; 
    int y1 = 4; 

    int x2 = -9; 
    int y2 = -2;

    float distance = sqrt(pow(x2 - x1, 2) + pow(y2 - y1, 2)); 

    std::cout << ""Distance between the two points is: "" << distance << std::endl; 

    return 0; 
}"
Refactor the following Python code to make use of list comprehensions.,"result = []
for x in range(10):
  for y in range(10):
    result.append(x * y)",result = [x * y for x in range(10) for y in range(10)]
Create a for loop statement in Python to iterate over a list and print the each item in the list.,"[1,2,3,4,5]","for i in [1,2,3,4,5]:
    print(i)"
Develop a Python solution to identify parts of speech of a given sentence.,"Sentence: ""I like apples.""","import nltk

sentence = ""I like apples.""
words = nltk.word_tokenize(sentence)
tagged_words = nltk.pos_tag(words)

parts_of_speech = dict()
for word, tag in tagged_words:
  parts_of_speech[word] = tag

print(parts_of_speech)
# Output: {'I': 'PRP', 'like': 'VBP', 'apples': 'NNS'}"
"Write a Python program to optimize an equation of the form ax3 + bx2 + cx + d = 0, where a,b,c and d are given constants and x is a variable.","a = 1, b = -10, c = 32, d = -30","def optimize_equation(a, b, c, d):
    # calculate the discriminant
    discriminant = b**2 - 4*a*c
    x1 = (2*c)/(-b + (discriminant**0.5))
    x2 = (-b - (discriminant**0.5))/(2*a)
    
    # return the optimized values
    return (x1, x2)"
Write a Python program to analyze the given user input sentences regarding sentiment.,Given sentence: I am so excited to start this project,"def analyze_sentiment(sentence):
    sentiment = TextBlob(sentence)
    if sentiment.polarity > 0:
        print(""Sentence is Positive"")
    elif sentiment.polarity == 0:
        print(""Sentence is Neutral"")
    else:
        print(""Sentence is Negative"")

sentence = ""I am so excited to start this project""
analyze_sentiment(sentence)"
generate valid python statements to check if the string contains a particular character,Check if a string contains 'a',"""""""
Check if a string contains 'a'
""""""

if 'a' in my_string:
    #string contains 'a'
else:
    #string does not contain 'a'"
"Create a function in Python that takes two lists of equal length, and returns the sum of the elements in the same index in each list.","[2, 3, 4], [2, 5, 6]","def sum_elements_in_lists(list1, list2):
    if len(list1) != len(list2):
        return None
    
    result = []
    for i in range(len(list1)):
        result.append(list1[i] + list2[i])
    
    return result

result = sum_elements_in_lists([2, 3, 4], [2, 5, 6])
print(result)"
Can you develop a program using Python to check if number is prime?,13,"def is_prime(n):
    if (n <= 1): 
        return False
    elif (n <= 3): 
        return True
    elif (n % 2 == 0 or n % 3 == 0): 
        return False 

    i = 5
    while(i * i <= n): 
        if (n % i == 0 or n % (i + 2) == 0): 
            return False
        i = i + 6
  
    return True

print(is_prime(13))"
Write a Python function that takes an array of integers and finds the maximum difference between any two elements in the array,"[2, 3, 10, 6, 4, 8, 1]","def max_difference(arr):
  if len(arr) < 2:
    return 0
  curr_max = arr[1]-arr[0]
  min_elem = min(arr[0], arr[1])
  for i in range(2, len(arr)):
    curr_max = max(curr_max, arr[i] - min_elem)
    min_elem = min(min_elem, arr[i])
  return curr_max
  
print(max_difference([2, 3, 10, 6, 4, 8, 1]))"
Design a python program which takes a word string as an argument and returns the number of vowels in the string.,"""Hello""","def count_vowels(string):
    count = 0
    for ch in string:
        if ch in 'aeiouAEIOU':
            count += 1
    return count"
Write a Python script to extract all the values for a given key from a dictionary.,"dictionary = {
    'key1': 'val1',
    'key2': 'val2',
    'key3': 'val3',
    'key4': 'val4',
}","def get_key_values(dictionary, key):
    return [value for key, value in dictionary.items() if key == key]"
Design an algorithm in Python to Merge two lists.,"[1, 3, 5], [2, 4, 6]","def merge(list1, list2):
 merged_list = []
 
 while list1 and list2:
  if list1[0] < list2[0]:
   merged_list.append(list1[0])
   list1.pop(0)
  else:
   merged_list.append(list2[0])
   list2.pop(0)

 merged_list += list1
 merged_list += list2
 return merged_list

list1 = [1, 3, 5]
list2 = [2, 4, 6]

merged_list = merge(list1, list2)

print(""Merged list:"") 
print(merged_list)"
Write a Python program that reads in a list of numbers and sorts them in the ascending order.,"[2, 3, 4, 5, 1]","def sort_list(lst):
    lst.sort()
    return lst

result = sort_list([2, 3, 4, 5, 1])
print(result)"
Rewrite the given Python script to remove all punctuation from a given string.,This is a sample string with punctuation marks .,"def remove_punctuation(string): 
 new_string = """" 
 for char in string: 
 if char not in "",.?!;:"": 
 new_string += char 
 return new_string"
Write a function in Python that takes two integers as arguments and returns the number of common divisors between the two.,"350, 400","def countCommonDivisors(a,b): 
   
    divisors = [] 
   
    for i in range(1, min(a,b)+1): 
        if (a % i == 0 and b % i == 0): 
            divisors.append(i) 
              
    return len(divisors) 

num1 = 350
num2 = 400

print (countCommonDivisors(num1, num2)) 
# Output: 5"
"Edit the given Python program so that it prints the current date, in the format YYYY-mm-dd.","print(""Hello!"")","from datetime import date

print(""Hello!"")

current_date = date.today().strftime(""%Y-%m-%d"")
print(""Today's date is"", current_date)"
Create a function in Python that takes a value and inserts it into an already sorted list.,"[1, 5, 8], 6","# Python 
def insertInSortedList(sorted_list, value):
    left = 0
    right = len(sorted_list) - 1

    while left <= right:
        mid = left + (right - left) // 2
        if value < sorted_list[mid]:
            right = mid - 1
        else:
            left = mid + 1

    sorted_list.insert(left, value)
    return sorted_list"
Develop a program in Python to find the GCD of two numbers.,"a = 30, b = 15","def gcd(a, b): 
    if a == 0 : 
        return b  
  
    return gcd(b % a, a)  
  
# Driver program  
print(gcd(30,15))"
Create a Python program to filter a list of strings and return only the strings that contain a given substring.,"The list [""cat"", ""dog"", ""elephant"", ""rabbit"", ""duck""] and the substring ""ra"".","def filter_list(lst, sub):
 filtered = [s for s in lst if sub in s]
 return filtered

lst = [""cat"", ""dog"", ""elephant"", ""rabbit"", ""duck""]
sub = ""ra""

result = filter_list(lst, sub)
print(result)

# Output: ['rabbit']"
Rewrite this better Python program to calculate the square root of a given number.,"def squareRoot(number):
  root = number/2    
  for k in range(20):
    root = (1/2)*(root + (number / root))
  return root","def square_root(number): 
    """""" 
    Calculate the square root of a number 
    """""" 
    root = number # Initial guess 
    for i in range(20): # Iterative approach to refine guess 
        root = (1/2) * (root + (number/root)) 
    return root"
Create a program in Python for performing a linear search on a given list.,"[1, 2, 3, 4, 5, 6], 5","def linear_search(list, n): 
  
    for i in range(len(list)): 
  
        if list[i] == n: 
            return i 

list = [1, 2, 3, 4, 5, 6] 
n = 5

x = linear_search(list, n) 

if x == None: 
    print(""Element is not present in the list"") 
else: 
    print(""Element is present at index"", x)"
Write a Python script to print the size and color of shoes in a list.,"shoes = [('size', 10), ('color', 'blue'), ('size', 8), ('color', 'green')]","def print_size_color(shoes):
    for size, color in shoes:
        print('size:', size, 'color:', color)

print_size_color(shoes)"
Write a python function that takes in two positive integer numbers and generate a random number between them.,"min_range = 3
max_range = 7","import random

def generate_random_number(min_range, max_range):
    return random.randint(min_range, max_range)

min_range = 3
max_range = 7
random_number = generate_random_number(min_range, max_range)
print(random_number)"
Rewrite the following code to use list comprehension in Python.,"big_list = []
 for value in list:
   if value % 2 == 0:
     big_list.append(value)",big_list = [value for value in list if value % 2 == 0]
Write a function in Python that constructs a URL based on user input. The function should take a string and an integer as arguments and should construct a URL with the string as the base followed by sequential numbers starting from the number provided in the integer argument.,"base = ""https://www.example.com/""
start_num = 10","def construct_url(base, start_num):
 num = start_num
 while True:
 url = base + str(num)
 yield url
 num += 1"
Modify a given Python list by adding a certain value to each element.,"list = [1, 2, 3, 4, 5] 
value = 10","# Modifying the list by adding 'value' to each element
for i in range(len(list)):
    list[i] = list[i] + value

# Print the modified list
print(list)
# [11, 12, 13, 14, 15]"
Create a Python function to generate a histogram given a set of data.,"[ 1, 2, 4, 5, 7, 10]","import matplotlib.pyplot as plt

def histogram (data): 
    plt.hist(data)
    plt.title(""Frequency Histogram"")
    plt.xlabel('Data')
    plt.ylabel('Frequency')
    plt.show()"
Write a Python function to sort this dictionary by its keys in descending order.,"{
    1: 'one',
    2: 'two',
    3: 'three',
    4: 'four',
    5: 'five'
}","def sort_dictionary_keys(d):
  return {k: d[k] for k in sorted(d, reverse=True)}"
Re-write the following code snippet in Python:,"let nums = [1, 2, 3, 4, 5];
let squaredNums = nums.map(num => num * num);","nums = [1, 2, 3, 4, 5]
squared_nums = list(map(lambda num: num * num, nums))"
Write a Python script that takes a paragraph as input and prints the unique words in it.,This is a sample paragraph.,"paragraph = ""This is a sample paragraph.""

# split the string into words
words = paragraph.split()

# sort the words alphabetically
words.sort()

# remove duplicates
unique_words = []
for word in words:
    if word not in unique_words:
        unique_words.append(word)

# print the unique words
print("", "".join(unique_words))"
Write a Python script to find the longest word in an array.,"arr_of_words = ['cat', 'elephant', 'dog', 'bird']","def find_longest_word(arr):
 longest = ''
 for word in arr:
 if len(word) > len(longest):
 longest = word
 return longest

word = find_longest_word(arr_of_words)
print(word)  # Output: elephant"
Create a python program to convert a date from one format to another.,"""May 14, 2020"" -> ""14-05-2020""","import datetime

def convert_date_format(date_str, old_format, new_format): 
  dt_obj = datetime.datetime.strptime(date_str, old_format) 
  return dt_obj.strftime(new_format) 

print(convert_date_format(""May 14, 2020"", ""%b %d, %Y"", "" %d-%m-%Y""))"
Write a function in Python that merges two string and removes the duplicates.,"string_1 = 'one'
string_2 = 'two'","def merge_strings(string_1, string_2):
    s = set(string_1 + string_2)
    merged_string = ''.join(s)
    return merged_string

merged_string = merge_strings(string_1, string_2)
print(merged_string)

'''
Output:
onetwo
'''"
"Given two lists A and B, write a python program to find the intersection of those two lists.","A = [1, 5, 10, 15, 20]
B = [3, 4, 5, 6, 15]","def intersection(A,B):
    result = [] 
    for element in A: 
        if element in B: 
            result.append(element)
    return result"
Write a Python program to split a list into two halves.,"[14, 8, 3, 7, 5]","def split_list(lst):
    half = len(lst) // 2
    return lst[:half], lst[half:]

left, right = split_list([14, 8, 3, 7, 5])
print (""Left list : "", left)
print (""Right list : "", right)"
"Generating natural language from a database in Python,","db= { ""Name"": ""John"", ""Age"": 30, ""Occupation"": ""Engineer"" }","def generateNaturalLanguage(db): 
    sentence = ""The person is "" 
    sentence += db[""Name""] + "", "" 
    sentence += ""who is "" + str(db[""Age""]) + "" years old, "" 
    sentence += ""and works as a "" + db[""Occupation""] + "".""

    return sentence"
Generate a Python object literal from a dictionary.,"my_dict = {'a':1, 'b':2, 'c':3}","my_obj = {
    'a': 1,
    'b': 2,
    'c': 3
}"
Suggest a completion for the following method to reverse an array in python,"arr = [1, 2, 3, 4, 5]
def reverse_array(arr):
    for","def reverse_array(arr):
    for i in range(len(arr)//2):
        arr[i], arr[len(arr)-i-1] = arr[len(arr)-i-1], arr[i]"
Optimize the following code using functional programming in Python.,"def add_odds(list):
  odd_list = []
  for num in list:
    if num % 2 == 1:
      odd_list.append(num)
  return odd_list","def add_odds(list):
  odd_list = filter(lambda num: num%2==1, list)
  return list(odd_list)"
Create a Python function that takes a list of strings and returns a dictionary with the strings as keys and their frequencies as values.,"[""hello"", ""world"", ""hello"", ""goodbye"", ""world"", ""hello""]","def frequency(lst):
 result = {}
 for el in lst:
 if el in result:
 result[el] += 1
 else:
 result[el] = 1
 return result

print(frequency([""hello"", ""world"", ""hello"", ""goodbye"", ""world"", ""hello""]))
# Output: {'hello': 3, 'world': 2, 'goodbye': 1}"
Write a Python program to input three integers and determine their sum.,"5, 8, 10","def three_integers(x, y, z):
  return x + y + z

x = 5
y = 8
z = 10

print(three_integers(x, y, z))"
Write a python program to create a frequency table for the following list.,"[1, 8, 9, 11, 2, 10, 1, 5, 6, 8]","from collections import Counter

data = [1, 8, 9, 11, 2, 10, 1, 5, 6, 8]
counter = Counter(data)

# print the frequency table
print('Frequency Table:')
for item in counter.most_common():
    print(item)"
"Write a function in Python to generate an N by N matrix, filled with random integers between 0 and 9",N = 5,"import random

def generate_matrix(N):
    matrix = []
    for i in range(N):
        row = []
        for j in range(N):
            row.append(random.randint(0, 9))
        matrix.append(row)
    return matrix"
Compute the sum of list integers using Python.,"Target list: [3, 5, 7, 9]","mylist = [3, 5, 7, 9]
total = 0

for item in mylist:
   total = total + item

print(""The sum of list items is:"", total)"
Improve the following Python code by making it faster and more efficient.,"def multiply(a, b):
    result = 0
    for x in range(a):
        result += b
    return result","def multiply(a, b):
    result = 0
    while a != 0:
        if a & 1:
            result += b
        a >>= 1
        b <<= 1
    return result"
Write a python program to generate a new list of numbers based on existing list which increase sequence by 5,"[10, 20, 30, 40]","def generate_numbers(list):
    new_list = [] 
    for number in list:
        new_list.append(number + 5) 
    return new_list"
Develop a Python script to scrape all HTML elements from a given website.,Input URL: https://www.example.com/,"import requests
from bs4 import BeautifulSoup

# Request the HTML page
url = 'https://www.example.com/'
page = requests.get(url)

# Create the Beautiful Soup object
soup = BeautifulSoup(page.content, 'html.parser')

# Fetch all HTML elements
elements = soup.find_all()

# Output elements
for element in elements:
    print(element)"
Write a Python program to generate a password with a given length and characters.,"length = 10
characters = alphanumeric","import random

def generate_password(length, characters):
    password = ''
    for i in range(length):
        password += random.choice(characters)
    return password

print(generate_password(10, 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'))"
Create a Python function for computing the Fibonacci sequence up to the nth number.,Number n: 10,"def fibonacci(n):
    a, b = 0, 1
    for _ in range(n):
        a, b = b, a + b
    return a

print(fibonacci(10)) # outputs 55"
Create a Python program to optimize the running time of a program using memoization.,"# k: as an input parameter
# f: a recursive function","def memoize(f, k):
    memo = dict()
 
    def helper(x):
        if x not in memo:            
            memo[x] = f(x)
        return memo[x]
 
    return helper(k)"
Construct a function in Python that sorts a list of tuples by the second element of the tuple in ascending order.,"tuples = [(6, 2), (5, 4), (7, 3), (2, 8), (1, 5)]","def sort_tuples(tuples):
    return sorted(tuples, key=lambda x: x[1])

print(sort_tuples(tuples))
# Output:  [(6, 2), (7, 3), (1, 5), (5, 4), (2, 8)]"
"Given a string, write a python program to print the next largest palindrome.","""1234""","def next_largest_palindrome(num):
    # convert string to a number
    num = int(num)
    # increment number by 1
    num += 1
    while not is_palindrome(str(num)):
        # increment number by 1
        num += 1

    return num

def is_palindrome(num):
    return num == num[::-1]

print(next_largest_palindrome(""1234""))

# Output: 1331"
"In Python, write a function to create a dictionary using the given two lists.","keys = [""name"", ""age"", ""number""]
values = [""John"", 32, 258]","def create_dict(keys, values):
    return {key: val for key, val in zip(keys, values)}"
Create a function in Python to calculate the distance between two points.,"point1 (x1, y1): (2, 7)
point2 (x2, y2): (4, 9)","import math

def distance_between_points(x1, y1, x2, y2):
    return math.sqrt((x2 - x1)**2 + (y2 - y1)**2)
    
# Call the function
distance = distance_between_points(2, 7, 4, 9)
print(""The distance between the two points is"", distance)"
Write an app in any language that takes two integers as input and returns the greatest common divisor of the two numbers.,"24, 18","JavaScript:

function gcd(a, b) {
 if (b === 0) return a;
 return gcd(b, a % b);
}

console.log(gcd(24,18)) // 6

Python:

def gcd(a, b): 
 if(b == 0): 
 return a
 else: 
 return gcd(b, a%b) 

print(gcd(24,18)) # 6"
Write a Python script that receives a string from the command line and prints out the string in reverse order.,"""This is my string.""","import sys

input_string = sys.argv[1]
print(input_string[::-1])"
Generate an edit script for transforming an input text.,"Text 1: He went to the store
Text 2: She visited the store","#!/usr/bin/env python

text1 = ""He went to the store""
text2 = ""She visited the store""

edited_text = text1[:2] + text2[2:]

print edited_text"
Write a function in Python to search a string for a specific pattern.,"Search for ""abc"" in ""abcxyzabc","def search_for_pattern(s, pattern):
    if pattern in s:
        return True
    else:
        return False

result = search_for_pattern(""abcxyzabc"", ""abc"")
print(result)"
Implement a decision tree model in Python to classify given data.,"[0, 1, 0, 1, 0], [1, 0, 1, 0, 1]","#importing necessary libraries
from sklearn import tree
import numpy as np

#data
X = np.array([[0, 1, 0, 1, 0], [1, 0, 1, 0, 1]])
y = np.array([0, 1])

#model
clf = tree.DecisionTreeClassifier()
clf = clf.fit(X, y)

#predicting
x_test = np.array([[1, 0, 0, 0, 1]])
prediction = clf.predict(x_test)

#result
print(prediction)"
"Using Python, create a dictionary with the list of elements in ""a"" and as the value, the list of elements in ""b"".","a = [1, 2, 3, 4]
b = [5, 6, 7, 8]","dict_1 = {1: [5, 6, 7, 8], 2: [5, 6, 7, 8], 3: [5, 6, 7, 8], 4: [5, 6, 7, 8]}"
"Given the following data, adjust the Python code so that it outputs a JSON representation of the data.","data = [
  {
    ""id"": 5,
    ""name"": ""John""
  },
  {
    ""id"": 7,
    ""name"": ""Jack""
  },
  {
    ""id"": 9,
    ""name"": ""James""
  }
]","import json

data = [
  {
    ""id"": 5,
    ""name"": ""John""
  },
  {
    ""id"": 7,
    ""name"": ""Jack""
  },
  {
    ""id"": 9,
    ""name"": ""James""
  }
]

data_json = json.dumps(data, indent=4)
print(data_json)"
Implement a bubble sort algorithm in Python to sort a list of numbers from lowest to highest.,"[5, 3, 1, 4, 7]","def bubble_sort(array):
    for i in range(len(array)):
        for j in range(i + 1, len(array)):
            if array[i] > array[j]:
                array[i], array[j] = array[j], array[i]
    return array

arr = [5, 3, 1, 4, 7]
sorted_arr = bubble_sort(arr)
print(sorted_arr)"
Write a code in Python to print the following string:,"""Welcome to the amazing world of programming!""","print(""Welcome to the amazing world of programming!"")"
Generate a Python code snippet to make a copy of a given list.,"list_a = [1, 2, 3, 4, 5]",list_b = list_a[:]
Create a Python program to print out the given string in all uppercase.,"""This is a test string""","string = ""This is a test string""

print(string.upper())"
Edit this Python program to make the output more accurate,"def calculate_average(numbers):
    total = 0
    for n in numbers:
        total += n
    return float(total) / len(numbers)","def calculate_average(numbers):
    total = 0
    for n in numbers:
        total += n
    return float(total) / len(numbers) if len(numbers) > 0 else 0"
Construct a Python script to normalize a given vector.,"[2, 3, 4]","def normalize_vector(v):
  norm = 0
  for x in v:
    norm += x**2
  norm = norm**0.5
  for i in range(len(v)):
    v[i] = v[i] / norm
  return v

result = normalize_vector([2, 3, 4])
print(result) # [0.37139068, 0.55708601, 0.74278135]"
Create a python program to print the total number of vowels in a given string,"string = ""This is a sample string ""","def count_vowels(string):
    count = 0
    for character in string:
        if character in 'aeiouAEIOU':
            count += 1
    return count"
Write a Python function to find the sublist with the maximum sum in a given list.,"list_a = [-2, 3, 5, 4, -3, 7, -2]","def max_sum_sublist(list_a):
 start = 0
 end = 0
 max_sum = 0
 
 current_sum = 0
 for i in range(len(list_a)):
  current_sum += list_a[i]
  if current_sum < 0:
   current_sum = 0
   start = i + 1
  if current_sum > max_sum:
   max_sum = current_sum
   end = i
 
 return list_a[start:end+1]
 
max_sum_sublist(list_a)"
Create a program in Python that takes a given string and returns a dictionary whose keys are the words in the string and values are the number of occurances of each word.,"String = ""Hello world, This is me""","def word_count(string):
 count = {}
 string = string.split()

 for word in string:
 if word in count:
 count[word] += 1
 else:
 count[word] = 1

 return count

print(word_count(""Hello world, This is me""))"
Establish a Python program to replace all the words in a given sentence by the first letter of the respective words.,Sentence: Hello World,"def replace_with_first_letter(sentence):
    words = sentence.split()
    result = [word[0] for word in words]
    return ''.join(result)

print(replace_with_first_letter(""Hello World"")) # Output: HW"
Generate a program to extract the substring from a given string,"string = 'Python is fun'
start = 7
end = 11","def extract_substring(string, start, end):
    substr = string[start : end]
    return substr

string = 'Python is fun'
start = 7
end = 11

print(extract_substring(string, start, end))"
Implement a Python function for finding the difference between two lists.,"list1 = [1, 2, 3, 4]
list2 = [2, 3, 4, 5]","def difference(list1, list2):
    difference_set = set(list1) - set(list2)
    return list(difference_set)

list1 = [1, 2, 3, 4]
list2 = [2, 3, 4, 5]

difference = difference(list1, list2)
print(difference)

# Output:
# [1]"
Implement a function in Python that takes a list of strings and returns a new list of strings containing all words that start with an uppercase letter.,"list = [""Apple"", ""banana"", ""Pineapple"", ""Grapes""]","def upper_words(list):
    result = []
    for word in list:
        if word[0].isupper():
            result.append(word)
    return result"
"Edit the program in Python, so it prints out the sum of the list of numbers and the average","[10, 15, 20, 25]","arr = [10, 15, 20, 25]

totalSum = 0
for x in arr:
    totalSum += x

print(""Sum of the list: ""+str(totalSum)) 
print(""Average of the list: ""+str(totalSum/len(arr)))

Output:
Sum of the list: 70
Average of the list: 17.5"
Create a Python method that takes in an array of strings and returns a string that includes all the strings in the array combined into a single string.,"[""This"", ""is"", ""a"", ""sentence""]","def combine_strings(strings): 
    return ' '.join(strings)"
"Using the input provided, build a Python dictionary with the number as the key and its square as the value.","numbers = [2, 3, 4]",square_dict = {number:number**2 for number in numbers}
Create a program in Python to check if a given list is a subsequence of another given list,"[1,2,3,4], [1,2,5,6,7,3,4]","def is_subsequence(sub_list, main_list):
    i, j = 0, 0
    n1, n2 = len(sub_list), len(main_list)
    while i < n1 and j < n2:
        if sub_list[i] == main_list[j]:
            i += 1
        j += 1
    return i == n1"
Develop a python program to filter a provided array of strings and return only those strings that are longer than 3 characters.,"['Cat', 'Dog', 'Bird', 'Fish', 'Turtle']","def filter_long_words(words):
 filtered_words = []
 
 for word in words:
  if len(word) > 3:
   filtered_words.append(word)
   
 return filtered_words
 
words = ['Cat', 'Dog', 'Bird', 'Fish', 'Turtle']
long_words = filter_long_words(words)
 
print(long_words) # Output: ['Bird', 'Fish', 'Turtle']"
Create a Python program to take two numbers as input and list their lowest common multiple?,"a = 15, b = 20","def LCM(x, y):
   if x > y:
       z = x
   else:
       z = y

   while(True):
       if((z % x == 0) and (z % y == 0)):
           lcm = z
           break
       z += 1

   return lcm

a = 15
b = 20
print(LCM(a, b))"
Create a program in Python to generate and print all possible permutations of a given set of characters.,"[A, B, C]","import itertools
 
def permutations(characters):
 permut = itertools.permutations(characters)

 for p in list(permut): 
 print("""".join(p))

# Usage
characters = ['A', 'B', 'C']
permutations(characters)

# Output
ABC
ACB
BAC
BCA
CAB
CBA"
Write an algorithm in Python that takes an array of integers as input and checks if it is a palindrome.,"[1, 2, 3, 4, 3, 2, 1]","def is_palindrome(arr):
    mid = len(arr) // 2 
    for i in range(mid):
        if arr[i] != arr[-i - 1]:
            return False
    return True

result = is_palindrome([1, 2, 3, 4, 3, 2, 1])
print(result) # True"
Create a program in Python that will find all the prime factors of a number,120,"def prime_factors(n):
    factors = []
    i = 2
    while n > 1:
        while n % i == 0:
            factors.append(i)
            n /= i
        i += 1
    return factors"
Write a Python function that joins two lists of different sizes in an alternating fashion.,"list1 = [1, 3, 5, 7, 9]
list2 = [2, 4, 6, 8]","def joinLists(list1, list2):
 mergedList = []
 
 for i in range(max(len(list1), len(list2))):
  if i < len(list1):
   mergedList.append(list1[i])
  if i < len(list2):
   mergedList.append(list2[i])
 
 return mergedList"
Write a Python program to apply a function to all the elements of a given list and return the mapped list.,"[1, 2, 3, 4, 5]","def applyFunc(lst, func):
    mapped_list = []
    for el in lst:
        mapped_list.append(func(el))
    return mapped_list

def square(x):
    return x*x

lst = [1, 2, 3, 4, 5]

print(applyFunc(lst, square))"
Create a Python function that takes a string and outputs the count of the number of uppercase letters in the string.,‘Hello World’,"def countUppercase(myStr):
    uppercaseCount = 0
    for l in myStr:
        if l.isupper():
            uppercaseCount+=1
    return uppercaseCount

print(countUppercase('Hello World'))"
Upload a python program on GitHub which will print the total number of vowels in a given string.,"String = ""Hello World!""","import re

def count_vowels(string):
    vowels = re.findall(r'[aeiou]', string, re.I)
    return len(vowels)

if __name__ == '__main__':
    string = ""Hello World!""
    print(""Number of vowels in the given string:"", count_vowels(string))"
Reverse an input string using Python.,Hello World!,"def rev_string(s): 
   return s[::-1] 
  
s = ""Hello World!""
print(rev_string(s))"
Can you provide a Python script to print the largest and smallest number from a given list?,"[1, 6, 4, -3, 7, 8, 11]","def largest_smallest(arr):
    max_num = arr[0]
    min_num = arr[0]

    for i in arr:
        if i > max_num:
            max_num = i
        if i < min_num:
            min_num = i

    print(""The largest number is"", max_num, ""and the smallest number is"", min_num)"
Find a way to swap two values without using a temporary variable in Python.,"a = 2
b = 5","a, b = b, a"
"Write a Python program to calculate the sum of two given integers, but only if both of them are even.","num1 = 6
num2 = 8","def sum_of_two_ints(a,b): 
    if (a % 2 == 0 and b % 2 == 0): 
        return a+b 
    else: 
        return ""Wrong input""

print(sum_of_two_ints(num1,num2))"
Write a script in python that can take a magnitude and corresponding angle (in degrees) and convert it to vectors in three-dimensional space.,"magnitude: 5
angle: 90","import math

def magnitude_to_vector(magnitude, angle):
    x = magnitude * math.cos(math.radians(angle))
    y = magnitude * math.sin(math.radians(angle))
    z = 0
    
    return (x, y, z)

result = magnitude_to_vector(5, 90)

print(f""The vector is {result}"")"
Code a function in Python to find the Fibonacci number at a given index.,index = 5,"def fibonacci_at_index(index): 
    if index < 0: 
        return -1
    if index == 0 or index == 1: 
        return index 
    return fibonacci_at_index(index - 1) + fibonacci_at_index(index - 2) 

print(fibonacci_at_index(index)) # 5"
"Use Python to optimize a function f(x, y) so that it attains its maximum for any given set of x and y.","f(x,y) = 3x^2 + 2xy + 5y^2","from scipy.optimize import fmin

def f(x, y):
 return 3*x**2 + 2*x*y + 5*y**2

x, y = fmin(f, 0, 0)

print(f'The maximum of f(x,y) is {f(x, y)} at (x, y) = ({x:0.5f}, {y:0.5f})')"
Consider the following python code. Write a code to modify this such that it generates the output shown.,"def get_year_from_date(date):
    year = date.split('-')[0]
    return int(year)","def get_year_from_date(date):
    """"""
    This function takes a string date in the form of a yyyy-mm-dd and returns the year as an integer
    """"""
    year = date.split('-')[0]
    return int(year)"
Create a Python program that shuffles the elements of an array.,"arr = [""A"", ""B"", ""C"", ""D""]","import random

def shuffleArray(arr):
    n = len(arr)

    for i in range(n-1, 0, -1):
        j = random.randint(0, i)
        arr[i], arr[j] = arr[j], arr[i] 
    
    return arr

arr = [""A"", ""B"", ""C"", ""D""]
shuffleArray(arr)
print(arr)"
"Develop an algorithm in Python for given an array containing n distinct numbers taken from 0, 1, 2, …, n, find the one that is missing from the array.","Array : [2, 3, 1, 5, 4]","def missingNumber(arr): 
    n = len(arr) 
    total = (n + 1)*(n + 2)/2
    sum_of_arr = sum(arr) 
    return total - sum_of_arr 

arr = [2, 3, 1, 5, 4]
missing = missingNumber(arr) 
print(missing)"
Design a Python method to find the largest number in an array of integers.,"[-10, 10, 1, -100]","def find_largest_number(nums):
    biggest = nums[0]
    for num in nums:
        if num > biggest:
            biggest = num
    return biggest

nums = [-10, 10, 1, -100]
print(find_largest_number(nums))"
Design a Python program which sorts a list of integers from lowest to highest.,"[5, 2, 4, 1, 3]","def sort_list(list):
     for i in range(0, len(list)): 
          for j in range(0, len(list) - 1 - i): 
               if list[j] > list[j + 1]: 
                    list[j], list[j + 1] = list[j + 1], list[j]
     return list

list = [5, 2, 4, 1, 3]

sorted_list = sort_list(list)

print(sorted_list)"
Write a Python program to split a string on the first occurrence of a given substring.,"string = ""www.example.com""
substring = "".""","string_list = string.split(substring,1)
print(string_list)"
Write a Python code to detect the Odd or Even numbers in a given list.,"list = [1, 2, 3, 4, 5]","for num in list: 
    if num % 2 == 0: 
        print(num, ""is an even number"") 
    else: 
        print(num, ""is an odd number"")"
Optimize the given code in Python to reduce its complexity,"my_list = [1, 2, 3, 4, 5]
total = 0

for x in my_list:
    total = total + x","my_list = [1, 2, 3, 4, 5]
total = sum(my_list)

print(""Sum of all elements in given list:"", total)"
Can you write a python program to identify the last index of a given element in a list?,"The list [2, 5, 9, 2, 4] and the element 2","# Define the list
list_ = [2, 5, 9, 2, 4]
  
# Find the last index of element 2
last_index = len(list_) - list_[::-1].index(2) - 1
  
# Print the result
print(last_index)"
Construct a program in Python to filter a list of stocks by price,"stocks = [{‘ticker’:’AAPL’,‘price’: 233.5}, {‘ticker’:’MSFT’,‘price’: 115.8}, {‘ticker’:’GOOGL’, ‘price’: 1234.5}] , price_limit = 100","stocks = [{‘ticker’:’AAPL’,‘price’: 233.5}, {‘ticker’:’MSFT’,‘price’: 115.8}, {‘ticker’:’GOOGL’, ‘price’: 1234.5}]
price_limit = 100

filtered_stocks = [stock for stock in stocks if stock[""price""] > price_limit]

print(filtered_stocks)"
Generate a Python program to classify a given feature set into two classes,"features = [[9, 3], [7, 2], [4, 1], [0, 5]]
class_labels = ['good', 'bad']","def classify(features, class_labels):
    decision_boundary = 5 
    predictions = []
    for feature in features:
        if feature[0] > decision_boundary:
            predictions.append(class_labels[0])
        else:
            predictions.append(class_labels[1])
    return predictions"
Generate Python code to perform an action based on a given condition.,"Condition: If the user input is an integer, print ""You have entered an integer""","user_input = input(""Enter a number:"")
if user_input.isdigit():
   print(""You have entered an integer."")"
Write a function in Python to evaluate an algebraic expression,"exp= ""((x+y)^2)*(x+1)""
x=2
y=3","def evaluate_expr(expr,x,y):
    x = float(x)
    y = float(y)

    def eval_expr(expr):
        return eval(expr)

    evaluation = eval_expr(expr.replace(""x"", str(x)).replace(""y"", str(y)))
    return evaluation
 
exp = ""((x+y)^2)*(x+1)""
x = 2
y = 3
print(evaluate_expr(exp,x,y))"
Develop an algorithm to sort a list of numbers from low to high inPython.,"[5, 7, 1, 6, 10, 4, 2]","def sort_numbers(nums):
    for i in range(len(nums)):
        for j in range(i+1, len(nums)):
            if nums[i] > nums[j]:
                temp = nums[j]
                nums[j] = nums[i]
                nums[i] = temp
    return nums

print(sort_numbers([5, 7, 1, 6, 10, 4, 2]))"
Edit the following Python function to return a sorted list of the words in the given string.,"def get_words(text):
    words = text.split()
    return words","def get_words(text):
    words = text.split()
    return sorted(words)"
Write a Python code snippet to count the number of occurrences of a given letter in a string.,"string = ""Mississippi"",
letter = ""s""","letter = 's'
string = ""Mississippi""
count = 0
for char in string:
   if char == letter:
       count += 1
print(count)"
Edit the Python code given to detect errors.,"def add(x, y):
    z = x / y
    return z","def add(x, y):
    # assert y is not zero
    assert y != 0, "" y must not be zero!""
    z = x + y
    return z"
Optimize the following Python code to minimize memory consumption and maximize speed.,"def setup_list():
    my_list = []
    for i in range(10000):
        my_list.append([0] * 10000)
    return my_list","def setup_list():
    my_list = [[0] * 10000 for _ in range(10000)]
    return my_list"
Understand the meaning of the given data and create a classification model in Python.,"x1 = [1 ,2 ,3, 4, 5]
y = [1, 2, 1, 2, 1]","# Import necessary library 
from sklearn import svm

# Create a feature and label array 
X = [[1], [2], [3], [4], [5]] 
Y = [1,2,1,2,1]

# Set up the svm model 
clf = svm.SVC(kernel='linear')

# Train the model 
clf.fit(X, Y)

# Test the model 
predictions = clf.predict([[3]])
print(predictions)"
Design a Python script that prints out all the even numbers in a given list of numbers.,"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","# given list of numbers
nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# empty list for even numbers
even_list = []

# iterate over the list
for num in nums:
    # check if number is even
    if num % 2 == 0:
        # append number to even list
        even_list.append(num)

# print even numbers
print(even_list)"
Develop a Python code that takes in an array of integers and outputs the array sorted in descending order.,"[9, 2, 7, 1]","def sort_descending(arr):
    arr.sort(reverse=True)
    return arr

arr = [9, 2, 7, 1]
res = sort_descending(arr) 
print (str(res))"
Write a Python program to find the index of the first occurrence of the given element in the given list.,"inputlist = [1, 2, 5, 8, 10, 9]
element = 8","def find_element(inputlist, element):
    for i, num in enumerate(inputlist):
        if element == num:
            return i"
"Generate a Python program to compute the sum of the numbers in an array, after mapping each element to its square.","myList = [2, 3, 4, 5, 6]","def sum_of_squares(myList):
    result = 0
    for num in myList:
        result += num**2
    return result

total = sum_of_squares(myList)
print(""Sum of Squares:"", total)"
Convert the following SQL query into a python pandas dataframe.,SELECT * from books WHERE author LIKE '%Rowling%';,"import pandas as pd

# read the books table
df = pd.read_sql(""SELECT * from books"", connection)

# filter for rows with matching author
df_filtered = df[df['author'].str.contains(""Rowling"")]

# print the results
print(df_filtered)"
Generate a code to optimize the following program for better performance in Python.,"random_list = []
for i in range(0, 10):
    random_list.append(random.randint(0, 10))

unique_list = []
for i in random_list:
    if i not in unique_list:
        unique_list.append(i)","import random

random_list = [random.randint(0, 10) for _ in range(10)]
unique_list = list(set(random_list))"
Generate a Python function to generate a sequence of numbers based on a given interval.,"Start: 2, End: 5","def generate_sequence(start, end):
    return list(range(start, end + 1))"
Generate a voltage signal with random noise using a Python script.,A signal of frequency 250 Hz and amplitude 1 V.,"import numpy as np 

freq = 250 
amplitude = 1 

t= np.linspace(0, 1, 1000) 
voltage_signal = np.sin(2*np.pi*freq*t) + np.random.normal(0, 0.1, 1000)"
Write a Python program to combine two nested dictionaries into one.,"dict1 = {'x': 10, 'y': 20}
dict2 = {'a': 5, 'b': 10}","combined_dict = {**dict1, **dict2}"
Construct a python program to separate even and odd numbers from an array.,"[1, 2, 3, 4, 5, 6]","def separate_even_odd(arr):
    even = []
    odd = []
    for num in arr:
        if num % 2 == 0:
            even.append(num)
        else:
            odd.append(num)
    return even, odd
 
even, odd = separate_even_odd([1, 2, 3, 4, 5, 6])
print('Even numbers:', even)
print('Odd numbers:', odd)"
"Write a Python program to generate a list containing all the linear combinations of `x` and `y`, where `x` and `y` are given as input.","x = [1, 2, 3]
y = [4, 5, 6]","x = [1, 2, 3]
y = [4, 5, 6]

combinations = [[i, j] for i in x for j in y]
print(combinations)"
Construct a program in Python to search for a given number in an array.,"array = [1, 2, 3, 4, 5]
number = 3","def search(array, x):
	for i in range(len(array)):
		if array[i] == x:
			return i
	return -1"
Edit this python code to reverse the function’s argument order.,"def multiply(x,y):
  return x*y","def multiply(y, x):
  return x*y"
Implement a function in Python for finding the maximum element in an array.,"list = [18, 25, 1, 12, 37]","def find_max(list):
    max_element = list[0]
    for element in list:
        if element > max_element:
            max_element = element
    return max_element

max = find_max(list)
print(max)"
Generate a Python code to execute the following logic,"Given a string, take all the characters and add them up, then store the result in a variable.","def add_string(string):
    result = 0
    for char in string:
        result += ord(char)
    return result"
Create a Python script to sort the following list in ABC order,"list = [3, 6, 9, 1, 4, 8]","list = [3, 6, 9, 1, 4, 8]

list.sort()

print(list)"
Write a Python program to compare two unordered lists to see if they are equal.,"list1 = [3, 4, 5]
list2 = [4, 5, 3]","def compare_lists(list1, list2):
    if len(list1) != len(list2):
        return False
    if sorted(list1) == sorted(list2):
        return True
    return False"
Edit the following Python code to calculate the sum of all the elements in a two-dimensional array.,"arr = [[1,2,3], [4,5,6], [7,8,9]]","arr = [[1,2,3], [4,5,6], [7,8,9]]

sum = 0

for row in arr:
 for col in row:
  sum = sum + col

print(""Sum:"", sum)"
Create a Python program to calculate the sum of natural numbers below a certain number.,n=100,"def sumNaturalNumbers(n): 
  sum = 0
  for i in range(1, n+1): 
    sum+=i 
  return sum
    
print(sumNaturalNumbers(100))"
Edit the following Python code so that it prints the sum of the list elements.,"list = [10, 20, 30, 40]","list = [10, 20, 30, 40]

sum = 0
for i in list:
 sum += i

print(""The sum is"", sum)"
Write a Python program to display the powers of 2 up to the given power.,8,"# This code will display the powers of 2 up to a given power

# Get the input
power = 8

# Calculate the powers of 2 
for i in range(power+1):
    print(2**i, end=' ')

# Print a newline
print("""")"
Write a Python program to create a new list that contains all the elements of the given list multiplied by each other.,"nums = [1, 2, 3, 4]","def multiply(nums):
    result = []
    for i in range(len(nums)):
        for j in range(i+1, len(nums)):
            result.append(nums[i] * nums[j]) 
    return result"
"Write a function in Python that will take a string as input, reverse the order of the words, and return the new string.","string = ""Hello World""","def reverseString(string):
  words = string.split(' ')
  reversedString = []
  for i in range(len(words)-1, -1, -1):
    reversedString.append(words[i])
  return ' '.join(reversedString)
  
print(reverseString(""Hello World"")) # Output: World Hello"
Write a python code to calculate the total cost of a grocery bill.,"items=[(""apple"", 2.50), (""banana"", 3.00), (""avocado"", 1.80)]","def total_cost(items):
    total = 0
    for item, price in items:
        total += price
    return total

if __name__ == '__main__':
    output = total_cost([(""apple"", 2.50), (""banana"", 3.00), (""avocado"", 1.80)])
    print(output)"
Write a Python program to find the number of occurrences of a given element in an array.,"list = [1, 2, 5, 4, 1, 5]","def countOccurrences(list, element):
    count = 0
    for i in range(len(list)):
        if list[i] == element:
            count += 1
    return count

if __name__ == '__main__':
    list = [1, 2, 5, 4, 1, 5]
    element = 5
    print(countOccurrences(list, element))"
Use the following data and create a python program to find the minimum value in the list.,"nums = [7, 8, 5, 1, 9, 4]","# find the minimum value using the min function
min_value = min(nums)

# print the minimum value
print(""The minimum value is: "",min_value)"
Use Python to modify a JSON object for specific key-value pairs.,"Object: {name: Tom, age: 25, occupation: Data Scientist, hobbies: [Reading, Badminton]}","# Modify a JSON object

import json

object = {'name': 'Tom', 'age': 25, 'occupation': 'Data Scientist', 'hobbies': ['Reading', 'Badminton']}

if 'occupation' in object:
    object['occupation'] = 'AI Engineer'

if 'hobbies' in object:
    object['hobbies'].append('Cycling')

print(json.dumps(object,indent=2))"
Create a Python program to sort a list of numbers from lowest to highest.,"[3, 7, 2, 1, 19]","def sort_list(nums):
    for i in range(len(nums)):
        min_index = i
        
        for j in range(i+1, len(nums)):
            if nums[min_index] > nums[j]:
                min_index = j
        
        nums[i], nums[min_index] = nums[min_index], nums[i]
        
    return nums
    
print(sort_list([3, 7, 2, 1, 19]))

# Output: [1, 2, 3, 7, 19]"
Create a Python function to delete the last character of a given string.,"""Hello World!""","def delete_last_char(string):
    """"""Delete the last character of a given string.

    Args:
        string (str): The string to remove the last character from. 

    Returns:
        str: The string with the last character removed.
    """"""
    return string[:-1]

if __name__ == '__main__':
    string = ""Hello World!""
    result = delete_last_char(string)
    print(result)"
Write a python program for binary search,"[2, 5, 7, 9, 11, 15]","def binarySearch(arr, target):
    left = 0
    right = len(arr) - 1

    while left <= right:
        mid = (left + right) // 2

        if arr[mid] == target:
            return mid
        elif arr[mid] > target:
            right = mid - 1
        else:
            left = mid + 1
    return -1"
Generate a Python dictionary that stores objects with unique values.,"['alec', 'bob', 'sara', 'john', 'elon']","unique_dict = {
  'alec' : 'alec',
  'bob'  : 'bob',
  'sara' : 'sara',
  'john' : 'john',
  'elon' : 'elon'
}"
Create a Python code to display the multiplication table for a number between,Number: 4,"for i in range(1, 11):
    print(""4 x"", i, ""="", 4*i)"
Write a Python program that performs linear regression. The program should generate a prediction given an input and a list of parameters.,"Input: 5 
Parameters: [0.5, 1.2, 3.1]","import numpy as np
 
def predict(x, params):
 x = np.array(x)
 params = np.array(params)
 
 y = 0
 for i in range(params.shape[0]):
 y += params[i] * x ** i
 
 return y
 
x = 5
params = [0.5, 1.2, 3.1]
 
y = predict(x, params)
print(y) # Output: 35.4"
Filter a string in Python by removing all alphabets and keeping only the numbers.,"my_string = ""hey3this5is4my2string1""","def filter_string(str):
    str = ''.join(x for x in str if x.isdigit())
    return str  

my_string = ""hey3this5is4my2string1""
print(filter_string(my_string))"
Write a Python script to download the source code of a website.,URL: example.com,"import requests

# send the request 
response = requests.get(""http://example.com"")

# get the source code of the website
data = response.text 

# write the source code into a file
with open('example_source.txt', 'w') as file:
 file.write(data)"
Create a program in Python that takes an input string and removes all duplicate characters.,"let str = ""abracadabra""","def removeDuplicates(str): 
 s = """"
for i in range(len(str)): 
 if str[i] not in s: 
  s += str[i] 
 return s

str = ""abracadabra""
print(""The output string is:"", removeDuplicates(str))"
Create a Python script that takes two string variables as inputs and prints out the shorter of the two.,"a = ""Hello world""
b = ""Goodbye world""","if len(a) < len(b):
    print(a)
else:
    print(b)"
Create a function in Python that takes a two-dimensional array with n rows and m columns and returns the transposed array.,"[ [1, 2, 3],
  [4, 5, 6],
  [7, 8, 9] ]","def transpose(matrix):
    num_rows = len(matrix)
    num_cols = len(matrix[0])
    transposed = [ [0 for j in range(num_rows)] for i in range(num_cols) ]
    for i in range(num_rows):
        for j in range(num_cols):
            transposed[j][i] = matrix[i][j]
    return transposed"
"For an existing Python program, write a function to sort a given list of numbers in ascending order.","[4, 3, 2, 5, 1]","def sort_list(numbers): 
 numbers.sort()
 return numbers

print(sort_list([4, 3, 2, 5, 1]))"
Create an algorithm in Python to search a given list for a specific value.,"[1, 4, 6, 8, 10], 8","def search(lst, target):
 for i in range(len(lst)):
  if lst[i] == target:
   return i
 return -1

search([1, 4, 6, 8, 10], 8)  # Output: 3"
Create a Python function that takes a string as an input and returns the substring between the first and the last character.,thequickbrownfox,"def get_substring(string):
  return string[1:-1]"
Create a Python script that prints out the sum of the first n even numbers.,n = 5,"def sumOfEvenNumbers(n):
    sum = 0
    for i in range(1, (n * 2) + 1):
        if i % 2 == 0:
           sum += i
    return sum

print(sumOfEvenNumbers(5))"
Create a Python function that takes an integer as an input and returns all positive integers less than the input number.,Integer: 10,"def get_pos_int(num):
    pos_ints = []
    for i in range(num):
        if i > 0:
            pos_ints.append(i)
    return pos_ints

pos_ints = get_pos_int(10)
print(pos_ints)"
Write a Python code to count the number of matching elements between two lists,"list1 = [1,2,3,4,5]
list2 = [1,3,4,7,9]","def count_matches(list1, list2):
    count = 0
    for elem in list1:
        if elem in list2:
            count += 1 
    return count"
Optimize a Python function to get the smallest execution time possible.,"def func(a, b, c): 
    return a + b + c","def func(a, b, c):
    return a*b + a*c + b*c    # Use an optimized expression for lowest execution time"
Write a Python program that takes the following dictionary as an argument and returns the count of each item,"{""apples"": 5, ""oranges"": 6, ""bananas"": 7}","def item_counts(fruits):
    counts = {}
    for k, v in fruits.items():
        counts[k] = v
    return counts"
Create a python program to capitalize words in a string.,"String: ""enter the dragon""","def capitalize_words(string):
    words = string.split(' ')
    capitalized_words = [word.capitalize() for word in words]
    return ' '.join(capitalized_words)

print(capitalize_words('enter the dragon'))"
Identify the most used programming language in the following data.,"Java: 30%, Python: 40%, C++: 20%, JavaScript: 10%","most_used_language = ""Python"""
Create a Python program to check if a triangle is valid or not with the given values for its three sides.,"a = 2
b = 2
c = 3","def is_valid_triangle(a, b, c): 
  
    # triangle should have 3 sides 
    if a + b <= c or a + c <= b or b + c <= a: 
        return False
  
    # sum of any two side should always be greater than third side 
    if a + b > c and a + c > b and b + c > a: 
        return True
    return False

is_valid_triangle(2, 2, 3)"
Edit the following Python program to print out the key-value pair of a dictionary.,"d = {'Name': 'John', 'Age': 30, 'City': 'New York'}","d = {'Name': 'John', 'Age': 30, 'City': 'New York'}
 
for key, value in d.items():
    print(f'{key}: {value}')"
Write a python program to print the least common multiple of two integers,"6, 8","def lcm(x, y):
  if x > y:
    greater = x
  else:
    greater = y
  while(True):
    if((greater % x == 0) and (greater % y == 0)):
      lcm = greater
      break
    greater += 1
  return lcm"
Find the maximum value from a given list of numbers in Python.,"[12, 34, 23, 45, 13, 65, 66]","def find_max(nums):
    max = nums[0]
    for num in nums[1:]:
        if num > max: 
            max = num
    return max

print(find_max([12, 34, 23, 45, 13, 65, 66]))"
Write a Python program to validate the given password according to the given criteria.,"The given criteria are: minimum 8 characters, should contain one uppercase letter, should contain one numeric digit","def validate_password(password):
    if len(password) < 8:
        return False
    if not any(c.isupper() for c in password):
        return False
    if not any(c.isdigit() for c in password):
        return False
    return True"
Generate code in Python to remove a given element from a given list.,"List: [2, 3, 4, 5, 6]
Element to remove: 5","list = [2, 3, 4, 5, 6]

list.remove(5)"
Edit the following line of code in Python to print out the result.,print(3 + 5 x 2),print(3 + (5 * 2))
Can you create a Python program to sort the values in a dictionary by their keys?,"{'Shiva': 23, 'Rohan': 12, 'Amit': 79}","d = {'Shiva': 23, 'Rohan': 12, 'Amit': 79} 

sorted_dict = dict(sorted(d.items(), key = lambda x : x[0])) 

print(""Sorted Dictionary :"", sorted_dict)"
Optimize a given Python program by remove any code that causes unnecessary performance reduction.,"for i in range(10000000):
    dig = 0
    num = i
    while num > 0:
          dig = dig + (num % 10)
          num = num // 10","cumulative_sum = 0
while i > 0:
    cumulative_sum += (i % 10) # add the last digit of the number to the cumulative sum
    i //= 10 # truncate the last digit of the number

# Output 
#cumulative_sum will hold the sum of all the digits in the number"
Develop an algorithm in Python for inserting an element into a given sorted array.,"sortedArray = [1, 5, 9, 12, 15]
x = 7","def insertSort(sortedArray, x): 
    n = len(sortedArray) 
    sortedArray.append(x) 
    for i in range(n-1, -1, -1): 
        if sortedArray[i] > x: 
            sortedArray[i + 1] = sortedArray[i] 
            sortedArray[i] = x 
    return sortedArray

print(insertSort(sortedArray, x))"
Create a Python program that uses regular expression to find and extract certain information from a text.,"Text: ""The customer's address is 123 Main Street, Anytown, USA.""","import re

text = ""The customer's address is 123 Main Street, Anytown, USA.""

address_pattern = re.compile(r'(\d+\s*(?:[A-Za-z]+\s*)+),\s*([A-Za-z\s]+),\s*([A-Z]{2})')

match = address_pattern.search(text)

if match:
 street = match[1]
 city = match[2]
 state = match[3]

print(f'{street}, {city}, {state}')"
"Write a function in Python that will take two inputs, an array of strings and a letter, and returns the number of elements in the array that contain the given letter.","['cat', 'dog', 'fish','apple']
letter: 'a'","def count_elements_with_letter(arr,letter):
   count = 0
   for a in arr:
      if letter in a:
         count += 1 
   
   return count 

count_elements_with_letter(['cat','dog','fish','apple'], 'a')
# output: 3"
Write a Python function for calculating factorials.,4,"def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n-1)

number = 4
result = factorial(number)
print(result)"
Write a Python program to extract the first letter of each word in a sentence and print it as an acronym.,This is a sample sentence.,SIS
Write a method in Python to calculate the sum of two numbers without using any built-in functions.,"3, 5","def sum_two_numbers(a, b):
    result = 0

    for i in range(b):
        result += a

    return result

a = 3
b = 5

print(sum_two_numbers(a, b))"
"Given a set of numbers, construct a Python program to calculate the sum of all prime numbers in the set.","[2, 3, 9, 14]","def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            return False
    return True
 
def sum_primes(nums):
    prime_sum = 0
    for num in nums:
        if is_prime(num):
            prime_sum += num
    return prime_sum
 
nums = [2, 3, 9, 14]
 
result = sum_primes(nums)
print(result)"
"Using Python, make a program which will generate a random password of a given length.",7,"import string
import random

def get_password(length):
    alphabet = string.ascii_letters + string.digits
    password = ''.join(random.choice(alphabet) for i in range(length))
    print (password)

get_password(7)"
Write a Python program to remove all elements of a given list except largest and smallest element.,"numbers = [3, 4, 6, 2, 8, 9, 1]","def get_min_max(numbers):
 max_num = max(numbers)
 min_num = min(numbers)
 new_list = []
 for i in numbers:
  if i == max_num or i == min_num:
   new_list.append(i)
 return new_list"
Generate a Python script using Scikit-Learn for performing k-means clustering on a given dataset.,"Dataset: The dataset consists of three features x1, x2 and x3.","import numpy as np
from sklearn.cluster import KMeans

data = np.array([[x1, x2, x3]]) #replace x1, x2 and x3 with the features in the dataset

kmeans = KMeans(n_clusters=3).fit(data)
clusters = kmeans.predict(data)"
Translate the following SQL query into Python code.,"SELECT Customer_Name, COUNT(Order_Id) AS Number_of_Orders 
FROM Orders 
GROUP BY Customer_Name","import pandas as pd

df = pd.read_sql_query(""SELECT Customer_Name, COUNT(Order_Id) AS Number_of_Orders FROM Orders GROUP BY Customer_Name"", con)
result = df.to_dict('records')"
"Generate a Python program to calculate the amount of time the user has been working on a specific task, given the start time and the current time.","start time=4:30pm, current time= 5:07pm","import datetime

def get_time_difference(start_time, current_time):
    start_time = datetime.datetime.strptime(start_time, ""%H:%M%p"")
    current_time = datetime.datetime.strptime(current_time, ""%H:%M%p"")
    return current_time - start_time"
Use a regular expression to find all emails in a given string in Python.,"myString = ""my name is Joe and my email is joe@example.com""","import re 

pattern = ""[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+""

result = re.findall(pattern, myString)

print(result) # Output will be [""joe@example.com""]"
"Create a Python function which takes a list, and prints out the third item of the list.","mylist = [1, 2, 3, 4, 5]","def thirdElement(mylist):
    """""" Print out the third element of the list. """"""
    print(mylist[2])

thirdElement(mylist)"
Create a for loop in python to print all the items in the given list.,"List = [1, 2, 3, 4]","for item in List:
    print(item)"
Construct a Python application to compare the values of two given dictionary.,"dict1 = {
  ""A"": 1,
  ""B"": 2
}
dict2 = {
  ""A"": 1,
  ""B"": 4
}","def compare_dicts(dict1, dict2):
    if len(dict1) != len(dict2):
        return False
    
    for key, value in dict1.items():
        if key not in dict2 or dict2[key] != value:
            return False
    
    return True"
How would you improve the following Python code to make it more efficient?,"def calculate_square(numbers):
    square_list = []
    for number in numbers:
        square_list.append(number * number)
	
    return square_list","def calculate_square(numbers):
    return [number * number for number in numbers]"
Complete this Python code to to generate a random password using a given length.,length = 10,"import string
import random

def generate_password(length):
    password_characters = string.ascii_letters + string.digits + string.punctuation 
    password = ''.join(random.choice(password_characters) for i in range(length))
    return password

print(generate_password(length))"
Write two Python functions. The first function should take in a list of strings and return the most common string. The second function should take in a list of integers and return the most common integer.,"words = ['cat', 'dog', 'fish', 'cat', 'mouse', 'dog']
numbers = [1, 2, 3, 4, 5, 6, 7, 3, 3, 4]","def most_common_string(word_list):
    return max(set(word_list), key=word_list.count)

def most_common_integer(int_list):
    return max(set(int_list), key=int_list.count)"
Create a Python program to generate an array of all possible unique combinations of 3 elements from a given array.,"[1, 2, 3, 4]","def combinations(arr):
 sol = []
 
 for i in range(len(arr)):
 for j in range(len(arr)):
 for k in range(len(arr)):
 if i != j and j != k and k != i:
 sol.append([arr[i], arr[j], arr[k]])
 
 return sol

print(combinations([1, 2, 3, 4])) # Outputs [[1, 2, 3], [1, 2, 4], [1, 3, 4], [2, 3, 4]]"
Create a Python script to calculate the average age of a list of people.,"people = [
 { 'name': 'John', 'age': 25 },
 { 'name': 'Jane', 'age': 34 },
 { 'name': 'Dave', 'age': 19 },
 { 'name': 'Sarah', 'age': 21 },
 { 'name': 'Henry', 'age': 29 }
]","total = 0
for person in people:
 total += person['age']

average = total / len(people)

print(f'Average age is {average}') // 24.4"
Write a Python script to calculate the perimeter of a triangle given 3 sides.,"side_1 = 10
side_2 = 12 
side_3 = 14","def calculate_perimeter(side1, side2, side3):
 perimeter = side1 + side2 + side3
 return perimeter

side1 = 10
side2 = 12
side3 = 14

perimeter = calculate_perimeter(side1, side2, side3)
print(""The perimeter of the triangle is:"", perimeter) # Output: 36"
Edit the given Python code to format the output as a table using tabulate.,"fruits = [""apple"", ""orange"", ""pineapple"", ""melon""]
for fruit in fruits:
    print(fruit)","import tabulate

fruits = [""apple"", ""orange"", ""pineapple"", ""melon""] 
table = [(fruit,) for fruit in fruits] 
print(tabulate.tabulate(table, headers=[""Fruits""])) 
# Output: 
# Fruits
# apple
# orange
# pineapple
# melon"
Create a function that implements a linear search algorithm in Python.,"x = 20
arr = [10, 8, 6, 4 2, 20]","def linearSearch(arr, x): 
    for i in range(len(arr)): 
        if arr[i] == x: 
            return i 
    return -1"
Create a Python function to calculate the Fibonacci sequence with a given number as the input.,6,"def fibonacci_sequence(num): 
 
    a = 0
    b = 1
 
    if num < 0: 
        print(""Incorrect input"") 
    elif num == 0: 
        return a 
    elif num == 1: 
        return b 
    else: 
        for i in range(2,num): 
            c = a + b 
            a = b 
            b = c 
        return b 
 
print(fibonacci_sequence(num))"
Write a Python script that takes two strings as input and prints the string which is obtained by combining the two strings in lexical order.,"String1 = ""Hello"" 
String2 = ""World""","def combine_strings(s1, s2):
 if s1 < s2:
 print(s1+s2)
 else:
 print(s2+s1)

combine_strings(""Hello"", ""World"")
# Output: HelloWorld"
Create a program in Python to delete all duplicates from a given list.,"list = [1, 2, 3, 1, 3, 4]","def remove_duplicates(list):
    new_list = []
    for e in list:
        if e not in new_list:
            new_list.append(e)
    return new_list

list = [1, 2, 3, 1, 3, 4]
list = remove_duplicates(list)
print(list)"
Identify the language used to write the following program:,"def hello_world(): 
    print(""Hello World!"")",Python.
Optimize this given Python code using list comprehension.,"word_list = ['hello', 'world', 'good', 'morning']

for i in range(len(word_list)): 
    word_list[i] = word_list[i].upper()","word_list = ['hello', 'world', 'good', 'morning']

word_list = [word.upper() for word in word_list]"
"Given a list of integers, write a Python program to find the largest and second largest numbers in the list.","[10, 20, 5, 45, 25]","def find_largest_and_second_largest(nums):
    max1 = float('-inf')
    max2 = float('-inf')
    for n in nums:
        if n > max1:
            max2 = max1
            max1 = n
        elif n > max2 and n != max1:
            max2 = n
    return max1, max2"
Rewrite a Python code snippet to take advantage of vectorization.,"# Compute list of squared values
my_list = [1,2,3,4,5]
out_list = []

for element in my_list:
    out_list.append(pow(element,2))","# Compute list of squared values using vectorization
my_list = [1,2,3,4,5]

out_list = [pow(element,2) for element in my_list]"
Write a Python program that calculates the greatest common divisor of two numbers and displays the result.,10 and 20,"def gcd(a, b):
    if b == 0: 
        return a 
    return gcd(b, a % b) 
  
num1 = 10
num2 = 20

gcd_value = gcd(num1, num2)

print(f'The greatest common divisor of {num1} and {num2} is {gcd_value}')"
Create a model in Python using Linear Regression that can predict the housing prices given the living area and number of rooms.,"data = [[2000, 3], [1600, 2.5], [2400, 3.5], [1400, 2], [3000, 4]]","import numpy as np
from sklearn import linear_model

X = np.array([[2000, 3], [1600, 2.5], [2400, 3.5], [1400, 2], [3000, 4]])
y = np.array([75000, 43000, 59000, 32000, 85000])

model = linear_model.LinearRegression()
model.fit(X, y)

prediction = model.predict([[2200, 3]])"
Generate a Python program to append a given element to the end of the list.,"[2, 3, 4], 6","arr = [2, 3, 4] 
arr.append(6)
print(arr)"
Construct a Python code to combine the elements of two given list and return a sorted union list.,"input_list_1: [4, 10, 2]
input_list_2: [10, 2, 15]","def union_list(list1, list2): 
    list3 = list1 + list2 
    list3.sort() 
    return list3 
    
union_list(input_list_1, input_list_2)"
Design an algorithm in Python and write a function to reverse an array.,"[1,2,3,4]","def reverse_array(arr):
    start = 0
    end = len(arr) - 1
    while(start < end):
        arr[start], arr[end] = arr[end], arr[start]
        start += 1
        end -= 1
    return arr"
Edit the following Python class such that it can accept a variable number of parameters.,"class Person:
    def __init__(self, name, age, weight):
        self.name = name
        self.age = age
        self.weight = weight","class Person:
    def __init__(self, *args):
        self.name = args[0]
        self.age = args[1]
        self.weight = args[2]"
Construct a Python program that takes a list of words and checks if the list is in alphabetical order.,"['cat', 'dog', 'hippo', 'horse']","def check_if_list_is_in_alphabetical_order(words_list):
    for i in range(len(words_list)-1):
        if words_list[i] > words_list[i+1]:
            return False
    return True
 
words_list = ['cat', 'dog', 'hippo', 'horse']
result = check_if_list_is_in_alphabetical_order(words_list)
print (result)"
Complete the Python program to automatically add 3 months to a date.,"import datetime
date_str = '2020-01-31'
def add_three_months","import datetime
date_str = '2020-01-31'

def add_three_months(date_str):
    d = datetime.datetime.strptime(date_str, '%Y-%m-%d')
    d = d + datetime.timedelta(days=90)
    date_str = d.strftime('%Y-%m-%d')
    return date_str"
Create a Python program to parse and modify the following input string.,"""ABC 123 XYZ 456""","input_string = ""ABC 123 XYZ 456""
output_string = """"

for char in input_string:
    if char.isalpha():
        output_string += char.lower()
    else:
        output_string += char

print(output_string)"
Write a machine learning algorithm in Python to find the nearest neighbors of a given point.,"point = [3, 4]","from sklearn.neighbors import NearestNeighbors

def nearest_neighbors(point):
    neighbors = NearestNeighbors(n_neighbors=1).fit(point) 
    return neighbors.kneighbors([point], return_distance=False)[0]"
"Given a list of integers, write a Python program to detect whether or not the list contains an even number.","[1, 3, 5, 7, 9]","def check_even(numbers):
  for num in numbers:
    if num % 2 == 0:
      return True
  return False"
Develop a Python program to find out all the perfect numbers between 1 and n.,n = 30,"def perfect_numbers(n):
    perfect_nums = []
    for num in range(1, n+1):
        sum = 0
        for i in range(1, num):
            if num % i == 0:
                sum += i
        if sum == num:
            perfect_nums.append(num)
    return perfect_nums

n = 30
print(perfect_numbers(n))"
Create a Python program to optimize a given function using the Nelder-Mead method.,"def f(x):
 return x[0]**2 + 4*x[1]**2
[3, -2]","from scipy.optimize import minimize
def f(x):
    return x[0]**2 + 4*x[1]**2

res = minimize(f, [3, -2], method='nelder-mead')

print(res.x)"
Create a Python program to parse a CSV string and print each row in a readable format.,"CSVString = ""John Doe, 22, ABC Street, 07777\nMary Smith, 26, XYZ Street, 02222""","import csv 
  
csvString = ""John Doe, 22, ABC Street, 07777\nMary Smith, 26, XYZ Street, 02222""
  
# Convert CSV String to List
csvList = csvString.split('\n')
  
# Print each Row of CSV 
for row in csvList: 
    print(row)"
Write a function in Python that takes a list of integers as an input and returns a new list with every even number doubled and every odd number quadrupled.,"[2, 5, 6, 8]","def multiply_values(lst):
 return [x * 2 if x % 2 == 0 else x * 4 for x in lst]

# Example
lst = [2, 5, 6, 8]
print(multiply_values(lst))
# [4, 20, 12, 16]"
Create a program in Python which will print the names of the top 3 numbers in a given list.,"[1, 43, 124, 87, 92]","""""""
Print the names of the top 3 numbers in a given list 
""""""
 
my_list = [1, 43, 124, 87, 92]

# Sort the list
my_list.sort(reverse=True)

# Print the top 3 numbers
print(my_list[0], ""is the first biggest number"")
print(my_list[1], ""is the second biggest number"")
print(my_list[2], ""is the third biggest number"")"
Design a Python program for implementing a stack with the following methods.,"pop(), push(x), and is_empty().","class Stack:
    def __init__(self):
        self.items = []

    def push(self, x): 
        self.items.append(x) 

    def pop(self): 
        if not self.is_empty():
            return self.items.pop()
        else:
            return None
        
    def is_empty(self): 
        return len(self.items) == 0"
"Create a Python program that takes an array of strings and returns an array of all strings that start with the letter ""A"".","[""Apple"", ""Grape"", ""Banana"", ""Aeroplane""]","def filter_array_elements(arr): 
    result = [] 
    for string in arr: 
        if string[0] == 'A': 
            result.append(string) 
    return result

output = filter_array_elements([""Apple"", ""Grape"", ""Banana"", ""Aeroplane""])
print(output)"
Can you provide a piece of code in Python to split a string on a certain delimiter?,"string = ""Hello,how,are,you""","my_list = string.split("","")"
Build an algorithm in Python to concatenate two binary strings.,"str1 = ""10101""
str2 = ""101""","def concatTwoBinStrings(str1, str2):
    str = """"
    for i in (str1 + str2):
        if i == '0':
            str += '0'
        else:
            str += '1'
    return str

str1 = ""10101""
str2 = ""101""

print(concatTwoBinStrings(str1, str2))"
Compose a python program that can search a text document for a given word.,"text_file=""text.txt""
query_word=""apple""","def search_for_word(text_file, query_word):
    words = []

    with open(text_file, ""r"") as file:
        for line in file:
            words.extend(line.split())

    if query_word in words:
        return True
    else:
        return False"
Generate a Python program to classify a given list of numbers using try and except block.,"list_of_numbers = [16, 5, 9, 21, 17]","def classify_numbers(list_of_numbers):
    for number in list_of_numbers:
        try:
            if number % 3 == 0:
                print('Number {} is divisible by 3'.format(number))
        except ZeroDivisionError:
            print('Number {} cannot be divided by 3: division by zero bug'.format(number))"
Develop an algorithm in Python to find the number of words in a given text string.,"""Hello world, this is a test.""","def get_word_count(text):
    words = text.split()
    return len(words)

word_count = get_word_count(""Hello world, this is a test."")
print(word_count)"
Generate python code to implement a linear search algorithm to find a particular value in an array.,"array = [5, 10, 15, 20]","def linear_search(array, value):
    length = len(array)
    
    for i in range(length):
        if array[i] == value:
            return i
            
    return -1

print(linear_search(array, 15))"
Write a python program to sort a list of strings based on their lengths.,"['test', 'sample', 'hello', 'world']","list_of_strings = ['test', 'sample', 'hello', 'world']

list_of_strings.sort(key=len)

print(list_of_strings)"
"Create a Python program that computes the average of the numbers in the list [3, 5, 7, 9].","[3, 5, 7, 9]","def get_average(numbers):
 sum = 0
 for num in numbers:
  sum = sum + num
 return sum / len(numbers)
 
numbers = [3, 5, 7, 9]
average = get_average(numbers)
print(average) # Outputs 6.5"
Compute the length of a string in Python,"str = ""Hello, World!""","str = ""Hello, World!""
length = len(str)
print('Length of string is:',length) # Length of string is: 13"
Write a Python program to create a bar chart from a given dataset.,"dataset = [5, 8, 10, 12, 3, 6]","import matplotlib.pyplot as plt 

# Data to plot 
data = [5, 8, 10, 12, 3, 6] 

# Plot the data 
plt.bar(data, data) 

# Set labels 
plt.xlabel('Data') 
plt.ylabel('Values') 

# Title 
plt.title('Bar Chart of Data Set') 

# Show the plot 
plt.show()"
"Starting from given list of numbers, use Python to generate a new list of integers containing the square root of each number in original list.","[4, 9, 16, 25]","import math 
def get_sqrt_list(lst): 
    sqrt_list = [] 
    for el in lst: 
        sqrt_list.append(math.sqrt(el)) 
    return sqrt_list 
print(get_sqrt_list([4, 9, 16, 25]))"
Create a function in Python that takes two parameters and prints out the larger of them.,"parameter_1 = 7
parameter_2 = 9","def printMax(parameter_1, parameter_2):
    if parameter_1 > parameter_2:
        print(parameter_1)
    else:
      print(parameter_2)"
Write a Python program that takes the two numbers and creates a generator expression to give you the sum of the numbers.,"5, 10","sum = sum(x for x in range(5,11))
print(sum)"
"Create a Python program that takes a list of carbohydrates [glucose, fructose, galactose] and calculates the net energy charge.","[glucose, fructose, galactose]","net_energy_charge = 0

for carbohydrate in list_of_carbohydrates:
 if carbohydrate == 'glucose':
  net_energy_charge += -2.3
 elif carbohydrate == 'fructose':
  net_energy_charge += -2.5
 elif carbohydrate == 'galactose':
  net_energy_charge += -3

print(net_energy_charge)"
Rewrite the following bash script using Python.,"#!/bin/bash
echo ""Enter a name: ""
read name
echo ""Hello $name""","name = input('Enter a name: ')
print(f'Hello {name}')"
Construct a code that identifies the sum of elements of an array in Python.,"[4, 6, 8, 2]","def sum_elements(arr):
    summ = 0
    for i in arr: 
        summ += i
    return summ

summ = sum_elements([4, 6, 8, 2])
print(summ)"
Implement a program in Python to get the sum of all even numbers in a list of integers.,"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","def sum_of_even_numbers(lst): 
  sum = 0
  for i in lst: 
    if i%2 == 0: 
      sum = sum + i 
  return sum 
  
print(sum_of_even_numbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))"
Write a Python program to split a string into a list of substrings.,"String: hello world
Delimiter: "" ""","words = str.split("" "")"
Write an algorithm in Python that calculates the maximum subarray of a given array.,"[-2,1,-3,4,-1,2,1,-5,4]","def max_subarray(arr):
 max_so_far = arr[0] 
 max_ending_here = arr[0] 
   
 for i in range(1, len(arr)): 
  max_ending_here = max(arr[i], max_ending_here + arr[i]) 
  max_so_far = max(max_so_far, max_ending_here)  
   
 return max_so_far"
Create a python dictionary to store the following details,"Name = John
Age = 27
Gender = Male","person_details = {
    'Name': 'John',
    'Age': 27,
    'Gender': 'Male'
}"
Develop a Python program that calculates the sum of positive integers up to and including a given number 'n'.,n = 10,"def sum_of_first_n_numbers(n): 
	sum = 0
	
	# iterate over all numbers 
	# from 0 to n 
	for num in range(0, n+1): 
		sum += num 
	
	return sum

n = 10
print(sum_of_first_n_numbers(n)) 

# Output: 55"
Design an algorithm to find out the top 5 characters with the highest occurrence from a string in Python.,This is a test sentence to use for the example.,"from collections import Counter

def top_characters(string):
    counter = Counter(string).most_common(5)
    return counter
    
string = ""This is a test sentence to use for the example.""
print(top_characters(string))
# Output: [('e', 5), ('s', 4), ('t', 4), ('o', 3), ('i', 3)]"
Develop a Python program to compact a given list of integers by removing its duplicate elements.,"[1, 1, 2, 2, 3, 4, 4, 5]","def compact_list(array):
    return list(set(array))"
Write a Python program to insert an item at a given position into a list,"lst = [""Red"", ""Orange"", ""Yellow""]
item = ""Black""
pos = 2","def insert_item(lst, item, pos):
    lst.insert(pos, item)
    return lst

lst = [""Red"", ""Orange"", ""Yellow""]
item = ""Black""
pos = 2

print(insert_item(lst, item, pos))"
Write a Python program to read a given string and sort it alphabetically.,"""Hello, World!""","def sort_alphabetically(input_string):
    chars = list(input_string)
    chars.sort()
    print("""".join(chars))

sort_alphabetically(""Hello, World!"")"
Transform the JSON string below into a Python dictionary.,"{""name"": ""John"", ""age"": 30, ""city"": ""New York""}","import json
data = '{""name"": ""John"", ""age"": 30, ""city"": ""New York""}'
my_dict = json.loads(data)"
Rewrite the following python program using list comprehension,"list = ['apple', 'banana', 'cat', 'dog', 'elephant']
new_list = []
for x in list:
    new_list.append(x.upper())","list = ['apple', 'banana', 'cat', 'dog', 'elephant']
new_list = [x.upper() for x in list]"
Write a Python program that will determine the maximum number of unique paths a person can take from one point to another in a two-dimensional grid.,"grid = [
[0,1],
[1,1]
]","def unique_paths(grid):
 rows = len(grid)
 cols = len(grid[0])
 
 dp = [[0 for i in range(cols)] for j in range(rows)]
 
 for i in range(rows):
 for j in range(cols):
 if i == 0 or j == 0:
 dp[i][j] = 1
 else:
 dp[i][j] = dp[i][j-1] + dp[i-1][j]
 
 return dp[-1][-1]
 
print(unique_paths(grid))
# Output: 2"
Modify the given Python code to improve its performance.,"def find_sum(n):
    total = 0
    for i in range(n+1):
        total += i
    return total","def find_sum(n):
    # base case
    if n == 0:
        return 0
    # recursive case
    else:
        return n + find_sum(n-1)"
Generate an optimized version of the following Python program.,"def calculate_sum(a,b):
    result = 0
    for x in range(a, b+1):
        result += x
    return result

sum = calculate_sum(1, 10)
print(sum)","def calculate_sum(a,b):
    return (b*(b+1))//2 - ((a-1)*a)//2

sum = calculate_sum(1, 10)
print(sum)"
Make a function to print out all substrings of a given string in Python,"str = ""coding""","def print_substrings(str):
    for i in range(len(str)):
        for j in range(i+1, len(str)+1):
            print(str[i:j])

if __name__ == ""__main__"":
    str = ""coding""
    print_substrings(str)"
Refactor the following Python code to use list comprehension instead of for-loops.,"my_list = [1, 2, 3, 4, 5] 
new_list = []

for item in my_list:
 if item % 2 == 0:
 new_list.append(item**2)","my_list = [1, 2, 3, 4, 5] 
new_list = [x**2 for x in my_list if x % 2 == 0]"
Code a python class that accepts a list of names as input and prints them on a separate line.,"List:[""John"", ""James"", ""Jenny"", ""Frank""]","class Person: 
  def __init__(self, names): 
    self.names = names
    
  def print_names(self): 
    for name in self.names: 
      print(name) 
      
person = Person([""John"", ""James"", ""Jenny"", ""Frank""])
person.print_names()"
Update the given Python code such that the output will be printed in ascending order.,"lst = [3, 1, 4, 5, 2]

for number in lst:
    print(number)","lst = [3, 1, 4, 5, 2]

for number in sorted(lst):
    print(number)"
Create a web scraper in Python to scrape product prices from a given URL.,URL: https://example.com/product-list,"import requests
from bs4 import BeautifulSoup

# make the request
URL = ""https://example.com/product-list""
response = requests.get(URL)

# parse the HTML
soup = BeautifulSoup(response.content, 'html.parser')

# find all product prices on the page
prices = soup.find_all('span', class_=""price"")

# print out all the prices
for price in prices:
 print(price.text)"
Develop a function in Python to concatenate two lists,"list1 = [1,2,3]
list2 = [4,5,6]","def concatenateLists(list1, list2): 
    list3 = list1 + list2 
    return list3"
Write Python code to find the sum of products of respective array elements,"[1, 2, 3, 4]
[5, 10, 15, 20]","def sum_product_array(arr1, arr2):
    total = 0
    for i in range(len(arr1)):
        total += arr1[i] * arr2[i]
    return total"
Write a python script that takes a list of strings as input and reverse the order of each sentence.,"sentences = [""Hello world!"", ""I am learning Python!"", ""How are you?""]","sentences = [""Hello world!"", ""I am learning Python!"", ""How are you?""]

reversed_sentences = [sentence[::-1] for sentence in sentences]
 
print(reversed_sentences)
# Output: [""!dlrow olleH"", ""!nohtyP gninrael m'I"", ""?uoy era woH""]"
Create a Python script that extracts a 3x3 submatrix from a 3x5 matrix.,"[[1, 2, 3, 4, 5],
[6, 7, 8, 9, 0],
[1, 2, 3, 4, 5]]","matrix = [[1, 2, 3, 4, 5],
         [6, 7, 8, 9, 0],
         [1, 2, 3, 4, 5]]

submatrix = [[matrix[0][0], matrix[0][1], matrix[0][2]],
             [matrix[1][0], matrix[1][1], matrix[1][2]],
             [matrix[2][0], matrix[2][1], matrix[2][2]]]

print(submatrix)"
Design a Python code solution to reverse a string with a given input.,"string = ""Hello world!""","def reverse_string(string):
    return string[::-1]

string = ""Hello world!""
print(reverse_string(string))"
Convert the following JSON string into a Python dictionary.,"{""a"":1, ""b"": ""Hello"", ""c"": {""d"": [34, 56]}}","import json

json_string = '{""a"":1, ""b"": ""Hello"", ""c"": {""d"": [34, 56]}}'
parsed_json = json.loads(json_string)

print(parsed_json)  # Output: {'a': 1, 'b': 'Hello', 'c': {'d': [34, 56]}}"
Write a function in Python that takes a list of numbers as input and returns the product of all the numbers.,"[1, 2, 3, 4]","def product(lst):
    product = 1
    for num in lst:
        product *= num
    return product

print(product([1, 2, 3, 4]))"
Develop a program in Python that reverses a given string.,"""Hello World!""","def reverse_string(string):
    reversed_string = string[::-1] 
    return reversed_string

reversed_string = reverse_string(""Hello World!"")
print(reversed_string)"
Take the list of people below and create a Python dictionary with the names as keys and the ages as values.,"John (20), Jane (40), Alex (18), Peter (45)","people_dict = {'John': 20, 'Jane': 40, 'Alex': 18, 'Peter': 45}"
Design a program in Python to compute the Nth power of a given number.,"Number: 6
Power: 4","def pow(num, pow):
    result = 1
    for i in range(pow):
        result *= num
    return result"
Modify this python code to increase the speed of the program.,"def divide(a, b):
    return a/b

a = 5
b = 2
number = divide(a, b)
print(number)","def divide(a, b):
    return a // b

a = 5
b = 2
number = divide(a, b)
print(number)"
Modify the following Python program to explore and retrieve data from a dataset using Pandas.,"import pandas as pd

df = pd.read_csv('data.csv')

print(df)","import pandas as pd

df = pd.read_csv('data.csv')

print(df.head())
print(df.info())
print(""Average age of passengers:"", df['Age'].mean())
print(""Number of female passengers:"", df[df['Sex'] == 'female'].shape[0])
print(""Oldest passenger:"", df.loc[df['Age'].idxmax()])"
Sort an array of strings in descending order according to their length.,"['coding', 'algorithm', 'programming', 'python']","['programming', 'algorithm', 'python', 'coding']"
can you provide a python for loop that prints out the product of two lists?,"list1 = [1, 2, 3]
list2 = [4, 5, 6]","list1 = [1, 2, 3]
list2 = [4, 5, 6]

for i in range(len(list1)):
    product = list1[i] * list2[i]
    print(product)"
Create a Python 3 program to sort a list of numbers in ascending order.,"[5, 7 ,1 ,3, 4]","def sort_list(lst):
  lst.sort()
  return lst

lst = [5, 7 ,1 ,3, 4]
sorted_list = sort_list(lst)
print(sorted_list)"
Convert the given string from Upper Camel Case notation to lower snake case notation in Python.,UpperCamelCase,"lower_snake_case = ''.join(w.lower() for w in UpperCamelCase.split()).replace('', '_')[1:]"
Construct a Python program that can extract the name of an author from a given book title.,title = 'Harry Potter and the Sorcerer's Stone',"def extract_author(title):
    title_words = title.split()
    for word in title_words[::-1]:
        if word[0].isupper():
            return word

print(extract_author(title)) # Potter"
Create a simple Python program to calculate the sum of two numbers and print out the result.,"Number 1: 3
Number 2: 5","num1 = 3
num2 = 5

result = num1 + num2

print(f'The sum of {num1} and {num2} is {result}')"
Create a python function that accepts two lists as arguments and returns true if the first list is contained within the second,"list_a = [1,2,3,4]
list_b = [1,2,3,4,5,6,7]","def is_contained(list_a, list_b):
    for x in list_b: 
        if x not in list_a: 
            return False 
  
    return True"
"Make a program in Python that takes a list of integers as input and prints the average, maximum, and minimum.","[1, 7, 4, 6]","def calculate_avg_max_min(list_of_int):
    avg = sum(list_of_int) / len(list_of_int)
    maximum = max(list_of_int)
    minimum = min(list_of_int)
    return avg, maximum, minimum

list_of_int = [1, 7, 4, 6]
avg, max_int, min_int = calculate_avg_max_min(list_of_int)
print(""Average ="", avg)
print(""Maximum ="", max_int)
print(""Minimum ="", min_int)"
Write a Python class that has a method that encrypts a given string using Caesar’s Cypher.,"Key = 3
String = “Hello World”","class Encrypter:
    def ceaserCypherEncryptor(self, key, string):
        encStr = """"
        for ch in string:
            encStr += chr(ord(ch)+key)
        return encStr
        
e = Encrypter()
encStr = e.ceaserCypherEncryptor(3, ""Hello World"") 
print(encStr) 
# Output 
Khoor#Zruog"
Remove all the commented code from Python program.,"# This code will print ""Hello World!""
print(""Hello World!"")
# This code can be used to increment i
i=i+1","print(""Hello World!"")
i=i+1"
Create a Python function to calculate the area of a triangle given the lengths of its three sides.,"5, 6, 7","import math

def get_area(a, b, c):
    s = (a + b + c) / 2
    area = math.sqrt(s*(s-a)*(s-b)*(s-c))
    return area

input_data = 5, 6, 7
area = get_area(*input_data)
print(area)  # Output: 14.696938456699069"
Create a WebScraper in Python that extracts the titles and links from a given URL.,The web page https://www.example.com,"from bs4 import BeautifulSoup
import requests

url = 'https://www.example.com'
r = requests.get(url)

soup = BeautifulSoup(r.content, 'html.parser')

# Extract titles and links
titles = []
links = []
for link in soup.find_all('a'):
 titles.append(link.get('title'))
 links.append(link.get('href'))

print(titles, links)"
"Generate a shell script that can start a web server. The script should take a single argument, the name of the directory where the web server should be started.",app_dir: path/to/application/dir,"#!/bin/bash

if [ -z ""$1"" ]; then
 echo ""Usage: $0 [dir]""
 exit 1
fi

DIR=""""$1""""

if [ ! -d ""$DIR"" ]; then
 echo ""Error: Directory \""$DIR\"" does not exist""
 exit 1
fi

cd ""$DIR""
python -m SimpleHTTPServer 8080"
Create a python code to extract the first name from a given full name.,full_name = 'John Smith',"def extractFirstName(full_name):
    first_name = full_name.split()[0]
    return first_name

# Input
full_name = 'John Smith'

# Output
result = extractFirstName(full_name)
print(result)"
Suggest a Python program to create a list filled with random numbers,"Length = 10
Lower bound = 0
Upper bound = 1000","import random

def create_random_number_list(length, lower_bound, upper_bound):
    output_list = []
    for i in range(length):
        output_list.append(random.randint(lower_bound, upper_bound))
    return output_list

length = 10
lower_bound = 0
upper_bound = 1000

result = create_random_number_list(length, lower_bound, upper_bound)
print(result)"
Generate a function in Python that takes an array of numbers and returns an array of the squares of the numbers.,"[1,2,3]","""""""
A function to return the squares of an array in Python 
""""""

def square_array(input_array): 
  squared_array = []
  for i in input_array: 
    squared_array.append(i*i)
  return squared_array"
Change the following Python code to work with python 3 and print output “My name is Mary”.,print 'My name is Mary',print('My name is Mary')
Generate Python code to print the first ‘n’ elements of the Fibonacci series.,7,"def print_fibonacci_series(n):
    a, b = 0, 1
    for i in range(n):
        print(a)
        a, b = b, a + b

print_fibonacci_series(7)"
Edit a Python program to output the maximum value,"def find_max(lst):
    max = lst[0]
    for i in lst:
        if i > max:
            max = i","def find_max(lst):
    max = lst[0]
    for i in lst:
        if i > max:
            max = i
    return max"
Edit the following Python Program to count the occurrences of a specific number.,"arr = [1, 2, 2, 3, 4]
num = 2

count = 0

for i in arr:","arr = [1, 2, 2, 3, 4]
num = 2

count = 0

for i in arr:
    if i == num:
        count += 1

print(count) #outputs 2"
Design a function in Python that reverses a string.,"string = ""Hello World""","def reverse_string(str): 
    return str[::-1]  
  
reverse = reverse_string(string) 
print(""The reversed string is : "",reverse)"
Generate a Python program that calculates standard deviation of a set of numbers.,"[20, 25, 30, 35, 40]","def std_dev(data_set):
    mean = sum(data_set) / len(data_set)
    total_sum = 0
    for i in data_set:
        total_sum += (i - mean) ** 2
    variance = total_sum / len(data_set)
    std_dev = variance ** (1/2)
    return std_dev

data_set = [20, 25, 30, 35, 40]
print(""Standard Deviation: "" + str(std_dev(data_set)))"
Create a Python program to implement the triangle numbers.,n = 5,"def triangle_numbers(n):
    res = 0
    for i in range(n):
        res += i+1
    return res

result = triangle_numbers(n)
print(result) # output: 15"
Write a Python program to generate a SQL query for selecting rows that contain a given value in a given column.,"Column name: age
Value: 25",SELECT * FROM table_name WHERE age=25;
"Given a list of numbers, write a Python program to find the frequency of each number in the list.","my_list = [1, 2, 3, 4, 1, 2, 3]","from collections import Counter

def find_frequency(list): 
    return Counter(list) 

my_list = [1, 2, 3, 4, 1, 2, 3]
freq = find_frequency(my_list)
print(freq)"
Propose a solution to fetch an online catalog of products and display them in a tabular format using Python.,Catalog consisting of 1000 products,"import requests
import pandas as pd

# Set the request URL
url = ""http://example.com/products""

# Send the request and retrieve the data
data = requests.get(url).json()

# Convert the data into a pandas DataFrame
df = pd.DataFrame(data)

# Print the resulting table
print(df)"
Write a Python program that calculates the nth Fibonacci number where n is a positive integer given by the user.,8,"# Fibonacci Sequence

def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 

    elif n==1: 
        return 0
    
    elif n==2: 
        return 1 
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2) 

n = int(input(""Enter the value of n: ""))
print(Fibonacci(n))"
Generate a Python program that takes a numerical list and finds the index of the largest value.,"[3, 5, 9, 10]","# list of numbers 
list = [3, 5, 9, 10] 

# maximum number 
MaxNum = max(list) 

# index of the maximum number 
index = list.index(MaxNum) 

print(""Maximum number is:"", MaxNum) 
print(""Index of maximum number is:"", index)"
Make a code in Python to find the mode of the given set of values.,"1, 2, 3, 2, 4, 2","def find_mode(list):
  max_count = 0
  mode = list[0]
  count = {}
  for item in list:
    if (item in count):
      count[item] += 1
    else:
      count[item] = 1
    if (count[item] > max_count):
      max_count = count[item]
      mode = item
  return mode"
Create a Python function that takes in a list and prints a dictionary with the elements and the product of each element.,"list = [7, 8, 5]","def product_of_list(list):
    output = {}
    for element in list:
        output[element] = element * element
    return output

print(product_of_list([7, 8, 5]))"
Optimize a Python program to reverse a string with a lower time complexity.,"string = ""Hello World!""","def reverse_string(string): 
    return string[::-1] 
    
# Time Complexity: O(n)
# Space Complexity: O(1)"
Generate a Python program that searches for a given key in a dictionary.,key: 'name',"my_dict = {
 'name': 'John',
 'age': 26,
 'salary': 5000
}

find_key = 'name'

if find_key in my_dict:
 print(my_dict[find_key])"
Create a Python program to delete all characters at odd index in a given string.,"Hello, World!","def deleteAtOddIndex(s):
    output = """"
    for i in range(len(s)):
        # delete the character at an odd index
        if i % 2 != 0:
            pass
        else:
            output += s[i]
    return output"
"Create a function in Python that takes a name and age and prints a greeting like ""Hi, my name is <name> and I'm <age> years old.""","""John"", 28","def greeting(name, age):
    print(""Hi, my name is "", name, ""and I'm"", age, ""years old."")

greeting(""John"", 28)"
Write a code to display prime numbers between two given numbers using python.,"start = 1
end = 10","def displayPrime(start, end): 
    for i in range(start, end + 1): 
        if isPrime(i): 
            print(i)
          
def isPrime(n): 
    if n <= 1: 
        return False
    for i in range(2, n): 
        if n % i == 0: 
            return False  
    return True
    
if __name__ == '__main__': 
    start = 1
    end = 10
    displayPrime(start, end) # 2, 3, 5, 7"
Generate a Python program to filter a list of strings to only return words that have 7 or more characters.,"words = ['Apple', 'Banana', 'Cabbage', 'Cucumber']","words = ['Apple', 'Banana', 'Cabbage', 'Cucumber']

def filter_list(words):
  filtered_list = []

  for word in words:
    if len(word) >= 7:
      filtered_list.append(word)

  return filtered_list"
Generate a Python program to find the number of words with distinct letters in a given string,string = 'hello world',"def count_distinct_letters(string):
   distinct_letters = set()
   for word in string.split(' '):
        distinct_letters.update(set(word))
   return len(distinct_letters)

# example
string = 'hello world'
print(count_distinct_letters(string)) # 6"
Create a Python program to reverse a given stack without recursion.,"stack = [1, 2, 3]","def reverse_stack(stack):
    rev_stack = []

    while(stack):
        rev_stack.append(stack.pop())

    return rev_stack

# Usage
stack = [1, 2, 3]
print(reverse_stack(stack)) # => [3, 2, 1]"
Design a Python program to convert all the characters of a string to upper case.,This is a sample sentence.,"def to_upper(s):
    return s.upper()

result = to_upper(""This is a sample sentence."")
print(result)"
Create a Python class that will store a list of integers and calculate the sum of all the elements in the list.,"[2, 3, 5, 7]","class CalcListSum:
  def __init__(self, numbers):
    self.numbers = numbers

  def get_sum(self):
    sum = 0
    for num in self.numbers:
      sum += num
    return sum 

nums = [2, 3, 5, 7]
calc_sum = CalcListSum(nums)
sum_of_nums = calc_sum.get_sum()
print(sum_of_nums)"
Generate a python script that plans a route from point A to point B.,"Point A = (1.2, -2.6)
Point B = (7.9, 5.3)","# import modules
import math

# function to calculate the distance
def route_distance(A, B):
    dX = B[0] - A[0]
    dY = B[1] - A[1]
    return math.sqrt(dX * dX + dY * dY)

# Driver code 
A = (1.2, -2.6) 
B = (7.9, 5.3)

dist = route_distance(A, B)

print(""Distance from A to B is:"", dist)"
Create an algorithm in Python toimplement quick sort.,"[8, 2, 6, 4, 5, 1]","def quick_sort(arr):
    if len(arr) < 2:
        return arr
    else:
        pivot = arr[0]
        less_than_pivot = [i for i in arr[1:] if i <= pivot]
        greater_than_pivot = [i for i in arr[1:] if i > pivot]
 
        return quick_sort(less_than_pivot) + [pivot] + quick_sort(greater_than_pivot)"
Write a Python program to determine the maximum value in a dictionary.,"{
  ""Potato"": 1,
  ""Onion"": 3,
  ""Carrot"": 2
}","def get_max_value(dictionary):
    max_value = 0
    for k, v in dictionary.items():
        if v > max_value:
            max_value = v
    return max_value

print(get_max_value({
  ""Potato"": 1,
  ""Onion"": 3,
  ""Carrot"": 2
})) 
#prints 3"
Create a Python program that converts a given Fahrenheit temperature into Celsius.,98.6,"def fahrenheit_to_celsius(f):
    celsius = (f - 32.0) * (5.0/9.0)
    return celsius

fahrenheit = 98.6
celsius = fahrenheit_to_celsius(fahrenheit)
print(""The temperature in celsius is: "", celsius)"
Refactor the following code to be more pythonic,"def print_all(sequences):
    for sequence in sequences:
        print(sequence)","def print_all(sequences):
    [print(sequence) for sequence in sequences]"
Generate a Python program which reads a string as input and removes all vowels present in the string and print out the revised string.,apple,"def removeVowels(string): 
    vowels = ('a', 'e', 'i', 'o', 'u')  
    revised_string = """"
    for letter in string:
        if letter.lower() not in vowels:
            revised_string += letter 
    return revised_string
    
string = ""apple""
reviseString = removeVowels(string)
print(""Revised string ="", reviseString)"
Create a Python program for visualizing a given dataset using matplotlib.,"x = [1, 2, 3, 4, 5]
y = [1, 4, 9, 16, 25]","import matplotlib.pyplot as plt 

x = [1, 2, 3, 4, 5] 
y = [1, 4, 9, 16, 25] 
  
# plotting the points  
plt.plot(x, y) 

# naming the x axis 
plt.xlabel('x - axis') 
# naming the y axis 
plt.ylabel('y - axis') 
  
# giving a title to my graph 
plt.title('My first graph!') 
  
# function to show the plot 
plt.show()"
Write a Python program to classify the given input according to different categories.,salary = 30000,"category = ""medium""

def classify(salary):
 if salary <= 10000:
 return ""low""
 elif salary <=30000:
 return ""medium""
 else:
 return ""high""

result = classify(30000)
print(result)"
Create a code generator that takes a Python program and reduces its memory footprint by using less memory to store data.,"x = 20
y = 50
z = x + y
print(z)","num1 = 20
num2 = 50
result = num1 + num2
print(result)"
Create a basic Python program to classify a list of positive and negative integer numbers.,"List of numbers: [2, 4, -3, 6, -7, 0]","positive_numbers = []
negative_numbers = []

for num in numbers:
 if num > 0:
  positive_numbers.append(num)
 else:
  negative_numbers.append(num)

print('Positive numbers:', positive_numbers)
print('Negative numbers:', negative_numbers)"
Develop a Python script to extract the specific keyword from the given URL.,"URL: https://www.test.com/where-is-the-key
Keyword: key","import re

url = ""https://www.test.com/where-is-the-key""
keyword = ""key""

match = re.search(f'{keyword}', url)
if match:
    print(f'{keyword} found at starting index: {match.start()}')
else:
    print(f'{keyword} not found')"
"Suggest a completion for the following python code, such that it prints all the elements of a list.",def print_list_elements(lst):,"def print_list_elements(lst):
    for elem in lst:
        print(elem)"
Design a python program to return the n-th element of a given list.,"list_input = [1, 3, 5, 7, 9]
n = 3","def get_nth_element(list_input, n):
    return list_input[n]

print(get_nth_element(list_input, n))"
Creat a Python program to find the sum of the digits of an arbitrary number.,345,"def sum_of_digits(num):
    total = 0
    while num > 0:
        total += num % 10
        num = num // 10
    return total

total = sum_of_digits(345)
print(f'Sum of the digits of the number is {total}')"
Develop a python program that targets a specific element in a dictionary.,"target_key = ""age""
my_dict = {
    ""name"": ""John Smith"",
    ""age"": 27,
    ""location"": ""New York""
    }","target_key = ""age""
my_dict = {
    ""name"": ""John Smith"",
    ""age"": 27,
    ""location"": ""New York""
    }

value = my_dict[target_key]
print(""The value of {} is {}."".format(target_key, value))"
Can you create a program in Python which reverses a number?,Number = 12345,"# Using Python

def reverseNumber(number):
    reversed = 0
    while(number > 0):
        digit = number%10
        reversed = reversed*10 + digit
        number = number//10
    
    return reversed

number = 12345
reverse = reverseNumber(number)
print(reverse) 
# Output: 54321"
Create a Python script that takes a text and replaces all occurrences of a given word to its upper-case version.,"Text: ""The quick brown fox jumps over the lazy dog"" and the word to replace: ""quick""","import re
 
text = ""The quick brown fox jumps over the lazy dog""
 
replaced = re.sub(r'quick', ""QUICK"", text) 
 
print(replaced) #prints ""The QUICK brown fox jumps over the lazy dog"""
Optimize the given Python code to improve the runtime.,"def sum_list(nums):
 sum_total = 0
 for n in nums:
  sum_total += n 
 return sum_total

nums = [1, 2, 3, 4, 5]","def sum_list(nums):
 return sum(nums)

nums = [1, 2, 3, 4, 5]"
Generate a program in Python that implements the bubble sort algorithm to sort an unsorted array of integers.,"[5,3,2,4]","def bubble_sort(nums):
 for i in range(len(nums)-1):
 for j in range(i+1, len(nums)):
 if nums[i] > nums[j]:
 nums[i], nums[j] = nums[j], nums[i]

nums = [5,3,2,4]
bubble_sort(nums)
print(nums)

# Output
[2,3,4,5]"
Develop a Python program to fetch the website users of an online store.,Website URL: www.example.com,"import requests

url = 'https://www.example.com/users'
response = requests.get(url)
data = response.json()

for user in data:
    print(user['name'])"
Automatically refactor a subsection of Python code that uses two for-loops.,"for x in range(3):
    for y in range(4):
        print(x, '-', y)","for x, y in itertools.product(range(3), range(4)):
    print(x, ""-"", y)"
"Given a list of strings, write a Python function to remove all the whitespaces from each string.","['Hello  World  ', 'Hi  there', 'Good  Morning']","def remove_whitespace(word_list):
    return [word.strip() for word in word_list]

stripped_list = remove_whitespace(['Hello  World  ', 'Hi  there', 'Good  Morning'])
print(stripped_list)"
Write a python program to generate a dictionary object from a list containing key-value tuples.,"my_list = [('key1', 'value1'), ('key2', 'value2')]",my_dict = dict(my_list)
Create a python program that takes a sentence and returns a list of words in alphabetical order.,Sentence:  The quick brown fox jumped over the lazy dog.,"sentence = ""The quick brown fox jumped over the lazy dog.""

# Split sentence into words
words = sentence.split()

# Sort list of words alphabetically
words.sort()

# Print sorted list of words
print(words)

# Output: ['brown', 'dog.', 'fox', 'The', 'jumped', 'lazy', 'over', 'quick', 'the']"
Rewrite a given Python program to be more efficient.,"my_list = [1,2,3,4,5,6]
count = 0

for number in my_list:
    count += number

print(count)","my_list = [1,2,3,4,5,6]

# Use the sum() function to get the sum of a given list
count = sum(my_list)

print(count)"
Generate a valid Python program that finds all the prime numbers in a given range,"2, 20","def find_primes(start, end):
    result = []
    for number in range(start, end + 1):
       if number > 1:
           for i in range(2, number):
               if (number % i) == 0:
                   break
           else:
               result.append(number)
    return result

result = find_primes(2, 20)
print(result)"
Write a Python program to sort a dictionary based on its values.,"Dictionary: {'Apple':1, 'Strawberry':4, 'Banana':3, 'Grapes':2}","my_dict = {'Apple':1, 'Strawberry':4, 'Banana':3, 'Grapes':2}

sorted_dict = {k: v for k, v in sorted(my_dict.items(), key=lambda item: item[1])}

print(sorted_dict)

# Output: {'Apple': 1, 'Grapes': 2, 'Banana': 3, 'Strawberry': 4}"
Design an algorithm in Python that accepts a list of integers as an input and returns true if the list contains duplicates.,"arr = [1, 4, 9, 6, 2, 5, 9, 7]","def is_duplicate(arr):
    return len(arr) != len(set(arr))

is_duplicate(arr) # returns True"
Build an algorithm in Python to identify if a given number is a perfect square.,25,"import math

def is_perfect_square(num):
    sqrt = int(math.sqrt(num))
    return sqrt * sqrt == num

result = is_perfect_square(25)
print(result)"
Generate a Python program to create a dictionary from two given lists.,"list1 = [""apple"", ""banana"", ""orange""]
list2 = [""fruit"", ""fruit"", ""fruit""]","list1 = [""apple"", ""banana"", ""orange""]
list2 = [""fruit"", ""fruit"", ""fruit""] 

dictionary = dict(zip(list1, list2))

print(dictionary)"
Write a Python program to separate a specified string into characters and numbers.,"str = ""ab12cd3""","def separate_charnum(str):
    chars = []
    nums = []
    for char in str:
        if char.isalpha():
            chars.append(char)
        else:
            nums.append(int(char))
    return chars, nums

str = ""ab12cd3""

chars, nums = separate_charnum(str)
print(chars)
print(nums)"
Construct a python program that analyzes the occurrence of different words in a text,The quick brown fox jumps over the lazy dog,"words = 'The quick brown fox jumps over the lazy dog'.split()
word_frequency = {}

for word in words:
    if word not in word_frequency:
        word_frequency[word] = 1
    else:
        word_frequency[word] += 1

print('Word Frequency:', word_frequency)"
Create a command-line program in Python which takes in three command-line arguments. The program should add the three arguments and print the result in the console.,1 6 3,"import sys

if __name__ == '__main__':
 args = sys.argv[1:]
 if len(args) != 3:
 print('Error: Not enough arguments provided')
 else:
 result = int(args[0]) + int(args[1]) + int(args[2])
 print('Result: ' + str(result))"
Write a function in Python to remove duplicate entries from a list.,"[1,2,2,3,3,4]","def removeDuplicates(input): 
    final_list = [] 
    for num in input: 
        if num not in final_list: 
            final_list.append(num) 
    return final_list 

lst = [1,2,2,3,3,4]
print(removeDuplicates(lst))"
Write Python code to implement a class like this.,"class Employee: 
    def __init__(self, name, age): 
        self.name = name 
        self.age = age","class Employee: 
    def __init__(self, name, age):
        self.name = name 
        self.age = age 
    
     def __str__(self): 
        return ""Employee({0}, {1})"".format(self.name,self.age) 
 
emp = Employee(""John"", 24) 
print(emp)"
Create a Python program that multiplies a list of numbers together,"[3, 6, 5, 4]","def multiply_list(nums):
    product = 1
    for num in nums:
        product *= num
    return product

print(multiply_list([3, 6, 5, 4]))"
Create a Python program to print an encrypted message using a given cipher key.,"message = ""hellohello""
cipher_key = 3","#Input
message = ""hellohello""
cipher_key = 3

#Solution
alphabet = ""abcdefghijklmnopqrstuvwxyz"";
cipher = alphabet[cipher_key:] + alphabet[:cipher_key]

encoded_message = """"
for char in message:
 encoded_message += cipher[alphabet.find(char)]

print(encoded_message) # khoorkhoor"
Implement a method in Python that takes two strings as input and returns true if one string is a rotation of the other.,"s1='abc' 
s2='cab'","def isRotation(s1, s2): 
    if (len(s1) != len(s2)): 
        return False
  
    temp = s1 + s1 
    if (s2 in temp): 
        return True
    return False

result = isRotation('abc', 'cab')
print(result)"
Write a function in Python to get the intersection of two sorted lists.,"list1 = [5, 7, 9, 11, 13]
list2 = [7, 8, 10, 11, 12]","def intersection(list1, list2):
 result = []
 i = 0
 j = 0
 while i < len(list1) and j < len(list2):
 if list1[i] == list2[j]:
 result.append(list1[i])
 i += 1
 j += 1
 elif list1[i] < list2[j]:
 i += 1
 else:
 j += 1
 return result

print(intersection(list1, list2))
# Output: [7, 11]"
Edit the Python script to make sure the program will run correctly,"# This program prints out the numbers from 1 to 10
for x in range(9):
    print(x + 1)","# This program prints out the numbers from 1 to 10
for x in range(10):
    print(x + 1)"
"Formulate a script in Python that takes as input an array of integers, and returns the highest number in the array.","[1, 2, 5, 3, 7, 4]","def highest_number(arr):
    '''
    Function to get the highest number in an array of integers
    
    Parameters
    arr: list of integers
    
    Returns
    highest number in the array
    '''
    highest_num = arr[0]
    for num in arr:
        if num > highest_num:
            highest_num = num
    return highest_num"
Design a Python script to insert a given string at the beginning and end of a given array.,"[""hello"", ""world""], ""***""","def insertBeginningAndEnd(arr, str):
    result = []
    for element in arr:
        result.append(str + element + str)

    return result

result = insertBeginningAndEnd([""hello"", ""world""], ""***"")
print(result)"
Is it possible to write a function in Python to convert a given list of lists into a CMOV instruction?,"[[1, 2, 3], [4, 5, 6], [7, 8, 9]]","def listoflists_to_cmov(listoflists): 
    # Initialise CMOV array
    cmov = [0]*9
  
    # Fill CMOV array with given list of lists
    for i, list_ in enumerate(listoflists): 
        cmov[i*3:(i+1)*3] = list_

    # Return CMOV array 
    return cmov"
Write a Python program to take a list of words as input and print all of the words with at least 4 letters.,"['apple', 'cat', 'elephant', 'banana', 'dog']","words = ['apple', 'cat', 'elephant', 'banana', 'dog']

filtered_words = []

for word in words:
    if len(word) >= 4:
        filtered_words.append(word)

print(filtered_words)"
Write a Python program to convert a given string to all uppercase.,"""hello World""","def to_uppercase(string):
    return string.upper()

print(to_uppercase(""hello World""))

# Outputs:
# HELLO WORLD"
Create a Python Program to perform a linear search on given data and print the index of the found element.,"data = [7, 4, 3, 11, 9]","def linear_search(data, target):
    for i in range(len(data)):
        if (data[i] == target):
            return i
    return -1

data = [7, 4, 3, 11, 9]
target = 11

index = linear_search(data, target)
if index != -1:
    print(""Element"", target, ""is present at index"", index)
else:
    print(""Element is not present in the given array"")"
"Using Python, implement a Pig Latin translator. The translator should accept a word as input and return its Pig Latin equivalent.","word = ""Python""","def pig_latin(word):
 vowels = ""aeiou""
 if word[0] in vowels: 
 return word + 'way'
 else:
 return word[1:] + word[0] + 'ay'

pig_latin_word = pig_latin(word)
print(pig_latin_word) # Output: ythonPay"
"Given a Python dictionary, write a function to invert the keys and values of the dictionary.","my_dict = {'A':1, 'B':2, 'C':3}","def invert_dict(dictionary):
    inverted_dict = {}
    for key, value in dictionary.items():
        inverted_dict[value] = key
    return inverted_dict

inverted_dict = invert_dict(my_dict)
print(inverted_dict)"
Build a Python program to find the maximum element in a list of numbers.,"[4, 9, 10, 11, 12]","def maxNum(numsList):
    maxNum = numsList[0]
    for num in numsList:
        if num > maxNum:
            maxNum = num
    return maxNum

numList = [4, 9, 10, 11, 12]
print(""The maximum number in the list is:"", maxNum(numList))"
"Create a function in Python that takes two parameters: a list and a number. The function should return the list sorted in ascending order, based on the result of each element in the list multiplied by the input number.","[3, 1, 5, 4, 2],  5","def sortList(arr, num): 
    arr.sort(key = lambda x: x*num) 
    return arr 
  
arr = [3, 1, 5, 4, 2] 
num = 5
print(sortList(arr, num))"
Perform an optimization algorithm in Python to find the maximum value of a function given a set of initial conditions.,"def f(x):
  return 3*x**2 + 2*x + 7

initial_conditions = [-3.2, -1.5, 2.4]","from scipy.optimize import minimize

def f(x):
  return 3*x**2 + 2*x + 7

initial_conditions = [-3.2, -1.5, 2.4]

result = minimize(f, initial_conditions, method='nelder-mead')
max_val = result.fun"
Create a Python program to convert a binary string into its equivalent decimal value.,binary_num = '10101',"def binary_to_decimal(binary_num):
    decimal_num = 0
    n = 0

    for i in range(len(binary_num)-1, -1, -1):
        if binary_num[i] == '1':
            decimal_num += 2**n
        
        n += 1
    
    return decimal_num"
Can you provide a Python code snippet to count the number of words in the given text?,Text: Today it is a beautiful day.,"text = ""Today it is a beautiful day.""
words = text.split()
print(""Number of words in the given text:"", len(words))"
Implement a search algorithm to quickly identify a specific character in a given string using Python.,"string = ""helloworld""
character = ""o""","def search(s, ch):
    for i, c in enumerate(s):
        if c == ch:
            return i
    return -1

string = ""helloworld""
character = ""o""

index = search(string, character)
if index == -1:
    print(""Character not found"")
else:
    print(""Index of the character is"", index)"
Can you write a function in Python to find the maximum number from a given list?,"List of Numbers: [9, 4, 2, 7, 5]","def find_max(lst):
  max_val = lst[0]
  for num in lst:
    if num > max_val:
      max_val = num
  return max_val

list_of_numbers = [9, 4, 2, 7, 5]
print(find_max(list_of_numbers))"
Construct a parser in Python to identify the parts of speech in a given sentence.,This is a great day.,"import spacy

nlp = spacy.load('en_core_web_sm')

# Define the sentence to be parsed
sentence = 'This is a great day.'

# Create a Doc object
doc = nlp(sentence)

# Print the parts of speech
for token in doc:
    print(token.text, token.pos_)

# Output:
# This DET
# is VERB
# a DET
# great ADJ
# day NOUN
# . PUNCT"
Generate a Python script to assign grades to a set of test scores.,"[90, 80, 75, 70, 65]","def assignGrades(scores):
    grades = []
    for score in scores:
        if score >= 90:
            grades.append(""A"")
        elif score >= 80:
            grades.append(""B"")
        elif score >= 70:
            grades.append(""C"")
        elif score >= 65:
            grades.append(""D"")
        else:
            grades.append(""F"")
            
    return grades"
Create a Python program that prints the sum of all integers that are divisible by 3 and 5 from 0 to a given number.,Max number: 10,"def sum_divisible_by_3_and_5(n):
 s = 0
 for i in range(n + 1):
 if i % 3 == 0 or i % 5 == 0:
 s += i
 return s

print(sum_divisible_by_3_and_5(10)) # 33"
Modify the following Python funciton to return the second largest element in the list.,"x = [1, 2, 3, 4, 5]","def second_largest(x):
    x.sort()
    return x[-2]"
Design a Python program which takes two lists and returns their intersection.,"list1 = [1, 2, 3, 4, 5, 6]
list2 = [3, 6, 8, 9, 10]","def intersection(list1, list2): 
    return list(set(list1) & set(list2)) 

# Output: [3, 6]"
Write a Python program to retrieve binary data from a given URL.,"url = ""https://example.com/sample.txt""","import requests 
  
def getFileData(url):
  # Get binary data
  r = requests.get(url)
  return r.content

url = ""https://example.com/sample.txt""
data = getFileData(url)

print(data)"
Write a Python program to quickly search for a substring in a larger string.,"string = ""hello world"" substring = ""or""","def search_substring(string, substring):
    index = string.find(substring)
    return index 

result = search_substring(""hello world"", ""or"")
print(result)"
Can you generate a greedy algorithm in Python for solving the coin change problem?,"Coins = [1, 6, 10], Change = 8","def get_coins(coins, change):
	min_coins = change
	if change in coins:
		return [change]

	for i in [c for c in coins if c <= change]:
		num_coins = 1 + get_coins(coins, change-i)
		if len(num_coins) < min_coins:
			min_coins = num_coins
	return min_coins

# Test 
coins = [1, 6, 10]
change = 8
print(get_coins(coins, change)) # [1, 6, 1]"
Implement a function in Python that generates a random password with a minimum length of 10 characters.,No input,"import random
import string

def generate_random_password(n=10):
    chars = string.ascii_uppercase + string.ascii_lowercase + string.digits
    return ''.join(random.choice(chars) for _ in range(n))"
Create a Python Code Snippet to retrieve the last two elements from a list.,"[1, 2, 3, 4, 5]","lastTwoElements = [1, 2, 3, 4, 5][-2:]

print(lastTwoElements)
#Output: [4, 5]"
Create a Python function that reverses every other word in a given string.,This is a test,"def reverseWords(sentence):
  words = sentence.split()
  reversed_sentence = []
  for i in range(len(words)):
    if (i % 2 == 0):
      reversed_sentence.append(words[i])
    else:
      reversed_sentence.append(words[i][::-1])
  return "" "".join(reversed_sentence)

print(reverseWords(""This is a test""))"
Create a script in Python for classifying the sentiment of a text. The script should be able to handle input of various lengths and should return a sentiment score (on a scale from -1 to +1) for the text.,positive,"import nltk

def sentiment_analysis(text):
 tokens = nltk.word_tokenize(text)
 score = 0
 for token in tokens:
 tag = nltk.pos_tag(token)[0]
 if tag[1] == 'positive':
 score += 1
 else:
 score -= 1
 return score / len(tokens)"
Write a script in Python to generate a histogram of a given data set.,"data = [3, 5, 4, 6, 7, 8, 9, 3, 8, 5]","import matplotlib.pyplot as plt
plt.hist(data, 10)
plt.title(""Frequency Histogram"")
plt.xlabel(""Values"")
plt.ylabel(""Frequency"")
plt.show()"
Implement a sorting algorithm in Python.,"array = [10,7,8,9,1,5]","def bubbleSort(array):
    n = len(array)
    for i in range(n): 
        for j in range(0, n-i-1): 
            if array[j] > array[j+1] : 
                array[j], array[j+1] = array[j+1], array[j] 
    return array

print(bubbleSort(array))"
Create a function in Python that takes an array of strings and returns a new array of strings with all the vowels removed from each string.,"[""hello"", ""world"", ""how""]","def remove_vowels(strings):
 vowels = ['a', 'e', 'i', 'o', 'u']
 result = []
 for string in strings:
 result.append(''.join(c for c in string if c not in vowels))
 return result"
Write a Python function to find the maximum and minimum number from a list of numbers.,"list = [1, 4, 5, 6, 7, 8]","def find_max_min(list):
  max_number = max(list)
  min_number = min(list)
  return max_number, min_number

max_number, min_number = find_max_min(list)
print(""Max number: "", max_number)
print(""Min number: "", min_number)"
Omit any incomplete code from a given Python program by supplying correct expressions and indentation.,"if 
  a<20:
  b = c 
   c = b","if a < 20:
    b = c
    c = b"
Create a Python program to print out the largest palindrome number from a list of numbers.,"Example list of numbers [4, 12, 25, 98, 9989]","def is_palindrome(n):
 return str(n) == str(n)[::-1]

def largest_palindrome(nums):
 largest = 0
 for n in nums:
 if is_palindrome(n):
 largest = max(n, largest)
 return largest

nums = [4, 12, 25, 98, 9989]
largest = largest_palindrome(nums)
print(f'Largest palindrome from the list is {largest}')"
Create a program in Python that calculates the median of an array of integers without using the built-in function.,"[1, 2, 3, 4, 5]","def median(arr): 
 n = len(arr) 
 arr.sort() 

 # check for even case 
 if n % 2 == 0: 
 return (arr[int((n - 1)/2)] +
 arr[int(n/2)]) / 2

else: 
 return arr[int(n/2)] 

# test
arr = [1, 2, 3, 4, 5] 
print(""Median ="", median(arr)) 

# Output: Median = 3.0"
Generate a random list of numbers in Python of size n and output their sum.,n = 10,"import random

n = 10
lst = [random.randrange(1, 101) for _ in range(n)]
sum_lst = sum(lst)

print(""Random list: "", lst)
print(""Sum of the list: "", sum_lst)"
Generate an algorithm in Python that calculates the sum of all even numbers between 1 and a given upper limit.,100,"def sum_of_even_numbers(n):
    sum = 0
    for i in range(2, n+1, 2):
        sum += i
 
    return sum"
Develop a function in Python that takes a string as input and finds a pattern in it and replaces it with a given set of characters.,"""abcabcabc"", ""abc"", ""xyz""","def replacePattern(string, pattern, replacement):
    return string.replace(pattern, replacement)

result = replacePattern(""abcabcabc"", ""abc"", ""xyz"")
print(result)"
Write a Python program that generates a multiplication table of a given size.,5,"def multiplication_table(n):
 for i in range(1, n+1):
   for j in range(1, n+1):
     print(str(i*j).rjust(4), end="" "")
   print()

multiplication_table(5)

# Output:
 1   2   3   4   5
 2   4   6   8  10
 3   6   9  12  15
 4   8  12  16  20
 5  10  15  20  25"
Write a Python function to find two numbers in an array with the largest sum.,"[3, 10, -3, -2, 5]","def max_sum(arr):
    max_val = float('-inf')
    for i in range(len(arr)):
        for j in range(i + 1, len(arr)):
            max_val = max(max_val, arr[i] + arr[j])
    return max_val

result = max_sum([3, 10, -3, -2, 5])
print(result)"
Generate a Python script that computes the area of an ellipse given its semi-major axis and semi-minor axis as inputs.,"Semi-major axis = 5
Semi-minor axis = 3","import math

# Semi-Major Axis
a = 5

# Semi-Minor Axis
b = 3

# Calculate the area of an ellipse
area = math.pi * a * b

print(""The area of the ellipse is"", area)"
Construct a python dictionary from the following data.,"fruit, apple
animal, cat
city, London","mydict = {
    'fruit': 'apple',
    'animal': 'cat',
    'city': 'London'
}"
Create a Python program which takes a list of numbers and adds them together.,"[1, 2, 3, 4, 5]","def sum_list(nums): 
	total = 0
	for num in nums: 
		total += num 
	return total 

nums = [1, 2, 3, 4, 5] 
print(sum_list(nums)) # 15"
Write a Python program to parse an XML document.,"<?xml version=""1.0"" encoding="" UTF-8""?>
<note>
    <to>John Doe</to>
    <from>Jane Doe</from>
    <heading>Greeting</heading>
    <body>Hello World!</body>
</note>","""""""
Parse an XML document
""""""

import xml.etree.ElementTree as ET

# Parse the XML file
root = ET.parse('note.xml').getroot()

# Print out the XML elements
for item in root:
    print(f""{item.tag}: {item.text}"")"
Write a Python script to find the second largest number in a given list of numbers.,"arr = [4, 6, 10, -1, 3, 15]","def second_largest(arr):
  max_ = max(arr)
  new_arr = list(filter(lambda x: x != max_, arr))
  return max(new_arr)"
"Given a list of strings, write a Python code snippet to print all strings that begin with a letter 'a'.","[""apple"", ""banana"", ""orange"", ""avocado""]","for item in [""apple"", ""banana"", ""orange"", ""avocado""]:
 if item.startswith('a'):
 print(item)

# Output:
apple
avocado"
Develop a Python function that takes a list of strings and returns a new list with the strings sorted in alphabetical order.,"['Elephant', 'Cat', 'Dog']","def sort_list(words):
    return sorted(words)

sorted_list = sort_list(['Elephant', 'Cat', 'Dog'])
print(sorted_list)"
Develop a function in Python that takes an individual name as an input and output its acronym.,"""Oscar Thomas""","def make_acronym(name):
    acronym = """".join([word[0] for word in name.split()]).upper()
    return acronym

result = make_acronym(""Oscar Thomas"")
print(result)"
Write a Python program to convert a list into a tuple.,"[3, 4, 5, 6]","list = [3, 4, 5, 6]
tuple = tuple(list)
print(""Tuple:"", tuple)"
Implement a Python program to encrypt a given message with a given key.,"message = ""Hello, World!""
key = ""abc""","def encrypt_message(message, key): 
    encrypted_message = """" 
      
    for i in range(len(message)): 
        x = (ord(message[i]) + 
             ord(key[i % len(key)])) % 26
        x += ord('A') 
        encrypted_message += chr(x) 
          
    return encrypted_message"
Create a program in Python that implements a sorting algorithm of your choice to sort a given array of integers in ascending order.,"A = [9, 4, 5, 1, 3]","def sort_array(A):
    if len(A) <= 1:
        return A

    pivot = A[0]
    left = [item for item in A if item < pivot]
    right = [item for item in A if item > pivot]

    return sort_array(left) + [pivot] + sort_array(right)"
Write a Python program to construct a parser to detect an input has errors or not.,"Input Code:
# include <stdio.h>
void main()
 {
 printf(""Hello World"")
 }","def detect_errors(input_code):
 error_tokens = [""!"", ""@"", ""#"", ""$""]
 counter = 0
 for line in input_code.splitlines():
 tokens = line.strip().split()
 if any(x in tokens for x in error_tokens):
 counter += 1
 if counter > 0:
 return True
 else:
 return False"
Write a Python program which randomly selects 3 items from a list of 5 items and prints them to the console.,"list = [""apple"", ""banana"", ""orange"", ""strawberry"", ""grape""]","import random

list = [""apple"", ""banana"", ""orange"", ""strawberry"", ""grape""]
random.shuffle(list)

for item in list[:3]:
 print(item)"
Create a python script to generate the product of all elements in a sequence.,"[2,4,6]","def product_of_sequence(sequence):
    product = 1
    for num in sequence:
        product *= num
    return product

seq = [2,4,6]
print(product_of_sequence(seq))"
Write a Python program that finds the average of three numbers.,"21, 15, 10","def avg(a, b, c): 
  return (a + b + c)/3 
  
a = 21
b = 15
c = 10
  
average = avg(a, b, c) 
  
print(""Average of three numbers is:"", average)"
Develop a Python program to check if a given number is a power of two.,Number = 16,"def is_power_of_two(x):
  while x % 2 == 0 and x > 1:
    x = x / 2
  return x == 1

num = 16

print(is_power_of_two(num))"
Generate a Python code for replicating an output after switching the contents of two strings.,"Given two strings, ‘str1’ and ‘str2’, swap the contents of the two strings.

For example, if the two strings are ‘Hello’ and ‘World’, the output after swtiching the contents should be ‘Worlh’ and ‘Hello’","str1, str2 = 'Hello', 'World'
str1, str2 = str2, str1

print(""After swapping: str1 ="", str1, ""and str2 ="", str2)"
Write a Python program to filter out the words containing in a list that are 6 characters long.,"words = ['banana', 'apple', 'jacket', 'house', 'turtle']",filtered_words = [ word for word in words if len(word) == 6 ]
Generate Python code to generate a histogram from a given data set.,"data = [1, 3, 5, 3, 2, 6, 8, 1, 2]","import matplotlib.pyplot as plt 

def generate_histogram(data):
    plt.hist(data)
    plt.xlabel(""Data"")
    plt.ylabel(""Frequency"")
    plt.title(""Histogram of Data"")
    plt.show()
    
generate_histogram(data)"
Develop a Python program to count the total characters from a given list of words.,"[""Apple"", ""Banana"", ""Orange""]","words = [""Apple"", ""Banana"", ""Orange""]
total_chars = 0

for word in words:
    total_chars += len(word)

print(total_chars) # Output: 15"
Edit the following python code to print all the elements of a list that are divisible by 7.,"my_list = [14, 35, 42, 49, 56, 63, 70]","my_list = [14, 35, 42, 49, 56, 63, 70]

for element in my_list:
 if element % 7 == 0:
 print(element) 
  
# Output:
14
 
42
 
49
 
56
 
63
 
70"
Develop a Python program to find the sum of first n even numbers.,7,"def find_sum(n):
    sum = 0
    for i in range(1, n+1):
        if i % 2 == 0:
            sum += i
    return sum

n = 7
print(""The sum of first n even numbers is:"", find_sum(n))"
Create a Python program that sorts a list of tuples by the second item.,"list_of_tuples = [('Apple', 2), ('Orange', 1), ('Banana', 3), ('Grape', 4)]","def sort_by_second_item(list_of_tuples):
  return sorted(list_of_tuples, key=lambda item: item[1])

sorted_list = sort_by_second_item(list_of_tuples)
print(sorted_list)

# Output: [('Orange', 1), ('Apple', 2), ('Banana', 3), ('Grape', 4)]"
Write a Python program to generate a HTML table with a list of employees.,"Employee list: John, Kate, Mark","employee_list = [""John"", ""Kate"", ""Mark""]

html = ""<table>\n<tr>"";
for employee in employee_list:
  html += ""<td>""+employee+""</td>\n"";
html += ""</tr>\n</table>""

print(html)"
Write some python code that prints out the following information,"Student marks in a class: [{'name': 'John', 'mark': 75}, {'name': 'Alex', 'mark': 92}, {'name': 'Tiffany', 'mark': 83}, {'name': 'Eddie', 'mark': 67}]","student_scores = [{'name': 'John', 'mark': 75}, {'name': 'Alex', 'mark': 92}, {'name': 'Tiffany', 'mark': 83}, {'name': 'Eddie', 'mark': 67}]

for student in student_scores:
    print(f'Name: {student[""name""]}, Mark: {student[""mark""]}')"
Write a Python program to detect and remove the duplicates in a list.,"The list is [1, 20, 4, 6, 20, 4, 1, 6].","def remove_duplicates(lst): 
    return list(dict.fromkeys(lst)) 
  
lst = [1, 20, 4, 6, 20, 4, 1, 6] 
print(remove_duplicates(lst))"
Provide a function in Python for squaring all elements of a given array.,"list = [1, 2, 3, 4]","def square_elements(arr):
    return [num**2 for num in arr]"
Create a program in Python to calculate the Euclidean distance between two points.,"x1 = 2
y1 = 3
x2 = 6
y2 = 8","import math

x1 = 2
y1 = 3
x2 = 6
y2 = 8
distance = math.sqrt( (x2 - x1)**2 + (y2 - y1)**2 )

print(distance)"
Develop a Python program that accepts a list of numbers and prints the 2nd largest and the 3rd smallest elements from the list.,"[3, 5, 2, 4, 9, 7]","def main():
 numbers = [3, 5, 2, 4, 9, 7]
 numbers.sort()
 
 print('The 2nd largest number is', numbers[-2])
 print('The 3rd smallest number is', numbers[2])
 
if __name__ == '__main__':
 main()"
Generate a for loop to iterate over a list of numbers and write the output using python.,"[1, 2, 3, 4, 5]","for num in [1, 2, 3, 4, 5]:
    print(num)"
Implement Bubble Sort using Python.,"[6, 2, 5, 1, 8]","def bubble_sort(arr):
    for i in range(len(arr)):
		for j in range(len(arr)-1-i):
			if arr[j] > arr[j+1]:
				temp = arr[j]
				arr[j] = arr[j+1]
				arr[j+1] = temp
				
arr = [6, 2, 5, 1, 8]

bubble_sort(arr)

print(arr)"
"Change the following Pythoncode to display ""Hello, World!"" on the web page:","print(""Hello, World!"")","from flask import Flask
app = Flask(__name__)

@app.route(""/"")
def hello():
	return ""Hello, World!""

if __name__ == ""__main__"":
	app.run()"
Create a Python function to format a string with the proper case and punctuation,"string=""hello, world""","def format_string(string):
    """"""Function to format a string with the proper case and punctuation""""""
    return string.lower().capitalize() + ""."""
"Create a function in Python to calculate the sum of squares for all numbers within a range given two integers, n and m.","n = 4
m = 6","def sum_of_squares(n, m):
    result = 0
    for i in range(n, m+1):
        result += i*i
    return result
  
print(sum_of_squares(n, m))"
Create a Python program to print a given string with each character's ASCII code.,Hello world!,"def print_ascii(text):
    '''This function will print a given string with each character's ASCII code.'''
    for ch in text:
        print(f'{ch} : {ord(ch)}')

print_ascii('Hello world!')

# Output:
# H : 72
# e : 101
# l : 108
# l : 108
# o : 111
#  : 32
# w : 119
# o : 111
# r : 114
# l : 108
# d : 100
# ! : 33"
Develop a python code to compute the sum of digits in an integer.,1234,"def sum_digits(n):
    s = 0
    while (n > 0):
        s = s + n % 10
        n = n//10
    return s

n = 1234
print(sum_digits(n))"
Create a function in Python that takes in a list of integers and prints out the largest multiple of 3.,"List: [3, 15, 4, 6, 5]","def largestMultipleOf3(list): 
    list.sort() 
    running_sum = 0
    for i in range(len(list)): 
        running_sum += list[i] 

    if running_sum % 3 == 0:  
        return running_sum  

    return largestMultipleOf3(list[:-1]) 

list = [3, 15, 4, 6, 5] 
print(largestMultipleOf3(list)) // 15"
Suggest a completion for processing a web form using Python.,"import requests

# Get form's (POST) data
data = {
  ""name"": ""John Doe"",
  ""email"": ""john.doe@example.com"",
  ""message"": ""Hello""
}","import requests

# Get form's (POST) data
data = {
  ""name"": ""John Doe"",
  ""email"": ""john.doe@example.com"",
  ""message"": ""Hello""
}

# Send POST request
r = requests.post(""http://www.example.com/submit-form.php"", params=data)

# Get web form's response
print(r.text)"
Generate a Python program to classify a given set of data,"Given a dataset containing information about temperature and humidity, classify whether the day is raining or not","def classify_rain(temp, humidity):
    if temp < 70 and humidity > 0.7:
        return 'raining'
    else:
        return 'not raining'"
"Develop a Python program to generate a Fibonacci series up to nth element, where n is an input.",10,"def fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b 
  
# Driver Program 
  
print(fibonacci(10))"
Create a Python program to read a string and return the character with the highest frequency.,Sample string,"import collections

str = ""Sample string""
count = collections.Counter(str)
highest_freq = 0
highest_freq_char = ''

for char, value in count.items():
    if value > highest_freq:
        highest_freq = value
        highest_freq_char = char

print(""The character {} has the highest frequency of {} in this string"".format(highest_freq_char, highest_freq))"
Create a Python script to read data from a database.,Table Name: 'customers',"import psycopg2

connection = psycopg2.connect(database='dbname', user='user', password='password', host='localhost', port='5432')

cursor = connection.cursor()

cursor.execute('SELECT * FROM customers')

rows = cursor.fetchall()

for row in rows:
    print(row)
    
cursor.close()"
Enhance an existing python program to include a function,"def hello():
    print(""Hello world!"")","def hello():
    print(""Hello world!"")

def goodbye():
    print(""Goodbye!"")

def greetings():
    hello()
    goodbye()

greetings()"
Write a Python program to generate an SQL query from a given set of parameters.,"Table Name: users

Fields: id, name, age

Filter: age > 18","def generate_sql_query(table_name, fields, filter_clause):
 query = ""SELECT ""
 for i in range(len(fields)-1):
 query += fields[i] + "", ""
 query += fields[-1]
 query += "" FROM "" + table_name + "" WHERE "" + filter_clause
 return query"
Write a Python program to generate a Pascal's triangle with a given number of rows.,Number of Rows = 8,"1 
1 1 
1 2 1 
1 3 3 1 
1 4 6 4 1 
1 5 10 10 5 1 
1 6 15 20 15 6 1 
1 7 21 35 35 21 7 1"
Create a python function that takes in two strings and output their combined length.,"string_1 = ""Hello""
string_2 = ""World""","def get_string_length(string_1, string_2):
    return len(string_1 + string_2)"
Write a python code to,Extract the mean from a list of numbers.,"def mean(lst):
    total = 0
    for x in lst:
        total += x
    return total / len(lst)"
"Create a function in Python to find all elements in a list that are negative, and print them.","list = [-3, 0, 5, -9, 8]","def find_negatives(l):
  negative_numbers = []
  for num in l:
    if num < 0:
      negative_numbers.append(num)
  print(negative_numbers)

find_negatives(list) # prints [-3, -9]"
Write a Python program to sort a dictionary by its keys.,"d = {'a': 24, 'g': 52, 'c': 13}","def sort_dict_keys(d):
  sorted_keys = sorted(d.keys())
  sorted_dict = {key: d[key] for key in sorted_keys}
  return sorted_dict"
Write a Python program to search a given string for any repeated characters.,"""AAAAB""","def find_repeat_characters(string):
 repeat_characters = set()
 for char in string:
 if string.count(char) > 1 and char not in repeat_characters:
 repeat_characters.add(char)
 return repeat_characters

string = 'AAAAB'
print(find_repeat_characters(string)) # {'A'}"
Write a Python program to reduce the given array into a single element.,"arr = [1, 2, 3, 4]","def reduce_arr(arr):
    result = 0
    for i in arr:
        result += i
    return result

reduce_arr(arr)"
Create a Python script to extract the title of a web page.,<url>,"import requests
from bs4 import BeautifulSoup

# Function to extract the title of a web page
def extract_title(url):
    response = requests.get(url)
    html = response.text

    soup = BeautifulSoup(html, 'html.parser')
    return soup.title.string

url = 'https://www.example.com'
title = extract_title(url)
print(title)  # Output 'Example Domain'"
Rewrite the given code in Python.,"int sum = 0
for (int i=0; i<n; i++)
    sum += i;","sum = 0
for i in range(n):
    sum += i"
Create a function in Python that takes a list of strings as parameter and outputs a new list with each string sorted in alphabetical order,"[‘apple’, ‘mango’, ‘orange’]","def sort_list(a_list):
 '''
 Sort the given list of strings in alphabetical order

 Args:
 a_list (list): List of strings

 Returns:
 list: Returns the sorted list in alphabetical order
 '''

 return sorted(a_list)"
Write a Python program to print the count of all even numbers in the given list.,"my_list = [1, 2, 3, 4, 5, 6, 7, 8]","my_list = [1, 2, 3, 4, 5, 6, 7, 8]

count = 0
for i in my_list:
    if i % 2 == 0:
        count += 1

print(count)"
Write a Python function to compute the factorial of an integer.,4,"def factorial(n):
    if n < 0:
        print('Factorial does not exist for a negative number.')
    elif n == 0 or n == 1:
        return 1
    else:
        return n * factorial(n - 1)


print(factorial(4))"
Create a program to convert a text document to an HTML webpage using Python.,"Text document with contents ""This is a sample document"".","from bs4 import BeautifulSoup

# Read and parse the document
with open('sample.txt', 'r') as file:
  content = file.read()

# Create the HTML
soup = BeautifulSoup(content, 'html.parser')
html_content = soup.prettify()

# Write to the file
with open('sample.html', 'w') as file:
  file.write(html_content)"
Write a python program to convert a string to the list of words.,"""Hello, World!""","def string_to_list(string):
    return string.split()"
Implement a function in Python that takes a list of string and sorts them alphabetically.,"[""apple"", ""banana"", ""mango"", ""pear""]","def sortStrings(wordsList):
    sorted_list = sorted(wordsList)
    return sorted_list
 
wordsList = [""apple"", ""banana"", ""mango"", ""pear""]
sorted_words = sortStrings(wordsList)
print(sorted_words)"
Create an algorithm in Python that computes the sum of an array,"[10, 20, 30, 40]","def array_sum(arr):
    sum = 0
    for num in arr:
        sum += num
    return sum

print(array_sum([10, 20, 30, 40]))

# Output: 100"
Format the given string with line breaks and indentations to make it a valid Python code.,for i in range(10) print(i),"for i in range(10):
  print(i)"
Write a Python program that will calculate the correlation between two different datasets.,"Dataset 1:[1,2,3,4,5]
Dataset 2:[2,4,6,8,10]","import numpy as np

data1 = [1,2,3,4,5]
data2 = [2,4,6,8,10]

correlation = np.corrcoef(data1, data2)[0][1]
print(correlation)

# Output
0.98198050606"
Analyze a Python program to check if any variable names are longer than 20 characters.,"def some_function(a_variable, short_variable):
  long_variable_name_is_not_good_practice = 1",There is a variable (long_variable_name_is_not_good_practice) with a name that is longer than 20 characters.
Generate an optimized python program for splitting an array into two subarrays with equal sum.,"[1, 2, 3, 4, 5, 6]","def split_array_sum(arr):
  sum_arr = sum(arr)
  half_sum = sum_arr // 2
  current_sum = 0
  left_index = 0
  
  for index, value in enumerate(arr):
    current_sum += value
    if current_sum >= half_sum:
        left_index = index
        break
  
  left_arr = arr[:left_index+1]
  right_arr = arr[left_index+1:]
  return left_arr, right_arr"
Create a Python function to calculate the sum of the list elements.,"[1, 3, 4, 7, 9]","def list_sum(list_in):
 return sum(list_in)

# or
def list_sum(list_in):
 total_sum = 0
 
 for num in list_in:
 total_sum += num
 
 return total_sum"
Generate a Python program to search for a substring within a string.,"text = ""This is a sample string."" 
substring = ""sample""","def search_substring(text, substring):
    if substring in text:
        return True
    else:
        return False

result = search_substring(text, substring)
print(result)"
Edit the following Python program to make it run without any syntax errors.,"def sum(alist)
    total 0
    for i in range alist
        total += i
    return total","def sum(alist):
    total = 0
    for i in alist:
        total += i
    return total"
Automate the task of checking if an array of numbers is in sorted order using a Python program.,"[2, 3, 6, 4, 8]","def is_sorted(nums):
    for i, num in enumerate(nums[:-1]):
        if num > nums[i + 1]:
            return False
    return True"
Create a Python program that takes two numbers as input and prints out the greatest common divisor (GCD) of the two numbers.,"num1 = 8
num2 = 20","def gcd(num1, num2):
    if num2 == 0:
        return num1
    return gcd(num2, num1 % num2)

print(gcd(num1, num2))"
Write a Python program to calculate the mode of the given list of numbers.,"[2, 3, 4, 5, 2, 6, 1, 5]","def find_mode(numbers):
    most_freq = 0
    mode = None

    counts = {}
    for num in numbers:
        if num in counts:
            counts[num] += 1
        else:
            counts[num] = 1
    
    for num in counts:
        if counts[num] > most_freq:
            most_freq = counts[num]
            mode = num
    
    return mode"
Develop a Python function that takes two strings as input and returns the longer string.,"'cat', 'dog'","def longer_string(string1, string2):
    if len(string1) > len(string2):
        return string1
    else:
        return string2"
Edit the given Python code to print the multiplication table for given number.,number = 5,"number = 5
for i in range(1, 11): 
    print(number, 'x', i, '=', number*i)"
Generate a valid python program to remove the duplicate elements from a given list.,"[2, 3, 4, 3, 2, 4]","def remove_duplicates(input_list):
    result = []
    for ele in input_list:
        if ele not in result:
            result.append(ele)
    return result"
Build a Python class to identify if a provided number is prime or composite.,10,"class PrimeNumber:
    def __init__(self, num):
        self.num = num

    def is_prime(self):
        for i in range(2, self.num):
            if(self.num % i == 0):
                return False
        return True

num = 10
obj = PrimeNumber(num)

if obj.is_prime():
    print(""Number is Prime"")
else:
    print(""Number is Composite"")"
Write a Python function to calculate the sum of two numbers using recursion.,"x = 5
y = 7","def recursive_sum(x, y):
    if x == 0:
        return y 
    else: 
        return recursive_sum(x - 1, y + 1) 

print(recursive_sum(x, y)) # 12"
Optimize a program in Python for searching for a string in a list.,"value = 'apple'
list = ['bannanas', 'oranges', 'apple']","def search(value, list):
    for i in range(len(list)):
        if list[i] == value:
            return i
    return -1

value= 'apple'
list = ['bannanas', 'oranges', 'apple']
print(search(value, list))"
Create a Python class that implements an iterator. The iterator should return the square of whole numbers starting at 0.,.,"class SqrIterator:
    def __init__(self):
        self.n = 0

    def __iter__(self):
        return self

    def __next__(self):
        result = self.n ** 2
        self.n += 1
        return result"
Create a custom sorting algorithm in Python that sorts a list of integers from highest to lowest.,"int_list = [8, 5, 9, 3, 4, 6]","def custom_sort(int_list):
  for i in range(len(int_list)): 
    for j in range(i+1, len(int_list)): 
        if int_list[i] < int_list[j]: 
            int_list[i], int_list[j] = int_list[j], int_list[i] 
  return int_list

int_list = [8, 5, 9, 3, 4, 6]

sorted_list = custom_sort(int_list) 
print(""Sorted list: "", sorted_list)"
Generate a Python program that requests a movie title and prints the synopsis of the movie.,Toy Story,"import requests

# Get the movie title from user input
title = input(""Enter a movie title: "")

# Make a request to the OMDb API
url = ""http://www.omdbapi.com/?t="" + title + ""&plot=full&apikey=<YOUR_API_KEY>

response = requests.get(url)
data = response.json()

# Print the synopsis
print(""Synopsis: "" + data[""Plot""])"
Create a script in Python to find the square root of a number.,float x = 81.0,"import math
x = 81.0
# calculate the square root
print('The square root of %0.1f is %0.1f'%(x, math.sqrt(x)))"
Create a Python dictionary from two given lists. The first list contains keys and the second list contains values.,"keys = [1, 2, 3, 4, 5]
values = [4, 5, 6, 7, 8]","dict_from_lists = dict(zip(keys, values))"
Write a Python code to print the items in a dictionary in the order of their occurrence in the dictionary.,"d = {1 : 'Red', 2 : 'Green', 3 : 'Blue'}","for key, value in d.items():
    print(key, value)"
Write a Python program to format a specified string to limit the number of characters to 6.,"""Hello World""","def limit_string(s):
    if len(s) >= 6:
        return s[:6]
    else:
        return s

result = limit_string(""Hello World"")
print(result)"
"Write a Python program that takes a list of strings as input, sorts it alphabetically, and output the sorted list.","['apple', 'pear', 'banana', 'grape']","def sort_alphabetically(input_list):
 results = sorted(input_list)
 
 return results
 
input_list = ['apple', 'pear', 'banana', 'grape']

print(sort_alphabetically(input_list))
# Output: ['apple', 'banana', 'grape', 'pear']"
"Create a Python program to find the total distance of a set of given (x,y) coordinates.","coordinates = [(2, 4), (3, 5), (4, 3), (9, 7)]","def totalDistance(coordinates):
    total = 0
    for i in range(len(coordinates) - 1):
        distance = ((coordinates[i+1][0] - coordinates[i][0])**2 + (coordinates[i+1][1] - coordinates[i][1])**2)**(1/2)
        total += distance
    return total

print(totalDistance(coordinates))"
Generate a Python script that will extract all URLs from the given text.,The websites I like to visit are https://www.google.com and https://www.facebook.com,"import re

text = ""The websites I like to visit are https://www.google.com and https://www.facebook.com""

url_list = re.findall(r'(https?://\S+)', text)

print(url_list)"
Create a Python program to determine if a list is monotonically increasing.,"list = [1, 3, 4, 5, 9, 10]","def check_monotonic(list):
 is_monotonic = True
 for i in range(len(list)-1):
  if(list[i] > list[i+1]):
   is_monotonic = False
 return is_monotonic

list = [1, 3, 4, 5, 9, 10]
print(check_monotonic(list)) # Output: True"
Create a program in Python that shuffles and prints an array of items.,"['a', 'b', 'c', 'd']","import random

items = ['a', 'b', 'c', 'd']
random.shuffle(items)

print(items)"
"Create a Python code to classify a given Iris flower as Iris setosa, Iris versicolor and Iris virginica.","[5.9, 3.0, 5.1, 1.8]","def classify_iris(flower):
    if flower[0] < 5 and flower[2] < 4:
        return 'Iris setosa'
    elif flower[2] >= 4.9 and flower[3] <= 1.8:
        return 'Iris virginica'
    else:
        return 'Iris versicolor'"
Write a Python program to create a data visualization for a given dataset.,The dataset contains information about the number of students enrolled in various courses.,"import matplotlib.pyplot as plt

def create_visualizations(data):
 x = [x[0] for x in data]
 y = [x[1] for x in data]
 plt.plot(x, y, 'bo')
 plt.xlabel('Courses')
 plt.ylabel('Students')
 plt.title('Number of Students Enrolled in Courses')
 plt.show()"
Compute with a Python program which elements of an array can be used as the divisor of other elements in the array.,"[18, 30, 42, 45, 24]","arr = [18, 30, 42, 45, 24]

for i in range(len(arr)):
    for j in range(i+1, len(arr)):
        if arr[i] != 0 and arr[j] % arr[i] == 0:
            print(str(arr[i]) + ' divides ' + str(arr[j]))"
Write Python code to implement the Quick Sort algorithm.,"[10, 7, 8, 9, 1, 5]","def partition(arr,p,r):
    x = arr[r]
    i = p - 1
    for j in range(p, r):
        if arr[j] <= x:
            i = i + 1
            arr[i], arr[j] = arr[j], arr[i]
    arr[i + 1], arr[r] = arr[r], arr[i+1]
    return i + 1
 
def quick_sort(arr,p,r):
    if p < r:
        q = partition(arr,p,r)
        quick_sort(arr,p,q-1)
        quick_sort(arr,q+1,r)"
Write a Python program to check if a provided string is valid JSON.,"""<noinput>""","def is_valid_json(s):
    valid = True
    try:
        json.loads(s)
    except ValueError:
        valid = False
    return valid"
Create a Python script to filter out all numbers divisible by 3 in a list.,"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]","# Initialize list
n = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]

# Function
def filter_divisible_by_3(n):
    return [num for num in n if num % 3 != 0]

# Output
print(filter_divisible_by_3(n))
# Output: [1, 2, 4, 5, 7, 8, 10, 11, 13]"
Write a Python program to filter out the duplicates in a list,"list_a = [1, 2, 3, 2, 5, 2]","def remove_duplicates(list_a):
    result = []
    for a in list_a:
        if a not in result:
            result.append(a)
    return result"
"Given a string, write a Python program to remove all punctuation from the string.",The quick brown fox jumps over the lazy dog.,"import string

def remove_punctuation(text):
    return text.translate(str.maketrans('', '', string.punctuation))

print(remove_punctuation(""The quick brown fox jumps over the lazy dog.""))
# output: The quick brown fox jumps over the lazy dog"
Write a Python script that takes as input two strings and returns a boolean indicating if the two strings are equal when accounting for case sensitivity.,"String 1: ""Hello""
String 2: ""hello""","def case_insensitive_compare(str1, str2):
 return str1.lower() == str2.lower()

string1 = ""Hello""
string2 = ""hello""

print(case_insensitive_compare(string1, string2))

# Output
True"
Write a python program to create a histogram of the given list elements,"list: [1, 2, 4, 5, 6, 3, 2]","def create_histogram(list):
    hist = dict()
    
    for i in list:
        if i not in hist:
            hist[i] = 1
        else:
            hist[i] += 1
    
    return hist"
Write a Python program to print a Welcome message for the user.,Username: John,"print(""Welcome John!"")"
Design a function in Python that takes in two numbers and outputs their sum.,"2, 3","def sumTwo(a, b):
  return a + b

print(sumTwo(2, 3))"
Generate a program in Python to print the union of two given sets.,"[1, 2, 3], [2, 3, 4, 5]","def union_sets(set1, set2):
    return list(set(set1) | set(set2))

set1 = [1, 2, 3]
set2 = [2, 3, 4, 5]

print(union_sets(set1, set2)"
Write a Python program to find the shortest path between two points,"A (1,2), B (5,6)","# Initialize the two points
A = (1,2) 
B = (5,6)

# Create a function
def short_path(p1, p2):
    # Compute the x-distance
    x_dist = abs(p2[0] - p1[0])
    # Compute the y-distance
    y_dist = abs(p2[1] - p1[1])
    # Compute the manhattan distance
    manh_dist = x_dist + y_dist
    return manh_dist

# Test the function
print(short_path(A, B))

# Output
6"
Generate a Python program that reads in a list of words and sorts them alphabetically.,"List of words: ['apple', 'banana', 'cat', 'zebra']","words = ['apple', 'banana', 'cat', 'zebra']
words.sort()

for word in words:
 print(word)"
Create a script in Python that checks that a given URL is active and responding.,"url = ""http://www.example.com""","import requests

url = ""http://www.example.com""

try:
 request = requests.get(url)
 if request.status_code == 200:
 print(""URL is active and responding"")
except Exception as e:
 print(f""Error: {e}"")"
"Given a list of integers, write a Python program to find the list's maximum value.","[1, 8, 2, 4, 10]","def find_max(nums):
    max_value = nums[0] 
    for i in nums:
        if i > max_value:
            max_value = i
    return max_value

nums = [1, 8, 2, 4, 10]
print(find_max(nums))"
Convert the given JSON data into python dictionary.,"{""key"": ""value""}","import json 

json_data = '{""key"": ""value""}'

pydict = json.loads(json_data) 
print (""Python dictionary:"", pydict)"
Generate a Python program that displays all prime numbers between two numbers.,"50, 75","def display_prime_numbers(min, max):
    for n in range(min, max):
        if is_prime(n):
            print(n)

def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            return False
    return True

display_prime_numbers(50, 75)"
Construct a Python program to perform principal component analysis,A dataset of 10 rows and 3 columns,"from sklearn.decomposition import PCA

def pca_transformation(X):
    pca = PCA()
    X_pca = pca.fit_transform(X)
    return X_pca"
"Create a python program to accept two inputs from the user, a number and a string, and print the string the given number of times.","3, Hello","num = int(input(""Enter a number: ""))
string = input(""Enter a string: "")

for i in range(num):
 print(string)"
Generate a correct Python program to filter out elements of a list using lambda,"list = [1,2,3,4,5]","list = [1,2,3,4,5]

result = list(filter(lambda x : x % 2 == 0 , list))
print(result)"
Optimize an existing Python script to run as efficiently as possible.,"def spam(divideBy):
    return 42 / divideBy

print(spam(2))
print(spam(12))
print(spam(0))","def spam(divideBy):
    try:
        return 42 / divideBy
    except ZeroDivisionError:
        print('Error: Invalid argument.')

print(spam(2))
print(spam(12))
print(spam(0))"
Write a Python program to optimize an array of numbers so that the sum of elements is maximum and all the elements are greater than 0.,"[1,-2,3,4,-5]","import numpy as np

# Get the input array
arr = [1,-2,3,4,-5]

# Optimize the array so that the sum of elements is maximized
# and all the elements are greater than 0
new_arr = np.max(arr,0)

# Print the optimized array
print(""Optimized Array : "",*new_arr)"
Generate Python code to compute the sum of items in a list.,"[2, 17, 3, 8]","sum = 0
for value in [2, 17, 3, 8]:
 sum += value
print(sum)"
Create a Python function that takes in a string and a list of words and returns true if the string contains all the words in the list.,"'This is a test', ['test', 'this', 'is']","def contains_words(input_string, words):
 for word in words:
 if word not in input_string:
 return False
 return True

print(contains_words('This is a test', ['test', 'this', 'is'])) # True"
Create a function in Python that sorts the elements of a given list.,"[5, 7, 2, 3, 4, 1]","def sort_list(numbers):
    numbers.sort()
    return numbers

result = sort_list([5, 7, 2, 3, 4, 1])
print(result)"
Create a Python program to optimize a given function for a given interval.,"func = lambda x: x**2 - 4.5*x + 5 
interval = [-3.5, 4.5]","import scipy.optimize

# Execute optimization
mini = scipy.optimize.minimize_scalar(func = func, 
                bounds = interval)
                 
# Print optimal value x_opt
print('{0:5.5f}'.format(mini.x))"
Create a python program to remove the python comments from a text,"# This is a python comment
print(""Hello world"") # This is another comment","import re

def remove_comments(text):
    regex = r""(\"".*?\""|\'.*?\')|(/\*.*?\*/|\#[^\r\n]*$)""
    clean_text = re.sub(regex, """", text, 0, re.MULTILINE).strip()
    return clean_text

remove_comments(""# This is a python comment\nprint(\""Hello world\"") # This is another comment"")
#output:
print(""Hello world"")"
"Optimize the following Python code so that it runs faster, given that x is an array of integers.

sum = 0
for i in range(len(x)):
 sum += x[i]","x = [4, 2, 1, 7, 8, 6]","# Optimized Python code
sum = 0
for num in x:
 sum += num
 
# Using built-in sum function
sum = sum(x)"
Create a Python program to check if two lists have overlapping elements,"A = [1,3,5,7], B = [2,4,5,7]","def has_overlapping(arr1, arr2):
    for element in arr1:
        if element in arr2:
            return True
    return False

A = [1,3,5,7]
B = [2,4,5,7]

result = has_overlapping(A, B)
print(result)"
Write a function in Python that takes two lists as arguments and return all their common elements.,"[1, 3, 5, 7], [3, 4, 5, 8]","def common_elements(list1, list2):
    common = []
    for num in list1:
        if num in list2:
            common.append(num)
    return common

print(common_elements([1, 3, 5, 7], [3, 4, 5, 8]))"
"Given input and output examples, create a classification model in Python that can predict the output for a given input.","Inputs: [1, 2, 3] 
Outputs: [2, 4, 6]","def pred_model(inputs): 
  outputs=[]
  for i in inputs:
    outputs.append(i*2)
  return outputs
 
inputs = [1,2,3] 
outputs = pred_model(inputs) 
print(""Outputs:"", outputs)"
Write Python code to implement the Bubble Sort algorithm for sorting a list of numbers.,"[5,1,4,2,8]","def bubble_sort(lst):
    n = len(lst)
    for i in range(n): 
        for j in range(0, n-i-1): 
            if lst[j] > lst[j+1] : 
                lst[j], lst[j+1] = lst[j+1], lst[j]
    return lst"
Create a for loop in Python to calculate the total sum of all elements in the given list.,"data = [1, 9, 3, 5]","total = 0
for element in data:
    total = total + element
print(total)"
Create a Python script to format the following string with proper new lines and indentation.,"'{ ""name"":""John"", ""age"":30, ""city"":""New York""}'","formatted = '{\n  ""name"":""John"",\n  ""age"":30,\n  ""city"":""New York""\n}'"
Create a Python code snippet to store the login credentials in a dictionary.,"username: testuser
password: test123","creds = {
 ""username"": ""testuser"",
 ""password"": ""test123""
}"
Create a program in Python that takes an array and finds the minimum value stored in it.,"[34, 48, 19, 61, 3]","arr = [34, 48, 19, 61, 3] 
  
# Finds the minimum element 
print (""The minimum element is "" + str(min(arr)))"
Convert the given code from JS to Python.,"let add = (a, b) => { 
    return a + b; 
}","def add(a, b):
    return a + b"
Generate a new Python List containing all of the even numbers from a given list.,"my_list = [2, 3, 4, 5, 6, 7, 8, 9]","my_list = [2, 3, 4, 5, 6, 7, 8, 9]

even_list = [x for x in my_list if x % 2 == 0]
print(even_list)"
Convert this function from Python 2 to Python 3.,"def fib(n):
    """"""Print a Fibonacci series up to n""""""
    result = []
    a, b = 0, 1
    while b < n:
        result.append(b)
        a, b = b, a+b
    return result","def fib(n):
    """"""Print a Fibonacci series up to n""""""
    result = []
    a = 0
    b = 1
    while b < n:
        result.append(b)
        tmp_a = a
        a = b
        b = tmp_a + b
    return result"
Write a Python script to sort a given list in ascending order.,"[4, 6, 1, 7]","def sort_ascending(list):
    return sorted(list)"
Generate a program that translates a program written in one language to another language,"The following code is written in Javascript:

function doubleValue(num) {
 return num * 2;
}","def doubleValue(num):
 return num * 2
 
# Javascript to Python 

def doubleValue(num): 
 return num * 2"
Create a Python program to convert a given list of strings to float values,"str_list = ['45', '87.5', '90.9', '24']","def convertStringToFloat(str_list):
    floats = []
    for s in str_list:
        floats.append(float(s))
    return floats

convertStringToFloat(str_list) // Returns [45.0, 87.5, 90.9, 24.0]"
Transform the given language rich code into a python program,Create a Python program that calculates the average of an array of numbers,"def get_average(arr): 
    sum = 0
    
    for i in range(len(arr)): 
        sum += arr[i] 
        
    return sum/len(arr)"
Write a python program to check if a given number is prime or not.,27,"def is_prime(num):
    for i in range(2, num):
        if (num % i) == 0:
            return False
    return True

number = 27

if is_prime(number):
    print(str(number) + ' is a prime number.')
else:
    print(str(number) + ' is not a prime number.')"
Write a Python program to format a specified string to limit the number of characters to 6.,"str = ""Python is a great programming language!""","new_str = ""Python"".ljust(6, ""..."")

print(new_str)  #Python..."
Create a random forest model in Python from the given data set.,"import pandas as pd

data = {
    'Gender': ['male', 'female', 'male', 'female'],
    'Income': [30000, 50000, 40000, 60000],
    'Label': [1, 0, 0, 1]
}

df = pd.DataFrame(data)","from sklearn.ensemble import RandomForestClassifier

features = ['Gender', 'Income']
X = df[features]
y = df['Label']

clf = RandomForestClassifier(n_estimators=100, max_depth=2, random_state=0)
clf.fit(X, y)"
Design a Python program to find the first prime number greater than a user-specified number.,15,"def find_prime_number(n):
    number = n + 1
    while True:
        counter = 0
        for i in range(2, number):
          if number % i == 0:
            counter = 1
        if counter == 0:
            break
        number += 1
    return number

num = int(input(""Enter a number:""))
prime = find_prime_number(num)

print(prime)"
Create a Python generator that returns numbers from a given list.,"[1,3,5,7,9]","def list_generator(input_list):
    for item in input_list:
        yield item

gen = list_generator([1,3,5,7,9])
for item in gen:
    print(item)"
Generate a correct Python program to compute the reverse of the given string,"string = ""hello""","def reverse_string(string):
    output = """"
    for i in range(len(string)):
        output += string[len(string)-1-i]
    return output"
Write a Python function that takes a list of numbers and returns the sum of all odd numbers in the list.,"[1, 2, 3, 4, 5]","def sum_odd_numbers(nums):
    result = 0
    for num in nums:
        # check for odd number
        if num % 2 != 0:
            result += num
    return result

result = sum_odd_numbers([1, 2, 3, 4, 5])
print(result)"
"Using some common sorting algorithms, create a Python program to sort the given array of numbers","arr = [4, 6, 8, 1, 3, 9]","def insertion_sort(arr):
    for i in range(1, len(arr)):
        key = arr[i]
        j = i - 1
        while j >= 0 and key < arr[j]:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = key
    return arr

insertion_sort(arr)"
Read a given list of strings and create a new list of all strings that are longer than 5 characters long.,"['Python', 'is', 'Fun']","def filter_long_strings(string_list):
 long_strings = []
 for string in string_list:
 if len(string) > 5:
 long_strings.append(string)
 return long_strings

string_list = ['Python', 'is', 'Fun']

long_strings = filter_long_strings(string_list)
print(long_strings)"
Generate a Python program to print out all possible permutation of a given list of elements.,"[1, 2, 3]","def permutations(input_list):
    if len(input_list) == 1:
        return input_list
    output_list = []
    for value in input_list:
        temp_list = input_list[:]
        temp_list.remove(value)
        permutations_list = permutations(temp_list)
        for sub_list in permutations_list:
            output_list.append([value] + sub_list)
    return output_list"
"Create a Python program that implements a search algorithm (e.g. binary search, linear search).","Array: [1, 3, 4, 6, 8, 9, 11, 12, 14]
Target: 11","def linear_search(arr, target):
 for i in range(len(arr)):
 if arr[i] == target:
 return i

 return -1

arr = [1, 3, 4, 6, 8, 9, 11, 12, 14]
target = 11

result = linear_search(arr, target)
if result == -1:
 print('Element not found')
else:
 print(f'Element found at index {result}')

Output:
Element found at index 6"
Write a Python script to find the common elements in two given lists.,"List A: [1, 3, 5, 7, 9] 
List B: [2, 3, 4, 5, 8]","def findCommonElements(listA, listB):
 commonElements = []

 for elementA in listA:
 for elementB in listB:
 if elementA == elementB:
 commonElements.append(elementA)

 return commonElements

listA = [1, 3, 5, 7, 9]
listB = [2, 3, 4, 5, 8]
commonElements = findCommonElements(listA, listB) 

print(commonElements)  # Output: [3, 5]"
Create a Python program that takes two lists of integers and prints the common elements between the two lists.,"list1 = [2, 4, 6, 8]
list2 = [4, 8, 10]","list1 = [2, 4, 6, 8]
list2 = [4, 8, 10]

common_elements = list(set(list1).intersection(list2))

print(common_elements)
# Output: [4, 8]"
Found and fix any bugs with the following python code.,"def sum_list(list):
    sum_list = 0
    for num in list:
        sum_list += num
    return sum","def sum_list(list):
    sum_list = 0
    for num in list:
        sum_list += num
    return sum_list"
Modify the provided Python program to print out the numbers from 1 to 10,"for i in range(11):
    print(i)","for i in range(1, 11):
    print(i)"
Create a Python program that takes in a string and returns a string with the characters in reversed order.,"String: ""Hello World""","def reverse(str):
    return str[::-1]"
Generate a correct python program to format a given string s so that the output pattern is as follows,"Given String: ""Hello--world--someone""
The output pattern is: ""Hello world someone"".","def format_string(s):
    string_arr = s.split(""--"")
    return ' '.join(string_arr)"
Optimize the following function by rewriting it in Python,"def double(number):
    return number * 2","def double(number: int) -> int:
    return number << 1"
"Create a function in Python which takes a list of strings as input, and prints the longest palindrome contained in the list.","[""racecar"", ""python"", ""mom"", ""abba""]","def longest_palindrome(str_list):
  longest_palindrome = """"
  for s in str_list:
    if s == s[::-1] and len(s) > len(longest_palindrome):
      longest_palindrome = s
  print(longest_palindrome)
  
longest_palindrome([""racecar"", ""python"", ""mom"", ""abba""])"
Compute a matrix multiplication of two given matrices A and B in Python.,"The matrices are A=[1, 2, 3; 4, 5, 6] and B=[1, 2; 3, 4; 5, 6].","import numpy as np 

A = np.array([[1,2,3], [4,5,6]])
B = np.array([[1,2], [3,4], [5,6]])

C = np.matmul(A, B)

print(C)
# Output 
# [[22 28], 
#  [49 64]]"
Write a Python program to slice a list and store the first two elements in separate variables.,"[2, 4, 6, 8, 10]","list = [2, 4, 6, 8, 10] 
first, second = list[0], list[1]  
print(first) 
print(second)"
Create a Python program that extracts the nth element from a nested array.,"nested array: [[1,2,3], [4,5,6], [7,8,9]]
nth index: 5","def extract_nth_element(arr, n):
 nth_element = arr[n // len(arr[0])][n % len(arr[0])]
 return nth_element

arr = [[1,2,3], [4,5,6], [7,8,9]]
n = 5
print(extract_nth_element(arr, n))
# Output: 6"
Make a visual representation of the following data-set in Python using Matplotlib.,"X = [2,4,6,8,10]
Y = [5,10,15,20,25]","import matplotlib.pyplot as plt

X = [2,4,6,8,10]
Y = [5,10,15,20,25]

plt.plot(X,Y)
plt.xlabel('X')
plt.ylabel('Y')
plt.title('Visual Representation')
plt.grid()
plt.show()"
Create a module in Python for validating a phone number.,"phone number = ""+1-800-867-5309""","import re

phone_number = ""+1-800-867-5309""

phone_pattern = re.compile(r'^\+[1-9]\d{1,2}\-\d{3}\-\d{3}\-\d{4}$')

def validate_phone_number(phone_number):
    return phone_pattern.search(phone_number)

valid = validate_phone_number(phone_number)
if valid:
    print(""Valid Phone number"")
else:
    print(""Invalid Phone number"")"
Generate a Python program that takes a list of strings as input and prints the strings in alphabetical order.,"['cat', 'dog', 'apple', 'banana']","strings = ['cat', 'dog', 'apple', 'banana']

strings.sort()

for string in strings:
    print(string)"
Write a python code to perform the task of bubble sorting in a list.,"arr = [1, 10, 5, 4, 8]","def bubble_sort(arr): 
    n = len(arr) 
    for i in range(n): 
        for j in range(0, n-i-1): 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j]
                
bubble_sort(arr)"
Write a python script that extracts data from a JSON object and stores it in a new array.,"{
    ""name"": ""John Doe"", 
    ""age"": 30,
    ""occupation"": ""programmer""
}","data = [{
    ""name"": ""John Doe"",
    ""age"": 30,
    ""occupation"": ""programmer""
}]

arr = []

for item in data:
    arr.append(item)
    
print(arr)"
Generate a Python function to print a pattern of stars,n = 5,"def starPattern(n):
    # outer loop to handle number of rows
    for i in range(0, n):
        # inner loop to handle number of columns
        for j in range(0, i + 1):
            # printing stars
            print(""* "", end="""")
        # ending line after each row
        print(""\r"")

# Driver code
n = 5
starPattern(n)"
Edit the following Python program such that it prints out the multiplication table for the given number n.,n = 5,"n = 5

# printing the multiplication table
for i in range(1, 11): 
    print(n, 'x', i, '=', n * i)"
Write a python program to generate the first n prime numbers.,n = 10,"def generate_prime_numbers(n):
  prime_numbers = []
  count = 0
  num = 2
  while count < n:
    is_prime = True
    for i in range(2, num):
      if num % i == 0:
        is_prime = False
        break
    if is_prime:
      prime_numbers.append(num)
      count += 1
    num += 1
  return prime_numbers

primes = generate_prime_numbers(n)
print(primes)  # Outputs [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]"
Write a Python program for generating random strings of a given length from a given character set.,The given character set: abcdefghijklmnopqrstuvwxyz,"import random
 
def random_string(length, char_set):
 result = """"
 for _ in range(length):
  result += random.choice(char_set)
 return result
 
print(random_string(6, 'abcdefghijklmnopqrstuvwxyz'))

# Output: acehkl"
Create a program in Python for finding the maximum in a list of numbers.,"[2, 3, 4, 9, 5]","def find_max(lst): 
 
    # Initialize maximum element 
    max = lst[0] 
   
    # Traverse list element 
    # from second and compare 
    # every element with current max  
    for i in range(1, len(lst)): 
        if lst[i] > max: 
            max = lst[i] 
   
    return max

max_num = find_max([2, 3, 4, 9, 5])
print(""The maximum number in the list is:"",max_num)"
Create a program in Python to add two numbers using functions.,"num1 = 5, num2 = 7","def add(num1, num2):
    return num1 + num2

result = add(5, 7)
print(result)"
Create a Python program to remove duplicates from an unsorted array.,"[1, 1, 2, 2, 3, 4, 5, 5, 6]","original_list = [1, 1, 2, 2, 3, 4, 5, 5, 6]

def remove_duplicates(lst):
    new_list = []
    for item in lst:
        if item not in new_list:
            new_list.append(item)
    return new_list

print(remove_duplicates(original_list))"
Write a script in Python to sort the given list of numbers in non-decreasing order,"[3, 2, 7, 1, 9, 5]","def sortNumbers(nums): 
    for i in range(len(nums)-1): 
        minPos = i 
        for j in range(i+1,len(nums)): 
            if nums[minPos] > nums[j]: 
                minPos = j 
        nums[i],nums[minPos] = nums[minPos],nums[i] 

nums = [3, 2, 7, 1, 9, 5]
sortNumbers(nums) 
print(nums)"
Write a Python function to perform a linear search in a given array.,"array = [2, 3, 41, 64, 1, -5]
target = -5","def linear_search(arr, target):  
    for i in range(len(arr)): 
        if arr[i] == target: 
            return i 
    return -1"
Classify the following Python code snippet according to the function it implements.,"def square_sum(num_list):
    result = 0
    for num in num_list:
        result += num * num
    return result",The code implements a function for summing the squares of a list of numbers.
"Create an Optimizer function in Python to optimize a given function f(x) for x in [-4, 4].",Function f(x): f(x) = x^2 - 3x + 2,"import numpy as np
from scipy.optimize import minimize

# Function to optimize
def f(x):
 return x**2 - 3*x + 2

# Optimize
optimized = minimize(f, [-4, 4], method=""L-BFGS-B"")

# Print result
print(""Optimized value of the function: "", optimized.fun)  # prints -3.999999999999997
print(""Optimized value of x: "", optimized.x) # prints [-4.]"
Write a Python function that takes a dictionary as input and returns a list of values sorted in ascending order.,"mydict = {'x':4, 'y':2, 'z':1}","def sort_dict_values(d):
    # create a list of values from the dictionary
    values = list(d.values())
    # sort the list 
    values.sort()
    return values

result = sort_dict_values(mydict)
print(result)"
Write a Python program to create a random password of length 10.,<noimport>,"import string 
import random

def generate_password(length): 
    password = """" 
    for i in range(length): 
        character = random.choice(
            string.ascii_letters + 
            string.digits + 
            string.punctuation)
        password += character
    return password

password = generate_password(10) 
print(password)"
Edit the given Python program to optimize its code for better performance,"#Function to calculate the sum of the natural numbers 
def sumOfNaturals(n): 
  
    sum = 0
    for i in range(1, n+1): 
        sum += i 
  
    return sum","#Function to calculate the sum of the natural numbers 
def sumOfNaturals(n): 
  
    #using Gauss formula
    if n % 2 == 0: 
        sum = (n//2)*(n+1) 
    else: 
        sum = (n//2)*(n+1) + (n+1)//2
  
    return sum"
Write python code to detect a palindrome,"word = ""noon""","def is_palindrome(word):
    # reverse the string 
    rev = word[::-1]  
  
    # check if the string is equal to its reverse    
    if word == rev: 
        return True
    return False

is_palindrome(""noon"") # returns True"
Create a Lambda function in Python to process an integer array and return the square of the even numbers in the array.,"The integer array: [2, 4, 7, 9, 12, 14]","def lambda_handler(event, context):
    numbers = event['numbers']
    result = [num ** 2 for num in numbers if num % 2 == 0]
    return {'result': result}"
Design a program in Python for computing the average height of a group of people.,"[1.78, 1.90, 1.75, 1.82]","def average_height(lst):
    total = 0
    for height in lst:
        total += height
    
    return total / len(lst)

result = average_height([1.78, 1.90, 1.75, 1.82])
print(result)"
Create a Python script to calculate the sum of two integers.,"10, 20","num1 = 10
num2 = 20

sum = num1 + num2

print(""The sum of {0} and {1} is {2}"".format(num1, num2, sum))"
Create a Python program to calculate the average number of items in a list. The list should be taken as input from the user.,"List elements: 1, 6, 5, 7","list_elements = input('List elements: ').split()

sum = 0
for num in list_elements:
 sum += int(num)

average = sum / len(list_elements)

print(f'The average number of items in the list is {average}.')"
Convert the following Python code to Java:,"a = 10
b = 20
c = a + b","int a = 10;
int b = 20; 
int c = a + b;"
Write a Python script to sort a given list in descending order.,"[5, 3, 2, 1, 4]","def sort_desc(lst): 
    return sorted(lst, reverse=True)"
Create a basic Python script that converts all strings in a given dictionary to uppercase.,"{""name"": ""John"", ""age"": 45, ""location"": ""San Francisco""}","d = {""name"": ""John"", ""age"": 45, ""location"": ""San Francisco""}
for key in d:
 d[key] = str(d[key]).upper()

print(d)
# Output: {""name"": ""JOHN"", ""age"": 45, ""location"": ""SAN FRANCISCO""}"
Convert the given array to an array of dictionaries in Python.,"array = [[""a"", 1], [""b"", 2], [""c"", 3]]","[{'a': 1}, {'b': 2}, {'c': 3}]"
Create a Python function to remove the items in a list that appear multiple times.,"[""Apple"", ""Banana"", ""Orange"", ""Apple"", ""Banana""]","def remove_extras(lst):
    # Create a new list with unique items
    unique_items = []
    for item in lst:
        if item not in unique_items:
            unique_items.append(item)

    # Return the list with unique items
    return unique_items

test = [""Apple"", ""Banana"", ""Orange"", ""Apple"", ""Banana""]
print(remove_extras(test))"
Write a Python program to check if an array has more than three duplicate elements.,"arr = [4, 2, 8, 2, 1, 4, 19, 4]","def check_duplicate_in_array(arr):
    result = False
    for i in range(len(arr) - 2):
        if arr[i] == arr[i + 1] == arr[i + 2]:
            result = True
            break
    return result

arr = [4, 2, 8, 2, 1, 4, 19, 4]
print(check_duplicate_in_array(arr)) # Output: True"
Write a function in Python that takes a list of numbers and returns the sum of the list items that are greater than the given value.,"nums = [1, 4, 5, 10, 12]
value = 6","def findSum(nums, value):
 total = 0
 
 for num in nums:
 if num > value:
 total += num
 
 return total
 
nums = [1, 4, 5, 10, 12]
value = 6

res = findSum(nums, value)

print(res)"
Create a Python function to remove a given item from a list.,"[2, 3, 4], 4","def removeItem(lst, item):
    if item in lst:
        lst.remove(item)
    return lst

print(removeItem([2, 3, 4], 4))"
Develop a python program to find the maximum sum of non-consecutive elements of a given integer list.,"[2, 3, 5, 6, 20, 9]","def find_max_non_consecutive_sum(arr):
    incl = 0
    excl = 0
     
    for i in arr:
        new_excl = max(incl, excl)   
        incl = excl + i 
        excl = new_excl 
       
    return max(incl, excl)"
"Generate a Python script that finds the total surface area of a cuboid, given its three dimensions.","2, 3, 4","def find_total_surfacearea(length, breadth, height):
   return (2*(length*breadth + breadth*height + height*length))

print(find_total_surfacearea(2, 3, 4))

Output: 52"
Create a Python program for finding the maximum and minimum numbers in an array of numbers.,"1, 10, 3, 8, 6","def find_min_max(numbers):
 
 min_num = float('inf')
 max_num = float('-inf')
 
 for num in numbers:
  if num < min_num:
   min_num = num
  if num > max_num:
   max_num = num
 
 return [min_num, max_num]

numbers = [1, 10, 3, 8, 6]
print(find_min_max(numbers))

# Output: [1, 10]"
Optimize a given Python script that reverse a string.,"def reverse_string(string):
    reversed_string = """"
    for char in string:
        reversed_string = char + reversed_string
    return reversed_string","def reverse_string(string):
    return string[::-1]"
Write an algorithm in Python to calendarify the dates in the following array,"dates = [423, 198, 720, 930, 505]","def calendarify(dates):
    calendar = []
    for date in dates:
        day = date % 100
        month = date // 100
        calendar.append((day, month))
    return calendar
  
calendarify(dates)"
"Using Python, design an algorithm that takes a string as an input and reverses it.","""Hello World!""","def reverseString(str): 
  s = """" 
  for i in str: 
    s = i + s
  return s 

print(reverseString('Hello World!'))	# Output: !dlroW olleH"
Write a Python function to convert a list of integers into a comma separated string.,"int_list = [1, 4, 5, 6, 7]","def list_to_string(int_list):
    string = """"

    for i in int_list:
        string += str(i) + "",""

    # Remove trailing comma
    string = string[:-1]

    return string

int_list = [1, 4, 5, 6, 7] 
print(list_to_string(int_list)) // ""1,4,5,6,7"""
Edit the following Python code to ensure the program runs successfully,"list = [1, 5, 6, 8]
for i in range[list]:
    print(i)","list = [1, 5, 6, 8]
for i in list:
    print(i)"
Generate a Python program to optimize an array of numbers,"A = [5, 4, 8, 9, 6, 1, -4, 7]","def optimize_array(A):
    A.sort()
    return A

print(optimize_array([5, 4, 8, 9, 6, 1, -4, 7]))"
Create a Python program to check if a given string has duplicates characters.,"String: ""helloworld""","def hasDuplicates(s):
    set = set()
    for ch in s:
        if ch in set:
            return True
        set.add(ch)
    return False"
Implement a function in Python that takes a string as input and returns a deep copy of the string with its letters reversed.,"""Hello World!""","def reverse_string(string):
 # Create empty string to store reversed characters
 reversed_string = """"

 # Loop through string to get individual characters 
 for char in string:
 reversed_string = char + reversed_string

 # Return reversed string
 return reversed_string

print(reverse_string(""Hello World!""))  # Output -> ""!dlroW olleH"""
"Generate
a python program that calculates the total cost of all items in a given list","[(""apple"", 5, 50),(""mango"",6,70)]","def total_cost(items):
    total_cost = 0
    for item in items:
        quantity = item[1]
        unit_price = item[2]
        total_cost += quantity * unit_price
    return total_cost"
Convert a given JSON data into a Python dictionary object.,"{
  ""name"": ""John"",
  ""age"": 32,
  ""address"": ""123 Main Street""
}","import json

data = {
 ""name"": ""John"",
 ""age"": 32,
 ""address"": ""123 Main Street""
}

py_dict = json.loads(data)"
Optimize an existing Python function to reverse a string. This function should take a string as input and return the reversed string.,'Hello World!',"def reverse_string(input):
    return input[::-1]"
Create a visualization using the Python library matplotlib that compares the sales of two products.,"Product1: [10, 15, 12, 18, 20]
Product2: [5, 8, 9, 10, 15]","import matplotlib.pyplot as plt

product1 = [10, 15, 12, 18, 20]
product2 = [5, 8, 9, 10, 15]

plt.plot(product1, marker='o', label='Product 1')
plt.plot(product2, marker='o', label='Product 2')

plt.title('Comparing sales of two products')
plt.xlabel('Products')
plt.ylabel('Sales')
plt.legend()
plt.show()"
Create a simple python script to parse a given JSON string and print all the keys and their corresponding values.,"{""name"": ""John"", ""age"": 30, ""city"": ""New York""}","import json

json_str = '{""name"": ""John"", ""age"": 30, ""city"": ""New York""}'
json_data = json.loads(json_str)

for key, value in json_data.items():
    print('{}: {}'.format(key, value))"
Create a function in Python that takes two parameters: string and character. It should return the number of occurrences of the given character in the given string.,"string = 'This is a sample string.'
character = 's'","def count_char(string, character):
 count = 0
 for c in string:
 if c == character:
 count += 1
 return count

print(count_char('This is a sample string.', 's'))  # 3"
Identify which of the following two Python codes is more memory efficient.,"# Code A
def foo():
    lst = []
    for i in range(1, 100):
        lst.append(i)

# Code B
def foo():
    lst = [i for i in range(1, 100)]",Code B is more memory efficient than Code A since it uses list comprehension instead of appending items to a list.
Write a function in Python that converts a given date-time string into a specified timestamp format.,"String date-time: ""2020-05-02 15:30:00""
Timestamp format: %Y/%m/%d %H:%M:%S","import datetime
def convert_datetime_to_timestamp(date_time, timestamp_format):
    return datetime.strptime(date_time, ""%Y-%m-%d %H:%M:%S"").strftime(timestamp_format)"
Rewrite the code snippet with updated syntax for Python 3.,"print ""Hello World!""","print(""Hello World!"")"
"Create a function in Python that given a string, calculates the number of vowels in it.",Hello World!,"def count_vowels(s):
  vowels = 'aeiou'
  count = 0
  for c in s.lower():
    if c in vowels:
      count += 1
  return count

s = 'Hello World!'
print(count_vowels(s)) # Output 3"
Develop a Python program to output the most common elements in a given collection,"collection = [1, 4, 5, 3, 4, 6, 5, 3, 4]","from collections import Counter 

def most_common (collection): 
	data = Counter(collection) 
	return data.most_common(1)[0] 

collection = [1, 4, 5, 3, 4, 6, 5, 3, 4]
assert most_common(collection) == (4, 3) 
print (""Most Common element is: "",most_common(collection))"
Create a Python program to edit a string and remove the vowels from it.,Hello world,"def remove_vowels(string):
    vowels = ""aeiouAEIOU""
    result = """"
    for character in string: 
        if character not in vowels: 
            result += character
    return result
  
print (remove_vowels(""Hello world""))"
Generate a Python program to search for a given word in a text string.,"text = ""the quick brown fox jumps over the lazy dog""
word = ""fox""","def searchWord(text, word):
  return word in text

text = ""the quick brown fox jumps over the lazy dog""
word = ""fox""

if searchWord(text, word):
  print(""The word is found in the text string."")
else:
  print(""The word is not found in the text string."")"
Split the Python code below into simpler functions.,"def add_two_numbers(a, b):
  c = a + b
  d = a * b
  return c, d","# Function to add two numbers
def add_two_numbers(a, b):
  return a + b

# Function to multiply two numbers
def multiply_two_numbers(a, b):
  return a * b

# Function to return the sum and product of two numbers
def sum_and_product(a, b):
  c = add_two_numbers(a, b)
  d = multiply_two_numbers(a, b)
  return c, d"
"Analyze the input provided and generate a function in Python that returns ""Invalid input"" if the input is not a valid integer number, or returns the number of digits in the input number otherwise.",212,"def count_digits(inp):
    if not isinstance(inp, int):
        return ""Invalid input""
    else:
        return len(str(inp))"
Write a Python program to calculate the number of days between two dates.,"Date 1: 2020-01-02
Date 2: 2020-02-19","def days_between_dates(date1, date2):
    """"""
    Calculate the number of days between two dates
    date1: date object
    date2: date object
    """"""
    time_diff = date2 - date1
    return time_diff.days

days_between_dates(date(2020,1,2), date(2020,2,19))"
Create a program to concatenate two strings in Python.,"string1 = ""Hello""
string2 = ""World""","string1 = ""Hello""
string2 = ""World""

concatenatedString = string1 + string2

print(concatenatedString) # ""HelloWorld"""
Create a python script that sorts a list of tuples based on the second element.,"tuples = [('a',3), ('d', 1), ('c', 2)]","sortedTuples = sorted(tuples, key = lambda x: x[1])"
Generate a class in Python using the parameters provided in the following Input section.,"class_name = ""Person""
attributes = [""Name"", ""Age"", ""Gender""]","class Person:
    def __init__(self, Name, Age, Gender):
        self.Name = Name
        self.Age = Age
        self.Gender = Gender"
Write a Python program to identify the number of times a given number appears in a list.,"list = [12, 46, 8, 12, 8, 8]
number = 8","counter = 0
for num in list:
    if num == number:
        counter += 1
print(""The given number appears"", counter, ""times in the list."")"
Write a Python program to count the number of occurrences of each word in a sentence.,The quick brown fox jumps over the lazy dog,"sentence = 'The quick brown fox jumps over the lazy dog'
words = sentence.split(' ')

word_count = {} 
for word in words:
    if word in word_count:
        word_count[word] += 1
    else:
        word_count[word] = 1
 
for k,v in word_count.items():
    print(k , ':' , v)"
Create a python function to extract the largest DNA sequence from a list of sequences.,"sequences = [""ATGATATCATCGATTGTA"",
""ATGCGATATACGATGAT"",
""ATGGATCGATTATATTA""]","def longest_sequence(sequences):
 longest_sequence = sequences[0]

 for sequence in sequences:
 if len(sequence) > len(longest_sequence):
 longest_sequence = sequence

 return longest_sequence

print(longest_sequence(sequences))  # ATGATATCATCGATTGTA"
Create a Python script to return a list of the top five longest words in a given string.,"""I am a coding enthusiast""","def get_longest_words(sentence): 
    words = sentence.split() 
   
    words.sort(key = lambda s: len(s)) 
  
    longest_words = words[-5:] 
    longest_words.reverse() 
  
    return longest_words 

sentence = ""I am a coding enthusiast""
print(get_longest_words(sentence))"
Generate a lambda expression in Python that takes a list of numbers and returns the maximum value.,"[16, 25, 4, 12, 6]",max_value = lambda num_list: max(num_list)
Modify the following python code to include a trycatch block.,"def add_number(a, b):
    return a + b","def add_number(a, b):
    try:
        return a + b 
    except TypeError:
        print(""Please enter numeric values"")"
Write a Python program that can generate all permutations of a given list.,"list_a = [1, 2, 3]","def generate_permutations(list_a):
  import itertools 
  return list(itertools.permutations(list_a))
  
generate_permutations(list_a)"
Design a solution using python to find the sum of all even numbers between x and y,"x=2, y=8","def even_sum(x, y): 
    
    result=0 
    for i in range(x,y+1): 
        if i%2 == 0: 
            result += i
            
    return result 
  
x=2
y=8
sum = even_sum(x,y) 
print(sum)"
Design a code in Python to count the number of unique elements in a list.,"numbers_list = [1, 2, 2, 5, 6, 6]","def count_unique_elements(numbers_list): 
    seen = set() 
    count = 0 
    for number in numbers_list: 
        if number not in seen: 
            seen.add(number) 
            count+=1 
    return count"
Create a function in Python that determines if a given number is an Armstrong number or not.,371,"def isArmstrongNumber(number):
  num_str = str(number)
  result = 0
  power = len(num_str)

  for c in num_str:
    result += int(c) ** power

  if result == number:
    return True
  else:
    return False

if isArmstrongNumber(371):
  print('It is an Armstrong number.')
else:
  print('It is not an Armstrong number.')"
Write a Python program to convert a given string to an encrypted version of the string.,"""Hello, World!""","import hashlib

def encrypt_string(text):
    result = hashlib.sha256(text.encode()).hexdigest()
    return result

encrypted_string = encrypt_string(""Hello, World!"")
print(encrypted_string)"
Write a Python program to edit an existing array without creating a new array.,"arr = [1,2,3,4,5]","def edit_array(arr):
    for i in range(len(arr)):
        arr[i] += 10
    return arr

if __name__ == '__main__':
    arr = [1,2,3,4,5]
    print(""Edited array:"", edit_array(arr))"
"Given a list of dictionaries, write a python program to find the item with the highest value for the key 'price'.","[
 {'name': 'apple', 'price': 3}, 
 {'name': 'orange', 'price': 2}, 
 {'name': 'banana', 'price': 6}, 
 {'name': 'kiwi', 'price': 4}
]","maxVal = 0
maxItem = {}
for item in items:
 if item['price'] > maxVal:
 maxVal = item['price']
 maxItem = item

print(""The item with the highest price is: "", maxItem)"
Create an AWS Lambda function in Python to make an HTTP request using the requests library.,Example URL: https://api.example.com/data,"import json
import requests

# Handler function
def handler(event, context):
 # Make request
 response = requests.get('https://api.example.com/data')
 
 # Parse response
 data = response.json()
 
 return {
 'statusCode': 200,
 'body': json.dumps(data)
 }"
Design a logistic regression model in Python to predict the class of a given point.,"X = [0.3, 0.7, 0.8]
y = [0, 1, 0]","from sklearn.linear_model import LogisticRegression

model = LogisticRegression()

model.fit(X, y)

def predict_class(X):
 pred = model.predict([X])
 return pred"
Transform the code snippet into a Python class.,"def multiply(x, y):
    return x * y","class Calculator:
    def __init__(self):
        pass

    def multiply(self, x, y):
        return x * y"
"Given a list of integers, write a Python program to find the two numbers whose sum is closest to zero.","arr = [25, -19, 3, 8, -12]","def find_sum_close_to_zero(arr):
    min_sum = float('inf')
    for i in range(len(arr)):
        for j in range(i+1, len(arr)):
            if abs(arr[i] + arr[j]) < abs(min_sum):
                min_sum = arr[i] + arr[j]
    return min_sum

print(find_sum_close_to_zero(arr)) # -7"
Create a Python script to extract the temperature from a JSON object.,"{
  ""location"": ""Berlin"",
  ""weather"": {
    ""temperature"": 17.6
  }
}","import json

json_string = '''
{
  ""location"": ""Berlin"",
  ""weather"": {
    ""temperature"": 17.6
  }
}
'''

data = json.loads(json_string)

temperature = data[""weather""][""temperature""]
print(temperature) => 17.6"
Create an algorithm in Python to find the sum of the first n prime numbers,n = 10,"def sum_of_primes(n):
    if n < 2: 
        return 0
    primes = [2]
    num = 3
    while len(primes) < n:
        is_prime = True
        for p in primes:
            if num % p == 0:
                is_prime = False
                break
        if is_prime:
            primes.append(num)
        num += 2
    return sum(primes)

print(sum_of_primes(10))"
Write a Python code fragment to optimize the given function.,"def search(data, x):
    for element in data:
        if element == x:
            return True
    return False","def search(data, x):
    if x in data:
        return True
    return False"
Write a Python function that takes a list and returns the number of elements that are divisible by 3.,"list = [4, 6, 8, 9, 10]","def number_divisible_by_3(list):
    count = 0
    for item in list:
        if item % 3 == 0:
            count += 1
    return count

result = number_divisible_by_3(list)
print(result)"
Create a Python program to sort a list of numbers from lowest to highest.,"[5, 2, 3, 7, 4]","def sort_list(numbers): 
    numbers.sort() 
    return numbers 
  
# Driver code 
numbers = [5, 2, 3, 7, 4]
print(sort_list(numbers))"
Create a function in Python to count the occurrence of each word in a sentence.,"sentence = ""This is a sample sentence.""","def word_count(sentence):
    words = sentence.split() 
    word_freq = {}
    for word in words:
        if word in word_freq:
            word_freq[word] += 1
        else:
            word_freq[word] = 1
    return word_freq

word_counts = word_count(sentence)
print(word_counts)"
Write a Python program to parse a web page and extract text from its HTML tags.,"<html>
<head>
 <title>Example Web Page</title>
</head>
<body>
 <h1>This is an example web page</h1>
 <p>Welcome to our web page!</p>
</body>
</html>","from bs4 import BeautifulSoup
def parse_web_html(html):
 soup = BeautifulSoup(html, 'html.parser')
 text = soup.get_text()
 return text"
Create a program in Python to remove all elements of a given list with a value of 0.,"[0, 1, 0, 3, 5, 0, 4]","def remove_zeroes(nums):
  return [x for x in nums if x != 0]
  
print(remove_zeroes([0, 1, 0, 3, 5, 0, 4]))"
Construct a Python dictionary to store information about a user.,"name: John Smith
age: 32
location: USA","user_info = {
    'name': 'John Smith',
    'age': 32,
    'location': 'USA'
}"
Develop an algorithm in Python that reverses a given string.,"""hello world""","def reverseString(s): 
    return s[::-1] 
  
string = ""hello world""

print(""Original String:"", string) 
print(""Reversed String:"", reverseString(string))"
"Generate a Python program that takes a date as input and returns the day of the week as a string (i.e. Sunday, Monday, etc.).",3/22/2021,"import datetime

def get_weekday(date_string):
    date = datetime.datetime.strptime(date_string, '%m/%d/%Y')
    return date.strftime('%A')

weekday = get_weekday('3/22/2021')
print(weekday)"
"Make a program in Python to print a staircase of height 'n', where n is an integer.",5,"def staircase(n): 
    for i in range(0, n): 
        for j in range(0, n - i - 1): 
            print(end="" "") 
        for j in range(0, i + 1): 
            print(""#"", end="""") 
        print(""\r"") 
  
# Driver code 
n = 5
staircase(n)"
"Rewrite the following python program using a functional programming approach. The code should take a list of integers as input, filter out the odd numbers, square each even number, and return the sum of all the numbers.","[3, 4, 5, 6, 7, 8, 9, 10]","def fx(nums): 
 return sum(map(lambda x : x*x if x % 2==0 else 0, nums)) 

print(fx([3, 4, 5, 6, 7, 8, 9, 10]))  # Output: 240"
Create Python code to generate the first 10 prime numbers.,No input.,"def generate_prime_numbers(n):
    nums = []
    for x in range(2, n + 1):
        for y in range(2, int(x ** 0.5) + 1):
            if x % y == 0:
                break
        else:
            nums.append(x)
    return nums

print(generate_prime_numbers(10))"
Write a quicksort algorithm in Python.,"[3, 6, 8, 10, 1, 2, 1]","def quick_sort(arr):
    if len(arr) < 2:
        return arr
    else:
        pivot = arr[0]
        less = [i for i in arr[1:] if i <= pivot]
        greater = [i for i in arr[1:] if i > pivot]

        return quick_sort(less) + [pivot] + quick_sort(greater)"
Construct a Python function to find the largest and smallest number in a list.,"[5, 2, 7, 9]","def find_min_max(nums):
    max_num, min_num = nums[0], nums[0]
    for num in nums:
        if num > max_num:
            max_num = num
        if num < min_num:
            min_num = num
    return min_num, max_num

nums = [5, 2, 7, 9]
min_num, max_num = find_min_max(nums)
print(""Max num:"",max_num)
print(""Min num:"",min_num)"
"Given the following data points, generate a polynomial equation using Python.","x = [-2, 0, 2]
y = [1, 4, 9]","import numpy as np

x = np.array([-2, 0, 2])
y = np.array([1, 4, 9])

z = np.polyfit(x, y, 2)
equation = np.poly1d(z)

print(equation)

# Output: 
#       2
# -6.66 x + 5.0 x + 1.0"
Create a Python program to round up a float to the nearest integer.,3.14,"def round_up(f):
    if f - int(f) >= 0.5:
        return int(f) + 1
    return int(f)

round_val = round_up(3.14)
print(round_val)"
Write a Python program to extract the n-th element from the given list of lists.,"[[1,2,3], [4,5,6], [7,8,9]]","def get_nth_element(list_of_lists, n):
    return [item[n] for item in list_of_lists]"
Generate a Python script to calculate the sum of elements in the following input array.,"Input Array: [1, 4, 8, 10, 12]","def SumArray(arr):
  result = 0
  for num in arr: 
    result += num
  return result 
 
print(SumArray([1, 4, 8, 10, 12]))
    # Outputs: 35"
"Create a Python script that takes the list [1, 2, 3, 4, 5] and returns the sum.","[1, 2, 3, 4, 5]","def sum_list(lst):
  total = 0
  for num in lst:
    total += num
  return total

sum_list([1,2,3,4,5])"
Write a Python program to join all elements in a list into a string separated by a given separator.,"[""Hello"", ""World!""], separator = "" ""","def join_list_with_separator(list, separator):
    joined_string = separator.join(list)
    return joined_string"
Write a Python program for creating a histogram from a given dataset.,Dataset contains values from 0 to 10 and their respective count or frequency.,"import matplotlib.pyplot as plt

data = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
frequency = [10, 8, 12, 6, 15, 7, 5, 2, 6, 9, 3]

plt.hist(data, weights=frequency)
plt.title(""Histogram"")
plt.xlabel(""Values"")
plt.ylabel(""Frequency"")

plt.show()"
Optimize the following Python program to find the maximum number in a list.,"list = [9, 2, 5, 6, 4, 1]","def max_num(list):
  max_num = list[0]

  for num in list:
    if num > max_num:
      max_num = num
  
  return max_num"
Design a Python program to generate a frequency distribution report given a list of input words.,"[‘hello’, ‘world’, ‘hello’, ‘welcome’, ’world’]","from collections import Counter

def print_frequency_report(words):
    word_frequencies = Counter(words)
    print('Word\tFrequency')
    print('==============')
    for word, frequency in word_frequencies.items():
        print('{}\t{}'.format(word, frequency))"
Generate a Python program that removes all occurrences of an element from a list,"[1, 2, 2, 3, 2, 4]","def remove_element(arr, x):
  new_arr = [i for i in arr if i != x] 
  return new_arr 
  
arr = [1, 2, 2, 3, 2, 4] 
x = 2

new_arr = remove_element(arr, x) 
print(new_arr)"
Create a Python script to identify the frequency of words in a sentence.,"Sentence = ""This is a test sentence""","from collections import Counter

sentence = ""This is a test sentence""

#split the sentence into words
words = sentence.split()

#count the frequency of each word
word_frequency = Counter(words)

#print the results
print(word_frequency)"
Write an expression in python to check if a given number is prime,number = 15,"def is_prime(number):
    if number>1:
        for i in range(2,number):
            if number%i==0:
                return False
    else:
        return False
    return True
print(is_prime(number))"
Create a Python program to sort the elements of a list in descending order (largest value first).,"numbers = [1, 7, 25, 8, 14]","numbers = [1, 7, 25, 8, 14]

# Sort the list in descending order
numbers.sort(reverse=True)

# Print the sorted list
print(numbers)

# Output
[25, 14, 8, 7, 1]"
Create a python program to convert temperatures from Farenheit to Celsius.,94 F,"def Farenheit_to_Celsius(temperature):
  celsius = (temperature - 32) * 5/9
  return celsius

temp_F = 94
temp_C = Farenheit_to_Celsius(temp_F)

print('{}°F is equal to {}°C'.format(temp_F, temp_C))"
Write a Python program to display a histogram of the frequencies of words in a given sentence.,"Sentence: ""My name is John""","import matplotlib.pyplot as plt 
  
# Data to plot 
labels = 'My', 'name', 'is', 'John'
sizes = [1, 1, 1, 1]

# Plot
plt.pie(sizes, labels=labels, 
        autopct='%1.1f%%', shadow=True, startangle=90) 

plt.axis('equal') 

plt.show()"
Create a Python program to find the sum of all elements in the following two-dimensional list.,"[[1,2], [3,4]]","def sum_list(list_two_dim): 
    sum = 0
    for row in list_two_dim: 
        sum += sum(row) 
    return sum"
Develop a Python code to convert the given binary string to its corresponding integer value.,'100100',"def binary_to_int(binary):
    result = 0
    for i in range(len(binary)): 
        digit = binary[i] 
        if digit == '1':
            result = result + pow(2, len(binary)-i-1)  
    return result

binary_to_int('100100') # returns 36"
"Given a list of integers, write a Python program to find the index of the largest number.","[5, 10, 20, 6, 8]","nums = [5, 10, 20, 6, 8]
max_num = max(nums)
max_index = nums.index(max_num)

print(max_index)"
Write a code to convert a JSON object to an array of dictionaries in Python.,"JSON Object: {
 ""Fruit"": ""Apple"",
 ""Shape"": ""Round"",
 ""Color"": ""Red""
}","#Function to convert a JSON object to an array of dictionaries in Python
import json

def json_to_array(data):
    my_dict = json.loads(data)
    return [{k: v} for k, v in my_dict.items()]

# Driver code
data = '{ ""Fruit"": ""Apple"", ""Shape"": ""Round"", ""Color"": ""Red"" }'
dict_array = json_to_array(data)
print(dict_array)"
Create a python program to group similar items together in a list.,"list = [""dog"", ""cat"", ""cat"", ""fox"", ""dog"", ""elephant""]","def group_similar_items(list): 
    grouped_items = {} 

    for item in list: 
        if item in grouped_items: 
            grouped_items[item] += 1
        else: 
            grouped_items[item] = 1

    print(grouped_items)

group_similar_items([""dog"", ""cat"", ""cat"", ""fox"", ""dog"", ""elephant""]) 
# Output: {'dog': 2, 'cat': 2, 'fox': 1, 'elephant': 1}"
Automate the following UNIX command using  python.,echo password | sudo -S apt-get install vim,"import os

password = 'password'
os.system('echo ' + password + ' | sudo -S apt-get install vim')"
Create a for-loop in Python to iterate over a list and print each element.,"words = [""these"", ""are"", ""some"", ""words""]","words = [""these"", ""are"", ""some"", ""words""]
for word in words:
  print(word)"
Find the highest number in a list of numbers in Python.,"[7, 4, 5, 100, 2]","max_number = max([7, 4, 5, 100, 2])
print(max_number)"
Optimize a Python program to calculate the volume of a cube.,"def volume_of_cube(edge_length):
    return edge_length * edge_length * edge_length
    
print(volume_of_cube(3))","def volume_of_cube(edge_length):
    return edge_length ** 3
    
print(volume_of_cube(3))"
Optimize a Python code snippet which prints out the even numbers up to a given number.,num = 50,"def printEvenNumbers(num):
 for n in range(2, num+1):
 if n%2 == 0:
 print(n)

printEvenNumbers(50)"
Design a function in Python that takes a list of integers and returns the difference between the maximum and the minimum values.,"data = [1, 5, 2, 3, 7, 9]","def getDifference(data):
 min_value = min(data)
 max_value = max(data)
 return max_value - min_value

difference = getDifference(data)
print(difference) # 8"
Create a Python program that takes a list as argument and returns it in reverse order.,"[1, 3, 5, 6, 10]","def reverse_list(lst): 
    return lst[::-1] 
  
lst = [1, 3, 5, 6, 10] 
print(reverse_list(lst))"
Write a function in Python to extract domain name from given URLs.,"""http://www.google.com""","import re
def extract_domain_name(url):
    regex = r""://([^/]+)/?""
    match = re.search(regex, url)
 
    if match:
        return match.group(1)

url = ""http://www.google.com""
domain_name = extract_domain_name(url)
print(domain_name)
 
# Output: 
# google.com"
Utilize the Python in-built module to print the calendar for the given month.,"Month: 5
Year: 2021","# import the module
import calendar

# print the calendar 
print(calendar.month(2021, 5))"
Write a Python program to sort a list according to a given order of letters.,"['c','d','a','b'], order=['a', 'b', 'c', 'd']","def sort_by_order(l, order):
	return sorted(l, key = lambda x : order.index(x))"
Write a Python function to sort an array of numbers in descending order,"[3, 7, 1, 5]","def sortDescending(arr):
    arr.sort(reverse=True)
    return arr

array = [3, 7, 1, 5]
sortedArray = sortDescending(array)"
Write a single-line Python code to delete a key-value pair from a dictionary.,"my_dictionary = {'name': 'John', 'age': 20, 'job': 'Software Engineer', 'city': 'Berlin'}",my_dictionary.pop('city')
Identify the output of the following Python expression:,(4+1)*20,100
Generate an algorithm to count substrings in Python.,"string: abcdabcd
substring: cd","def count_substr(str, substr):
    count = 0
    start = 0
    while (str.find(substr, start) != -1):
        count += 1
        start = str.find(substr, start) + 1
    return count

string = ""abcdabcd""
substring = ""cd""
result = count_substr(string, substring)
print(result)"
Fix the bug in the following Python program.,"def calculateArea(width, height):
 return width * height

length = 8
breadth = 10
area = calculateArea(length)
print(""Area of the rectangle:"", area)","def calculateArea(width, height):
 return width * height

length = 8
breadth = 10
area = calculateArea(length, breadth)
print(""Area of the rectangle:"", area)"
Create a Python script to check if an array contains contiguous numbers.,"arr = [20, 21, 22, 23, 24]","def is_contiguous(arr):
    if (len(arr) == 0):
        return True
    arr.sort()
    for i in range(len(arr) - 1):
        if (arr[i] + 1 != arr[i+1]):
            return False
    return True"
Write a Python function to concatenate two lists.,"list1 = [1, 2, 3]
list2 = [4, 5, 6]","def concat_lists(list1, list2):
    return [x for t in zip(list1, list2) for x in t]

list1 = [1, 2, 3]
list2 = [4, 5, 6]

print(concat_lists(list1, list2)) # [1, 4, 2, 5, 3, 6]"
"Given two number arrays A and B, write a Python function to check if each element in A also exists in B","A = [1,2,3], B = [2,3,4]","def check_equality(arr1, arr2):
    for num in arr1:
        if num not in arr2:
            return False
    return True

A = [1, 2, 3]
B = [2, 3, 4]

result = check_equality(A, B)
print(result)"
Create a Python program to encrypt a message with an XOR encryption algorithm.,secretmessage,"def xor_encrypt(message, key):
 encrypted = """"
 for i in range(len(message)):
  encrypted += chr(ord(message[i]) ^ ord(key[i % len(key)]))
 return encrypted

message = 'secretmessage'
key = 'iwonttellyou'
encrypted = xor_encrypt(message, key)
print(encrypted) # U5m3pD1DQyN1UB1WAo9VA=="
Develop an algorithm in Python to check if an array contains a given number.,"array = [2, 4, 6, 8], number = 8","def checkNumber(array, number):
    for i in array:
        if i == number:
            return True
    return False

checkNumber([2, 4, 6, 8], 8)"
"Write a Python program to generate a random password. The program should generate a string of 8 characters (numbers, letters and special characters)",No input,"import random
import string

def generate_password():
 password_characters = string.ascii_letters + string.digits + string.punctuation
 password = ''.join(random.choice(password_characters) for i in range(8))
 print(password)

generate_password()"
Develop a Python function to fetch data from a web service.,url = 'https://jsonplaceholder.typicode.com/users',"import requests

def fetch_data_from_web_service(url):
    response = requests.get(url)
    return response.json()"
Write a Python program to replace a given string with another string.,"sentence = ""I love walking on the beach""
old_word = ""walking""
new_word = ""swimming""","sentence = ""I love walking on the beach""
old_word = ""walking""
new_word = ""swimming""

new_sentence = sentence.replace(old_word, new_word)

print(""The new sentence is: '{}'"".format(new_sentence))"
Endeavour to create a python function that takes an array of numbers and returns the highest number in the array.,"[2,5,1,6,3]","def find_largest_number(nums):
    highest_num = nums[0]
    for i in nums:
        if i>highest_num:
            highest_num = i
    return highest_num"
Create a function in Python that input two strings and outputs the longer string.,"""Hello"", ""World""","def get_longer_string(str1, str2):
 if len(str1) > len(str2):
 return str1
 else:
 return str2"
Generate Python code to sort a sequence of numbers,"[5,1,9,2,6,3]","def sort_sequence(lst):
    for i in range(len(lst)-1,0,-1):
        for j in range(i):
            if lst[j]>lst[j+1]:
                temp = lst[j]
                lst[j] = lst[j+1]
                lst[j+1] = temp
    return lst

sort_sequence([5,1,9,2,6,3])"
Modify the following Python code to reverse the order of the elements in an array,"arr = [1, 2, 3, 4, 5]",arr = arr[::-1]  # Reverses the order of elements in the array.
Transform the following shell script into a python program.,"#!/usr/bin/env bash
for i in *.txt; do
    echo ""Processing $i file...""
    cat $i
done","import sys
import os

for filename in os.listdir('.'):
    if filename.endswith('.txt'):
        print('Processing ' + filename + ' file...')
        with open(filename, 'r') as f:
            print(f.read())"
"Create a python program to calculate the value of 'x' in the equation ""y = 4x + 7"".",y = 17,"y = 17
x = (y - 7) / 4
print(""x ="", x)"
Use Python to calculate and print the sum of values in an array.,"[1,2,3,4,5]","arr = [1,2,3,4,5] 
sum = 0
for i in arr: 
    sum+=i 
    print(sum)

# Output 
# 15"
Create a Python script to calculate the sum of all elements in a matrix.,"matrix = [[1, 7, 3], [9, 2, 8], [3, 1, 7]]","def sum_of_elements_matrix(matrix):
    # Initialize result 
    result = 0
    # Iterate through the matrix
    for row in matrix:
        for col in row: 
            result += col 
    # Return the result
    return result"
Can you provide a machine learning algorithm in Python that performs sentiment analysis on a given text?,"Text: ""This product is simply incredible!""","from nltk.sentiment.vader import SentimentIntensityAnalyzer

sentences = [""This product is simply incredible!""]

analyzer = SentimentIntensityAnalyzer()

for sentence in sentences:
    scores = analyzer.polarity_scores(sentence)
    print(""{:-<40} {}"".format(sentence, str(scores)))"
Generate Python code to detect whether a given sentence is a palindrome,Level,"def is_palindrome(text):
    text = text.lower()
    text = text.replace("" "","""")
    reversed_text = text[::-1]
    if text == reversed_text:
        return True
    return False

print(is_palindrome(""Level"")) # True"
Generate a matrix of random numbers using Python.,Matrix Size: 20 x 30,matrix = [[random.random() for j in range(30)] for i in range(20)]
Convert the following for loop into a recursive function in Python.,"for i in range(5):
    print(i)","def printRange(start, end):
    if start == end:
        return
    print(start)
    printRange(start+1, end)

printRange(0, 5)"
Construct a Python code to find the maximum in a given list.,"[10, 3, 16, 17, 8]","def find_max(list): 
    max = list[0] 
    for i in list: 
        if i > max: 
            max = i 
    return max 
  
list = [10, 3, 16, 17, 8]
print(""Maximum number in the list:"", find_max(list))"
"Generate a new Python class which extends some existing class, but with a modified constructor.","class A:
    def __init__(self, param1, param2):
        self.param1 = param1
        self.param2 = param2","class B(A):
    def __init__(self, param1, param2, param3):
        super().__init__(param1, param2)
        self.param3 = param3"
Create a Python NLTK program to tokenize a given English text.,"Example text: ""This is a sample sentence for tokenizing.""","import nltk

# Input text
text = ""This is a sample sentence for tokenizing.""

# Tokenize sentences
tokens = nltk.word_tokenize(text)

# Print tokens
print(tokens)

# Output
['This', 'is', 'a', 'sample', 'sentence', 'for', 'tokenizing', '.']"
Optimize a function for generating a random string in Python. The function should generate a string with 7 characters that include both numbers and letters,"def random_string(): 
    string = '' 
    for i in range(7): 
        string += chr(randint(97, 122)) 
        string += str(randint(0, 9)) 
    return string","import random

def random_string(): 
    string = ''.join(random.sample(
        'abcdefghijklmnopqrstuvwxyz' 
        + '0123456789', 7)) 
    return string"
Write a function in Python that counts the number of words in the given string.,"Example String:
""This is a sample string with some words""","def word_count(str):
 words = str.split()
 return len(words)

print(word_count(""This is a sample string with some words""))"
Complete the Python code to generate a list of the odd numbers in the range 1 to 25.,-,"odd_nums_list = []

for number in range(1, 26):
    if number % 2 != 0:
        odd_nums_list.append(number)

print(odd_nums_list) # [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25]"
Generate a random list of numbers between 1 and 10 of a given length in Python.,length = 5,"import random

def generateRandomList(length):
    random_list = []
    for _ in range(length):
        random_list.append(random.randint(1, 10))
    return random_list

if __name__ == '__main__':
    print(generateRandomList(5))"
Can you write a Python program to print out the elements in a given list with their frequency?,"[1, 2, 3, 2, 4, 1, 1]","my_list = [1, 2, 3, 2, 4, 1, 1]

frequency_dict = {}

for num in my_list:
    if num in frequency_dict:
        frequency_dict[num] = frequency_dict[num] + 1
    else:
        frequency_dict[num] = 1

for num, freq in frequency_dict.items():
    print(""{} : {}"".format(num, freq))"
Develop a program to implement a linear search in Python.,"[7, -3, 10, 13, -6], -3","def linear_search(arr, target):
    for i in range(len(arr)):
        if arr[i] == target:
            return i
    return -1

arr = [7, -3, 10, 13, -6]
target = -3
print(""Index of"", target, "" is "", linear_search(arr, target)) # 1"
Modify the following Python program to print the sum of all its elements.,"# Given a list

list = [1, 2, 3, 4, 5]","# Given a list

list = [1, 2, 3, 4, 5]
 
# Calculate sum
sum_val = 0
for num in list:
 sum_val += num
 
# Print the result
print(sum_val) # returns 15"
Create an AI-friendly program in Python to remove duplicates from a list of numbers.,"list1 = [1, 2, 3, 2, 4, 5, 1];","def remove_duplicates(list1): 
    new_list = [] 
    for num in list1: 
        if num not in new_list: 
            new_list.append(num) 
    return new_list 

remove_duplicates(list1)"
Generate a python code to calculate the median of an unsorted list of numbers.,"[3, 4, 1, 2, 5]","def median(lst):
    lst = sorted(lst)
    if len(lst) % 2 == 0:
        mid = int(len(lst) / 2)
        return (lst[mid] + lst[mid-1]) / 2
    else:
        mid = int(len(lst) / 2)
        return lst[mid]

median([3, 4, 1, 2, 5])"
Develop a program to remove all the comments from a Python code.,"import sys
# This code prints hello world
def main():
    print(""Hello World!"")","import sys

def main():
    print(""Hello World!"")"
Compose a Python method to print the flat list from a given 2D list.,"Input:  
test_list = [[5, [6, 13]], [4], [4, [6, 7]]]","def flat_list(lst): 
  flat_lst = [] 
  for sublist in lst: 
    if type(sublist) == int: 
      flat_lst.append(sublist) 
    else: 
      for ele in sublist: 
        flat_lst.append(ele) 
  return flat_lst 

result = flat_list(test_list) 
  
print(""The flattened list is:"", result)"
Write a Python program that takes an input list of integers and finds out the sum of all the odd elements in the list.,"List: [2, 3, 4, 5, 6]","def sum_odd_elements(int_list):
    '''This function takes a list of integers and returns the sum of all the odd elements.'''
    total = 0
    for num in int_list:
        if num % 2 != 0:
            total += num
    return total

int_list = [2, 3, 4, 5, 6]
sum = sum_odd_elements(int_list)

print(sum) # 8"
Create a function in Python which takes a list of integers as input and returns a sorted list.,"[3, 2, 5, 1, 4]","def sort_list(list):
    list.sort()
    return list
    
sorted_list = sort_list([3, 2, 5, 1, 4])
print(sorted_list) # output: [1, 2, 3, 4, 5]"
Generate a Python program to find the mode of the given list.,"[6, 2, 8, 9, 3, 2, 10]","from collections import Counter

def mode(list):
    c = Counter(list)
    freq = c.most_common()
    if freq[0][1] == freq[1][1]:
        return ""No single mode found"" 
    else:
        return freq[0][0]

list = [6, 2, 8, 9, 3, 2, 10]
print(""Mode:"", mode(list))"
Write a Python program to traverse a binary search tree in preorder traversal.,"10
    5       15 
  2   7   12    20","def preorder_traversal(root):
    if root is None: 
        return
    
    print (root.data, end = ' ')
    
    preorder_traversal(root.left) 
    preorder_traversal(root.right)"
Write a Python function to remove the nth occurrence of a given substring from the given string.,"string = ""This is a chance to practice python string manipulation skills""
substring = ""is""
n = 2","def remove_nth_occurrence(string, substring, n):
 count = 0
 for i, ch in enumerate(string):
  if string[i:i+len(substring)] == substring:
   count += 1
   if count == n:
    string = string[:i] + string[i+len(substring):]
 return string"
Write a Python program to calculate the number of even and odd numbers from a series of numbers.,"1, 4, 5, 7","series = [1, 4, 5, 7]

# count even and odd numbers
even_count = 0
odd_count = 0

for num in series:
    if num % 2 == 0:
        even_count += 1
    else:
        odd_count += 1

# Print the total number of even and odd numbers
print('Number of even numbers: {}'.format(even_count))
print('Number of odd numbers: {}'.format(odd_count))"
Write a python program to convert a given hexadecimal to binary.,Hexadecimal: 0x56,"def hex_to_binary(h): 
    return bin(int(h, 16)) 
  
print(hex_to_binary('0x56'))"
Sort a given list using bubble sort in Python.,"list = [3,5,2,4,7,5]","def bubble_sort(list):
    for i in range(len(list)):
        for j in range(len(list)-1):
            if list[j]>list[j+1]:
                list[j],list[j+1] = list[j+1],list[j]
    return list

if __name__ == '__main__':
    list = [3,5,2,4,7,5]
    print(bubble_sort(list))"
Design a positive feedback loop for the following python program.,"for i in range(10):
    print(""hello"")","for i in range(10):
    print(""hello"")
    i += 1
    if i == 10:
        print(""You've got it!"")"
Write a Python program that sorts a given array of numbers in ascending order.,"[1, 3, 5, 2, 6]","def sort_ascending(arr):
    for x in range(len(arr)-1):
        for y in range(x+1, len(arr)):
            if arr[x] > arr[y]:
                arr[x], arr[y] = arr[y], arr[x]
    return arr

arr = [1, 3, 5, 2, 6]
print(sort_ascending(arr)) # Output: [1, 2, 3, 5, 6]"
Generate a Python code to find the power of a number.,"base = 2
exponent = 4","# Calculate power of a number 
def power(base, exponent):
    # Initialize result
    result = 1
    # Multiply result with base
    # until exponent becomes 0
    while exponent != 0:
        result *= base
        exponent -= 1
 
    # Return result
    return result

# Print the power
print(power(base, exponent))"
Write a Python script to combine two dictionaries into one.,"dict1 = {'a':1, 'b':2}
dict2 = {'c':3, 'd':4}","def merge_dicts(dict1, dict2):
    merged_dict = {**dict1, **dict2}
    return merged_dict"
Generate a Python program to calculate the total price of a grocery list given a list of items and their prices.,"[
    [apple, 2.00], 
    [banana, 4.00], 
    [bread, 3.50], 
    [orange, 1.50]
]","items = [
    ['apple', 2.00], 
    ['banana', 4.00], 
    ['bread', 3.50], 
    ['orange', 1.50]
]

total = 0

for item in items:
    total += item[1]

print(""The total price of the grocery list is:"", total)"
Construct a Python program to take a list of numbers as input and print out the largest number in the list.,"[5, 10, 2, 9, 6]","def largestNumber(list):
  max = list[0]
  for num in list:
    if num > max:
      max = num
  return max

list = [5, 10, 2, 9, 6]
print(largestNumber(list)) # Output: 10"
Can you write a Python program that takes a list of strings as an argument and returns the list with all elements sorted by their length?,"['Cat','Dog','Elephant','Horse']","def sort_by_length(strings):
    return sorted(strings, key=len)"
Create a Python program to scrape a search engine for the top 10 results on a given query.,"Search query: ""best movies of 2019""","import requests
from bs4 import BeautifulSoup

url = 'https://www.google.com/search?q=best+movies+of+2019&num=10'

response = requests.get(url)
soup = BeautifulSoup(response.text, 'html.parser')

results = soup.find_all('div', class_='rc')

for result in results:
 title = result.find('h3').text
 print(title)"
Develop a Python function that takes two arrays of equal size as input and returns the sum of the two arrays.,"[1,2,3], [4,5,6]","def sum_arrays(arr1, arr2):
    result = []
    for i in range(len(arr1)):
        result.append(arr1[i] + arr2[i])
    return result

summed = sum_arrays([1,2,3], [4,5,6])
print(summed)"
"Using a dictionary, write a Python statement to remove all duplicate keys in a given dictionary","my_dict = {
    ""apple"": 5,
    ""pear"": 10,
    ""apple"": 8
}","# use set to remove duplicate keys
my_dict = dict(set(my_dict.items()))"
"Edit the following Python code to give the output as [400, 125, 10,1].","val = [1, 10, 125, 400]
res = []

for v in val:
    res.append(v)","val = [1, 10, 125, 400]
res = []

for v in reversed(val):
    res.append(v)
    
print(res) # Output: [400, 125, 10,1]"
Implement a function in Python that takes a number N and returns the sum of all the positive numbers up to N (inclusive).,10,"""""""
Implement a function in Python that takes a number N and returns the sum of all the positive numbers up to N (inclusive). 
""""""

def sum_numbers(n):
    total = 0
    for num in range(n+1):
        if num > 0:
            total += num
    return total

if __name__ == '__main__':
    n = 10
    print(sum_numbers(n)) # 55"
Create a Python program to convert a given string to an integer by removing all non-numeric characters.,"""29A3B8746""","def remove_non_numeric(str):
 res = """"
 for c in str:
 if c.isnumeric():
 res += c
 return int(res)

s = ""29A3B8746""
integer = remove_non_numeric(s)
print(integer) // 2938746"
Create a Python function to clean and normalize text strings.,"The text string to be normalized is ""Thi$$$s i$ a te$Xt!!!!!""","import re

def clean_text(text):
 # Lowercase text
 text = text.lower()
 
 # Remove special characters
 text = re.sub(r'[^\w\s]','', text)
 
 # Remove extra whitespaces
 text = re.sub(r'\s+',' ', text)
 
 return text
 
# Sample Usage
text = 'Thi$$$s i$ a te$Xt!!!!!'
clean_text(text)
# Output: 'this is a text '"
Create a Python script to find the sum of all the even numbers in a list of integers.,"[1, 2, 3, 4, 5, 6, 7, 8, 9]","def find_sum(lst):
 
sum = 0
 
for num in lst:
 if num % 2 == 0:
  sum += num
 
return sum

lst = [1,2,3,4,5,6,7,8,9]
print(find_sum(lst))
 
# Output: 20"
Create a Python program to implement linear search to find a specified item in an array.,"Array = [1, 2, 3, 4, 5], search_number = 4","def linear_search(arr, x): 
    for i in range(len(arr)): 
        if arr[i] == x: 
            return i 
    return -1

arr = [1, 2, 3, 4, 5]
search_number = 4
result = linear_search(arr, search_number)
if result == -1:
    print(""Number not found in the array"")
else:
    print(""Number found at index:"", result)"
Create a function in Python for converting a list of strings to a dictionary.,"Strings: [""John"", ""Jake"", ""Adam""]","def stringsToDict(strings):
    return {string:0 for string in strings}

strings = [""John"", ""Jake"", ""Adam""]
dict = stringsToDict(strings)
print(dict) # Output: {'John': 0, 'Jake': 0, 'Adam': 0}"
Generate a python program that calculates the area of a triangle given the coordinates of its vertices.,"A=(2, 0), B=(-2, 0), C=(0, 4)","def triangle_area(A, B, C): 
    return abs((A[0]*(B[1] - C[1]) + B[0]*(C[1] - A[1]) + C[0]*(A[1] - B[1]))/2.0) 
  
# Driver Code 
A = (2, 0) 
B = (-2, 0) 
C = (0, 4) 
  
print(""Area of Triangle is"", triangle_area(A, B, C))"
Come up with a python program that takes a string and return a reversed version of the string.,"""<noinput>""","def reverse_string(string):
    return string[::-1]"
Develop a Python function to find the average of a list of positive numbers in the given range.,"[1, 2, 3, 4]","def find_average(nums):
  sum = 0
  count = 0
  for num in nums:
    if num > 0:
      sum += num
      count += 1
  return sum/count

print (find_average([1, 2, 3, 4]))"
Create a command line Python script to generate random numbers within a given range.,Minimum Number: 10 and Maximum Number: 25,"import random

min_num = 10
max_num = 25
 
# Generate a random number
rand_num = random.randint(min_num, max_num)
 
# Print the random number
print(rand_num)"
Create a function in Python to print all the prime numbers in an array.,"array = [2, 4, 6, 7, 11, 15]","def print_primes(arr):
    for i in arr:
        if i > 1:
            for j in range(2,i):
                if (i % j) == 0:
                    break
            else:
                print(i)

print_primes(array)"
Write a Python program to search for a given element in multiple lists,"my_list1 = [2, 3, 4, 5]
my_list2 = [7, 9, 5]
elem = 5","def search_elem(my_list1, my_list2, elem):
    for list in [my_list1, my_list2]:
        found = False
        for val in list:
            if val == elem:
                found = True
                break
        if found:
            return True
    return False

found = search_elem(my_list1, my_list2, elem)
print(found)"
Create a script in Python for finding the maximum and minimum value of an array.,"Array: [1, -5, 10, 25, 6]","def max_min(arr):
  max = arr[0]
  min = arr[0]
  
  for i in range(1, len(arr)):
    if arr[i] > max:
      max = arr[i]
    if arr[i] < min:
      min = arr[i]
  
  return max, min

max, min = max_min(arr)"
Design a Python program to determine if one string is a substring of another.,"""Hello"", ""Hello World""","def isSubstring(str1, str2):
    if len(str1) > len(str2):
        return False

    for i in range(len(str2)):
        if (str2[i: i+len(str1)] == str1):
            return True

    return False

str1 = ""Hello""
str2 = ""Hello World""

print(isSubstring(str1, str2))"
Create a sorting algorithm that sorts a list of strings alphabetically in Python.,"[""list"", ""of"", ""unsorted"", ""strings""]","def sortAlphabetically(stringList):
  sortedList = sorted(stringList)
  return sortedList

unsortedList = [""list"", ""of"", ""unsorted"", ""strings""]
sortedList = sortAlphabetically(unsortedList)

print(sortedList)"
Build a Python program that will receive a list of integers as an input and output the lowest common multiple (LCM) of these numbers.,"array = [2,4,6]","# Function to calculate LCM 
def lcm(l):
    ans = l[0]
    for i in l[1:]:
          ans = (ans*i)//gcd(ans, i)
    return ans;
  
# Driver program to test above function 
array = [2,4,6] 
print(""The LCM of"", array,""is"", lcm(array))"
Create a Python program for encrypting a given string using the XOR technique.,"String: ""Hello world!""","def xor_crypt_string(data, key='my_secret_key'):
    l = len(key)
    return bytearray((
        (data[i] ^ ord(key[i % l])) for i in range(0,len(data))
    ))

encrypted_data = xor_crypt_string(bytearray('Hello world!', 'utf-8'))

print(encrypted_data)"
Develop a python program that applies the following operation to a given list,Provide each element in the list with its index,"def enumerate_list(lst):
    output = []
    for i in range(len(lst)):
        output.append((i, lst[i]))
    return output"
Create a Python program to find and remove the longest string from a given list of strings.,"list_strings = [""string1"", ""string2"", ""string3"", ""longeststring""]","def remove_longest_string(list_strings):
    longest_string = """"
    for string in list_strings:
        if len(string) > len(longest_string):
            longest_string = string
    list_strings.remove(longest_string)
    return list_strings

print(remove_longest_string(list_strings))"
Create a python program for identifying if a given number is prime or not.,Use number 10 as an example.,"def is_prime(num): 
    if num < 2: 
        return False
  
    for i in range(2, num): 
        if num % i == 0: 
            return False
  
    return True
  
# Example 
number = 10
  
if is_prime(number): 
    print(number, ""is a prime number"") 
else: 
    print(number, ""is not a prime number"")"
Design an algorithm in Python that takes two integers as an input and returns the maximum of the two.,"x = 3 
y = 6","def max_of_two(x, y): 
    if x > y: 
        return x 
    else: 
        return y 
  
print(max_of_two(3,6))"
Generate a python program to sort a collection of data given in the form of a 2-dimensional array.,"[[1, 2],[2, 6], [3, 4], [4, 5]]","def sortArray(arr): 
  arr.sort(key = lambda x: x[1]) 
  return arr 
  
# Driver Code 
arr = [[1, 2],[2, 6], [3, 4], [4, 5]] 

print (sortArray(arr))"
Generate a python statement to print a descriptive message about a given string.,"string = ""Hello World!""","print(f""Given string is {string}, and its length is {len(string)}"")"
Write a Python program to print the number of permutations of length n where each element can take a value between 0 and (n-1).,n = 4,"def countPermutations(n):
 # if n is 0 or 1, return 1 as there is 1 permutation
 if n <= 1:
 return 1
 
 # recursive calculation
 result = n * countPermutations(n - 1)
 
 return result

countPermutations(4) # returns 24"
Generate a python function to count the number of unique elements in a list,"[10, 12, 10, 4, 10, 6, 4]","def uniqueCount(mylist): 
    unique = []
    for x in mylist: 
        if x not in unique: 
            unique.append(x)
    return len(unique)
  
mylist = [10, 12, 10, 4, 10, 6, 4]
print(uniqueCount(mylist))"
Construct a for loop in Python to iterate over a list and print out each item in the list.,"myList = [1, 2, 3, 4]","for element in myList: 
 print(element)"
Generate a Python program that multiplies two matrices,"A = [[1, 2],
     [3, 4]]
B = [[1, 2],
     [2, 3]]","def multiply_matrix(A, B):
    n = len(A)
    C = [[0] * n for _ in range(n)]
 
    for i in range(n):
        for j in range(n):
            for k in range(n):
                C[i][j] += A[i][k] * B[k][j]
    return C
 
A = [[1, 2],
     [3, 4]]
B = [[1, 2],
     [2, 3]]
 
print(multiply_matrix(A,B))"
Write a Python program to find the maximum sum of a contiguous subarray in a given array of integers.,"[-2,1,-3,4,-1,2,1,-5,4].","def max_sum_contiguous_subarray(arr):
    max_sum = 0
    curr_sum = 0
 
    for i in range(len(arr)):
        curr_sum = max(curr_sum + arr[i], arr[i])
        max_sum = max(max_sum, curr_sum)
 
    return max_sum"
Generate a python function,To calculate the greatest common divisor of two integers.,"def gcd(a, b): 
    if a == 0 : 
        return b 
    return gcd(b % a, a)"
Suggest an improvement for the following python code for finding the sum of elements of a list,"def sum_elements(arr):
    sum_value = 0
    for num in arr:
        sum_value += num
    return sum_value","def sum_elements(arr):
    return sum(arr) # return sum of elements of arr with one line of code."
Write a Python program to search a given string for the first occurrence of a given substring.,"string = ""The quick brown fox"", substring = ""fox""","string = ""The quick brown fox""
substring = ""fox""

def find_substring(string, substring):
    index = string.find(substring)
    if index == -1:
        print(""Substring not found!"")
    else:
        print(""Substring found at index:"", index)

find_substring(string, substring)"
"Create a Python function that takes two lists, compare them, and return True if both lists are identical and False if they differ.","list1 = [1, 2, 3]
list2 = [1, 2, 3]","def compare_lists(list1, list2):
    if len(list1) != len(list2):
        return False

    for i in range(len(list1)):
        if list1[i] != list2[i]:
            return False

    return True"
Create a Python program to calculate the total price of a purchase including sales tax.,"tax rate: 8%
quantity: 2
price: 10","# Defining Variables
tax_rate = 0.08
quantity = 2
price = 10

# Calculating the Total Price
total_price = (price * quantity) + (tax_rate * price * quantity)

# Printing Out the Result
print(""Total Price:"", total_price)"
Edit the following code in Python and make it shorter.,"def add(x, y):
    z = x + y
    return z

sum = add(10, 20)
print(sum)","def add(x, y):
    return x + y

sum = add(10, 20)
print(sum)"
Create a Python script to count the frequencies of each letter in a given string.,"text = ""Hello, World!""","def count_letter_frequency(text): 
    frequency = {} 
    for letter in text: 
        if letter in frequency: 
            frequency[letter] += 1
        else: 
            frequency[letter] = 1
    return frequency 
  
text = ""Hello, World!""
print(count_letter_frequency(text))"
Create a function using Python that parses a given string and returns a dictionary containing each word in the string as key and its frequency as value.,"string = ""This is a random sentence.""","def parseString(string):
    freqDict = dict()
    stringWords = string.split("" "") 
    for word in stringWords:
        if word in freqDict:
            freqDict[word] += 1
        else:
            freqDict[word] = 1
    return freqDict"
Generate a program in Python that takes a given list as input and reverses it,"my_list = [3, 7, 2, 4]","def reverse_list(my_list):
    rev_list = []
    for val in reversed(my_list):
        rev_list.append(val)
    return rev_list

reversed_list = reverse_list(my_list)
print(reversed_list)"
Translate a given python program into a mips assembly instruction.,"x = 0
y = 0
z = x + y","#Load x into register 1
	li $t0, 0
	#Load y into register 2
	li $t1, 0
	#Add x and y, store result in register 3
	add $t2, $t0, $t1
	#Store the result in z
	sw $t2, z($0)"
"Construct a Python program to convert a list of strings to a single string, and separate the string elements with a ',' character.","list = [""test"", ""string""]","def list_to_string(list): 
    return "","".join(list) 
  
list = [""test"",""string""]
print(list_to_string(list))"
Edit this python code to remove all even numbers from a given list.,"my_list = [1,2,3,4,5,6,7,8,9,10]","""""""
Edit this python code to remove all even numbers from a given list.
""""""

my_list = [1,2,3,4,5,6,7,8,9,10]

# Use a list comprehension to remove even numbers
my_list = [i for i in my_list if i % 2 != 0]
 
print(my_list) # [1, 3, 5, 7, 9]"
Suggest a solution in Python to convert a sentence into a list of individual words.,"""This is a test sentence.""","def sentence_to_words(sentence):
    words = sentence.split()
    return words 

result = sentence_to_words(""This is a test sentence."")
print(result)"
Create a program in Python that uses a for loop to output the division of two numbers.,"Number 1: 5 
Number 2: 3","for i in range(2):
    print(5/3)"
Write a function in Python that takes an integer as an argument and returns the first 5 numbers in the Fibonacci sequence starting from the given integer.,An integer - 15,"def fibonacci(n):
  a = 0
  b = 1

  fib = [a]

  for i in range(1, n):
    c = a + b
    a = b
    b = c
    fib.append(a)

  return fib[:5]  # Return the first 5 numbers in the sequence

print(fibonacci(15)) # [0,1,1,2,3]"
Design an efficient algorithm in Python for sorting a list of numbers.,"[3, 5, 7, 4, 2, 1]","def quicksort(arr):
    if len(arr) <= 1:
        return arr
 
    pivot = arr[len(arr) // 2]
    left = [x for x in arr if x < pivot]
    middle = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]
    return quicksort(left) + middle + quicksort(right)"
Generate an html page which will accept the user input and send it to a python script.,No input,"<!DOCTYPE html>
<html>
<head>
    <title>Input Page</title>
</head>
<body>
    <h1>Input Page</h1>
    <form action=""script.py"" method=""POST"">
      <label>Enter your input: <input type=""text"" name=""user_input"" size=""50""></label>
      <input type=""submit"" text=""Submit"">
    </form>
</body>
</html>"
Write a python program to classify the given input into two categories,Input: Apple,"def classify(input):
    if input == ""apple"":
        label = ""fruit""
    else:
        label = ""not fruit""
    return label"
Generate a Python program that takes a numeric input and reverses it.,42,"def reverse_number(num):
    rev = 0
    while num > 0:
        r = num % 10
        rev = (rev * 10) + r
        num = num // 10
    return rev

input_num = 42
res = reverse_number(input_num)
print(res)"
Create a python program that evaluates whether a given expression is valid or not.,"expression = ""2 * (3 + 4)""","def evaluate_expression(expression):
    """"""
    Evaluates whether a given expression is valid or not.
    :param expression: The expression to evaluate
    :type expression: str
    :return: True if expression is valid, False otherwise
    :rtype: bool
    """"""
    try:
        eval(expression)
        return True
    except:
        return False"
Write a python program to calculate the median of four numbers,"3, 5, 10, 2","def calculate_median(nums):
    nums.sort()
    if len(nums) % 2 == 0:
        mid1 = len(nums) // 2
        mid2 = mid1 - 1
        return (nums[mid1] + nums[mid2]) / 2
    else:
        return nums[len(nums) // 2]

nums = [3, 5, 10, 2]
print(calculate_median(nums))"
Write a Python program to find the string which is most frequent among the given list of strings.,"my_list = [""apple"", ""banana"", ""apple"", ""orange""]","def most_frequent(my_list):
    max_count = 0
    frequent_string = """"

    for i in my_list:
        if my_list.count(i) > max_count:
            max_count = my_list.count(i)
            frequent_string = i

    return frequent_string"
modify the following Python program such that it returns an error if the input is an empty string.,"def print_string(text):
    print(text)","def print_string(text):
    if len(text) > 0:
        print(text)
    else:
        raise Exception('The input string is empty')"
Write a Python program to extract the Last Name from a given full name.,"full_name = ""John Snow""","last_name = full_name.split()[1]
print(last_name)"
Write a Python program to reverse a list without using any built-in function.,"[1, 2, 3, 4, 5]","def reverseList(l):
  revList = []
  for i in range(len(l)-1,-1,-1):
    revList.append(l[i])
  return revList

lst = [1, 2, 3, 4, 5]
print(reverseList(lst))"
Write a function in Python to generate an email address with a given name and domain.,"name = 'John Smith'
domain = 'example.com'","def generate_email(name, domain):
    '''Generates an email address using the given name and domain.'''
    name_parts = name.lower().split(' ')
    email_name = '.'.join(name_parts)
    return email_name + '@' + domain"
"Write a Python function to calculate the compound interest given the principal amount, rate, and number of years.","principal = 1000, rate = 0.03, time = 5","def compound_interest(principal, rate, time):
    return principal * (1 + rate)**time

result = compound_interest(1000, 0.03, 5)
print(result)"
Implement a Python program to check if a number is divisible by another number.,"7, 2","def is_divisible(n, m):
    if (n % m == 0):
        return True
    else:
        return False
    
print(is_divisible(7, 2))  # Outputs False"
"Given a list of colors [""red"", ""green"", ""blue""], create a Python program to find the longest color name.","[""red"", ""green"", ""blue""]","def longest_color_name(colors): 
 longest_name = 0 
 longest_color = None
 for color in colors: 
  if len(color) > longest_name: 
   longest_name = len(color) 
   longest_color = color
 return longest_color"
Write a Python program to replace all the occurences of a substring in a string with a new substring.,"String: This is a string
Old substring: is
New substring: was","new_string = string.replace('is', 'was')"
Write a Python program to convert a string in camel case format to snake case format,myNameIsRyan,my_name_is_ryan
Write a Python program to create a list of all the even numbers between two given numbers.,"5, 10","def even_number_list(a, b):
    return list(i for i in range(a, b+1) if i%2 == 0)"
Create a Python program that accepts two numbers as an input and prints out the ratio of the two numbers.,"number1 = 13
number2 = 24","def calculateRatio(number1, number2):
    return number1/number2
    
number1 = 13
number2 = 24
ratioOfNumbers = calculateRatio(number1, number2)

print(""The ratio of the two numbers is: "" + str(ratioOfNumbers))"
Write a script in Python for shuffling elements in an array.,"arr = [1, 2, 3, 4, 5]","import random

def shuffle(arr):
    random.shuffle(arr)
    return arr"
Generate a program in Python to extract all numbers from a given string,"string = ""The 3 monkeys had 2 apples""","import re

def extract_numbers(string): 
    numbers = re.findall('\d+', string)
    return numbers

string = ""The 3 monkeys had 2 apples""
print(extract_numbers(string))"
"Write a Python program that takes a sequence of strings, sorts them alphabetically, and prints them to the console.","sequence = [""Hello"", ""world"", ""Welcome"", ""to"", ""the"", ""Coding"", ""Revolution""]","sequence = [""Hello"", ""world"", ""Welcome"", ""to"", ""the"", ""Coding"", ""Revolution""]

sorted_sequence = sorted(sequence)

for word in sorted_sequence:
    print(word)"
Write a Python program to compare two lists and print out the one that is greater in length.,"list1 = [1, 2, 3, 4] 
list2 = [3, 4]","def compare_list_length(list1, list2):
    if len(list1) > len(list2):
        return list1
    else:
        return list2

list1 = [1, 2, 3, 4]
list2 = [3, 4]
longer_list = compare_list_length(list1, list2)
print(longer_list) # Output: [1, 2, 3, 4]"
Update the python program by including a function that finds the shortest word in a list.,"my_list = [""hello"", ""world"", ""this"", ""is"", ""a"", ""test""]","def find_shortest(input_list):
    shortest = input_list[0]
    for word in input_list:
        if len(word) < len(shortest):
            shortest = word
    return shortest

shortest_word = find_shortest(my_list)
print(shortest_word)"
Design an algorithm in Python that takes a string as input and returns a compressed version of the string.,aaabbccccca,"def stringCompress(s):
    result = """"
    counter = 1
    for i in range(len(s)-1):
        if s[i] == s[i+1]:
            counter+=1
        else:
            result += s[i] + str(counter)
            counter = 1
        
    result += s[i] + str(counter)
    return result

print(stringCompress('aaabbccccca'))"
"Create a DataFrame in Python Pandas using given dates, numbers, and strings.","dates = ['2013-01-01', '2013-01-02', '2013-01-03'] 
numbers = [1, 2, 3] 
strings = ['a', 'b', 'c']","import pandas as pd

# Create the dataframe
df = pd.DataFrame({'date': dates, 'number': numbers, 'string': strings})

df
   date  number string
0  2013-01-01       1      a
1  2013-01-02       2      b
2  2013-01-03       3      c"
Develop a function in Python which takes two inputs and returns the greatest common divisor of those two numbers.,"12, 24","def greatest_common_divisor(a, b):
    if a < b:
        a, b = b, a

    while b > 0:
        a, b = b, a % b

    return a

result = greatest_common_divisor(12, 24)
print(result)"
Construct a Python program to search all numbers divisible by 5 and 7 between a given range,The range 1000 to 2000,"def find_divisble_numbers(start, end):
    divisible_numbers = []
    for i in range(start, end + 1):
        if i % 5 == 0 and i % 7 == 0:
            divisible_numbers.append(i)
    return divisible_numbers

divisible_numbers = find_divisble_numbers(1000, 2000)
print(divisible_numbers)"
Write a python program to filter a list of strings and return only those which contain the given substring.,"[""Hello"", ""World"", ""Hey""], Substring: ""or""","def filter_strings(lst, substring):
    filtered_lst = []
    for string in lst:
        if substring in string:
            filtered_lst.append(string)
    return filtered_lst

print(filter_strings([""Hello"", ""World"", ""Hey""], ""or""))"
Write a function in Python to compute the accuracy of a classification by comparing the true labels and the predicted labels.,"true_labels = [0, 0, 1, 1] 
predicted_labels = [1, 0, 0, 1]","def compute_accuracy(true, pred):
    correct = 0
    total = len(true)
    for i in range(total):
        if true[i] == pred[i]:
            correct += 1
    return correct/total"
Optimize a Python program using multiprocessing.,A program to find all prime numbers up to a given number n.,"from multiprocessing import Pool
import math

def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, int(math.sqrt(n)) + 1):
        if n % i == 0:
            return False
    return True

def find_prime_numbers(n):
    primes = []
    with Pool(processes=4) as pool:
        primes = list(pool.map(is_prime, range(2, n)))
    return primes"
Write a Python program to calculate the total cost of buying n items.,"4 items with prices [10, 15, 20, 25]","def calculate_total_cost(item_prices, num_items):
    total_cost = 0
    for i in range(num_items):
        total_cost += item_prices[i]
    return total_cost

if __name__ == '__main__':
    total = calculate_total_cost([10, 15, 20, 25], 4)
    print(""Total cost of buying 4 items:"", total)"
Create a Python program which takes a list of numbers and a number k and returns whether any two numbers from the list add up to k.,"list: [10,15,3,7]
k: 17","def twoNumberSum(list, k):
  seen = set()
  for num in list:
    if k-num in seen:
      return [num, k-num]
    else:
      seen.add(num)
  return []"
Change the code provided in the input so that it is compatible with Python version 3.,"print ""Hello World""","print(""Hello World"")"
Write a Python program to find all the unique numbers in a list.,"[1, 2, 1, 3, 4, 5, 5, 1]","def unique_numbers(number_list):
    unique_numbers = []
    for number in number_list:
        if number not in unique_numbers:
            unique_numbers.append(number)
    return unique_numbers

print(unique_numbers([1, 2, 1, 3, 4, 5, 5, 1]))"
Design an algorithm in Python that can read a list and return the most frequent item.,"[1,2,3,4,4,4,5,5]","def most_frequent(list):
    return max(list, key=list.count)

list = [1,2,3,4,4,4,5,5]
print(most_frequent(list))"
Write a Python program to find the closest number to zero from an array.,"[8, 5, -2, 10]","def closest_number(arr):
    min_diff = abs(arr[0])
    for num in arr: 
        if abs(num) < min_diff: 
            min_diff = abs(num) 
  
    return min_diff
  
# Driver Code
arr = [8, 5, -2, 10]
print(closest_number(arr)) # -2"
"Extend the python code below to print ""hello world"" 5 times.","for i in range(3):
    print(""hello"")","for i in range(5):
    print(""hello world"")"
Write a Python program to delete all occurrences of a given number from a list,"lst=[2,2,3,5,7,2,9]","def remove_all(num, lst):
    result = []
    for i in range(len(lst)):
        if lst[i] != num:
            result.append(lst[i])
    return result"
Optimize a Python program for speed. The program should calculate the sum of a list of numbers and return the result.,"list_of_numbers = [2, 4, 6, 8, 10]","def sum_of_numbers(list_of_numbers):
# initialize the result to 0
 result = 0
 
# Iterate over the list of numbers
 for num in list_of_numbers:
 result += num
 
# return the result
 return result
 
# testing the function
list_of_numbers = [2, 4, 6, 8, 10]
print(sum_of_numbers(list_of_numbers))"
Construct a code snippet in Python to eliminate all the negative numbers in a given list.,"list = [-3, -2, 0, 4, 5]","list = [-3, -2, 0, 4, 5]

list = [x for x in list if x >= 0] 

print(list)"
Write a function in Python to print every other element in a list.,"[1, 2, 3, 4, 5]","def print_every_other(lst):
 for i in range(0, len(lst), 2):
 print(lst[i])"
Create a Python function that takes a 2D array as an input and returns the sum of all the elements in the array.,"[[1,2,3],[4,5,6]]","def array_sum(arr):
    sum = 0
    for i in range(len(arr)):
        for j in range(len(arr[i])):
            sum += arr[i][j]
    return sum

array_sum([[1,2,3],[4,5,6]])"
Create a Python program to parse a domain name and extract important information.,example.com,"import tldextract

def parse_domain_name(name):
    """"""Parses a domain name and extracts information such as the subdomain and the root domain.""""""
    extract = tldextract.extract(name)
    subdomain = extract.subdomain
    root_domain = extract.domain + '.' + extract.suffix
 
    return subdomain, root_domain"
Create a Python code to decode an URL.,"""http://www.example.com/?param1=hello&param2=world""","import urllib.parse

def decode_url(url):
 parsed_url = urllib.parse.urlparse(url)
 return urllib.parse.parse_qs(parsed_url.query)

decode_url(""http://www.example.com/?param1=hello&param2=world"")"
Write a Python function to count the number of occurances of a given letter in a given string.,"s = ""Hello World""","def count_letter(s, letter): 
    count = 0
    for char in s:
        if char == letter:
            count += 1
    return count

s = ""Hello World""
letter = ""l""
print(count_letter(s, letter))"
"Using Python, write a program to merge the elements of two arrays into one.","arr1=[1, 2, 6, 9, 11] 
arr2=[2, 3, 4, 7, 8]","merged_arr = arr1 + arr2 
print ( merged_arr ) # [1, 2, 6, 9, 11, 2, 3, 4, 7, 8]"
Generate a subroutine in Python to convert a string date of the format DD/MM/YYYY to the Unix timestamp type.,"String date: ""25/12/2021""","import datetime

def convert_to_unix_time_stamp(date):
    date_object = datetime.datetime.strptime(date, ""%d/%m/%Y"")
    
    return date_object.timestamp()"
Refactor and improve the efficiency of the following Python code.,"def get_intersection(list_1, list_2):
    result = [] 
    for elem in list_1: 
        if elem in list_2: 
            result.append(elem)
    return result","def get_intersection(list_1, list_2):
    return [elem for elem in list_1 if elem in list_2]"
Create a program in Python which takes a given string and removes all the vowels from it.,"string = ""This is a test string""","def removeVowels(string):
    vowels = ['a', 'e', 'i', 'o', 'u']
    new_string = ''.join([x for x in string if x.lower() not in vowels])
    return new_string

print(removeVowels(string))"
Construct a python visualization to display a bar chart of the results of some data.,"Array of word strings and the associated frequency 
[
  [""word1"", 5], 
  [""word2"", 8], 
  [""word3"", 3],
  [""word4"", 2],
]","import matplotlib.pyplot as plt

words = [""word1"", ""word2"", ""word3"", ""word4""]
frequencies = [5, 8, 3, 2]

plt.bar(words, frequencies)
plt.title(""Word Frequency Chart"")
plt.xlabel(""Words"")
plt.ylabel(""Frequency"")
plt.show()"
Generate a Python program which will filter all prime numbers from a list of integers.,"[19, 32, 13, 35, 22, 17, 27]","def filter_prime_numbers(l):
    result = []
    for num in l:
        if is_prime(num):
            result.append(num)
    return result

def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            return False
    return True"
Write a python program to determine if the given list has duplicates.,"list = [1, 2, 4, 6, 2, 5]","def isDuplicates(list):
    duplicate_items = set()
    for item in list:
        if item in duplicate_items:
            return True
        duplicate_items.add(item)
    return False

my_list = [1, 2, 4, 6, 2, 5]
result = isDuplicates(my_list)
print(result) # prints True"
Create a Python program to group a list of numbers into evens and odds.,"A list of numbers [1, 2, 3, 4, 5, 6]","def even_odd_grouping(nums):
    evens = []
    odds = []
    for num in nums:
        if num % 2 == 0:
            evens.append(num)
        else:
            odds.append(num)
    return (evens, odds)

nums = [1, 2, 3, 4, 5, 6]
evens, odds = even_odd_grouping(nums)
print(""Evens: "", evens) 
print(""Odds: "", odds)"
Write a Python function to find all prime numbers between a given lower and upper bound.,"Lower bound = 20, Upper bound = 50","def prime_numbers(lower_bound, upper_bound):
    primes = []
    for num in range(lower_bound, upper_bound + 1):
        if all(num % i != 0 for i in range(2, num)):
            primes.append(num)
 
    return primes
 
prime_numbers(20, 50) # returns [23, 29, 31, 37, 41, 43, 47]"
Create a Python algorithm to return all possible combinations of a given list.,"[1, 2, 3]","def subset(s): 
    if len(s) == 0: 
        return [[]] 
    else: 
        pre_list = subset(s[1:]) 
        post_list = [] 
        for i in pre_list: 
            post_list.append(i+[s[0]]) 
  
        return pre_list + post_list 

result = subset([1, 2, 3]) 
print(result)"
Create a program in Python to sort a given array in ascending order using bubble sort.,"[3,7,4,1]","def bubble_sort(arr): 
    n = len(arr) 
    for i in range(n-1):
        for j in range(0, n-i-1): 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j] 

arr = [3,7,4,1]
bubble_sort(arr) 
print (""Sorted array :"") 
for i in range(len(arr)): 
    print (""%d"" %arr[i]),"
"Given two lists x and y, write a python program to return a list that contains the elements which are common to both lists.","x = [1, 2, 3, 4], y = [2, 3, 4, 5]","def common_elements(x, y):
    common = []
    for i in x:
        if i in y:
            common.append(i)
    return common"
Generate a Python code snippet to find the longest word in a given sentence.,"""This is the longest sentence.""","def longestWord(sentence):
    words = sentence.split("" "")
    max_length = 0
    longest_word = """"
    for word in words:
        if len(word) > max_length:
            max_length = len(word)
            longest_word = word
    return longest_word

print(longestWord(""This is the longest sentence.""))"
Write a Python program to transform an input array of length 5 into a matrix of 3x3.,"[1, 2, 3, 4, 5]","def transform_to_matrix(lst):
    matrix = [[lst[0], lst[1], lst[2]],
              [lst[3], lst[4], 0],
              [0, 0, 0]]
    return matrix"
Build a web scraping function in Python Scrapy that retrieves data from a given web page.,URL of a web page,"import scrapy

class DataSpider(scrapy.Spider):
 name = 'DataSpider'
 start_urls = [url]

def parse(self, response):
 data = response.css('body').getall()
 yield { 'data': data }"
Write a Python program that computes the mean and standard deviation of a dataset.,"Data = [1.1, 3.2, 4.7, 5.9, 7.7, 8.2]","mean = 5.42
sd = 2.48

def compute_stats(Data):
    # calculuate mean
    mean = sum(Data) / len(Data)
    # calculate standard deviation
    variance = 0.0
    for i in Data:
        variance += (i - mean)**2
    sd = variance ** 0.5
    # return mean and sd
    return mean, sd"
Write a Python program to classify a given sentence based on its sentiment.,"Input sentence: ""I hate Mondays"".","from textblob import TextBlob

input_sentence = ""I hate Mondays""
sentiment = TextBlob(input_sentence).sentiment.polarity

if sentiment > 0:
    print(""The sentiment is 'positive'"")
elif sentiment == 0:
    print(""The sentiment is 'neutral'"")
else:
    print(""The sentiment is 'negative'"")"
"Generate Python code for a linear regression model. The model should take two numerical inputs, x and y, and be able to predict the numerical output that best fits the given data.","x: [1, 2, 3]
y: [3, 6, 9]","import numpy as np

x = np.array([1, 2, 3])
y = np.array([3, 6, 9])

# Create the design matrix
X = np.vstack([np.ones(len(x)), x]).T

# Calculate the weights
w = np.linalg.inv(X.T.dot(X)).dot(X.T).dot(y)

# Predicted output
y_pred = X.dot(w)"
Edit the code below to print the output using the Python format() method.,"number1 = 2
number2 = 3

print('The sum of the numbers is ' + number1 + number2)","number1 = 2
number2 = 3

print('The sum of the numbers is {}'.format(number1 + number2))"
Write an optimized Python program to generate the Fibonacci sequence up to n.,n = 10,"def fibonacci(n):
 a, b = 0, 1
 fibonacci_list = [a]
 
 for _ in range(n):
 a, b = b, a + b
 fibonacci_list.append(b)
 
 return fibonacci_list

print(fibonacci(n)) # Prints [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]"
"Write a function in Python that takes a 2D array and a target value as input, and determines if the array contains the target value.","[[3, 6, 2], [2, 3, 4], [1, 2, 5]], target = 4","def targetInArray(arr,target):
    for i in range(len(arr)):
        for j in range(len(arr[i])):
            if target == arr[i][j]:
                return True
    return False"
Use an if-else statement in Python to print a message depending on the value of a given integer.,"//Integer
int x = 15;","if (x > 10) {
    print('The number is greater than 10')
} else {
    print('The number is less or equal than 10')
}"
Create a function in Python that returns the surface area of a sphere when given the sphere’s radius as input.,radius = 6,"import math

def sphere_surface_area(radius):
 surface_area = 4 * math.pi * radius * radius
 return surface_area 

# Test
radius = 6
print(sphere_surface_area(radius)) # 452.38934211"
Create a program in Python that shuffles an array of numbers.,"[1, 5, 8, 11, 3]","import random

# Create an array
arr = [1, 5, 8, 11, 3]

# Function to shuffle an array
def shuffle_array(arr):
    random.shuffle(arr)
    return arr

# Shuffle the array and print the result
print(shuffle_array(arr))"
Write a Python program to implement a decision tree using a given dataset.,"The dataset contains 10,000 examples and 5 features.","import numpy as np
from sklearn import tree

# Load the data
X = np.loadtxt('data.txt', delimiter=',')

# Create a decision tree model
clf = tree.DecisionTreeClassifier()
clf.fit(X, y)

# print the model tree 
tree.export_graphviz(clf, out_file=""model.dot"")"
"Build a type checking function to determine what kind of data is being processed, given a generic string in Python.",str = '123',"def check_type(str):
    try:
        int(str)
        return 'Integer'
    except ValueError:
        pass
   
    try:
        float(str)
        return 'Float'
    except ValueError:
        pass
   
    return 'String'

print(check_type('123')) # prints 'Integer'"
Design an algorithm to compute the GCD of 2 numbers in Python.,"4, 12","def gcd(a, b): 
    if a == 0: 
        return b 
    return gcd(b % a, a) 

if __name__ == '__main__':
    a = 4
    b = 12
    result = gcd(a, b) 
    print (""GCD of 4 and 12 is "" + str(result))"
Implement webscraping with Python to extract content from a given website.,A website URL,"import requests
from bs4 import BeautifulSoup

# Fetch the website content
link = ""https://example.com""
data = requests.get(link)

# Parse the HTML content
soup = BeautifulSoup(data.text, 'html.parser')

# Extract all the <p> tags
content = soup.find_all('p')

# Print the content
for item in content:
    print(item.text)"
Generate a Python program that takes in two lists and returns the intersection of the two.,"list1=[1,2,3]
list2=[2,3,4]","def get_intersection(list1, list2):
    intersection = []
    for element in list1:
        if element in list2:
            intersection.append(element)
    return intersection"
Construct a python program to flatten a nested list recursively.,"list = [[1,2,3], [4,5], [6]]","# Defining a function to flatten a nested list
def flatten(list):
    flatlist = []
    for item in list:
        if isinstance(item, list):
            flatlist.extend(flatten(item))
        else:
            flatlist.append(item)
    return flatlist

# Testing the flatten function
list = [[1,2,3], [4,5], [6]]
print(flatten(list)) # [1, 2, 3, 4, 5, 6]"
Generate the python code that check if the given element is in a list.,"list = [1, 2, 3, 4]","def check_list(list, element):
    if element in list:
        print(element, ""is in the list"")
    else:
        print(element, ""is not in the list"")"
Create a Python program that takes a message as input and encrypts it using the Caesar cipher.,"""Hello World!""","def caesar_encrypt(plain_text, shift):
    encrypted_text = """"
    
    for c in plain_text:
        c_ascii = ord(c)+shift 
        encrypted_text += chr(c_ascii)
        
    return encrypted_text

plain_text = ""Hello World!""
shift = 5
encrypted_text = caesar_encrypt(plain_text, shift)
print(""encrypted_text ="", encrypted_text)"
Complete the Python class below so that it can calculate the sum of two integers.,"class Sum:
    def __init__(self, x, y):
        self.x = x
        self.y = y","class Sum:
    def __init__(self, x, y):
        self.x = x
        self.y = y
        
    def add(self):
        return self.x + self.y"
Suggest a function to remove elements of an array that are greater than a given limit,"[1, 2, 3, 4, 5, 6, 7, 8, 9]","# Python program to remove elements of an array that are greater than a given limit

def remove_above_limit(arr, limit):
    new_arr = [x for x in arr if x <= limit]
    return new_arr"
Write a Python code that replaces every occurrence of an alphabet in a sentence with the next alphabet in the alphabetical order.,"""Hello, World!""","def alphabet_order(sentence):
    output = """"
    for character in sentence:
        if character.isalpha():
            ascii_value = ord(character)
            ascii_value += 1
            output += chr(ascii_value)
        else:
            output += character
    return output

#Main
print(alphabet_order(""Hello, World!""))"
"Using Python, create a program to filter out all non-prime numbers from a list.","myList = [2, 4, 5, 20, 44]","def filterPrimes(myList):
    result = []
    for i in myList:
        is_prime = True
        for j in range(2,i):
            if i % j == 0:
                is_prime = False
                break
        if is_prime:
            result.append(i)
    return result

print(filterPrimes(myList)) #[2, 5]"
Write a Python function to generate a substitution cipher of a given string,"string = ""abcdefghijklmnopqrstuvwxyz""","def substitution_cipher(string):
    cipher = """"
    for i in string:
        cipher += chr(ord('a') + (ord(i) - ord('a') + 13) % 26) 
    return cipher"
Generate a Python function that takes an array of numbers and returns the sum of all the odd numbers in the array.,"[2, 4, 5, 6]","def findOddSums(arr):
    sum = 0
    for num in arr:
        if num % 2 != 0:
            sum += num
    return sum

odd_sums = findOddSums([2, 4, 5, 6])
print(odd_sums)"
Write a Python program to filter out the numbers from a list that are divisible by a given number.,"list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
divisible_by = 3","numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
divisible_by = 3
result = [num for num in numbers if num % divisible_by != 0]

print(result) # [1, 2, 4, 5, 7, 8, 10]"
Generate a Python program to iterate over a list of numbers and print out only the even numbers.,"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","for num in [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]:
 if num % 2 == 0:
 print(num)"
Generate a Python program to print the characters at even positions in a given string.,Hello World!,"def even_positions(string):
    result = """"
    for i in range(0, len(string), 2):
        result += string[i]
    return result

print(even_positions(""Hello World!""))"
Create a program in Python that takes a list of numbers and sorts them in descending order.,"[30, 10, 40, 20]","def sortListInDescendingOrder(list):
    return sorted(list, reverse=True)

list1 = [30, 10, 40, 20]
sortedList = sortListInDescendingOrder(list1)
print(sortedList)"
Develop a virtual assistant command in Python to generate a random number between two user-supplied numbers.,"Minimum number: 10
Maximum number: 20","import random

min_num = int(input(""Enter minimum number: ""))
max_num = int(input(""Enter maximum number: ""))

print(random.randint(min_num, max_num)) # random number between 10 and 20"
Create a function in Python to identify consecutive numbers in a given list.,"[1, 4, 6, 5, 2, 7, 9]","def consecutive_numbers(lst):
  count = 0
  for i in range(len(lst)-1):
    if lst[i+1] - lst[i] == 1:
      count += 1
    else:
      count = 0
  return count

# Test Code
lst = [1, 4, 6, 5, 2, 7, 9]
result = consecutive_numbers(lst)
print(result)

# Output --> 2"
Create a program to remove all the duplicate elements from the given array in Python.,"[3, 5, 7, 9, 3, 5, 7]","def remove_duplicates(arr):
    result = []
    seen = set()

    for item in arr:
        if item not in seen:
            seen.add(item)
            result.append(item)

    return result

print(remove_duplicates([3, 5, 7, 9, 3, 5, 7]))"
Suggest how to make the following Python loop execute faster.,"def find_list_difference(list1, list2):
    diff = []
    for item in list1:
        if item not in list2:
            diff.append(item)
    return diff","def find_list_difference(list1, list2):
    diff = []
    list2_set = set(list2)
    for item in list1:
        if item not in list2_set:
            diff.append(item)
    return diff"
Generate a python function to convert a student's grade from a 0 to 100 scale to the corresponding letter grade according to the following grade scale.,90,"def grade_converter(score):
    if score >= 90:
        return 'A'
    elif score >= 80:
        return 'B'
    elif score >= 70:
        return 'C'
    elif score >= 60:
        return 'D'
    else:
        return 'F'"
Create an algorithm in Python that reads an array of integers and returns the maximum element.,"[1, 5, -3, 10]","def findMaxElement(arr):
  max_element = 0
  for element in arr:
    if element > max_element:
      max_element = element
  
  return max_element

arr = [1, 5, -3, 10]
max_element = findMaxElement(arr)
print(max_element)"
Create a Python program that takes a positive integer as input and returns the Fibonacci sequence up to the given number.,10,"def fibonacci(n):
  fib = [0, 1]
  for i in range(2,n):
    fib.append(fib[i-2] + fib[i-1])
  return fib[:n]

fibonacciSequence = fibonacci(10)
print(fibonacciSequence)"
Develop a Python function to calculate the mean of a list of numbers.,"[1, 5, 8, 9]","def mean(lst):
    total = 0
    for n in lst:
        total += n
    return total / len(lst)

result = mean([1, 5, 8, 9])
print(result)"
Write a python program that prints out the number of times each letter appears in a given string.,"string = ""Hello, World!""","string = ""Hello, World!""
for char in string:
 count = string.count(char)
 print(char + "" appears "" + str(count) + "" times"")

# Output
H appears 1 times
e appears 1 times
l appears 3 times
o appears 2 times
, appears 1 times
  appears 1 times
W appears 1 times
r appears 1 times
d appears 1 times
! appears 1 times"
Develop a program to sort an list of strings by their length using Python.,"['dog', 'cat', 'mouse', 'elephant']","def sort_by_length(strings): 
    return sorted(strings, key=len) 
  
# Test 
strings = ['dog', 'cat', 'mouse', 'elephant'] 
  
print(sort_by_length(strings))"
Generate a Python function that takes an matrix as input and raises each element of it to the power of 3.,"[[1,2,3], [4,5,6], [7,8,9]]","def power_of_3(matrix):
    for i in range(len(matrix)):
       for j in range(len(matrix[0])): 
            matrix[i][j] = matrix[i][j] ** 3
    return matrix"
write a python code to filter 'mylist' and remove odd numbers,"mylist = [2, 3, 5, 7, 11, 13, 17, 19]",mylist = [x for x in mylist if x % 2 == 0]
Write a Python code to sort a list of words alphabetically.,"word_list = [""hello"", ""computer"", ""science"", ""art""]","word_list.sort()
print(word_list)"
Create a function in Python that will convert a string to all uppercase letters.,"input_string = ""This Is A String""","def uppercase_string(input_string):
    return input_string.upper()"
Develop a Python program to sort a 3D array according to the second axis in ascending order.,"[[[1,6,4],
  [4,3,2],
  [2,3,6]],
 [[3,3,3],
  [2,2,2],
  [1,1,1]]]","def sort_array(arr):
    arr.sort(key=lambda x: x[1])
    return arr

data = [[[1,6,4], [4,3,2], [2,3,6]], [[3,3,3], [2,2,2], [1,1,1]]]

print(sort_array(data))"
Generate a python program to iterate through a given list and find the minimum value.,"[5, 7, -1, 4]","def find_min(arr):
    min_val = arr[0]
    for i in arr:
        if i < min_val:
            min_val = i
    return min_val

arr = [5, 7, -1, 4]
min_val = find_min(arr)
print(min_val)"
Write a python program that sorts a list of numbers in descending order.,"list_numbers = [8, 4, 6, 10, 3]","list_numbers = [8, 4, 6, 10, 3]

list_numbers.sort(reverse=True)

print(list_numbers) # Output: [10, 8, 6, 4, 3]"
"Create a Python function that takes a string argument, removes all the special characters and returns the modified string.",This# 1$ i^s an% e*xa_mple -str_ing,"def remove_special_characters(s):
    new_s = s.replace('#', '').replace('$', '').replace('^', '').replace('%', '').replace('*', '').replace('_', '') 
    return new_s

remove_special_characters(""This# 1$ i^s an% e*xa_mple -str_ing"")"
"In Python, create an algorithm to find the k most frequent strings in a given list.","list = [""Cat"", ""Dog"", ""Bird"", ""Bird"", ""Bird"", ""Fish""]","from collections import Counter

list = [""Cat"", ""Dog"", ""Bird"", ""Bird"", ""Bird"", ""Fish""]

count = Counter(list)
k = 3

mostFrequent = count.most_common(k)

print(mostFrequent)  # Output: [('Bird', 3), ('Cat', 1), ('Dog', 1)]"
Write a Python program to evaluate a given string and return a Boolean value.,String = “The sky is blue”,"def evaluate_string(string):
 if string == 'The sky is blue':
  return True
 else:
  return False"
Create a program in Python that takes in a text document and counts the number of times a specific word is used in it.,"Text: ""This is a test sentence. This sentence is used for testing.""
Word: ""test""","text = ""This is a test sentence. This sentence is used for testing.""
word = ""test""

def count_words(text, word):
    words = text.split()
    count = 0
    for w in words:
        if w == word:
            count += 1
    return count

print(count_words(text, word)) #2"
In Python create a function that takes a list of numbers and returns the sum of the even numbers in the list.,"[3, 5, 8, 9, 10]","def even_sum(numbers): 
    even_sum = 0
    for num in numbers:
        if (num % 2 == 0):
            even_sum += num
    return even_sum"
Convert the following program from Java to Python.,"public class SumOfTwoNumbers { 
    public static void main(String args[]) 
    { 
        int a = 10; 
        int b = 20; 
        int c = a + b; 
        System.out.println(""sum is "" + c); 
    } 
}","def sum_of_two_numbers(a, b): 
    c = a + b
    print(""sum is "" + str(c))

if __name__ == ""__main__"": 
    sum_of_two_numbers(10, 20)"
Develop a Python script to extract the first sentence of each paragraph in a given text.,The quick brown fox jumps over the lazy dog. The race across the wood was won by the swift horse.,"text = ""The quick brown fox jumps over the lazy dog. The race across the wood was won by the swift horse.""

words = text.split(""."")
first_sentences = []
for sentence in words:
    first_sentences.append(sentence.split("" "")[0])

print(first_sentences)"
Create a function in Python that returns the sequential median value from an array of integers.,"arr = [1, 3, 5, 6, 9, 11]","def find_median(arr):
    n = len(arr) 
    arr.sort() 
  
    if n % 2 != 0: 
        return arr[n//2] 
  
    return (arr[(n-1)//2] + arr[n//2]) / 2.0"
Design an algorithm in Python to find the second smallest number in an array.,"[45, 25, 12, 34, 36]","def second_smallest_num(arr):
    min1 = min(arr)
    arr.remove(min1)
    min2 = min(arr)
    return min2


arr = [45, 25, 12, 34, 36]
res = second_smallest_num(arr)
print(res)"
Generate code to serialize a Python data dictionary into a JSON object,"data = {
 ""name"": ""John Doe"",
 ""age"": 18,
 ""hobbies"": [""reading"", ""swimming"", ""gaming""],
 ""contact"": {
  ""email"": ""johndoe@example.com"",
  ""mobile"": ""+1900000000""
 }
}","import json

data_json = json.dumps(data)

# Output:
{""name"":""John Doe"",""age"":18,""hobbies"":[""reading"",""swimming"",""gaming""],""contact"":{""email"":""johndoe@example.com"",""mobile"":""+1900000000""}}"
Generate a Python function to print all the even numbers from 0 to a given number.,10,"def print_even_numbers(n):
    for i in range(0, n+1):
        if i % 2 == 0:
            print(i)

print_even_numbers(10)"
"Rewrite the following piece of code in Python, that calculates the sum of two variables.","int x = 2;
int y = 4;
int sum = x + y;","x = 2
y = 4

sum = x + y
print(sum) # 6"
Convert the given JSON data into Python dictionary.,"{""name"": ""John"", ""age"": 30, ""hobby"": ""running""}","import json

data = '{""name"": ""John"", ""age"": 30, ""hobby"": ""running""}'
dict_data = json.loads(data)

print(dict_data)"
Design a Python script to print out a list of unique numbers from 0 to N.,N = 10,"numbers = [i for i in range(0, N+1)]
unique_numbers = list(set(numbers))

print(unique_numbers)"
Create a Python program to compute the sum of all elements in a given array.,"array = [1, 2, 3, 4, 5]","def compute_sum(array):
    sum = 0
    for element in array:
        sum += element
    return sum
    
if __name__ == '__main__':
    array = [1, 2, 3, 4, 5]
    print(compute_sum(array))"
Construct a python program for linear search for a given element in an array.,"Array: [1, 2, 3, 4, 5] 
Element: 4","def linearSearch(array, element): 
    for i in range(len(array)): 
        if array[i]==element: 
            return i
    return -1

linearSearch([1, 2, 3, 4, 5], 4) # returns 3"
Rewrite the following list comprehension in a more pythonic way.,values = [x*2 for x in range(10)],"values = list(map(lambda x: x*2, range(10)))"
Make Python program to filter out all even numbers from a given list,"[10, 11, 5, 16, 4, 9]","def filter_even(arr):
    result = []
    for i in arr:
        if i % 2 != 0:
            result.append(i)
    return result"
Write a python program to calculate the total of the following list of numbers,"[2, 4, 5, 6, 8]","def calculate_total(lst):
    total = 0
    for item in lst:
        total += item
    return total

lst = [2, 4, 5, 6, 8]
total = calculate_total(lst)
print(total)"
Write a Bash script to check if a specific program is installed on the current system.,Program Name = Python,"#!/usr/bin/env bash

if type -p python &> /dev/null; then
  echo 'Python is installed!'
else 
  echo 'Python is not installed!'
fi"
Edit the following code snippet to calculate average in Python.,"def calculate_avg(values):
  total = 0","def calculate_avg(values):
  total = 0
  count = len(values)
 
  for value in values:
    total += value
 
  return total/count"
Create a Python program that finds the longest word in a sentence.,My name is John,"def find_longest_word(sentence):
    # Split sentence into a list of words
    words = sentence.split()
    # Track the longest word
    longest_word = ''
    # Iterate over the list of words
    for word in words:
        if len(word) > len(longest_word):
            longest_word = word
    # Return the longest word
    return longest_word

print(find_longest_word(""My name is John""))"
Write a python code to calculate the sum of numbers in a list except for the last element.,"[1,2,3,4,5]","def sum_except_last(arr):
    total = 0
    for i in range(len(arr) - 1):
        total += arr[i]
    return total

if __name__ == '__main__':
    output = sum_except_last([1,2,3,4,5])
    print(output)"
Generate the Python code for a pipelie of KMeans and GaussianMixture clustering models.,n_clusters = 10,"from sklearn.cluster import KMeans, GaussianMixture
cluster = KMeans(n_clusters=n_clusters).fit(X)
pipeline = GaussianMixture(n_components=2).fit(cluster.cluster_centers_)"
Create a Python function that sorts the numbers in a given list in ascending order.,"[8,3,5,2,9,7]","def sort_list(list):
    list.sort()
    return list

if __name__ == ""__main__"":
    l = [8,3,5,2,9,7]
    print(sort_list(l))"
Write a python program to print the items in the following dictionary,"dictionary = {
  ""fruit"": ""apple"",
  ""animal"": ""dog""
}","for key,val in dictionary.items():
    print(f""{key}: {val}"")"
Reverse the elements of a given array in Python.,"arr = [1, 4, 6, 8, 5]","def reverse_array(arr):
    n = len(arr) 

for i in range(n // 2): 
	arr[i], arr[n - i - 1] = arr[n - i - 1], arr[i] 

return arr"
What is the code for using the Python Requests module to post data to the server?,"URL: ""http://example.com/data""","import requests
 
url = ""http://example.com/data""
data = {""name"":""John Doe"",""age"":30}
 
response = requests.post(url, data = data)"
Create a Python program to calculate the total cost of an order based on item cost and quantity.,"Item cost: 10
Quantity: 5","def calculate_cost(item_cost, quantity):
 return item_cost * quantity

cost = calculate_cost(10, 5)
print('The total cost of your order is:', cost)  # The total cost of your order is: 50"
Find the maximum number in the following list using a Python program.,"[8, 5, -1, 7, 2]","def find_max(my_list):
    max_num = my_list[0]
    for num in my_list:
        if num > max_num:
            max_num = num
    return max_num

my_list = [8, 5, -1, 7, 2]

print(find_max(my_list))"
Edit the following Python code to return the same output with fewer code lines.,"def my_func(list):
 for i in list:
 if i % 2 == 0:
 output = True
 else:
 output = False
 return output","def my_func(list):
 return any(i % 2 == 0 for i in list)"
Optimize the given code in Python.,"def fibonacci(num):
    a = 0
    b = 1
    for i in range(0, num):
        temp = a
        a = b
        b = temp + b
    return a","def fibonacci(num):
 a, b = 0, 1
 for _ in range(num):
  a, b = b, a + b
 return a"
Create a function in Python that takes two strings as inputs and prints out the longer of the two strings.,"Hello
World","def longestString(str1, str2):
  if len(str1) > len(str2):
    return str1
  else:
    return str2

print(longestString(""Hello"", ""World""))"
"Create a Python function that takes a string and a pattern, and returns the number of times the pattern appears in the string.","string = ""hello hello world""
pattern = ""hello""","def countSubstring(string, sub_string):
  count = 0 
  for i in range(0, len(string)-len(sub_string)+1):
    if (string[i:i+len(sub_string)] == sub_string):
      count+=1
  return count
  
print(countSubstring(string, pattern))"
Write a Python function to convert a given number into its corresponding Roman numeral.,99,"def convert_to_roman(num):
    int_nums = [1000, 500, 100, 50, 10, 5, 1]
    roman_nums = ['M', 'D', 'C', 'L', 'X', 'V', 'I']
    roman_value = ''

    i = 0
    while num > 0:
        for _ in range(num // int_nums[i]):
             roman_value += roman_nums[i]
             num -= int_nums[i]
        i += 1

    return roman_value

print(convert_to_roman(99))
# Output: 'XCIX'"
Edit the following Python code to make the program run without any errors.,"s = input(""Please enter a string: "")
print(""The reverse of the string is: s[::-1]","s = input(""Please enter a string: "")
print(""The reverse of the string is: "" + s[::-1])"
Create a python script that takes 2 arguments - an array and an integer - and prints the sum of the array multiplied by the integer.,"Array: [3, 5, 8] 
Integer: 5","def sum_arr(arr, num):
    total = 0
    for i in arr:
        total += i
    total *= num
    return total

# Output 
95"
Write a Python program that optimizes an array to find the smallest and largest numbers in the array.,"[45, 2, 84, 33, 8, 1, 2]","def optimize(arr):
    min = arr[0] 
    max = arr[0] 
    for i in range(1, len(arr)): 
        if arr[i] < min: 
            min = arr[i] 
  
        if arr[i] > max: 
            max = arr[i] 
  
    print(""Minimum element is:"", min) 
    print(""Maximum element is:"", max)

# Main   
arr = [45, 2, 84, 33, 8, 1, 2]
optimize(arr)"
Rearrange the words in the following sentence to create a meaningful sentence.,"sentence = ""program a to write Python""",Write a program in Python.
"Using the provided data, create a Python program that can categorize a book as fiction or non-fiction.","{""title"": ""The Catcher in the Rye"", ""author"": ""JD Salinger"", ""genre"": ""Novel""}","import json

data = '{""title"": ""The Catcher in the Rye"", ""author"": ""JD Salinger"", ""genre"": ""Novel""}'
book_data = json.loads(data)

if book_data[""genre""] == ""Novel"":
 print(""Book is fiction"")
else:
 print(""Book is not fiction"")"
"Create a Python program to check if a given number is in a given linear list or not, and return the position if found.","List: [2, 3, 5, 6, 8, 9], Number: 5","def is_in_linear_list(lst, num):
    for i, val in enumerate(lst):
        if val == num:
            return ""Found at {0} position"".format(i)

    return False

lst = [2, 3, 5, 6, 8, 9]
num = 5
result = is_in_linear_list(lst, num)
print(result)"
Implement a function in Python to print all the uppercase letters from a given string.,"String: ""Hello World""","def print_uppercase(s):
    for c in s:
        if c.isupper():
            print(c)

print_uppercase(""Hello World"")
# Output:
# H
# W"
Create a function in Python which takes two arguments – an array of integers and an integer x – and returns a list of all pairs in the array with a sum equal to x.,"array = [4, 6, 2, 8]
x = 10","def equalSums(array, x): 
    result = [] 

    for i in range(0, len(array)-1): 
        for j in range(i + 1, len(array)): 
            if array[i] + array[j] == x: 
                result.append([array[i], array[j]]) 
  
    return result 
  
print(equalSums(array, x))"
Can you create a web scraper in Python to extract the titles of articles from a newspaper website?,http://example.com/newspaper,"import requests
from bs4 import BeautifulSoup

url = ""http://example.com/newspaper""

# fetch data from the given URL
r = requests.get(url)

# create a BeautifulSoup object
soup = BeautifulSoup(r.content, ""lxml"")

# extract the title of all articles
for article_title in soup.find_all('h3', class_='title'):
    print(article_title.text)"
Build a Python program that takes in two lists as an input and returns a third list with the common elements across the two inputs.,"list1 = [2, 3, 4, 5, 6]
list2 = [3, 5, 7, 8, 9]","def common_elements(list1, list2):
    common_elements = []

    for element in list1: 
        if element in list2:
            common_elements.append(element)
    return common_elements

list1 = [2, 3, 4, 5, 6]
list2 = [3, 5, 7, 8, 9]

print(common_elements(list1, list2))"
Write a Python function which extracts zip codes from a provided string.,"My address is 123 Main St, ZIP 12345","import re

def extract_zip_codes(string):
    zip_codes = re.findall(""(?<=ZIP )\d+"", string)
    return zip_codes

print(extract_zip_codes(""My address is 123 Main St, ZIP 12345""))"
Write a Python program to find the prime numbers from a list given by the user.,"mylist = [3,4,7,11,13,18]","def isPrime(num):
    for i in range (2, num): 
        if num % i == 0: 
            return False
    return True  
  
# Driver Code 
mylist = [3,4,7,11,13,18]
  
for num in mylist: 
    # if condition is true, print the number 
    if isPrime(num): 
        print(num, end ="" "")"
Create a Python function to combine two strings.,"String 1: Hello
String 2: World","def combine(str1, str2):
  return str1 + str2"
Write a Python program to compare two strings and print the number of times the second string appears in the first string.,"""The quick brown fox jumps over the lazy dog"", ""fox""","def count_word_occurrence(str1, str2):
    count = 0
    for word in str1.split():
        if word == str2:
            count += 1

    return count

occurrence = count_word_occurrence(""The quick brown fox jumps over the lazy dog"", ""fox"")
print(occurrence)"
Convert the following Python code to JavaScript.,"x = 3
if x >= 3:
    print(""x is greater than or equal to 3"")","let x = 3;
if(x >= 3){
    console.log('x is greater than or equal to 3');
}"
Create a program in Python which takes a string and finds the number of each English vowels.,sentence = 'Hello World',"def count_vowels(sentence):
    vowels = {'a': 0, 'e': 0, 'i': 0, 'o': 0, 'u': 0}
    for char in sentence.lower():
        if char in vowels:
            vowels[char] += 1
    return vowels

sentence = 'Hello World'  
print(count_vowels(sentence)) # Output = {'a': 0, 'e': 1, 'i': 0, 'o': 2, 'u': 0}"
Write a Python program to find the list of words that are longer than n from a given list of words.,"word_list = [""cat"", ""dog"", ""dragon"", ""fish"", ""tiger""]
n = 4","def get_long_words(word_list, n):
  return [w for w in word_list if len(w) > n]

long_words = get_long_words(word_list, n)
print(long_words)"
"Given a string, write a python program to count the number of words in the string.",This is a test string,"def count_words(string):
    words = string.split("" "")
    num_words = len(words)
    return num_words

result = count_words(""This is a test string"")
print(""Number of words:"", result)"
"Create a Python module that takes a list of numbers, calculates the mean, and returns it.","[1, 7, 11, 13]","def calculate_mean(numbers):
    total_sum = 0
    for num in numbers:
        total_sum += num
    mean = total_sum / len(numbers)
    return mean

list_of_numbers = [1, 7, 11, 13]
mean = calculate_mean(list_of_numbers)
print(mean) # 7.5"
Create a Python program to determine whether a given number is prime or not.,Number: 47,"def is_prime(num):
    if num > 1:
        for i in range(2,int(num**0.5)+1):
            if (num % i) == 0:
                return False
    else:
        return False
    return True

num = 47
if (is_prime(num)):
    print(num,""is a prime number"")
else:
    print(num,""is not a prime number"")"
Create a Python script to implement a linear search for a given list of numbers.,"numbers_list = [1, 4, 5, 6, 7, 8 , 10]
number = 6","def linear_search(numbers_list, number):
    """"""Implements a linear search for a given list of numbers and returns the index of the number if exists""""""
    
    for index, element in enumerate(numbers_list):
        if element == number:
            return index
    return -1"
Create a Python program to track and record the frequency of each word from a given list of words.,"['Good', 'Outlook', 'Good', 'Luck', 'Bad', 'Outlook', 'Good']","words = ['Good', 'Outlook', 'Good', 'Luck', 'Bad', 'Outlook', 'Good']
 
freq = {}
 
for word in words:
 if word in freq:
 freq[word] += 1
 else:
 freq[word] = 1
 
print(freq)"
Create a Python program to calculate day of the week for a given date.,"(2020, 05, 22)","import datetime

day, month, year = (2020, 05, 22)

weekdays = [""Monday"", ""Tuesday"", ""Wednesday"", ""Thursday"", ""Friday"", ""Saturday"", ""Sunday""]

inpDate = datetime.date(year, month, day)
dayOfWeek = inpDate.weekday()
print(weekdays[dayOfWeek])"
Can you generate a Python program that takes a string as input and returns a dictionary with the count of each letter in the string?,"""hello world""","def letter_count(s):
    count = {}
    for c in s:
        if c not in count:
            count[c] = 1
        else:
            count[c] += 1
    return count

s = ""hello world""
count = letter_count(s)
print(count) # {'h': 1, 'e': 1, 'l': 3, 'o': 2, ' ': 1, 'w': 1, 'r': 1, 'd': 1}"
Develop a Python class that reads and stores a list of integers.,"[1, 2, 3, 4, 5]","class ListOfInts:
    def __init__(self, numbers):
        self.numbers = numbers
    
    def get_list(self):
        return self.numbers"
Create a Python function to remove all duplicate elements in a given list.,"list = [1, 2, 3, 4, 4, 4, 5, 5]","def removeDuplicates(lst):
 return list(set(lst))

list = [1, 2, 3, 4, 4, 4, 5, 5]
print(removeDuplicates(list))"
Create a web scraper with Python that collects all the titles of posts from a website.,https://example.com,"import requests
from bs4 import BeautifulSoup

url = 'https://example.com'
response = requests.get(url)
soup = BeautifulSoup(response.text, 'html.parser')

post_titles = [title.text for title in soup.find_all('h2', class_='post-title')]

for post_title in post_titles:
 print(post_title)"
Write a Python class to represent a polynomial of degree n.,<no input>,"class Polynomial:
    def __init__(self, coeff):
        self.coeff = coeff

    def __call__(self, x):
        result = 0
        for idx, c in enumerate(self.coeff):
            result += c * x ** idx
        return result"
Develop a python program to convert pounds to kilograms.,1 pound,"weight_pounds = 1
weight_kilograms = weight_pounds/2.2
print(""Weight in kilograms is:"", weight_kilograms)"
"Write a Python program to generate a dictionary which contains (i, i*i) such that i is an int between 1 and N.",N = 10,"""""""
A Python program to generate a dictionary which contains (i, i*i) such that i is an int between 1 and N
""""""

N = 10
my_dict = {}

# Generate the dictionary
for i in range(1, N+1):
    my_dict[i] = i * i

# Print the dictionary
print(my_dict)"
"Produce a single Python statement that multiplies the values of the variables x, y, and z, and stores the result in the variable result.","x = 5, y = 10, z = 20",result = x * y * z
Write a Python program to optimize a set of points in a 3-dimensional plane.,"points = [[10, 12, 13], [1, 8, 9], [3, 5, 7]]","import scipy.optimize as opt

def objective(x):
 return sum([x[i]**2 for i in range(len(x))])

def constraint1(x):
 return 16 - x[0]**2 - x[1]**2 - x[2]**2

cons = [{'type': 'ineq','fun': constraint1}]

x = [0, 0, 0]

solution = opt.minimize(objective, x, constraints=cons)

print(solution)"
Generate a Python program that creates a word cloud from a given text.,Text: The quick brown fox jumps over the lazy dog.,"import matplotlib.pyplot as plt
from wordcloud import WordCloud
 
# Read the whole text.
text = 'The quick brown fox jumps over the lazy dog.'
 
# Generate a word cloud image
wordcloud = WordCloud().generate(text)
 
# Display the generated image:
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis(""off"")
plt.show()"
"Given a JSON object, write a python program to print the square of every value, only if the value is even.","{
 ""a"": 1,
 ""b"": 2,
 ""c"": 3,
 ""d"": 4
}","import json

data = {
 ""a"": 1,
 ""b"": 2,
 ""c"": 3,
 ""d"": 4
}

for key, value in data.items():
 if value % 2 == 0:
 print(value**2)"
Write a Python program to create a join of two given strings being separated by a given separator.,"First string: Apples 
Second string: Oranges 
Separator: and","a = ""Apples""
b = ""Oranges""

#joining the strings, using the separator
joinedString = a +"" ""+ ""and"" +"" ""+ b

# print the joined string
print(joinedString)"
Compose a python program to classify each items in our list.,"List items: shirt, pants, dress, coat","def classify(items):
    categories = ['shirts', 'pants', 'dresses', 'coats']
    results = {}
    for item in items:
        for category in categories:
            if item == category:
                results[item] = category
    return results"
Generate a python program to remove duplicate values in a given list.,"myList = [1, 2, 3, 2, 4, 5, 5]","def remove_duplicates(myList):
    unique_list = []
    for item in myList:
        if item not in unique_list:
            unique_list.append(item)
    return unique_list

result = remove_duplicates(myList)
print(result)"
"Create a string formatting function in Python that takes a first name, last name, and age as parameters.","firstName - ""John""
lastName - ""Doe""
age - 35","def format_name(firstName, lastName, age):
 return f'{lastName}, {firstName} is {age} years old.'

# Usage example
print(format_name('John', 'Doe', 35)) # Output: Doe, John is 35 years old."
Write a Python program that finds the smallest number in a given array with an algorithm that has an optimal time complexity.,"array = [3, 8, 2, 5, 4, 1, 9]","def find_smallest_number(array):
    smallest = array[0]
    for element in array:
        if element < smallest:
            smallest = element
    return smallest"
Generate a python program to create a Pandas DataFrame using the following input data.,"Input:
data = {'Country':[""United States"", ""France"", ""China""], 
'Population': [330, 67, 13]}","import pandas as pd

# Create the data frame
data_frame = pd.DataFrame(data)
  
# Print the data frame
print(data_frame)"
Develop a function in Python to take as input two array of integers and swap their elements.,"arr1 = [3, 5, 6, 9]
arr2 = [2, 4, 7, 8]","def swap(arr1, arr2):
    assert len(arr1) == len(arr2)
    for i in range(len(arr1)):
        temp = arr1[i]
        arr1[i] = arr2[i]
        arr2[i] = temp"
Construct a nested loop in Python to print out the following elements in a new line.,"[1,2,3], [4,5,6], [7,8,9]","for x in [1,2,3]:
  for y in [4,5,6]:
      for z in [7,8,9]:
          print(x,y,z)"
Write a Python code to get the intersection of two given arrays.,"a = [1, 2, 3, 4, 5]
b = [3, 4, 5, 6, 7]","def intersection_arr(arr1, arr2):
    # create an empty list for storing the elements
    result = []
    
    for element in arr1:
        if element in arr2: 
            result.append(element)
    
    return result

a = [1, 2, 3, 4, 5]
b = [3, 4, 5, 6, 7]

intersect = intersection_arr(a, b)
print(intersect)"
Write a Python program to store and display information about a restaurant.,The restaurant is called 'The Olive' and it has a Chinese and Thai cuisine.,"class Restaurant:
   def __init__(self, name, cuisine):
        self.name = name
        self.cuisine = cuisine

restaurant = Restaurant('The Olive', 'Chinese and Thai')

print('Name of the restaurant: ', restaurant.name)
print('Cuisine served in the restaurant: ', restaurant.cuisine)"
Generate a program in Python to implement quick sort on an array of integers.,"[6, 9, 20, 1, 11, 46]","def quicksort(arr):
    if len(arr) <= 1:
        return arr
    else:
        pivot = arr[0]
        less_than_pivot = [x for x in arr[1:] if x <= pivot]
        greater_than_pivot = [x for x in arr[1:] if x > pivot]

        return quicksort(less_than_pivot) + [pivot] + quicksort(greater_than_pivot)
 
arr = [6, 9, 20, 1, 11, 46]
print (""Quick Sort: "" + str(quicksort(arr)))"
Reformat a collection of list into a dictionary in Python.,"[['a', 1], ['b', 2], ['c', 3], ['d', 4]]","data = [['a', 1], ['b', 2], ['c', 3], ['d', 4]]

my_dict = dict(data)
print(my_dict) # {'a': 1, 'b': 2, 'c': 3, 'd': 4}"
Generate Python code for making a GraphQL API query.,"query {
 user(id: 2) {
  name
  age
  address {
   street
   city
  }
 }
}","import requests

url = 'http://localhost:4000'

query = """"""
query {
 user(id: 2) {
  name
  age
  address {
   street
   city
  }
 }
}
""""""

response = requests.post(url, json={'query': query})
data = response.json()

print(data)"
Optimize the following Python code for counting the number of words in an input string.,"s = ""This is a sample string""","# Count number of words in a string

def count_words(s):
    # remove unnecessary characters
    s = s.replace(',', '').replace('.', '')
    # split string into list of words
    words = s.split(' ')
    # return the length of the list (number of words)
    return len(words)

s = ""This is a sample string""
words_count = count_words(s)
print(words_count)"
Give a Python function that shuffles the elements of a given list.,"[1, 2, 3, 4, 5]","import random

def shuffle(list):
    random.shuffle(list)
    return list

list = [1, 2, 3, 4, 5]
shuffledList = shuffle(list)

print(shuffledList)"
Write a Python code snippet to print out the first ten entries in a given dictionnary.,"dict = {‘a’: 1, ‘b’: 2, ‘c’: 3, ‘d’: 4, ‘e’: 5, ‘f’: 6, ‘g’: 7, ‘h’: 8, ‘i’: 9, ‘j’: 10}","for key, value in dict.items():
    if key < 'k':
        print(key, value)"
Create a method in Python that returns the result for the factorial of a given number.,5,"def factorial(n): 
    if n == 0:
        return 1
    else:
        return n*factorial(n-1) 

x = 5
result = factorial(x) 
print(result) 

# Output: 
120"
Generate Python code to tokenize the given text.,Text: This is a sentence containing words,"import re

def tokenize_text(text):
    #Split the string into words on whitespace
    words = re.split(r'\s', text)
    #Punctuation patterns
    punctuation = re.compile(r'[.,!?;:]')
    #Create tokens
    tokens = [word.strip(punctuation.pattern) for word in words]
    #Return the list of tokens
    return tokens"
Create a Python program to normalize a list of numbers so that the sum of the numbers add up to 1.,"[2, 5, 8, 9, 12, 25]","import numpy as np

def normalize_list(lst):
    lst = np.array(lst)
    normalized = lst / lst.sum()
    return normalized

lst = [2, 5, 8, 9, 12, 25]
normalized_list = normalize_list(lst)
print(normalized_list)"
Write an algorithm in Python to find the missing number in a given sequence of numbers,"[1, 2, 4, 5, 6, 7, 8]","def findMissingNumber(input):
 
    n = len(input) + 1  # calculate the total numbers
    total = (n * (n+1)) / 2  # calculate the sum of numbers 
    missing_num = total - sum(input)    
    return missing_num
 
# Driver code
input = [1, 2, 4, 5, 6, 7, 8]
missing_num = findMissingNumber(input)
print(""The missing number is:"", missing_num)"
Create a Python program to generate a sentence from a given set of words.,"[""The"",""quick"",""brown"",""fox"",""jumped"",""over"",""the"",""lazy"",""dog""]","def generateSentence(words):
  sentence = ''
  for word in words:
    sentence += word + ' '
  sentence += '.'
  return sentence

sentence = generateSentence([""The"",""quick"",""brown"",""fox"",""jumped"",""over"",""the"",""lazy"",""dog""])
print(sentence)"
"Write a Python function to classify data points as low, medium and high according to the given threshold values.","threshold = [4, 6]","def classify(value, threshold):
    if value < threshold[0]:
        return 'low'
    elif threshold[0] <= value < threshold[1]:
        return 'medium'
    else:
        return 'high'"
Create a Python program to sort a given array in increasing and decreasing order.,"Array: [3, 5, 8, 9, 0, 4, 1]","def sort_array(arr): 
	asc_arr = arr.copy() 
	asc_arr.sort() 

	dsc_arr = arr.copy()
	dsc_arr.sort(reverse=True)
 
	return asc_arr, dsc_arr

asc_arr, dsc_arr = sort_array([3, 5, 8, 9, 0, 4, 1])
print(""Sorted in ascending order:"", asc_arr)
print(""Sorted in descending order:"", dsc_arr)"
Create a Python script to generate all the combinations of a given list of integers.,"[1, 2, 3]","def generate_combinations(input_list):
    import itertools
    comb_list = []
    # Get all possible combinations of the list
    for subset in itertools.combinations(input_list,
                                       len(input_list)):
        comb_list.append(subset)
    return comb_list"
Write a Python program to edit an array of strings to filter out all the strings that do not contain the given substring.,"array = [""stack"", ""overflow"", ""coding"", ""challenge""]
substring = ""stack""","# Filtering out the strings that don't contain the substring
filtered_array = [s for s in array if substring in s]

print(filtered_array)"
Write a Python program to generate and print a random list of size n.,8,"import random

def generate_random_list(n):
    random_list = []
    for i in range(n):
        random_list.append(random.randint(0, 100))
    return random_list

n = 8
random_list = generate_random_list(n)
print(random_list)"
How can we create a function to check if a given string is a palindrome in Python?,No input,"def is_palindrome(s): 
    s = s.lower() 
    return s == s[::-1]"
"From a Python data type, generate a json string.","person = {
    ""name"": ""John Doe"",
    ""age"": 30,
    ""hobbies"":[""reading"", ""playing chess"", ""hiking""]
}","import json

json_str = json.dumps(person)"
Can you write a Python script that prints out the number of 'a's found in a text string?,"string = ""abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc""","text = ""abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc""

count = 0 
for char in text:
    if char == 'a':
        count += 1

print(count)"
Design an algorithm in Python to find a missing number from a given range of numbers.,"[2, 3, 4, 6, 7]","def find_missing_num(arr):
    n = len(arr)
    sum_of_num = (n + 1)*(arr[0] + arr[n-1])/2
    sum_of_arr = sum(arr)
    return sum_of_num - sum_of_arr"
Create a program in Python to calculate the length of a given string without using the len() method.,"string=""Python""","def length(string):
    count = 0
    for char in string:
        count += 1
    return count

string=""Python""

print(length(string))"
Optimize a given code in Python to run faster.,"def factorial(n):
    fact = 1
    while n > 0:
        fact *= n
        n -= 1
    return fact","def factorial(n):
    fact = 1
    while n > 1:
        fact *= n
        n -= 1
    return fact

# Eliminated unnecessary check for n > 0, as n will always be greater than 0 before the loop begins. This makes the function run faster."
Create a Python script to scrape the HTML of a given web page and extract all of its headings and paragraphs.,URL of a web page,"import requests
from bs4 import BeautifulSoup


url = 'url'
page = requests.get(url)
soup = BeautifulSoup(page.text, 'html.parser')

headings = soup.find_all(['h1', 'h2', 'h3', 'h4', 'h5', 'h6'])
for heading in headings:
 print(heading.text)

paragraphs = soup.find_all('p')
for paragraph in paragraphs:
 print(paragraph.text)"
Identify a code segment's language from a given snippet.,"if a > b:
    print(""a is bigger"")
else:
    print(""b is bigger"")",Python
Convert a Python dictionary to a JavaScript object.,A python dictionary containing two key-value pairs.,"const pythonDictionary = {
    'key1': 'value1',
    'key2': 'value2'
};
const jsObject = Object.fromEntries(
    Object.entries(pythonDictionary)
);
console.log(jsObject); // {key1: 'value1', key2: 'value2'}"
Create a function in Python to give the multiple of 6 of any given number.,Number = 5,"def multiple_of_6(number):
    return number * 6"
Create a Python program to extract the top 10 words from a text.,My name is John and I work as a software engineer.,"import re
from collections import Counter

def get_top_words(txt):
    words = re.findall(r'\w+', txt.lower())
    return Counter(words).most_common(10)

print(get_top_words('My name is John and I work as a software engineer.'))
# Output: [('i', 2), ('a', 1), ('as', 1), ('engineer', 1), ('john', 1), ('name', 1), ('software', 1), ('work', 1)]"
"Create a Python lambda expression that takes one argument, word, and converts all uppercase letters in the given word to lowercase.",Word: CHANGE,"change = lambda word: word.lower()

print(change(""CHANGE""))"
Compose a Python program that takes in a list of strings and returns a list with duplicate strings removed.,"[""Hello"", ""World"", ""Hello"", ""Goodbye"", ""Goodbye"", ""Welcome""]","def remove_duplicates(strs):
    new_strs = [] 
    for i in strs: 
        if i not in new_strs: 
            new_strs.append(i) 
    return new_strs
    
# Driver Code
strs = [""Hello"", ""World"", ""Hello"", ""Goodbye"", ""Goodbye"", ""Welcome""]
print(remove_duplicates(strs))"
Outpus the number of unique elements in a Python list.,"list = [1, 2, 2, 3, 4, 4, 4]","unique_elements = set(list)
print(""Number of unique elements:"", len(unique_elements))"
"Given a number of queues, each containing numbers, write python code to find and print out the numbers at the front of each queue.","queue1 = [5, 2, 9, 4]
queue2 = [7, 8, 3, 6]","def print_front_elements_from_queues(queue_list):
    for queue in queue_list:
        print(queue[0])

queue_list = [queue1, queue2]

print_front_elements_from_queues(queue_list) # This should print 5 and 7"
Write a Python function to convert a given floating point number to binary.,19.66,"def decimal_to_binary(f_num):
  b_str = """"
  int_num = int(f_num)
  f_num = f_num - int_num

  while int_num > 0:
    b_str = str(int_num % 2) + b_str
    int_num //= 2

  b_str = ""1."" + b_str

  while f_num > 0: 
    f_num *= 2
    int_num = int(f_num)
    if int_num == 1:
      b_str += ""1""
    else:
      b_str += ""0""
    f_num = f_num - int_num

  return b_str"
Design a Python script to generate a report containing summaries of the data in a table.,Table name: orders,"import pandas as pd 

# Load data from the orders table 
orders = pd.read_csv('orders.csv')

# Generate summary statistics for the orders table 
summary_stats = orders.describe()

# Generate a report containing summary statistics 
report = open('report.html', 'w') 
report.write(summary_stats.to_html()) 
report.close()"
Create a function to generate a random string of fixed length using Python.,length=8,"import random
import string

def generate_random_string(length):
    letters = string.ascii_lowercase
    result_str = ''.join(random.choice(letters) for i in range(length))
     
    return result_str

random_string = generate_random_string(8)
print(random_string) # Outputs 'yezrtsyz'"
Create an efficient algorithm in Python to convert a list of integers into a single integer representing the sum of the list elements.,"List of integers: [1, 3, 5, 8]","def list_sum(nums): 
 total = 0
 
 for num in nums:
   total += num
 
 return total

list_sum([1, 3, 5, 8]) # output: 17"
Develop a Python program to reverse an integer.,12345,"def reverse_int(num): 
    rev = 0
    while num > 0: 
        rev = (rev*10) + (num%10)
        num = num//10
    return rev 

#test
print(reverse_int(12345))"
Develop a python program for,Filter a given list of strings to only include strings that start with vowels.,"def filter_vowel_strings(string_list):
    vowels = ('a', 'e', 'i', 'o', 'u')
    filtered_list = []
    for string in string_list:
        if string.startswith(vowels):
            filtered_list.append(string)
    return filtered_list"
Create a function to calculate the Fibonacci sequence in Python,n = 10,"def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    # First Fibonacci number is 0 
    elif n==1: 
        return 0
    # Second Fibonacci number is 1 
    elif n==2: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2) 
  
# Driver Program 
print(Fibonacci(n))"
Create a Python program to check if a given list is sorted in ascending order.,"[7, 4, 8, 3, 10]","def is_sorted_ascending(numbers):
 for i in range(len(numbers) - 1):
 if numbers[i] > numbers[i+1]:
 return False
 return True"
Write Python code to retrieve a specific element from a 2D array.,"my_2d_array = [[1,2,3],[4,5,6],[7,8,9]]
row_to_retrieve = 2
column_to_retrieve = 0","my_2d_array = [[1,2,3],[4,5,6],[7,8,9]]
row_to_retrieve = 2
column_to_retrieve = 0

retrieved_element = my_2d_array[row_to_retrieve][column_to_retrieve]"
Write a Python program to take a list of integers and sort them in ascending order using insertion sort.,"[4, 3, 7, 2, 1]","def insertion_sort(arr):
 for index in range(1,len(arr)):
 key = arr[index]
 j = index-1
 while j >=0 and key < arr[j]:
 arr[j+1] = arr[j]
 j -= 1
 arr[j+1] = key

arr = [4, 3, 7, 2, 1]
insertion_sort(arr)
print(arr)

# Output: [1, 2, 3, 4, 7]"
Write a python script to get the filename from the given path,/Users/john/Documents/Github/myproject/myfile.py,"import os

def get_filename_from_path(path):
    return os.path.basename(path)

filename = get_filename_from_path('/Users/john/Documents/Github/myproject/myfile.py')
print(filename)"
Create an algorithm in Python that finds all subsets of a given set.,"S = {a, b, c, d}","def subsets(S):
	""Return all subsets of set S.""
	if len(S) == 0:
		return [[]]  # list of the empty set
	T = subsets(S[1:])  # recur on S[1:]
	return T + [s + [S[0]] for s in T]  # add S[0] to front of each set in T

# Sample use
S = ['a', 'b', 'c', 'd']
print(subsets(S))"
Update the following Python program to validate a phone number.,"import re

phone = ""404-999-9999""

pattern = r""^[0-9]{3}-[0-9]{3}-[0-9]{4}$""

result = re.match(pattern, phone)

if result:
 print(""Valid phone number"")
else:
 print(""Invalid phone number"")","import re

phone = ""404-999-9999""

pattern = r""^[0-9]{3}-[0-9]{3}-[0-9]{4}$""

result = re.match(pattern, phone)

if result and len(phone) == 12:
 print(""Valid phone number"")
else:
 print(""Invalid phone number"")"
Create a python script that takes an array of integers and returns an array of their squares.,"[1, 2, 3, 4, 5]","def find_squares(arr):
    squares = []
    
    for num in arr:
        squares.append(num ** 2)
        
    return squares

find_squares([1, 2, 3, 4, 5])"
Create a Python function that takes in an array of numbers and returns the maximum value in the array.,"[5, 8, 1, 7, 4]","def max_value(arr):
    return max(arr)"
Design a program that takes a complicated function and simplifies it in Python.,"def func (x):
    return 3*(x**2) + 5*x - 4","def simplified_func (x):
    return 3*x**2 + 5*x - 4"
Create a program in Python which will take in a sentence and print out each word in reverse.,'This sentence will be reversed',"string = 'This sentence will be reversed'

words = string.split()

for word in words:
	print(word[::-1], end="" "")

# Output: sihT ecnetnes lliw eb desrever"
Optimize an existing Python script by improving its runtime performance.,"import time

start = time.time()

def foo(): 
 for _ in range(1000): 
  print('Hello World')

foo()

end = time.time()

print('Time Taken:', end - start)","import time 

start = time.time()

def foo(): 
 for i in range(1000): 
  print('Hello World', i)

foo()

end = time.time()

print('Time Taken:', end - start)"
Write a commmand-line script that sums all numbers from 0 to N where N is provided as input.,N = 10,"# python code
import sys

input_val = int(sys.argv[1])
sum = 0

for i in range(input_val + 1):
    sum += i
    
print(""Sum from 0 to {} is = {}"".format(input_val, sum))"
Write a python program to create a connection to a given database.,"Database Name: test
Username: admin
Password: admin123","import pymysql

# Create connection to database
conn = pymysql.connect(host=""localhost"",
                       user=""admin"",
                       passwd=""admin123"",
                       db=""test"")

# Create a cursor and execute a query
cur = conn.cursor()"
Create a Python program to ask a user for the number of students in the class and generate an array of empty strings of that length.,Number of students: 10,"students = [""""] * 10"
Write a function in Python that takes an unordered list of integers as a parameter and will return a sorted list.,"Unordered list = [8, 20, 5, 1]","def sortList(list):
 sorted_list = sorted(list)
 return sorted_list"
Develop a Python program to grade a student's performance on a multiple choice test.,"[5, 10, 15]","def grade_test(scores):
    total = 0
    for score in scores:
        total += score

    if total >= 40:
        return ""Pass""
    else:
        return ""Fail""

scores = [5, 10, 15]
grade = grade_test(scores)
print(""Grade: "" + grade)"
Rewrite the following Java Program using Python.,"public class Greeting {
    public static void main(String[] args){
        System.out.println(""Hello World!"");
    }
}","print(""Hello World!"")"
Code a program in Python to convert a text into its corresponding binary representation.,Text: Hello World!,"def bin_from_text(text):
    bin_text = """"
    for char in text:
        bin_text += bin(ord(char)).lstrip(""0b"") + "" ""
    return bin_text"
Generate a Python program to remove all occurrences of the character 'x' from a list,No Input,"def remove_x(lst):
    """"""
    Function to remove all occurrences of a character 'x' from a list.

    Args:
        lst (list): The list to process.

    Returns:
        A list with all occurrences of the character 'x' removed.
    """"""
    
    return [item for item in lst if item != 'x']"
Write a function in Python to count how many words are in the given string.,"""Do not stand at my grave and weep""","def count_words(string):
    words = string.split(' ')
    return len(words)

sentence = ""Do not stand at my grave and weep""
count = count_words(sentence)
print(""The given string has {} words."".format(count))"
Write code to generate a set of random numbers between 0 and 10 in Python.,Number of values in the set: 5,"import random

values = random.sample(range(11), 5)
print(values) // [5, 9, 3, 4, 1]"
Identify and fix the bug in the following Python code.,"def remove_duplicates(ls):
    result = []
    for e in ls:
        if e not in result:
            result.append(e)
    return result","def remove_duplicates(ls):
    result = []
    for e in ls:
        if e not in result:
            result.append(e)
    return list(set(result))"
Generate a Python program to reverse the digits of a given number.,9786,"def reverse_number(num):
    rev = 0
    while num > 0:
        reminder = num%10
        rev = (rev*10)+reminder
        num = num//10
    return rev"
Create a Python function to calculate the standard deviation of a set of numbers.,"[1, 2, 3, 4, 5]","def calculate_std(numbers):
  mean = sum(numbers)/len(numbers)
  squared_differences = [(num-mean)**2 for num in numbers]
  variance = sum(squared_differences) / len(numbers)
  return variance**0.5

result = calculate_std([1, 2, 3, 4, 5])
print(result)"
"Create a program in Python that prints ""Greetings"" for any name that is passed as an argument.",Andrew,"import sys

name = sys.argv[1]

print(""Greetings, ""+name+""!"")"
Create a Python script to remove redundant characters in a given string.,"text = ""teeestttingggg""","def remove_redundant(text):
    """"""Remove redundant characters from a given string""""""
    result = """"

    # Iterate over the string
    for c in text:
        # Add the character to the result if it is not already present
        if c not in result:
            result+=c

    return result

# Output
print(remove_redundant(text))"
Can you make a Python program to print out the Fibonacci sequence up to the nth element of the sequence?,8,"def Fibonacci(n):
  a = 0
  b = 1
  if n < 0:
    print(""Incorrect input"")
  elif n == 0:
    return 0
  elif n == 1:
    return 1
  else:
    for i in range(2,n):
      c = a + b
      a = b
      b = c
    return b

print(Fibonacci(8)) # Output: 13"
"Generate a Python function that takes a string as input and returns True if the string contains a capital letter, otherwise False.",MyString,"def has_capital_letter(input_string):
    for character in input_string:
        if character.isupper():
            return True
    return False"
Suggest a completion for the following python code to get the maximum unique elements in an array.,def maximum_unique_elements(arr):,"def maximum_unique_elements(arr):
    curr_max = 0
    seen = set()
    for num in arr:
        if num not in seen:
            curr_max += 1
            seen.add(num)

    return curr_max"
Write a Python program to calculate the total sum of a given list of numbers,"[1,2,3,4,5]","""""""
Calculate the total sum of a given list of numbers using Python
""""""

# Function to calculate the total sum of a given list of numbers
def get_total_sum(num_list):
    total = 0
    
    for num in num_list:
        total += num

    return total

if __name__ == '__main__':
    num_list = [1,2,3,4,5]
    total_sum = get_total_sum(num_list)
    print(total_sum)"
Write a Python program to check if the given matris is a symmetric matrix.,"A = [[1,2,3],
    [-2,0,4],
    [3,-4,5]]","def is_symmetric(a):
    n = len(a)
    for i in range(n):
        for j in range(n):
            if a[i][j] != a[j][i]:
                return False
    return True

A = [[1,2,3],
    [-2,0,4],
    [3,-4,5]]
print(is_symmetric(A))"
Write a python program to convert a given string in valid json format,"str = '{""key1"": ""value1"", ""key2"": ""value2""}'","import json

def str_to_json(json_string):
    # convert the string to dictionary
    json_dict = json.loads(json_string) 
    # convert the dictionary to json
    json_data = json.dumps(json_dict) 
    # return json
    return json_data"
Develop an algorithm in Python for finding the maximum index of an array's sub-array.,"arr = [2, 3, 4, 5, 7, 9, 11]","def findMaxIndex(arr):
    """"""This function finds the maximum index of an array's sub-array.""""""
    maxIndex = 0
    currentMax = 0
    for i in range(1, len(arr)):
        if arr[i] > arr[currentMax]:
            maxIndex = i
            currentMax = i
    return maxIndex

arr = [2, 3, 4, 5, 7, 9, 11]
maxIndex = findMaxIndex(arr)
print(maxIndex) # Output: 5"
Develop a python program to convert the given text into a list,"Text: Apples, oranges, and bananas","text = ""Apples, oranges, and bananas""

list_from_text = text.split("", "")

print(""List:"", list_from_text)"
What is the purpose of the method in line 4 of the code?,"def random_number_generator(min, max):
  """"""Return a random number between the given range.""""""
  rng = random.range(min, max)
  return rng","The purpose of the method in line 4 is to generate a random number within the given range of min and max. It uses the Python's random.range() method which returns a random integer from the range of min to max, inclusive."
Write a Python program to efficiently delete all items from a set that are in another set.,"A = {1, 2, 3, 4, 5}
B = {2, 4}","A = {1, 2, 3, 4, 5}
B = {2, 4}

A -= B"
Develop a Python code to give an alert message of the total cost of an item after adding tax.,"cost = 5
tax rate = 0.2","tax_rate = 0.2
cost = 5

total_cost = cost + (cost * tax_rate)

print(""The total cost of the item after adding tax is $"" + str(total_cost))

alert(""The total cost of the item after adding tax is $"" + str(total_cost))"
Write a Python script to download the html content of a given webpage,https://www.example.com/,"import requests

url = 'https://www.example.com/'
resp = requests.get(url)
html = resp.content"
Create a Python function that takes in an array of integers and returns the maximum value.,"[2,3,5,1]","def max_value(int_arr):
    max_val = int_arr[0]
    for i in int_arr:
        if i > max_val:
            max_val = i
    return max_val"
Create a basic Python application to return the similarity between two strings using fuzzywuzzy.,"The two strings are: ""Apple"" and ""Apples"".","# Import the necessary modules
import fuzzywuzzy 
from fuzzywuzzy import process

# The two strings to compare 
str1 = 'Apple'
str2 = 'Apples'

# Compare the two strings
score = fuzzywuzzy.fuzz.ratio(str1, str2)

# Print the similarity score
print(score)

# Output 
100"
Generate a function in Python that takes a number as input and prints its corresponding binary representation.,5,"def binary_representation(num):
    binary_representation = bin(num)[2:] 
    print(""Binary representation of "" + str(num) + "" is: "" + binary_representation)

# Driver code
binary_representation(5) # Binary representation of 5 is: 101"
"using the following Json as an example, write a Python program that reads this Json into an object.","{
   ""id"":1,
   ""name"":""Testing"",
   ""description"":""This is a test""
}","import json

# example data
data = '{""id"":1,""name"":""Testing"",""description"":""This is a test""}'

# parse data into a Python object
obj = json.loads(data)

print(obj)"
Write a function in Python that prints all the prime numbers between two given numbers inclusive.,"Start: 15
End: 25","def printPrimeNumbers(start, end):
 for num in range(start, end+1):
 # base case
 if num > 1: 
 for i in range(2, num): 
 if (num % i) == 0: 
 break
 else: 
 print(num) 

# Driver Code 
start = 15
end = 25

printPrimeNumbers(start, end) 

# Output:
# 17 
# 19 
# 23 
# 25"
Create a Python program to remove all duplicate elements from a list and preserving the original order.,"[1, 3, 3, 5, 5, 7]","# Program to remove duplicate elements

def remove_duplicates(nums):
 new_list = []
 for num in nums:
 if num not in new_list:
 new_list.append(num)
 
return new_list

# Main program
nums = [1, 3, 3, 5, 5, 7]
dedup_nums = remove_duplicates(nums)
print(dedup_nums) # [1, 3, 5, 7]"
Develop a function in python to delete all the vowels in a string.,"string = ""B e a u t iful""","def remove_vowels(string):
    vowels = 'aeiou'
    new_string = ''

    for c in string:
        if c.lower() not in vowels:
            new_string += c
    
    return new_string

if __name__ == '__main__':
    string = ""Beau tiful""
    print(remove_vowels(string))"
Construct a program to filter out empty strings from a given list.,"[""Hello"", """", ""Python"", ""World"", """"]","def remove_empty_strings(lst):
    filtered_list = []
    for item in lst:
        if item != """":
            filtered_list.append(item)
    return filtered_list

filtered_list = remove_empty_strings([""Hello"", """", ""Python"", ""World"", """"])
print(filtered_list)"
Create a python program to check the following string for palindrome,"""madam""","def check_palindrome(string):
  rev_str = string[::-1]
  if rev_str == string:
    return ""The string is a palindrome""
  return ""The string is not a palindrome""

print(check_palindrome(""madam""))"
Write a code snippet in Python which takes an array and returns the list of its square root values.,"[2, 4, 9]","[math.sqrt(x) for x in [2, 4, 9]]"
Modify the following Python program to calculate the factorial of a given number.,n=5,"def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n-1)

num = 5
print(f""The factorial of {num} is {factorial(num)}"")"
Create a Python script to randomly generate a character from a given list of characters.,"['A', 'B', 'C', 'D']","import random

char_list = ['A', 'B', 'C', 'D']
random_char = random.choice(char_list)
print(random_char)"
"Using any programming language of your choice, write a calculator program that takes in two integers and returns the result of the addition operation.","7, 9","// Java
public int Add(int a, int b) {
  return a + b;
}

// Python
def add(a, b):
  return a + b"
Generate a Python function to classify the given list of numbers into two subgroups (positives and negatives).,"list = [4, 5, -2, -7, 5]","def classify_numbers(list):
    '''This function will classify the list of numbers into positives and negatives'''

    positives = []
    negatives = []

    for n in list:
        if n >= 0:
            positives.append(n)
        else:
            negatives.append(n)

    return positives, negatives"
"Write an Python script to extract the year, month and day from a given date in the format ""dd/mm/yyyy"".","""27/09/2017""","import datetime

date_string = ""27/09/2017""

date_object = datetime.datetime.strptime(date_string, ""%d/%m/%Y"")

print(""Year:"", date_object.year)
print(""Month:"", date_object.month)
print(""Day:"", date_object.day)"
Generate a Python script to sort a 2D array of integers by the second column.,"[[1, 10], [5, 5], [4, 8]]","def sort_2d_arr(arr):
    arr.sort(key = lambda x : x[1])
    return arr

print(sort_2d_arr([[1, 10], [5, 5], [4, 8]]))

# Output
[[5, 5], [4, 8], [1, 10]]"
Create a function in Python that takes a list of strings and checks if any of the strings are palindromes.,"[""civic"", ""apple"", ""racecar""]","def check_palindrome(string_list):
    for string in string_list:
        if string == string[::-1]:
            return True
    return False

result = check_palindrome([""civic"", ""apple"", ""racecar""])
print(result)"
Concatenate two strings using Python,"string1 = ""Hello""
string2 = ""World""","string1 + string2

result = string1 + string2
print(result)"
Rewrite the following code snippet to use the generator in Python.,"def squares_up_to_n(n):
    results = []
    for i in range(n):
        results.append(i**2)
    return results","def squares_up_to_n(n):
  for i in range(n):
    yield i**2"
Develop a Python program to search an element in a list using linear search.,"[25, 10, 5, 2, 50], 50","def linear_search(list, element):
    for i in range(len(list)):
        if list[i] == element:
            return i
    return -1

index = linear_search([25, 10, 5, 2, 50], 50)
if index < 0:
    print(f""{element} not found in the list"")
else:
    print(f""{element} found at index {index}"")"
Create a function in Python to generate a random username using a list of provided names.,"names = [""John"", ""Alice"", ""Bob""]","import random

def generate_username(names):
    username = random.choice(names)
    username += str(random.randint(0, 100))
    return username

# Generate a random username
username = generate_username(names)
print(username)

# Output
Alice54"
Create a Python dictionary that stores the number of occurrences of each character in a string.,"s = ""Hello World!""","def countCharacters(s):
  # Create empty dictionary 
  chars_dict = {}
  
  # Iterate over each character in the string
  for char in s:
    # If the character is not in the dictionary, set the value to 1
    if char not in chars_dict:
      chars_dict[char] = 1
    # Otherwise, increment the value
    else:
      chars_dict[char] += 1
  
  return chars_dict"
"Create a Python program to calculate the total cost of an item given its price, number of pieces, and tax rate.","Tax rate: 0.1
Price: 10
Pieces: 4","def calc_cost(price, pieces, tax_rate):
    cost = price * pieces
    cost += cost * tax_rate
    return cost

price = 10
pieces = 4
tax_rate = 0.1

total_cost = calc_cost(price, pieces, tax_rate)
print('Total cost:', total_cost)"
Create a Python program to remove all characters from a given string except for letters and whitespaces,Hello $% World,"def remove_non_letter_characters(s): 
    return """".join(e for e in s if e.isalpha() or e == "" "") 
      
s = 'Hello $% World'
print(remove_non_letter_characters(s))"
Write a command line script to calculate the total number of people who attended a concert.,"Table: attendance

| name | age | arrival_time |
|------|-----|--------------|
| Jack | 20  | 9:00         |
| Jane | 21  | 8:45         |","#!/usr/bin/env python

import csv

total_attendees = 0
with open('attendance.csv', 'r') as csv_file:
    csv_reader = csv.reader(csv_file)
    for row in csv_reader:
        total_attendees += 1

print(f'Total Attendees: {total_attendees}')"
"Create a program in Python that takes two parameters, a string and an integer, and returns the string repeated that many times.","""Hello"", 4","def repeat_string(string, n):
    repeated_string = string * n
    return repeated_string

print(repeat_string(""Hello"", 4))"
Edit this code snippet in Python to remove any errors and improve readability.,"def remove_arr(arr):
result =[];
for a in arr:
  if a != 'b'
    result.append(a)
return result","def remove_arr(arr):
    result = []
    for a in arr:
        if a != 'b':
            result.append(a)
    return result"
Can you make the following string lowercase using Python?,"""This is a TEST string!""","""""""
Make the given string lowercase using Python
""""""

test_string = ""This is a TEST string!""

lowercase_string = test_string.lower()

print(lowercase_string) # prints ""this is a test string!"""
"Write a function in Python that takes two parameters, an integer and a list of strings, and returns a modified list of strings.","int: 2 
list: [""Hello"", ""World""]","def modified_list(num, lst):
    modified_list = []
    for item in lst:
        modified_list.append(str(num) + item)
    return modified_list
    
print(modified_list(2, [""Hello"", ""World""]))
# Output: [""2Hello"", ""2World""]"
Write a Python program to generate a dataframe from a given JSON response.,"{""name"": ""John"", ""age"": 30, ""job"": ""Engineer"", ""salary"": 5000}","import pandas as pd

json_data = {""name"": ""John"", ""age"": 30, ""job"": ""Engineer"", ""salary"": 5000}

# Convert the data into a dataframe
df = pd.DataFrame(json_data, index=[0])

print(df)"
Generate a python program that takes a list of names and prints the longest name.,"[""John"", ""Mark"", ""Kelly"", ""Cindy"", ""Dylan""]","def get_longest_name(names):
    longest_name = """"
    max_length = 0

    for name in names:
        if len(name) > max_length:
            longest_name = name
            max_length = len(name)

    return longest_name

longest_name = get_longest_name([""John"", ""Mark"", ""Kelly"", ""Cindy"", ""Dylan""]) 
print(longest_name)"
Write a Python code to create a dictionary which contains a data structrue in the form of [x:x^2] where x is the key and x^2 is the value.,"numbers = [1, 2, 3, 4, 5]","numbers = [1, 2, 3, 4, 5] 

dict_numbers = {num: num**2 for num in numbers}
print(dict_numbers)"
Create a script to join two given strings if they have compatible characters.,"string1 = ""Python""
string2 = ""programming""",joined_string = 'Programmingpython'
"In Python, write a function that takes a string as input and reverses it.","""Hello World!""","def reverseString(text):
    return text[::-1]
 
result = reverseString(""Hello World!"")
print(result)"
Generate a correct python program to identify a particular character in a string.,Search for the letter 'e' in the given string,"def char_in_string(char, string):
    for c in string:
        if c == char:
            return True
    return False"
Write a Python program that inputs two numbers and prints out their GCD (greatest common divisor).,"Two numbers: 90, 28","a = 90
b = 28

while(b > 0):
  temp = b 
  b = a % b
  a = temp 

print (""The GCD is"",a)"
Write a Python program to search for a given string in a list of strings and return the index of the first occurrence of that string.,"List of strings: [""Hello"", ""World"", ""Hello"", ""World""]
Search String: ""World""","def search_string(lst, s):
 for i, item in enumerate(lst):
 if item == s:
 return i
 return -1"
Write a function in Python that takes in a string and then reverses each word in the string.,"string = ""This is a string""","def reverse_words(s):
  words = s.split()
  reversed_words = [word[::-1] for word in words]
  return ' '.join(reversed_words)

string = ""This is a string""
print(reverse_words(string))
// Output: sihT si a gnirts"
Create a function in Python to determine whether a given string contains any whitespace character.,"""Hello World""","def hasWhitespace(string):
 for c in string:
  if c.isspace():
   return True
 return False

print(hasWhitespace(""Hello World""))"
Generate a function in Python that finds the max element in a given list.,"[2, 78, 34, 55]","def maxElement(arr):
    return max(arr)

array = [2, 78, 34, 55]

print(maxElement(array)) # 78"
Write a Python program to add two numbers given in string format.,"first number: ""2""
second number: ""3""","def addStringNumbers(num1,num2): 
    return int(num1) + int(num2)"
Create an optimizer tool in Python to find the maximum of a given set of inputs.,"[5, 10, 15, 20]","def max_optimizer(input_list):
    maximum = max(input_list)
    return maximum"
Write a Python function to convert all strings in a list to lower case.,"list = ['Hello', 'FRIENDS', 'WorLd']","def to_lower(arr): 
    return [item.lower() for item in arr] 

result = to_lower(list) 
print(result) 

# output 
['hello', 'friends', 'world']"
Create a Python program to compare two strings and return the percentage of characters that match.,"""stackoverflow"", ""stackerflow""","def compare_strings( string1, string2 ):
    s1, s2 = set(string1), set(string2)
    intersection = s1.intersection(s2)

    return (len(intersection) * 100) / len(s1)"
Write a basic web scraper in Python using the BeautifulSoup library. The scraper should take as input a URL and output the text on the page.,Input URL: https://en.wikipedia.org/wiki/Web_scraping,"import requests
from bs4 import BeautifulSoup

url = ""https://en.wikipedia.org/wiki/Web_scraping"" 
response = requests.get(url)
soup = BeautifulSoup(response.text, 'html.parser')

text = soup.find_all('p')
for t in text:
    print(t.text)"
"Given a list, convert it to a dictionary using Python.","list_1 = [1, 2, 3, 4]","list_1_dict =dict() 
for i in range(len(list_1)): 
    list_1_dict[i] = list_1[i] 
print(list_1_dict)"
Generate a Python program to calculate the maximum possible sum of a sub-array in an array of integers.,"A list of integers [-2, 4, -1, 5, 6]","def max_subarray_sum(arr):
    current_sum = 0
    max_sum = 0

    for x in arr:
        current_sum += x
        if current_sum < 0:
            current_sum = 0
        if current_sum > max_sum:
            max_sum = current_sum
    return max_sum

result = max_subarray_sum([-2, 4, -1, 5, 6])
print(result)"
Add a function to a python program that returns the maximum value in a list of integers.,"arr = [3, 6, 4, 7, 15, 10]","def max_val(arr):
    max_val = 0
    for num in arr:
        if num > max_val:
            max_val = num
    return max_val"
Create code in Python to check the right-hand side of a list and remove any elements which are divisible by 3.,"arr = [12, 15, 3, 8, 10, 24]","arr = [12, 15, 8, 10]
arr[:] = [x for x in arr if x % 3 != 0]"
Create a Python program to take an array of integers and calculate the sum of squares of all numbers provided in the array.,"[2, 3, 4]","def sum_squares(arr):
    total = 0
    for num in arr:
        total += num ** 2
    return total

arr = [2, 3, 4]

total = sum_squares(arr)
print(total) # 29"
Create a function to remove duplicates from an array with Python.,"arr = [1,2,2,3,4,4,5]","def remove_duplicates(arr): 
    result = [] 
    seen = set() 
   
    for item in arr: 
        if item not in seen: 
            seen.add(item) 
            result.append(item) 
    return result"
Implement a function in Python that takes a list of integers and a number and returns a list of numbers that have the given number as their sum.,"lst = [1, 2, 3, 4]
num = 4","def find_combos(lst, num):
 result = []
 for i in range(len(lst)):
 for j in range(i+1, len(lst)):
 if lst[i] + lst[j] == num:
 result.append([lst[i], lst[j]])
 return result

print(find_combos([1, 2, 3, 4], 4))

# Output: [[1, 3], [2, 2], [3, 1]]"
Generate a Python program to solve cube root of the input number.,25,"def cube_root(x):
    res = 0
    while (res*res*res < abs(x)):
        res += 1
  
    if (res*res*res != abs(x)):
        print(""Not a perfect cube"")
    else:
        if (x < 0):
            res = -res
        print(""Cube root of "" + str(x) + "" is "" + str(res))

cube_root(25)"
Generate a function in Python to populate a dictionary data-structure with a list of numerical values.,"[1, 2, 3, 4, 5]","def populateDict(lst):
    my_dict = {}
    for i in lst:
        my_dict[i] = i
    return my_dict

my_numbers = [1, 2, 3, 4, 5]
my_dict = populateDict(my_numbers)
print(my_dict)"
Create a program in Python that takes in a list of strings and returns the longest common substring between all the strings.,"[""hello"", ""hi"", ""hell""]","def longest_common_substring(strs):
 substr = strs[0]
 for s in strs[1:]:
 i = 0
 while i < min(len(substr), len(s)) and substr[i] == s[i]:
 i += 1
 substr = substr[:i]
 
 return substr

print(longest_common_substring([""hello"", ""hi"", ""hell""])) # Prints ""hell"""
Debug a Python function that swaps the values of two variables.,"def swap(x, y):
 temp = x
 x = y
 y = temp

a = 10
b = 20

swap(a, b)","def swap(x, y):
 temp = x
 x = y
 y = temp

a = 10
b = 20

swap(a, b)

#Verify the result
if a == 20 and b == 10:
 print(""Swap successful"")
else:
 print(""Swap unsuccessful"") # Output: Swap successful"
Write a Python program to remove all whitespace from a string.,The quick brown fox jumps over the lazy dog,"text_without_whitespace = """".join(text.split())"
Write a function in Python that takes in two strings of the same length and returns the number of different characters in the two strings.,"str1 = ""data""
str2 = ""muta""","def diff_char(str1, str2):
 count = 0
 for i in range(len(str1)):
 if str1[i] != str2[i]:
 count += 1
 return count"
Write a Python program to create a list of odd numbers between x and y.,"x = 3, y = 10","# Generate a list of odd numbers between x and y
def odd_numbers(x, y):
  # Initialize an empty list 
  odd_list = [] 
  
  # Loop through the range
  for i in range(x, y): 
    # If the number is odd
    if (i % 2 != 0): 
      odd_list.append(i)
  
  return odd_list 
  
x = 3
y = 10

# Get the list of odd numbers
odd_list = odd_numbers(x, y)

# Print the list
print(odd_list)"
Write a Python script to find out the sum of all the divisors of a given number.,16,"def divisor_sum(n):
    sum = 0
    for i in range(1, n+1):
        if n % i == 0:
            sum += i
    return sum

n = 16
result = divisor_sum(n)
print(result)"
Generate a Python program to search for a particular string in a given dictionary?,"dict = {'a': 'apple', 'b': 'ball', 'c': 'cat'}","def search_string(dict, keyword):
    # iterate through the dictionary
    for key, value in dict.items():
        # check if the keyword is present in the value of the dictionary
        if keyword in value:
            return key
    # if keyword not found in dictionary
    return ""Not found"""
Create a Python program to calculate the sum of all digits of a number,number = 2345,"def sum_digits(number):
    total = 0
    while number > 0:
        total += number % 10
        number //= 10
    return total

print(""Sum of digits:"",sum_digits(2345))"
Write a python program which will show the number of even numbers in a list.,"[1, 2, 3, 4, 5, 6]","def count_even_numbers(list):
    count = 0
    for num in list:
        if num % 2 == 0:
            count += 1
    return count"
Suggest a way to make this Python function more efficient:,"def divide(nums):
    result = []
    for num in nums:
        if num % 2 == 0:
            result.append(num)
    return result","def divide(nums):
    return [num for num in nums if num % 2 == 0]"
Create a function in Python which takes in two strings and concatenates them into one.,"""Hello,"" and ""World!""","def concat_string(str1, str2):
    return str1 + str2"
Generate a python program to calculate the number of elements in a set.,"{1, 2, 3, 4, 5}","# calculate the number of elements in a set

my_set = {1, 2, 3, 4, 5}
num_elements = len(my_set)

print(""Number of elements in the set:"", num_elements)"
Write a Python code for sorting a list of integers in ascending order.,"[5,2,7,3,1]","list=[5,2,7,3,1]
list.sort()
print(list)"
"Create a Python function to classify a given string as a Positive, Negative, or Neutral sentiment.","""This is an amazing service.""","def classify_sentiment(string):
 if 'positive' in string:
  return 'Positive' 
 elif 'negative' in string:
  return 'Negative' 
 elif 'neutral' in string:
  return 'Neutral'
 else:
  return 'Unknown'

sentiment = classify_sentiment(""This is an amazing service."")
print(sentiment) # Positive"
"Develop a Python program that takes an array of strings, and returns an object that contains the frequency of each string in the array.","[‘a’, ‘a’, ‘b’, ‘a’, ‘c’, ‘a’]","def count_frequency(arr):
    freq_dict = {}
    for ele in arr: 
        if ele in freq_dict: 
            freq_dict[ele] += 1
        else: 
            freq_dict[ele] = 1
    return freq_dict

arr = ['a', 'a', 'b', 'a', 'c', 'a']
result = count_frequency(arr)

print(result) # Output: {'a': 4, 'b': 1, 'c': 1}"
"Create a Python script to normalize numerical data. The script should take a list of numbers as an input, and returns a normalized list of numbers.","[1, -2, 7, 5, 2]","import numpy as np

def normalize(data):
 return np.divide(data, np.linalg.norm(data))

data = [1, -2, 7, 5, 2]
print(normalize(data))

# Output
[ 0.1245256  -0.2490512  0.8736233  0.6207616  0.2490512]"
Create a program in Python to multiply all numbers in a list by a given number and return the result as a new list.,"multiply [2, 4, 6] by 2","def multiplyListByNumber(list, number):
  return [element*number for element in list]"
Design a program using the Python language to calculate the average cost of a given list of items.,"[2.15, 3.35, 6.25, 8.25]","def calculate_average(items):
 sum = 0
 for item in items:
  sum += item
 
 return sum / len(items)

items = [2.15, 3.35, 6.25, 8.25]

average = calculate_average(items)

print(""Average cost: $"" + str(round(average, 2)))"
Write a Python program to print out the Fibonacci series up to n numbers where n is a user input.,User input n = 10,"# Python Program to print the Fibonacci series up to n numbers

n = int(input(""Enter the value of 'n': ""))

# first two numbers
a = 0
b = 1

print(""Fibonacci Series:"") 
print(a, b, end="" "") 
  
for i in range(2,n):
               
    c = a + b
    a = b
    b = c
    print(c, end = "" "")
    
print()"
Write a python program to parse a JSON array of objects.,"[""name"":""Bob"",""age"":30,""city"":""New York""],[""name"":""Alice"",""age"":27,""city"":""San Francisco""]","import json
arr = json.loads('[{""name"":""Bob"",""age"":30,""city"":""New York""}, {""name"":""Alice"",""age"":27,""city"":""San Francisco""}]')
for obj in arr:
    print(""Name:"", obj[""name""])
    print(""Age:"", obj[""age""])
    print(""City:"", obj[""city""])
    print()"
Write a Python program to convert a given integer to binary representation.,30,"def int_to_bin(int_num):
 bin_str = bin(int_num)
 return bin_str[2:]

int_num = 30
bin_num = int_to_bin(int_num)
print(bin_num) # 11110"
Create an algorithm in Python that takes a list of strings and returns a list of strings with the duplicates removed.,"[""apple"", ""banana"", ""apple"", ""orange""]","def remove_duplicates(list_of_strings):
  unique_strings = set(list_of_strings)
  return list(unique_strings)"
What is the smallest possible code in Python to read the value of an item in a given dictionary?,"{""key"": ""value""}","dictionary = {""key"": ""value""}
value = dictionary[""key""]"
Create a class in Python that takes two arguments a 'name' and 'age' and returns a greeting.,-,"class Greeting:
    def __init__(self, name, age):
        self.name = name
        self.age = age
    
    def get_greeting(self):
        return f""Hello, my name is {self.name} and I am {self.age} years old."""
Design a Python program that takes two integers as input and finds the greatest common divisor of them.,"12, 18","def find_gcd(a, b):
    if a == 0:
        return b
    if b == 0:
        return a

    if a > b:
        a, b = b, a
    
    while a != 0:
        b, a = a, b%a
        
    return b

print(find_gcd(12, 18))"
Write a Python program to edit the given JSON string using the given selection criteria.,"JSON String: { “name”: “Alice”, “role”: “programmer”, “department”: “engineering” }
Selection Criteria: Change the department of the given JSON string.","import json

json_str = '{ ""name"": ""Alice"", ""role"": ""programmer"", ""department"": ""engineering"" }'

data = json.loads(json_str)

data[""department""] = ""marketing""

json_str = json.dumps(data)

print(json_str)"
Design a python program to replace every occurrence of a word in a string with another word.,"string = ""Hello hello world!""
word = ""hello""
replacement_word = ""welcome""","def replace_word(string, word, replacement_word):
    return string.replace(word, replacement_word)

print(replace_word(""Hello hello world!"", ""hello"", ""welcome""))"
"Write a Python program to create a new string from a given string, where the first and last chars have been exchanged.",Hello,"def exchange_first_last(str1):
  str2 = """" 
  str2 = str1[-1] + str1[1:-1] + str1[0]
  return str2

print(exchange_first_last('Hello'))"
Generate a code to generate the Fibonacci sequence until the nth number using the Python programming language,5,"def fibonacci(n):
  if n < 0: 
    raise ValueError(""Invalid input"")
  elif n == 0:
    return 0 
  elif n == 1: 
    return 1
  else: 
    return fibonacci(n-1) + fibonacci(n-2)
  
fibonacci_sequence = [fibonacci(i) for i in range(5)]
print(fibonacci_sequence)"
Write a Python code that gives the output of all possible combinations of given elements.,"[1, 2, 3]","from itertools import combinations

input_list = [1, 2, 3]
result = list(combinations(input_list, 3))

for combination in result:
    print(combination)"
Write a Python script to implement a linear search algorithm.,"Data: [5, 4, 2, 8, 7]
Key: 7","def linear_search(data, key):
    for i in range(len(data)):
        if data[i] == key:
            return i
    return -1

data = [5, 4, 2, 8, 7]
key = 7

result = linear_search(data, key)

if result != -1:
    print(""Element found at "" + str(result))
else:
    print(""Element not found"")"
Create an optimization problem in Python to optimize the function.,"The given function is f(x, y) = x + y^2, where x and y are real numbers.","import numpy as np
from scipy.optimize import minimize
def f(x):
    x, y = x
    return x + y**2

x0 = np.array([0,0])
res = minimize(f, x0, method='nelder-mead')
print(res.x)"
Edit this Python function to return the result with two decimal points.,"def area_of_circle(radius):
    return 3.14 * radius * radius","def area_of_circle(radius):
    return round(3.14 * radius * radius, 2)"
Design a loop in a Python program to print the Fibonacci series up to the nth term.,n=10,"def fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b 
print(fibonacci(n))"
"Write a PostgreSQL query that returns the title and author of all blog posts with the keyword ""Python"".","title (varchar), content (text), author (varchar)","SELECT title, author
FROM BlogPost
WHERE content LIKE '%Python%';"
Create a Python package that contains a collection of functions for finding the average value of an array.,"[1,2,3,4,5]","def average(array):
 '''
 Finds the average of all numbers in an array

 Args:
 array (list): List of numbers

 Returns:
 float: The average of all values in the array
 '''

 total = 0
 for value in array:
 total += value

 return total / len(array)"
Write a Python program to replace all the vowels in the given string with '_'.,String: Python is a very interesting language,"def replace_vowels(string):
    vowels = [""a"", ""e"", ""i"", ""o"", ""u""]
    res = []
    for letter in string.lower():
        if letter in vowels:
            res.append('_')
        else:
            res.append(letter)
    return ''.join(res)"
Design a function in Python to find the most repeated character in a string.,"my_string=""Hello world""","def most_repeated_character(my_string):
    counts = Counter(my_string)
    max_char = max(counts, key=counts.get)
    return max_char

print(""Most repeated character:"", most_repeated_character(my_string))"
"Given a list of strings, write a Python program to sort the strings according to the length of each string.","strings = ['abc', 'def', 'ghi', 'jkl', 'mno']","def sort_strings_by_length(strings):
  return sorted(strings, key=len)"
Optimize the following Python code to remove unnecessary operations or code.,"def count(list_data):
    total = 0
    for i in list_data:
        total += i
    return total","def count(list_data):
    return sum(list_data)"
Create a Python script that takes an array with n elements and shuffles it.,n = 10,"import random

def shuffle(lst):
    random.shuffle(lst)
    return lst

arr = [i for i in range(10)]
print(shuffle(arr))"
Generate a piece of Python code to print the reversed version of a list.,"[1, 2, 3]","print(list(reversed([1, 2, 3])))"
Write a Python program to return a list that contains all the elements of a given list except the given element x.,"[3, 5, 9, 8], x = 5","def removeElement(list, x):
    new_list = []
    for item in list:
        if item != x:
            new_list.append(item)
    return new_list"
Write a Python function to sort a list of dictionaries according to a certain key.,"[{'a': 5, 'b': 3}, {'a': 4, 'b': 1}, {'a': 2, 'b': 8}]","def sort_dict_list(dict_list, sort_key):
  return sorted(dict_list, key=lambda k: k[sort_key])"
Create a Python program to remove all occurrences of the given element in a given array.,"arr = [2, 4, 5, 7, 4, 2], element = 4","def remove_element(arr, element):
    arr = [x for x in arr if x != element]
    return arr"
Generate a python function to convert an array to a dictionary,"['a', 1, 'b', 2, 'c', 3]","def array_to_dict(lst):
    output = {}
    for i in range(0, len(lst), 2):
        output[lst[i]] = lst[i+1]
 
    return output

# main program
my_list = ['a', 1, 'b', 2, 'c', 3]
result = array_to_dict(my_list)
print(result)"
Suggest a way to sort a list of integers in python in ascending order.,"[9, 1, 8, 0, 2]","sorted_list = [9, 1, 8, 0, 2].sort()
print(sorted_list)"
Suggest a completion for the following Python code snippet that implements a linear search on an array.,"def linear_search(arr, target):
    for i in range(len(arr)):","def linear_search(arr, target):
    for i in range(len(arr)):
        if (arr[i] == target):
            return i
    return -1"
Develop an algorithm in Python to find the minimum number of coins needed to make change for a given amount,n = 5,"def minCoinChange(n):
    coins = [1, 2, 5]
    mins = [0]+ [float('inf')]*n
    for c in coins:
        for i in range(c, n+1):
            mins[i] = min(mins[i], mins[i-c]+1)
    return mins[n]
    
print(minCoinChange(n))"
Create a machine learning algorithm in Python to classify a given dataset.,Dataset for classification,"from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(X, y, test_size=0.20)

from sklearn.ensemble import RandomForestClassifier
clf = RandomForestClassifier(n_estimators=100)
clf.fit(x_train, y_train)
predictions = clf.predict(x_test)"
Generate code for rounding a given number to the nearest integer in Python.,Number: 2.6,"def round_nearest_int(num):
    return round(num)

result = round_nearest_int(2.6)
print(result)"
"Given an array of numbers, write a program to remove the duplicates from the array.","[1, 2, 2, 3, 4, 4, 5]","def remove_duplicates(arr):
    return list(set(arr)) # using built-in python set()"
Generate a Python program that computes the Euclidean distance between two points in a two-dimensional space.,"Point A - x: 3, y: 5
Point B - x: 7, y: 6","import math

# Define the two points
pointA = (3, 5) 
pointB = (7, 6)

# Calculate the Euclidean distance
distance = math.sqrt( (pointB[0] - pointA[0])**2 + (pointB[1] - pointA[1])**2 )

print(""The Euclidean distance between the two points is:"", distance)"
Create a Python script to detect if a certain item is in a given list of items. The script should work for any type of item.,"items = [1,2,3,4,5]","def detect_item(items, item):
  if item in items:
    return True
  else:
    return False"
"Write a Python program to create a set from a given list and calculate its intersection, union and difference with another set.","list1 = [10, 20, 30, 40]
list2 = [30, 40, 50, 60]","# create set from list
set1 = set(list1)
set2 = set(list2)

# calculate set intersection
intersection = set1.intersection(set2)

# calculate set union
union = set1.union(set2)

# calculate set difference
difference = set1.difference(set2)"
Create a python script to concatenate two lists.,"list_1 = [1, 2, 3]
list_2 = [4, 5, 6]","def concat_lists(list_1, list_2):
    return list_1 + list_2

list_1 = [1, 2, 3]
list_2 = [4, 5, 6]

concatenated_list = concat_lists(list_1, list_2)
print(concatenated_list) # [1, 2, 3, 4, 5, 6]"
Construct a function in Python that takes a list of strings and returns the original list with each string replaced by its reverse.,"list = ['hello', 'world', 'example']","def reverse_list(lst):
    return [s[::-1] for s in lst]

print(reverse_list(list))
# Output: ['olleh', 'dlrow', 'elpmaxe']"
Develop a Python function to calculate the mean of an array of numbers.,"data = [1, 4, 6]","# Python Function to calculate mean 
def calculateMean(data): 
    sum = 0
    # calculating sum 
    for e in data: 
        sum += e
  
    # calculating mean 
    mean = sum / len(data) 
    return mean
  
# Driver code 
data = [1, 4, 6]
mean = calculateMean(data)
print(""Mean of given data is:"", mean)"
Write a python program to print the name and age of all customers in a list.,"customers = [
 {'name': 'John', 'age': 25},
 {'name': 'Bob', 'age': 40},
 {'name': 'Alice', 'age': 10},
 {'name': 'Mark', 'age': 35},
]","for customer in customers:
  print(f""Name: {customer['name']}, Age: {customer['age']}"")"
Refactor a given code snippet into a Python Lambda function.,"def some_method(x, y):
    result = x + y
    return result","some_method = lambda x, y: x + y"
Write a Python function to calculate the Hamming distance between two strings of same length.,"""abc"",
""acd""","def hamming_distance(s1, s2):
    distance = 0

    for char1, char2 in zip(s1, s2):
        if char1 != char2:
            distance += 1
    
    return distance

result = hamming_distance(""abc"", ""acd"")
print(result)"
Develop a function in Python that sorts a dictionary by value in descending order.,"dictionary = {'a': 10, 'b': 20, 'c': 5}","def sort_dict_by_value(dict): 
    sorted_dict = dict(sorted(dict.items(), key = lambda kv: kv[1], reverse = True)) 
    return sorted_dict

sorted_dict = sort_dict_by_value(dictionary)
print(sorted_dict)"
Translate the following code written in Python to Java.,"x = 3
y = 5

print(x + y)","public class XPlusY { 
    
    // add two numbers  
 static int add(int x, int y) 
    { 
        return x + y; 
    } 
  
    // Driver method  
    public static void main(String[] args) 
    { 
        int x = 3; 
        int y = 5; 
        System.out.println(""Sum of the two numbers is "" + add(x, y)); 
    } 
}"
Design a class in Python that finds the highest number in a given array of integers.,"[3, 5, 1, 8, 11, 12]","class HighestNumberFinder:
    def __init__(self, array):
        self.array = array
    
    def find_highest_number(self):
        highest_number = self.array[0]
        for number in self.array:
            if (number > highest_number):
                highest_number = number
        return highest_number"
Create a Python program that takes a number as an input and computes the factorial of that number.,7,"def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n-1)
    
num = 7
result = factorial(num)
print(result)"
Write Python script to replace all occurrences of a given letter in a string with another.,"String: ""fortnite""
Letter to replace: ""t""
Letter to replace with: ""l""","""""""Write Python script to replace all occurrences of a given letter in a string with another.""""""

# Take a string as an input
string = ""fortnite""

# Replace the target letter with the replacement letter
new_string = string.replace(""t"", ""l"")

# Print the new string
print(new_string)"
Generate code in Python to sum all the values of a dictionary.,"dictionary = { 'a': 1, 'b': 2, 'c': 3 }","def sum_dict(dict):
    sum = 0
    for key in dict:
        sum += dict[key]
    return sum

dictionary = { 'a': 1, 'b': 2, 'c': 3 }
print(sum_dict(dictionary)) # 6"
Write a Python script to delete all duplicate characters in a given string,"string = ""mississippi""","def deleteDuplicates(string): 
    result = """"
    for i in string: 
        if i not in result: 
            result = result + i
    return result

print(""The output string is: "", deleteDuplicates(string))"
Write a Python script to detect if two strings contain the same characters. Output should be true or false.,"s1 = ""abc""
s2 = ""bca""","def is_permutation(s1, s2):
    s1_list = list(s1)
    s2_list = list(s2)
    s1_list.sort()
    s2_list.sort()
    if s1_list == s2_list:
        return True
    else:
        return False

print(is_permutation(""abc"", ""bca"")) # True"
Can you create an algorithm in Python for reversing an integer?,x = 2435,"def reverseInteger(x): 
     
    reversed = 0
    while(x > 0): 
        reminder = x % 10
        reversed = (reversed * 10) + reminder 
        x = x // 10
    return reversed 

x = 2435
res = reverseInteger(x) 
print(res)"
Create a function in Python that takes an array and returns the element at the middle index.,"[1, 2, 3, 4, 5]","def returnMiddle(arr):
    if len(arr) % 2 == 0:
        return (arr[int(len(arr) / 2) - 1] + arr[int(len(arr) / 2)])/2
    else:
        return arr[int(len(arr) / 2)]
 print(returnMiddle([1, 2, 3, 4, 5]))"
Generate a Python algorithm to check if a given word is a palindrome.,madam,"def isPalindrome(word): 
    left, right = 0, len(word) - 1
    while right >= left: 
        if not word[left] == word[right]: 
            return False
        left += 1
        right -= 1
    return True"
Optimize the following Python code to run faster by using appropriate data structures.,"def find_subarrays(arr):
    subarrays = []
    for i in range(len(arr)):
        for j in range(i, len(arr)):
            subarrays.append(arr[i:j+1])
    return subarrays","def find_subarrays(arr):
     subarrays = []
     for i in range(len(arr)):
         subarrays.append(arr[i:])
         for j in range(i+1, len(arr)):
             subarrays.append(arr[i:j+1])
     return subarrays"
Generate a Python function that takes in a list of words and returns the length of the longest word.,"['Ram', 'Shyam', 'Mohan']","def longest_word_length(words):
   length = 0
   for word in words:
       if len(word) > length:
           length = len(word)
           
   return length"
Create a simple algorithm in Python to find the mode of a given array of numbers.,"[1, 2, 2, 3, 5, 6, 7]","def mode(arr):
  dict = {}
  for item in arr:
    if item in dict:
      dict[item] += 1
    else:
      dict[item] = 1
  
  max_val = 0
  max_key = 0
  for key, value in dict.items():
    if value > max_val:
      max_val = value
      max_key = key
  
  return max_key

arr = [1, 2, 2, 3, 5, 6, 7]
print(mode(arr))"
Write a Python script to fetch the sale price of a product from an online store.,"Website = www.productstore.com
ProductID = 12345","import requests
url = f'https://www.productstore.com/ProductID={ProductID}&format=json'

resp = requests.get(url)
data = resp.json()
sales_price = data['salesPrice']
print('The sale price of the product is {}'.format(sales_price))"
Create a Python program to generate a Fibonacci number sequence.,Length of the sequence = 10,"def generate_Fibonacci_sequence(length):
    # Initialize the sequence
    fib_sequence = [0, 1]

    # Generate the sequence
    for i in range(2, length):
        fib_sequence.append(fib_sequence[i - 1] + fib_sequence[i - 2])

    # Return the sequence
    return fib_sequence

print(generate_Fibonacci_sequence(10))"
Design a Python program to print out all possible permutations of a 3 character string.,ABC,"def permutation(str):
    if len(str) == 0:
        return []
    if len(str) == 1:
        return [str]
    l = [] 
    for i in range(len(str)):
       m = str[i] 
       remLst = permutation(str[:i] + str[i+1:])
       for p in remLst:
           l.append(m + p)
    return l

string = 'ABC'
l = permutation(string)
for s in l:
    print(s)"
Create a data structure to store and print all the codes for the top 10 programming languages.,"C, C++, Python, Java, C#, JavaScript, PHP, Rust, Swift, Go","codes = {
    'C': 'c',
    'C++': 'cpp',
    'Python': 'py',
    'Java': 'java',
    'C#': 'cs',
    'JavaScript': 'js',
    'PHP': 'php',
    'Rust': 'rs',
    'Swift': 'swift',
    'Go': 'go'
}

for key, value in codes.items():
    print('{}: {}'.format(key, value))"
Create a function using Python to reverse the order of the characters in each word of a given string,string = “Hello World”,"def reverse_words(string): 
  splitted_words = string.split("" "") 

  reversed_words = [word[::-1] for word in splitted_words] 

  reversed_string = "" "".join(reversed_words) 
 
  return reversed_string 

reverse_words(string)"
Find the number 10 in a string using a Python regular expression.,"String: ""This string contains the number 10 in it""","re.search(""10"", ""This string contains the number 10 in it"")"
Write a Python script to generate a text report of the results of a survey of 10 people.,"No. of people who said yes, 4  
No. of people who said no, 6","num_yes = 4
num_no = 6

total_responses = num_yes + num_no

print('Survey Results')
print('Number of people who said yes: {}'.format(num_yes))
print('Number of people who said no: {}'.format(num_no))
print('Total number of responses: {}'.format(total_responses))"
Write a Python program to delete the third element of a list.,"list = [1, 2, 3, 4, 5]","def delete_third_element(list): 
    """"""Function to delete the third element of a list"""""" 
    del list[2] 
    return list

#Example:
print(delete_third_element(list))"
Create a Python program which will sort the given array of numbers,"[9, 5, 1, 10]","def sortArray(arr): 
    arr.sort() 
    return arr 
  
# Driver code 
arr = [9, 5, 1, 10] 
print(sortArray(arr)) 
# Output: [1, 5, 9, 10]"
Create a histogram of the following data using Python.,"data = [2, 3, 4, 6, 7, 8, 9, 10]","import matplotlib.pyplot as plt

data = [2, 3, 4, 6, 7, 8, 9, 10]

plt.hist(data)
plt.title('Histogram of Wind Direction')
plt.xlabel('Direction (degrees)')
plt.ylabel('Frequency')
plt.show()"
Write a function in Python to print the Fibonacci sequence up to the nth term.,n = 10,"def fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b 
    
print(""Fibonacci sequence:"")
for i in range(n):
    print(fibonacci(i))"
Create two functions in Python to capitalize and uncapitalize each character of a string.,string = 'hello world',"def capitalize_each_character(string):
  result = ''
  for char in string:
    result += char.capitalize()
  return result

def uncapitalize_each_character(string):
  result = ''
  for char in string:
    result += char.lower()
  return result"
Create a Python program which computes the factorial of a given integer number.,num = 5,"def factorial(num): 
    if num == 0: 
        return 1
    else: 
        return num * factorial(num-1) 

x = 5
print(factorial(x)) 
# 120"
Sum the integers in a Python list.,"List of integers: [1, 2, 3, 4, 5]","def sumList(list): 
    sum = 0
    for ele in list:
        sum += ele     
    return sum
  
list = [1, 2, 3, 4, 5] 
print(""Sum of the elements in given list is :"", sumList(list))"
Create a Python script to return the average of the given list of numbers.,"[10, 15, 20, 25]","def average(numbers):
 total = 0
 for num in numbers:
 total += num
 return total / len(numbers)

average([10, 15, 20, 25])"
Optimize the following Python code by replacing redundant computations.,"def complex_computation(x):
    tmp1 = 2 * x
    tmp2 = x * x
    return tmp1 + tmp2","def complex_computation(x):
    return x * (2 + x)"
Create a Python script to reverse a given string.,'Hello World',"def reverse_string(string):
    return string[::-1]

result = reverse_string('Hello World')
print(result)"
Write a Python program to convert a list of numbers into a string.,"[2, 3, 10]","def list_to_str(lst):
    result = "","".join(map(str, lst))
    return result

result = list_to_str([2, 3, 10])
print(result)"
Make a Python program that reads a 3x3 matrix and prints the sum of all elements.,"[[1, 2, 3], [4, 5, 6], [7, 8, 9]]","matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

total = 0

for i in range(len(matrix)):
    for j in range(len(matrix[i])):
        total += matrix[i][j]

print(total)"
Design a Python program that takes an array of integers and returns the first element that is divisible by 7.,"[41, 42, 43, 44, 45]","def findFirstDivisibleBy7(arr):
    for i in range(0, len(arr)):
        if arr[i] % 7 == 0:
            return arr[i]
    return -1

arr = [41, 42, 43, 44, 45]
result = findFirstDivisibleBy7(arr)
print(result) # 42"
Write a function to reverse the elements of a given array in Python.,"[1, 2, 3, 4, 5]","def reverse_array(arr):
    """"""This function reverses the elements of a given array of numbers
    
    Parameters: 
        arr (list): The list of numbers to reverse.
	
    Returns: The reversed array
    """"""
    return arr[::-1]"
Design an algorithm in Python to find the smallest number in a given list.,"[4, 5, 6, 7, 8]","def smallestNumber(nums):
    smallest = nums[0]
    for i in range(1, len(nums)):
        if nums[i] < smallest:
            smallest = nums[i]
    return smallest

nums = [4, 5, 6, 7, 8]
smallestNum = smallestNumber(nums)
print('The smallest number is', smallestNum)"
Rewrite and optimize the following provided code using modern Python library functions.,"count = 0
i = 0
while i < len(words):
    if words[i] == 'the':
        count = count + 1
    i = i + 1","count = 0
for word in words:
    if word == 'the':
        count += 1"
Translate a Java loop into a while loop in Python.,"for (int i=1; i<=10; i++)
    System.out.println(""Hello World"");","i = 1
while i <= 10:
    print(""Hello World"")
    i += 1"
Write a Python program to classify a dataset with 6 classes.,List of sample data,"import pandas as pd

# Load the dataset 
df = pd.read_csv('dataset.csv')

# Split the dataset into features and labels
X = df.drop('label', axis=1).values
y = df['label'].values

# Train the model
from sklearn.ensemble import RandomForestClassifier
model = RandomForestClassifier()
model.fit(X, y)

# Make predictions on the dataset
predictions = model.predict(X)"
Write a Python program to create a dictionary containing the given list of numbers and their squares as values.,"[1,2,3,4,5]","my_list = [1,2,3,4,5]

squares_dictionary = {}

for x in my_list:
  squares_dictionary[x] = x**2

print(squares_dictionary)"
Create a Python script for formatting a sentence.,He  went  to the store,"def format_sentence(sentence):
    sentence = sentence.split()
    sentence = [word.capitalize() for word in sentence]
    return ' '.join(sentence)

print(format_sentence(""He went to the store""))"
Suggest a python code to get the common elements of a list of lists.,"list_of_lists = [[1,3,5], [3,5,7], [1,2,3]]","def get_common_elements(list_of_lists): 
    commons = []
    for i in range(len(list_of_lists)): 
        commons = list(set(commons).intersection(list_of_lists[i]))
    return commons"
Generate a python statements to insert an item at a specific index in a list.,"list = [1, 2, 4, 5]
item = 3
index = 2","list.insert(index, item)"
"Implement a Python function called “check_prime” which takes an integer as an argument and returns True if the number is prime, and False otherwise.",check_prime(125),"def check_prime(n):
 if n == 1:
 return False

 for i in range(2, int(n ** 0.5) + 1):
 if n % i == 0:
 return False

 return True"
Develop a Python program to remove a specific character from a given string.,"string = ""Hello World!"" 
character = 'l'","def remove_char(string, char):
  return string.replace(char, '')"
"Given a JSON object containing a list of key/value pairs, write a Python function to sort the list by value.","{
  ""a"": 23,
  ""b"": 42,
  ""c"": 16
}","def sort_by_value(data):
 sorted_list = sorted(data.items(), key=lambda kv: kv[1])
 return sorted_list
 
print(sort_by_value({""a"": 23, ""b"": 42, ""c"": 16}))
# Output -> [('c', 16), ('a', 23), ('b', 42)]  # sorted by value"
Write a Python program to generate a unique set of random numbers from an existing list of numbers.,"[1, 2, 3, 4, 5, 6, 7]","import random

numbers = [1, 2, 3, 4, 5, 6, 7] 
random_numbers = set()

while len(random_numbers) < 4:
    random_numbers.add(random.choice(numbers))

print(random_numbers)"
Design an algorithm in Python that sorts an unordered list of three numbers in increasing order.,"List = [3, 1, 2]","def sort_list(input_list):
    output_list = []
    while input_list:
        smallest = input_list[0]
        for i in input_list:
            if i < smallest:
                smallest = i
        output_list.append(smallest)
        input_list.remove(smallest)
    return output_list"
Write a script in Python to return the cryptographic hash of a string.,string = 'Welcome to the world of programming!',"import hashlib

def get_hash(string):
    sha1 = hashlib.sha1()
    sha1.update(string.encode('utf-8'))
    return sha1.hexdigest()

print(get_hash(string))"
Generate a Python function that sorts a list of numbers using the bubble sort algorithm,"[8,2,11,9,20,7]","def bubbleSort(list): 
	n = len(list) 
	for i in range(n): 
		for j in range(0, n-i-1): 
			if list[j] > list[j+1] : 
				list[j], list[j+1] = list[j+1], list[j] 
	return list

print(bubbleSort([8,2,11,9,20,7]))"
Create a Python program to detect palindrome words.,noon,"def is_palindrome(word):
    reversed_word = word[::-1]
    if reversed_word == word:
        return True
    else:
        return False

result = is_palindrome(""noon"")
print(result)"
Create a python function to calculate the probability of a given event.,An example event is rolling a dice that has 6 sides and the event is rolling a number 6.,"def calculate_probability(event):
    num_outcomes = 6
    num_favorable = 1
    
    probability = num_favorable/num_outcomes
    
    return probability
    
# calculate probability of rolling a 6
probability = calculate_probability(""rolling a 6"")
print(probability)"
Generate code to calculate the distance between two points in an array in Python.,"Two points in an array: [2, 4] and [10, 6]","from math import sqrt

def calcDistance(p1, p2):
    return sqrt( (p2[0] - p1[0])**2 + (p2[1] - p1[1])**2 )

point1 = [2, 4]
point2 = [10, 6]

distance = calcDistance(point1, point2)
print(""Distance between the two points is"", distance)"
Develop a biopython program which counts the number of occurrences of a given DNA sequence.,ATGGGCTAG,"from Bio.Seq import Seq
from Bio import SeqIO

seq = Seq(""ATGGGCTAG"")

# Count the occurrence of the DNA sequence
count = seq.count_overlap(seq)

print(count)"
"Write a Python program that takes a string and counts the number of occurrences of each letter, and then prints the results.","""Hello World!""","str = ""Hello World!""
chars = list(str)

# initialize counts as empty dictionary
char_counts = {}

for char in chars:
    if char in char_counts:
        char_counts[char] += 1
    else:
        char_counts[char] = 1

# printing result
for char, count in char_counts.items():
    print(""{} : {}"".format(char, count))"
Generate a Python program to group a list of integers into even and odd numbers.,"[1, 2, 3, 4, 5, 6]","def group_integers(lst):
 evens = []
 odds = []
 for num in lst:
 if (num % 2 == 0):
 evens.append(num)
 else:
 odds.append(num)
 
 return (evens, odds)
 
 lst = [1, 2, 3, 4, 5, 6]
 result = group_integers(lst)
 
 print(""Even numbers:"", result[0])
 print(""Odd numbers:"", result[1])"
Create a program to implement a selection sort in Python.,"[5, 3, 2, 4, 1]","def selection_sort(arr):
    n = len(arr)
    for i in range(n-1):
        min_index = i
        for j in range(i+1, n):
            if arr[min_index] > arr[j]:
                min_index = j
        arr[i], arr[min_index] = arr[min_index], arr[i]
    return arr"
Create a program in Python that takes a word as an argument and print it in reverse.,'Hello World',"def reverse(word):
    return word[::-1]

print(reverse('Hello World'))"
Design a python program to extract URLs from a website.,url = 'http://example.com',"from bs4 import BeautifulSoup
import requests

page = requests.get(url)
soup = BeautifulSoup(page.content, 'html.parser')
links = soup.select('a[href]')
for link in links:
    print(link['href'])"
Modify a Python program to generate output in JSON format.,"dictionary = {
   ""name"": ""John"",
   ""age"": 30,
   ""car"": [""Ford"", ""BMW"", ""Fiat""]
}","import json

dictionary = {
   ""name"": ""John"",
   ""age"": 30,
   ""car"": [""Ford"", ""BMW"", ""Fiat""]
}

json_data = json.dumps(dictionary)
print(json_data) // Output: {""name"": ""John"", ""age"": 30, ""car"": [""Ford"", ""BMW"", ""Fiat""]}"
Write a Python program to iterate through a given list of integers and output the maximum value.,"[1,5,2,3,8,9]","max_value = 0

for value in [1,5,2,3,8,9]:
    if value > max_value:
    max_value = value

print(max_value) # Output: 9"
"Construct a python program that takes an array of integers as an argument, and returns the second largest number.","arr = [10, 12, 2, 8, 6, 4]","def second_largest(arr):
  max_first = max(arr[0], arr[1])
  max_second = min(arr[0], arr[1])
  for i in range(2, len(arr)):
    if arr[i] > max_first:
      max_second = max_first
      max_first = arr[i]
    else: 
      if arr[i] > max_second:
        max_second = arr[i]
  return max_second

print(second_largest(arr))"
Generate a list in Python that contains all the words from a source string that start with a certain letter.,"source_string = ""My dog loves to play in the park!""
letter = ""p""","def generate_list(source_string, letter):
  words = source_string.split()
  result = []
  for word in words:
    if word[0].lower() == letter:
      result.append(word)
  return result

print(generate_list(source_string, letter))"
Write a Python program to do a brute force search for a pair of elements which sum to a given target value.,"[1, 3, 4, 5, 6, 7], 8","# brute force search algorithm
def brute_force_search(arr, target):
	for i in range(len(arr)):
		for j in range(len(arr)):
			if arr[i] + arr[j] == target:
				return arr[i], arr[j]
	return None

# test the algorithm
target = 8
lst = [1, 3, 4, 5, 6, 7]
print(brute_force_search(lst, target))

Output:
pair = (3, 5)"
Create a REST API endpoint in Python that fetches data from a database and returns it as JSON.,"The table ""Users"" has the following columns: Id (primary key), Name, Email, Gender.","@app.route('/users', methods=['GET'])
def get_users():
 users = User.query.all()
 return jsonify([{'Id': user.id, 'Name': user.name, 'Email': user.email, 'Gender': user.gender} for user in users])"
"Given a list of integers, write a Python program to find the maximum value in the array and display its index.","[3, 2, 5, 8, 6]","mylist = [3, 2, 5, 8, 6]

# initialize maximum value and index
maxval = 0
maxindex = 0

# iterate through list
for i, val in enumerate(mylist):
 # check if the current value is greater than the maximum value
 if val > maxval:
  maxval = val
  maxindex = i

# print the result
print('Maximum value:', maxval)
print('Index of maximum value:', maxindex)"
"Given the following Python function, use optimization techniques to reduce the running time of the function.","def functionA(n):
 s = 0
 for i in range(n):
 for j in range(i+1):
 s += j
 return s","def functionA_opt(n):
 s = 0
 s = n*(n+1)*(n+2) // 6
 return s"
Add Python logging capabilities to a given Flask application.,"Example existing application:
from flask import Flask
app = Flask(name)

@app.route('/')
def index():
 return 'Hello World!'","import logging
import sys
from flask import Flask

app = Flask(name)

# Set up logging
app.logger.addHandler(logging.StreamHandler(sys.stdout))
app.logger.setLevel(logging.DEBUG)

@app.route('/')
def index():
 app.logger.info('Processing request to index')
 return 'Hello World!'"
Write a function in Python that computes the median of a given array of numbers.,"[2,3,4,5,6,7,8]","def median(arr):
 arr.sort() 
 n = len(arr) 
 if n % 2 != 0: 
 return arr[n//2] 
 else: 
 return (arr[(n-1)//2] + arr[n//2]) / 2

# driver code 
arr = [2,3,4,5,6,7,8] 
print(median(arr))"
Write a Python program to generate a table of all possible combinations for a given set of symbols.,"['A', 'B', 'C']","def print_combinations(symbols):
    for idx in range(1 << len(symbols)):
        combination = [symbol for symbol, flag in zip(symbols, bin(idx)[2:]) if flag == ""1""]
        print(combination)

symbols = ['A', 'B', 'C']
print_combinations(symbols)"
Create a Python code to check if a single integer is a prime number,int number = 11,"def is_prime(number):
    if number <= 1:
        return False

    for i in range(2, number):
        if number % i == 0:
            return False
    return True"
Create a program in Python to check for palindrome numbers.,121,"def palindrome(num):
    num = str(num)
    if num == num[::-1]:
        print(num + "" is a palindrome number"")
    else: 
        print(num + "" is not a palindrome number"")

palindrome(121)
// Output: 121 is a palindrome number"
Write a Python program to collect data from an API and store the data in a SQL database.,"import requests

url = 'http://some_api.com/resource1/?format=json'","import sqlite3
import requests

# Connect to the database
db = sqlite3.connect('api_data.db')

# Create the statement
stmt = 'INSERT INTO api_data (data) VALUES (?)'

# Collect and save the data
data = requests.get(url).json()
db.execute(stmt, (data,))
db.commit()
db.close()"
Write a python program that takes a list of numbers and prints out only the even numbers,"[2, 4, 7, 14, 21]","for num in [2, 4, 7, 14, 21]: 
    if num % 2 == 0: 
        print(num, end = "" "")"
Create an alternate version of a given program that produces the same output.,"import math
myString = ""Python Rocks!""
numRounds = math.ceil(len(myString) / 2)
for i in range(1, numRounds+1):
    print(myString[0:i])","import math
myString = ""Python Rocks!""
numRounds = math.floor(len(myString) / 2)
for i in reversed(range(1, numRounds+1)):
    print(myString[i-1::-1] + myString[i::])"
Convert a given code snippet from Swift to Python.,"let username = ""John""
let score = 123","username = ""John""
score = 123"
Find the maximum value of a 10 element array in Python.,"array = [1, 7, 3, 4, 5, 9, 8, 0, 2, 6]","# Max value in array

def max_val(array):
    max_val = array[0]
    for num in array[1:]:
        if num > max_val:
            max_val = num
    return max_val"
Write a Python program to sort a list of tuples by the second element in the tuple.,"tuples = [(""Alice"", 15),(""Bob"", 10),(""Robot"",25)]","def sort_tuples_by_second_element(tuples):
  return sorted(tuples, key=lambda tup: tup[1])"
Identify and correct code issues in the following snippet of Python code.,"def foo(x):
    if x > 0
        return x
    else:
        return 0","def foo(x):
    if x > 0:
        return x
    else:
        return 0"
Generate Python code to calculate the Mean Squared Error (MSE) between a given set of predicted values and actual values.,"y_true = [2.2, 3.7, 4.1, 5.7]
y_pred = [1.8, 2.3, 2.9, 5.9]","def calculate_mse(y_true, y_pred):
    mse = 0
    for i in range(len(y_true)):
        mse += (y_true[i] - y_pred[i])**2
    mse = mse / len(y_true)
    return mse

mse=calculate_mse(y_true, y_pred)
print(mse)
# Output: 0.44000000000000006"
Update the given Python program to shuffle an array of numbers.,"[1, 2, 3, 4, 5, 6]","import random

def shuffleArray(arr):
    random.shuffle(arr)
    return arr

array = [1, 2, 3, 4, 5, 6]
shuffledArray = shuffleArray(array)
print(shuffledArray)"
Create a function in Python to delete all elements from a list which are divisible by 5.,"[1, 10, 15, 20, 25]","def delete_divisible_by_5(my_list):
  new_list = []
  for i in my_list:
    if i % 5 != 0:
      new_list.append(i)
  return new_list

# Test
my_list = [1, 10, 15, 20, 25]

new_list = delete_divisible_by_5(my_list)

print(""List after deletion: "" + str(new_list))"
"Write a python program to convert a time string ""hh:mm:ss"" into total number of seconds","time = ""08:11:15""",time_in_secs = 8 * 3600 + 11 * 60 + 15
Create a Python program that takes a list of numbers as an input from the user and prints out the number that appears the most in the list.,"1, 1, 2, 3","list_of_numbers = [int(x) for x in input(""Please enter a list of numbers: "").split(',')]

c = collections.Counter(list_of_numbers)

most_common_num = c.most_common(1)[0][0]

print(""The most common number in the list is "" + str(most_common_num))"
Write a Python script that counts the characters of a given string.,Hello World,"string = 'Hello world'

count = len(string)

print(""Length of the string is"", count)"
Design a data structure in Python to store information about a customer.,"name, phone, email, address","class Customer:
    def __init__(self, name, phone, email, address):
        self.name = name
        self.phone = phone
        self.email = email
        self.address = address

customer = Customer(""John"", ""+123456789"", ""john@example.com"", ""456 Main Street"")"
Create a Python program to check if a string ends with a given substring.,"s = 'Hello World', substring = 'ld'","def endswith(s, substring): 
    return s.endswith(substring) 


s = 'Hello World'
substring = 'ld'
print(endswith(s, substring)) # prints True"
Create a program in Python which takes a string and an integer as input and prints the string the given number of times.,"String: Hello
Integer: 3","string = ""Hello""
num = 3

for i in range(num):
    print(string)"
"Given a list of dictionarys, create a python command to add ""hello"" in front of every value in the list.","[{'string' : 'world'}, {'number' : 5}]","[{'string' : 'hello world'}, {'number' : 'hello 5'}]"
Generate a Python program to calculate the total cost including taxes of an item purchased based on the given inputs.,"price = 22
tax_percentage = 5","price = 22
tax_percentage = 5

total_cost = price * (1 + tax_percentage/100)
print('The total cost is: ', total_cost)"
Generate a Python program which use to generate an array of length N with random numbers based on the given seed.,"N = 10
Seed = 42","import random

def generate_array_with_random_numbers(n, seed):
 random.seed(seed)
 return [random.randint(0, 100) for _ in range(n)]

n = 10
seed = 42
array = generate_array_with_random_numbers(n, seed)

print(array)
# [19, 25, 44, 36, 33, 20, 72, 15, 85, 37]"
Create a function in Python to calculate the total of all the characters in a given input string.,string: 'Hello World!',"def char_total(string):
total = 0

for char in string:
 total += ord(char)

return total

print(char_total('Hello World!')) 
# Output: 1116"
"Using Python, create a function that takes two numbers as input, and generates a random number between them.",2 and 5,"def random_number_generator(min, max):
    return random.randint(min, max)"
Sort a list in Python using the Quick Sort algorithm,"[5, 2, 9, 1, 4, 12]","def quicksort (array) :
    if len(array) <= 1 :
        return array
    else:
        pivot = array[len(array) // 2]
        left = [x for x in array if x < pivot]
        middle = [x for x in array if x == pivot]
        right = [x for x in array if x > pivot]
        return quicksort(left) + middle + quicksort(right)

array = [5, 2, 9, 1, 4, 12]
result = quicksort(array)
print(result)"
Create a program in Python to generate a random 2D matrix of size NxN containing integers between 1 and 10.,N = 10,"import random

n = 10

matrix = [[random.randint(1, 10) for _ in range(n)] for _ in range(n)]

print(matrix)"
Design an algorithm in Python that prints out the squares of each number between 1 and n.,n = 8,"def printSquares(n):
 for num in range(1,n+1):
 sqr = num * num
 print(sqr)

n = 8
printSquares(n)"
How can you use Python to calculate the mean value of a given list,"[25, 34, 42]","def mean_value(numbers):
    sum = 0
    for n in numbers:
        sum += n
    return sum / len(numbers)"
Write a Python program to classify a given animal according to its features,"An animal with four legs, a curved tail and feathers","def classify_animal(features):
    if ""four legs"" in features and ""curved tail"" in features:
        if ""feathers"" in features:
            return ""bird""
        else:
            return ""mammal""
    else:
        return ""unknown""

features = ""An animal with four legs, a curved tail and feathers""
print(classify_animal(features)) # bird"
Create a Python program that takes a list of integers and returns true if the list contains two distinct numbers whose product is even.,"[1, 2, 3, 4]","def has_even_product(numbers):
 for i in range(len(numbers)):
 for j in range(i+1, len(numbers)):
 if numbers[i] * numbers[j] % 2 == 0:
 return True
 return False"
Design an algorithm in Python to find the minimum of three values.,"3, 2, 1","def find_min(a, b, c): 
    min_val = a 
    if b < min_val: 
        min_val = b 
    if c < min_val: 
        min_val = c 
    return min_val 

print(find_min(3, 2, 1)) # Output: 1"
Write a Python code snippet to sort lists of integers in descending order.,"[4, 6, 1, 3, 8]","lst = [4, 6, 1, 3, 8]
lst.sort(reverse=True)
print(lst)  # [8, 6, 4, 3, 1]"
"Write a Python program to print out the count of vowels, consonants and digits in an input string.",This is an example string including digits123.,"Vowels: 10
Consonants: 12
Digits: 3"
Create a feature extraction function in Python to extract data from a json string.,"{""id"":111,""title"":""This is a sample title"",""body"":""This is a sample body text""}","def feature_extraction(input_str):
    import json
    data = json.loads(input_str)

    features = {
        ""id"": data[""id""],
        ""title"": data[""title""],
        ""body_len"": len(data[""body""])
    }

    return features"
Debug the following Python code and make it functional (read the instructions for the code).,"def factorial(n):
 if n == 0:
    return 1
 else:
 return n * factorial(n - 1)
factorial(5)","def factorial(n):
 if n == 0:
    return 1
 else:
 return n * factorial(n - 1)

# call the method
print(factorial(5))"
Generate a program in Python that takes two strings and returns a list containing the combined string.,"(""Hello "", ""World!"")","def combine_strings(str1, str2):
 return [str1 + str2]

combined_string = combine_strings(""Hello "", ""World!"")
print(combined_string) # [""Hello World!""]"
Write a function in Python to display all the words beginning with a given alphabet in a given string.,"str = ""This is a sample sentence""","def all_words_beginning_with(str, alphabet):
  words = str.split()
  result = []
  for word in words:
    if word[0].upper() == alphabet.upper():
      result.append(word)
  
  return result"
Optimize a given piece of Python code so that it runs faster without compromising on the integrity of the output.,"def get_elements(numbers_list):
 result = []
 for x in range(len(numbers_list)):
 if x % 2 == 0:
 result.append(numbers_list[x])
 return result","def get_elements(numbers_list):
 result = []
 for x in range(0, len(numbers_list), 2):
 result.append(numbers_list[x])
 return result"
Update the below Python code to run in multiprocess mode.,"import time

def add(a, b):
 return a + b

if __name__ == '__main__':
 start = time.time()
 result = add(2, 3)
 end = time.time()
 print(end-start)","import multiprocessing
import time

def add(a, b):
 return a + b

if __name__ == '__main__':
 pool = multiprocessing.Pool()
 start = time.time()
 result = pool.apply_async(add, (2, 3))
 pool.close()
 pool.join()
 end = time.time()
 print(result.get())
 print(end-start)"
Please rank the following libraries according to their relevance for our program in Python.,"NumPy, SciPy, Pandas",NumPy > SciPy > Pandas
Create a Python program to search for an item in a list and return its index.,"[2, 3, 5, 7, 11], target = 5","def linear_search(list, target):
  for index, item in enumerate(list):
    if target == item:
      return index
    return -1

result = linear_search([2, 3, 5, 7, 11], 5)
print(result)"
Automate the process of pulling data from a website using Python.,Website URL: http://www.example.com,"import requests
from bs4 import BeautifulSoup

url = 'http://www.example.com'

# Use requests to get website HTML
resp = requests.get(url)

# Parse the HTML using BeautifulSoup
soup = BeautifulSoup(resp.text, 'lxml')

# Extract data from HTML
data = []
for item in soup.find_all('div'):
 data.append(item.text)

# Print the data
for d in data:
 print(d)"
Create a method to verify if the following number is prime in Python:,7,"def is_prime(n):
    if (n <= 1):
        return False
    for i in range(2, n):
        if (n % i == 0):
            return False
    return True

n = 7

if is_prime(n):
    print(""The number {} is prime."".format(n))
else:
    print(""The number {} is not prime."".format(n))"
Create a Python script to print the absolute difference between two given numbers.,"9, 5","def absolute_difference(A, B): 
    return abs(A - B) 
  
# Driver Code 
A = 9
B = 5
print(absolute_difference(A, B))"
Create a python code to generate a dictionary of char counts for a given string.,"input_string = ""Hello World!""","def char_count_dict(input_string):
    char_dict = {}

    for char in input_string:
        if char in char_dict:
            char_dict[char] += 1
        else:
            char_dict[char] = 1
    
    return char_dict

print(char_count_dict(input_string))"
"Using the provided inputs, write a python code that calculates the sum of all the elements in the list.","my_list = [1,2,3,4,5,6]","def calculate_sum(my_list):
    """""" Calculate the sum of all the elements in the list. """"""
    sum = 0
    for elem in my_list:
        sum += elem
    return sum

my_list = [1,2,3,4,5,6]
total_sum = calculate_sum(my_list)
print(""The sum of all elements in the list is: %d"" %total_sum)"
Write a python program to convert a list of words into a string delimited by a space separator.,"[""Hello"",""World"",""!""]","words = [""Hello"", ""World"", ""!""]
print(' '.join(words))"
Generate an efficient Python program to reverse a string.,Hello,"def reverseString(inputString): 
    reversedString = """" 
    for i in inputString: 
        reversedString = i + reversedString 
    return reversedString 
  
print(reverseString(""Hello""))"
Write a Python script to identify the words that contain more than one vowel in a given sentence.,Sentence: The quick brown fox jumped over the lazy dog.,"import re

sentence = ""The quick brown fox jumped over the lazy dog.""
pattern = r""\b(\w*[aeiou]\w*){2,}\b""

match = re.findall(pattern, sentence)
print(match)

# Output: ['quick', 'brown', 'jumped', 'over', 'lazy']"
Compute the area of a triangle given its three points in Python.,"Point1(1, 4) Point2(5, 4) Point3(3, 2)","def triangle_area(Point1, Point2, Point3):
    #Calculate the area of the triangle
    x1, y1 = Point1
    x2, y2 = Point2
    x3, y3 = Point3
    area = abs((x1*(y2-y3) + x2*(y3-y1) + x3*(y1-y2))/2)

    return area

Point1 = (1, 4)
Point2 = (5, 4)
Point3 = (3, 2)

area = triangle_area(Point1, Point2, Point3)
print(f""Area of the triangle: {area}units"")"
Create a class Cell in Python using object-oriented programming.,<no input>,"class Cell:
    def __init__(self, row, col):
        self.row = row
        self.col = col 

    def move_left(self):
        self.col -= 1

    def move_right(self):
        self.col += 1

    def move_up(self):
        self.row -= 1

    def move_down(self):
        self.row += 1"
Write a Python program to calculate the amount of time for an action to be completed given a set of parameters.,"speed = 100;
distance = 1000;","def calculate_time(speed, distance):
 time = distance / speed 
 return time 

print(calculate_time(100, 1000)) 
# Output: 10.0"
Write a Python code to display the area and volume of a cube with a given edge length.,3,"def cube_info(edge_length):
    area = 6 * edge_length**2
    volume = edge_length**3
    return area,volume

edge_length = 3
area, volume = cube_info(edge_length)
print(""Area of the Cube:"", area)
print(""Volume of the Cube:"", volume)"
Construct a function in Python to add two numbers passed as arguments.,"3,7","def addNumbers(a, b):
    return a + b

x = 3
y = 7
result = addNumbers(x, y)
print(result)"
"Using Python, create a program that classifies users into three groups based on their age.","age_list = [20, 21, 32, 37, 48, 59]","group_list = [""young"", ""middle-aged"", ""elderly""]

for age in age_list:
    if age < 30:
        print(""This user is "" + group_list[0] + ""."")
    elif age > 30 and age < 50:
        print(""This user is "" + group_list[1] + ""."")
    else:
        print(""This user is "" + group_list[2] + ""."")"
Optimize the following Python code for best runtime.,"def is_prime(n):
    for i in range(2, n):
        if (n % i) == 0:
            return False
    return True","def is_prime(n):
    if n == 1:
        return False
    if n in (2, 3):
        return True
    if not (n & 1) and n > 2:
        return False
    for i in range(3, int(n**0.5)+1, 2):
        if n % i == 0:
            return False
    return True"
Generate an HTML page with an ordered list which displays the top 5 programming languages in descending order.,"Python, Java, JavaScript, C#, C++","<html>
<head>
    <title>Top 5 Programming Languages</title>
</head>
<body>
    <ul>
        <li>Python</li>
        <li>Java</li>
        <li>JavaScript</li>
        <li>C#</li>
        <li>C++</li>
    </ul>
</body>
</html>"
Optimize the following Python function to calculate the largest prime factor of a given number.,24,"def largest_prime_factor(n):
    largest_factor = 1
    i = 2
    while i <= n / i:
        if n % i == 0:
            largest_factor = i
            n /= i
        else:
            i+=1
    if n > largest_factor:
        largest_factor = n
    return int(largest_factor)

print(largest_prime_factor(24)) # Output: 3"
Edit a given Python program to improve its readability by following a PEP 8 style guide.,"def divide(a, b):
    q = a // b
    r = a - q * b
    return q,r","def divide(a, b):
    """"""Divide two integers and returns the quotient and remainder.

    Args:
        a (int): The dividend.
        b (int): The divisor.

    Returns:
        int: The quotient and remainder.
    """"""
    q = a // b
    r = a - q * b
    return q, r"
Write a python program that calculates the average age of a group of people.,"names = ['Bob', 'Jack', 'John', 'David']
ages = [12, 27, 45, 16]","def calculate_average_age(names, ages):
    result = 0
    for i in range(len(names)):
        result += ages[i]
    return round(result / len(names), 2)

names = ['Bob', 'Jack', 'John', 'David']
ages = [12, 27, 45, 16]

print(calculate_average_age(names, ages))"
Create a Python program to generate random strings using a given character set.,"Character Set: 'abc'
String Length: 5","import random

def generate_random_string(length, char_set):
    random_string = ''
    
    for _ in range(length):
        random_string += random.choice(char_set)
    
    return random_string

char_set = 'abc'
length = 5

print(generate_random_string(length, char_set))"
Create a function in Python to perform a linear search on a list of numbers.,"def linear_search(numbers, x):","def linear_search(numbers, x):
    """"""This function will perform a linear search on a list of numbers and return the index of the number if it is present in the list.""""""
    for i in range(len(numbers)):
        if numbers[i] == x:
            return i 
    # if the number is not found
    return -1"
Write a Python program which takes the length and width of a rectangle as input and returns its perimeter.,"length = 10, width = 5","def get_perimeter(length, width):
    return 2 * (length + width)

perimeter = get_perimeter(10, 5)
print(perimeter)"
Create a Python function that takes an integer n and returns an array of n random numbers between 0 and 9.,10,"def random_array(n):
    import random
    arr = []
    for _ in range(n):
        arr.append(random.randint(0,9))
    return arr
    
arr = random_array(10)
print(arr)"
Convert the following Python code to the equivalent R code.,"for i in range (0, 5):
  print (i)","for(i in 0:5) {
  print(i)
}"
Finish coding a reusable Python function that takes in a list and an argument.,"list = [1, 2, 3, 4, 5]
argument = ""multiply""","def modify_list(list, argument):
    if argument == ""multiply"":
        for i in range(len(list)):
            list[i] = list[i]*list[i]
    elif argument == ""add"":
        for i in range(len(list)):
            list[i] = list[i] + list[i]
    return list"
Generate a Python program to output the maximum element in a given array.,"The array is [1, 4, 9, 3, 6, 5]","def findMax(arr):
    max_number = arr[0]
    for i in range(1, len(arr)):
        if arr[i] > max_number:
            max_number = arr[i]
    return max_number

arr = [1, 4, 9, 3, 6, 5]
max_number = findMax(arr)
print(""The maximum element in the array is:"", max_number)"
Construct a Python class that takes a given number and calculates the sum of the digits.,6342,"class SumOfDigits:
    
    def __init__(self, num):
        self.num = num
    
    def calculate_sum_of_digits(self):
        total = 0
        for ch in str(self.num):
            total += int(ch)
        return total

digit_sum = SumOfDigits(6342)
result = digit_sum.calculate_sum_of_digits()
print(result)"
Debug the Python code.,"def gen_all_triplets(n):
triplets = []
for i in range(1, n):
    for j in range(i+1, n):
        for k in range(j+1, k):
            triplets.append([i, j, k])
return triplets","def gen_all_triplets(n):
    triplets = []
    for i in range(1, n):
        for j in range(i+1, n):
            for k in range(j+1, n):
                triplets.append([i, j, k])
    return triplets"
Write a Python program that takes a list and prints out the items after sorting them in descending order.,"['apple', 'banana', 'cherry']","fruit = ['apple', 'banana', 'cherry'] 
fruit.sort(reverse=True)
print(fruit) # ['cherry', 'banana', 'apple']"
"Given a list of elements, write a program to shuffle the elements in Python.","myList = [1, 2, 3, 4, 5, 6]","import random 

def shuffle_list(myList): 
  shuffledList = random.sample(myList, len(myList)) 
  return shuffledList

shuffledList = shuffle_list(myList) 

print(""Shuffled List :"", shuffledList) 

# Output: Shuffled List : [2, 6, 4, 5, 3, 1]"
"You need to optimise a given Python code, which takes a  3x3 matrix as input and outputs the inverse.","import numpy as np

def inverse_matrix(matrix):
    return np.linalg.inv(matrix)","import numpy as np

def inverse_matrix(matrix):
    det = np.linalg.det(matrix)
    if det == 0:
        return None 
    return np.dot(np.linalg.inv(matrix), 1/det)"
Write a code in Python for computing the maximum difference between any two elements in an array.,"Array: [2, 9, 4, 1, 5]","def max_difference(arr): 
  
    max_diff = 0
    for i in range(0, len(arr)): 
        for j in range(i+1, len(arr)): 
            diff = arr[j]-arr[i] 
            if(diff > max_diff): 
                max_diff = diff 
  
    return max_diff 
  
array = [2, 9, 4, 1, 5]
  
print(""Maximum difference ="", max_difference(array))"
Create a Python function to classify whether a given sentence is spam or not.,"Sentence: ""Claim your free gift by clicking the link below!""","def is_spam(sentence):
  spam_words = [""free"", ""gift"", ""click"", ""link""]
  words = sentence.split(' ')
  
  for word in words:
    word = word.lower()
    if word in spam_words:
      return True

  return False"
Generate an algorithm in Python to check if a given number of years is a leap year.,year = 1999,"def is_leap_year(year):
    if year % 400 == 0:
        return True
    if year % 100 == 0:
        return False
    if year % 4 == 0:
        return True
    return False

year = 1999
if is_leap_year(year):
    print(""This is a leap year."")
else:
    print(""This is not a leap year."")"
Write a script in Python for converting binary to decimal.,"""1010""","input_binary = ""1010""
decimal = int(input_binary, 2)
print(decimal)"
Construct a code to eliminate all negative numbers from a list using Python.,"[-1, 9, -3, 4, -8]","def remove_negatives(nums):
    new_list = [num for num in nums if num > 0]
    return new_list

my_list = [-1, 9, -3, 4, -8]
filtered_list = remove_negatives(my_list)
print(filtered_list) #[9, 4]"
"Modify the following line of code in Python to generate a list of odd numbers in the range [1,n].","[i for i in range (1, 10)]","[i for i in range (1, 10) if i % 2 != 0]"
Create a code to classify 10 different types of fruits in Python.,"fruits = [ ""apple"", ""orange"", ""mango"", ""banana"", ""pineapple"", ""pear"", ""strawberry"", ""blueberry"", ""plum"", ""peach"" ]","fruits_dict = {
    'apple':'fruit', 
    'orange':'fruit', 
    'mango':'fruit', 
    'banana':'fruit', 
    'pineapple':'fruit', 
    'pear':'fruit', 
    'strawberry':'fruit', 
    'blueberry':'fruit', 
    'plum':'fruit', 
    'peach':'fruit'
}"
Write a Python program to print the day of week for a specific date.,"Date: ""21 October 2020""","import datetime

date_str = ""21 October 2020""
date = datetime.datetime.strptime(date_str, ""%d %B %Y"")
print(date.strftime(""%A""))"
"Write a Python program to find all the words in a string, that begin with a vowel.",This is a sample string,"vowels = ['a', 'e', 'i', 'o', 'u']
words = ""This is a sample string"".split()

for word in words:
 if word[0].lower() in vowels:
 print(word)"
Construct a python program to print out the number of distinct elements in a string.,"""hello world!""","def count_unique(s):
    seen = set()
    count = 0
    
    for character in s:
        if character not in seen:
            seen.add(character)
            count += 1
            
    return count

print(count_unique(""hello world!""))"
Create a program to provide all possible combinations of two numbers with the given digits.,Digits: 12,"# Python
digits = ""12""

for i in range(len(digits)):
 for j in range(len(digits)):
 if i != j:
 print(digits[i] + digits[j])

# 10, 11, 12, 21, 22"
Write a Python program that takes a list of numbers and checks if a given number is present in the list.,"Given list: [12, 45, 37, 13, 4]
Given number: 4","list = [12, 45, 37, 13, 4]
x = 4

if x in list:
 print(""Given number is present in the list"") 
else: 
 print(""Given number is not present in the list"")"
Implement a function in Python to round a number up to 0 decimal places.,19.876,"def roundUp(x):
    return int(round(x))

print(roundUp(19.876))"
Write a Python program to loop through a list and print each element of the list.,"[1, 2, 3, 4]","for x in [1, 2, 3, 4]:
    print(x)"
Design a program in Python that uses a loop to iterate through the items in a list.,"items = [1, 2, 3, 4, 5]","def loop_through_list(items):
    """"""Iterates through a list of items and prints each one""""""
    for item in items:
        print(item)"
"Create a Python program to calculate the sum of two numbers, given their positions in a given list.","[1, 4, 5, 8, 9], positions = 3, 5","def sum_positions(numbers, pos1, pos2):
 sum = numbers[pos1] + numbers[pos2]
 return sum

numbers = [1, 4, 5, 8, 9]
positions = (3, 5)
print(sum_positions(numbers, positions[0], positions[1]))"
Develop a Python program to display the Fibonacci sequence up to n-th term.,10,"def fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b 
  
# Driver Program 
print(fibonacci(10))"
Create an algorithm in python that calculates the sum of squares of all the numbers from 1 to N.,N = 10,"def sum_of_squares(n):
    result = 0
    for i in range(n+1):
        result += i**2
    return result"
Create a program in Python to reverse a string using a recursive algorithm.,"string = ""Hello world!""","def reverse_string_recursive(string: str) -> str: 
  if len(string) == 0:
    return string 
  else: 
    return reverse_string_recursive(string[1:]) + string[0]

print(reverse_string_recursive(string)) 
# Output: ""!dlrow olleH"""
Develop a script in Python to find all numbers in a given string.,This sentence has two numbers: 35 and 347.,"import re

s = ""This sentence has two numbers: 35 and 347.""
numlist = []
for item in re.findall('\d+', s):
    numlist.append(int(item))
    
print(numlist) # prints [35, 347]"
Generate a python program to substitute $username with an input's username.,"The user named ""$username"" will receive a special price.","def substitute_username(input):
    output = input.replace(""$username"", input.username)
    return output"
Create a visualisation for the following dataset in Python using Matplotlib.,"movie_name,distance
Jareth and Sarah, 77.4
Garreth and Martha, 4.3
Pam and Joe, 22.6","import matplotlib.pyplot as plt

movie_name = ['Jareth and Sarah', 'Garreth and Martha', 'Pam and Joe']
distance = [77.4, 4.3, 22.6]

plt.bar(movie_name, distance)
plt.xlabel('Movie Name')
plt.ylabel('Distance (miles)')
plt.title('Movie Name vs Distance')
plt.show()"
Create a code to identify the highest common factor of two given numbers in Python,90 and 99,"""""""
Create a code to identify the highest common factor of two given numbers in Python

""""""

def gcd(a, b): 
    # base case 
    if (a == 0):
        return b 
      
    return gcd(b%a, a) 


a = 90
b = 99

# print the result
print(gcd(a, b))"
Generate a valid python program to convert a given string to its title case.,hello world,"def to_title_case(string):
    words = string.split()

    result = []
    for word in words:
        result.append(word.title())

    return ' '.join(result)

title = to_title_case(""hello world"")
print(title)"
Write a function to return the first n prime numbers in Python.,Number of Prime Numbers needed: 5,"def firstPrimeNumbers(number): 
    primeNumbers = [] 
  
    for num in range(1, number + 1): 
 
        if (num > 1): 
            for i in range(2, num): 
                if (num % i == 0): 
                    break
            else: 
                primeNumbers.append(num)
    return primeNumbers
  
# Test code 
prime = firstPrimeNumbers(5) 
print(prime)"
Create an algorithm in Python to find the square root of a positive number??,num = 16,"def calculate_square_root(num): 
   # Taking a square root of number 
   return num ** 0.5
  
# Driver Code 
num = 16
print(calculate_square_root(num)) 

# Output 
4.0"
Identify the issue with the following Python code snippet.,"list1 = [1, 2, 3]
list2 = [4, 5, 6]
list3 = list1 + list2","The issue with the code snippet is that the two lists are not being concatenated, but instead being added together, resulting in a list containing the sums of the corresponding elements in the two lists. The correct code snippet should be as following:

list1 = [1, 2, 3]
list2 = [4, 5, 6]
list3 = list1 + list2"
Write a Python code to replace all the occurrences of a specific word in a given text.,"text = ""The quick brown fox jumps over the lazy dog""
word = ""fox""
replacement = ""cat""","text = text.replace(word, replacement)
print(text)
# Output: The quick brown cat jumps over the lazy dog"
Write a Python script to calculate the average age of a group of people.,"[{'name': 'John', 'age': 25}, {'name': 'Mia', 'age': 28}, {'name': 'Jack', 'age': 33}]","people = [
    {'name': 'John', 'age': 25}, 
    {'name': 'Mia', 'age': 28}, 
    {'name': 'Jack', 'age': 33}
]

total_age = 0

for person in people:
    total_age += person['age']

average_age = total_age / len(people)

print(""Average age: {}"".format(average_age))"
Write a python script to calculate the standard deviation of a given list of numbers,"numbers = [1, 2, 3, 4, 5]","import numpy as np

def calculate_standard_deviation(arr):
    return np.std(arr)

print(calculate_standard_deviation(numbers)) # Prints 1.4142135623730951"
Create a for loop in Python to iterate through a given list of numbers and find the sum.,"[11, 12 , 15, 20, 56]","nums = [11, 12, 15, 20, 56]

total = 0
for num in nums:
    total += num
 
print(total) # 110"
Write a Python code to find the RMSE (root mean squared error) of two given lists.,"list1 = [1, 2, 3]
list2 = [2, 3, 4]","import math 

def rmse(list1, list2): 
    mean_square = 0
    for i in range(len(list1)):
        mean_square += math.pow((list1[i] - list2[i]), 2)
    return math.sqrt(mean_square/len(list1))

rmse_value = rmse(list1, list2)
print(""Root Mean Square Error is:"", rmse_value)"
Sort an array in ascending order using Python.,"8, 16, 7, 15, 1","def myFunc(arr): 
    arr.sort()
    return arr
  
arr = [8, 16, 7, 15, 1]
x = myFunc(arr)
print(x)"
Design a function in Python that takes a list and removes the duplicates from it.,"list = [1, 2, 3, 4, 3, 2]","def remove_duplicates(my_list):
  my_list = list(dict.fromkeys(my_list))
  return my_list
  
list = [1, 2, 3, 4, 3, 2]

unique_list = remove_duplicates(list)

print(unique_list) # [1, 2, 3, 4]"
Write a function in Python that sorts a given list of strings in alphabetical order case insensitive.,"input_list = [""BANANA"", ""apple"", "" Orange "", ""GRAPES""]","def sort_strings_case_insensitive(input_list):
  return sorted([string.strip().lower() for string in input_list])"
Write a Python function to sort the following list of numbers with bubble sort algorithm.,"[5, 4, 3, 2, 1]","def bubble_sort(list): 
    n = len(list)  
    for i in range(n-1): 
        for j in range(0, n-i-1): 
            if list[j] > list[j+1] : 
                list[j], list[j+1] = list[j+1], list[j]
    return list
  
# Sample list 
list = [5, 4, 3, 2, 1]
  
# Function Call 
bubble_sort(list)"
Create a python program that counts the words in a list of sentences.,"sentences = ['This is a sentence', 'This is another sentence', 'And yet another sentence.']","def count_words(sentences):
    count = 0
    for sentence in sentences:
        words = sentence.split()
        count += len(words)
    return count"
Can you write a code snippet in Python that replaces all occurrences of a specific character in a string?,"string = ""Hello World""
character = ""o""","def replace_all_occurrences(string, character): 
  return string.replace(character, """")"
Create a Python program for sorting a list of numbers in increasing order.,"[3, 1, 8, 5, 7]","def sort_list(list):
 for _ in range(len(list)):
 for j in range(len(list)-1):
 if list[j] > list[j+1]:
 list[j], list[j+1] = list[j+1], list[j]
 return list

# Testing the function
example_list = [3, 1, 8, 5, 7]
sorted_list = sort_list(example_list)

print(sorted_list)
# Output: [1, 3, 5, 7, 8]"
Develop a Python program to convert a list into a dictionary.,"List of colors: [""red"", ""green"", ""blue""],","colors = [""red"", ""green"", ""blue""]

color_dictionary = {i : colors[i] for i in range(len(colors))} 

print(color_dictionary)"
Generate a Python program to delete the element at a given index from the given array.,"[1,2,3,4,5], index=3","def delete_element_at_index(arr, index):
    if index >= len(arr):
        raise Exception('index out of range')
    
    # Delete the element at the index
    del arr[index]

# Example array and index
my_arr = [1,2,3,4,5];
index = 3;

# Call the function
delete_element_at_index(my_arr, index)

# Print the array
print(my_arr)"
Generate an algorithm in Python to rotate an array of size 'n' by 'd' elements.,"[1, 2, 3, 4, 5], d=2","def rotate(arr, d):
    for _ in range(d):
        temp = arr[0]
        for i in range(len(arr)-1):
            arr[i] = arr[i+1]
        arr[len(arr)-1] = temp

    return arr

arr = [1, 2, 3, 4, 5]
d = 2

rotated_arr = rotate(arr, d)
print(rotated_arr) # [3, 4, 5, 1, 2]"
Create a Python script to loop over a list of numbers and print out each value if it is greater than five.,"list = [1, 2, 3, 4, 5, 6, 7, 8]","def loop_list(list):
    for i in list:
        if i > 5:
            print(i)"
Write a Python statement that Finds the maximum value among the given numbers.,"[10, 5, 15, 35, 20]","max_num = max([10, 5, 15, 35, 20])
print(max_num)"
Make a prediction model in Python and classify a given set of data into two different categories,"Data: 
[1, 2, 3, 4, 5]

Category 1: Even
Category 2: Odd","def predict_model(arr):
    labels = []
    for num in arr:
        if num % 2 == 0:
            labels.append('Even')
        else:
            labels.append('Odd')
    return labels

result = predict_model([1, 2, 3, 4, 5])
print(result)"
Create a Python function that takes a string and returns the longest prefix that is a palindrome.,"The input string is ""abca"".","def longest_prefix_palindrome(s):
  if len(s) <= 1: 
    return s
  
  max_length = 0
  for i in range(1,len(s)): 
    if s[:i] == s[i-1::-1]:
       max_length = i 
  
  return s[:max_length] 

print(longest_prefix_palindrome(""abca""))"
Edit the following Python code to sort a list of numbers in reversed order.,"numbers = [15, 2, 5, 12, 8]",numbers.sort(reverse=True)
Create a Python program to find the square root of the sum of two numbers without using the sqrt() function.,"Num1 = 4
Num2 = 9","# Python program
import math 

def square_root(a, b): 
    return math.sqrt(a*a + b*b)
  
Num1 = 4
Num2 = 9

print(""Square root of the sum of two numbers:"", square_root(Num1, Num2))"
Design a Python program to record data from a given list of dictionaries.,"[{'name':'John', 'age':25, 'team':'A'}, {'name':'Mark', 'age':30, 'team':'B'}]","data = [
    {'name': 'John', 'age': 25, 'team': 'A'}, 
    {'name': 'Mark', 'age': 30, 'team': 'B'}
]

records = []
for item in data:
    record = {}
    for key, value in item.items():
        record[key] = value
    records.append(record)

print(records)"
Design a Python program that analyses the sentiment of a given text.,"""I love programming""","import nltk
from nltk.sentiment.vader import SentimentIntensityAnalyzer

text = ""I love programming""

sid = SentimentIntensityAnalyzer()
scores = sid.polarity_scores(text)

if scores['compound'] > 0.0:
 print(""Positive sentiment"")
elif scores['compound'] == 0.0:
 print(""Neutral sentiment"")
else:
 print(""Negative sentiment"")

# Output: Positive sentiment"
Create a program in Python to delete all the elements from the list which have a value greater than a given number.,"list = [1, 5, 6, 8, 9, 10], num = 7","def removeGreaterNum(list, num): 
  
    return [x for x in list if x < num] 
      
list = [1, 5, 6, 8, 9, 10] 
num = 7
print(removeGreaterNum(list, num))"
Produce a Python program to compute the Fibonacci number for a given integer.,8,"def getFibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    elif n==1: 
        return 0
    elif n==2: 
        return 1
    else: 
        return getFibonacci(n-1)+getFibonacci(n-2) 

number = 8
fibonacci_number = getFibonacci(number)
print(fibonacci_number)"
Design a program in Python to delete all the odd numbers from an array.,"[1, 2, 3, 4, 5, 6]","def delete_odd_numbers(arr):
  new_arr = []
  for i in arr:
    if i % 2 != 0:
      continue
    else:
      new_arr.append(i)
  return new_arr

arr = [1, 2, 3, 4, 5, 6]
print(delete_odd_numbers(arr))"
Optimize a Python program to check for prime numbers,"def isPrime(n):
  for i in range(2, n):
    if n % i == 0:
      return False
  return True

num = 23
if isPrime(num):
  print(""Number is prime"")
else:
  print(""Number is not prime"")","def isPrime(n):
 if n <= 1:
 return False
 for i in range(2, int(n ** 0.5) + 1):
 if n % i == 0:
 return False
 return True

num = 23
if isPrime(num):
 print(""Number is prime"")
else:
 print(""Number is not prime"")"
"Design a Python program to solve the following problem: Given two strings of equal length, print the number of differences.","str1 = ""abcd"", str2 = ""abcx""","def diff_characters(str1, str2):
 diff_count = 0

 for i in range(len(str1)):
     if str1[i] != str2[i]:
         diff_count += 1

 return diff_count

str1 = ""abcd""
str2 = ""abcx""

print(diff_characters(str1, str2))

# Output: 1"
Write a Python script to generate all the possible words for a given set of characters.,"""abc""","import itertools

characters = 'abc'
words = [''.join(word) for word in itertools.product(characters, repeat=3)]

print (words)

# output: ['aaa', 'aab', 'aac', 'aba', 'abb', 'abc', 'aca', 'acb', 'acc', 'baa', 'bab', 'bac', 'bba', 'bbb', 'bbc', 'bca', 'bcb', 'bcc', 'caa', 'cab', 'cac', 'cba', 'cbb', 'cbc', 'cca', 'ccb', 'ccc']"
"Create a Python application that receives user input, manipulates the data, and generates output.",John is 10 years old,"user_input = input(""What is your name and age: "")
name, age = user_input.split()
print(f""Hi {name}, you are {int(age)+1} years old"")
# Output: Hi John, you are 11 years old"
Write python code to return the maximum number in a list.,"nums = [1, 15, 20, 6]","def find_max(nums):
    '''Returns the maximum number in the list.'''
    max_val = nums[0]
    for num in nums:
        if num > max_val:
            max_val = num
    
    return max_val"
Write a Python program to find the top 3 highest scores in a given tennis game.,"game_scores = [20, 24, 27, 30, 18, 28, 15, 25, 30, 22, 28]","# find the top 3 highest scores
game_scores = [20, 24, 27, 30, 18, 28, 15, 25, 30, 22, 28]

top_scores = sorted(game_scores, reverse=True)[:3]

print(""The top 3 highest scores are:"", top_scores)"
Create a python class that simulates an invoice with information about the item and the cost.,"Example of an Invoice:

Item: Pen
Price: $3","class Invoice:
    def __init__(self, item, price):
        self.item = item
        self.price = price
    
    def get_item(self):
        return self.item
    
    def get_price(self):
        return self.price

invoice = Invoice(""Pen"", 3)"
Generate a Python program that takes a string and capitalizes the first character of each word.,"""this is an example""","def capitalize_string(str):
    words = str.split(' ')
    capitalized_words = [word.capitalize() for word in words]
    return "" "".join(capitalized_words)

capitalized_string = capitalize_string(""this is an example"")
print(capitalized_string)"
Create a Python program for implementing a linear search algorithm.,"[4, 6, 5, 2, 9]","def linearSearch(arr, key): 
 for idx, num in enumerate(arr):
 if num == key:
 return idx
 
 return -1"
Create a Python program to check if the given number is divisible by 3 or not.,12,"def is_divisible_by_3(n):
  return (n % 3 == 0)

n = 12
if is_divisible_by_3(n):
  print(str(n) + ' is divisible by 3.')
else:
  print(str(n) + ' is not divisible by 3.')"
"Create an SHA-2 encryption algorithm in Python using a provided string ""abc"".",abc,"import hashlib

s = 'abc'.encode(""utf-8"")

hash_object = hashlib.sha256(s)
hex_dig = hash_object.hexdigest()
print(hex_dig)"
"Given the following input JSON data, write a Python program to print out all the elements that have an even length.","Input data:{""apple"":[""red"",""green""],""pear"":[""green""],""grapes"":[""green"",""red""],""banana"":[""yellow""]}","import json

data = '{""apple"":[""red"",""green""],""pear"":[""green""],""grapes"":[""green"",""red""],""banana"":[""yellow""]}'

json_data = json.loads(data)

for item in json_data.items():
    if len(item[1]) % 2 == 0:
        print(item[0])"
Create a Python function to input a string and then return the number of vowels found in the string.,hello,"def count_vowels(string):
 vowels = [""a"", ""e"", ""i"", ""o"", ""u""]
 count = 0
 for letter in string.lower():
 if letter in vowels:
  count += 1
 return count

output = count_vowels(""Hello"")
print(output)  # output = 2"
Create an algorithm in Python to sort an array using selection sort.,"[4, 1, 6, 5, 7, 2, 0]","def selection_sort(arr):
    for i in range(len(arr)):
        min_index = i
        
        for j in range(i + 1, len(arr)):
            if arr[min_index] > arr[j]:
                min_index = j
                
        arr[i], arr[min_index] = arr[min_index], arr[i]
        
    return arr

arr = [4, 1, 6, 5, 7, 2, 0]
print(selection_sort(arr))"
Write a python function to remove duplicates from an array.,"[1, 2, 3, 3, 3, 4, 5, 6]","""""""
Remove duplicates from an array
""""""

def remove_duplicates(arr):
    # Create a set 
    seen = set()
    
    # Traverse the array
    for i in range(len(arr)):
        if arr[i] not in seen:
            seen.add(arr[i])
            
    return seen

if __name__ == '__main__':
    arr = [1, 2, 3, 3, 3, 4, 5, 6]
    print(remove_duplicates(arr))"
Write a Python program to sort a list of tuples using a given key.,"[(2, 5), (1, 2), (4, 4), (2, 3), (2, 1)]","def sort_list(lst, key): 
    return sorted(lst, key = lambda x: x[key]) 

# Driver code 
lst = [(2, 5), (1, 2), (4, 4), (2, 3), (2, 1)] 
key = 1
print(sort_list(lst, key))"
Create a Python script that processes a sentence and classifies it as positive or negative.,The food was really bad.,"import nltk
from nltk.sentiment.vader import SentimentIntensityAnalyzer

sentence = ""The food was really bad.""

sentiment_analyzer = SentimentIntensityAnalyzer()
score = sentiment_analyzer.polarity_scores(sentence)

if score['compound'] > 0:
 sentiment = 'positive'
elif score['compound'] < 0:
 sentiment = 'negative'

print(f'The sentence is {sentiment}.')"
"Design a Python program for comparing two strings and printing ""Equal"" if the strings are equal, or ""Not Equal"" if the strings are not equal.","string1 = ""hello""
string2 = ""world""","if string1 == string2:
    print(""Equal"")
else:
    print(""Not Equal"")"
Optimize a given Python code segment to run it faster.,"a = 10
   b = 0
   while a > 0:
     b += 1
     a -= 1","a = 10
b = 0
while a > 0:
 b += a
 a //= 2"
Write a function using Python to scramble a word.,word: hello,"import random

def scramble_word(word):
    # Convert the word to a list
    word_list = list(word)
    #Scramble the Letters
    random.shuffle(word_list)
    #Convert back to a string
    scrambled_word = ''.join(word_list)
    return scrambled_word

if __name__ == '__main__':
    print(scramble_word('hello'))"
Design a Python program that finds maximum sum of an array,"Array: [1,-3,7,12,-4,8]","def max_sum(arr): 
    n = len(arr) 
    max_sum_so_far = 0
  
    for i in range(n): 
        max_ending_here = 0
          
        for j in range(i, n): 
            max_ending_here += arr[j] 
            if (max_sum_so_far < max_ending_here): 
                max_sum_so_far = max_ending_here 
  
    return max_sum_so_far

result = max_sum([1,-3,7,12,-4,8])
print(result)"
Can you convert this Python code to Ruby?,"def my_func(a, b): 
    return a + b","def my_func(a, b)
  a + b
end"
Create a web API in Python Flask that returns the factorial of the provided number.,5,"from flask import Flask, request

app = Flask(__name__)

@app.route('/factorial', methods=['POST'])
def factorial():
 num = request.json['num']
 result = 1
 for i in range(2, num + 1):
  result *= i
 return { 'factorial': result }

if __name__ == '__main__':
 app.run(debug=True)"
Generate a program in Python that returns a list of all prime numbers between two given numbers.,"start = 5
end = 100","def primes(start, end):
    prime_list = []
    for i in range(start, end + 1):
        is_prime = True
        for j in range(2, i):
            if i % j == 0:
                is_prime = False
                break
        if is_prime:
            prime_list.append(i)
    return prime_list

prime_numbers = primes(start, end)
print(prime_numbers)"
Create a Python function that takes an integer argument and prints the prime factors of that number.,num = 30,"def find_prime_factors(num): 
    factors = []
    
    i = 2
    while i * i <= num: 
        if num % i: 
            i += 1
        else:
            num //= i
            factors.append(i)

    if num > 1:
        factors.append(num)

    print(factors)

find_prime_factors(num)"
Write a Python function to rotate a list by n items to the left.,"list = [1, 2, 3, 4, 5]","def rotate(list, n): 
    return list[n:] + list[:n]"
Write a Python program that creates a dictionary of emails and passwords based on the given input.,"A list of emails and passwords:
[
    ('John', 'j12345'),
    ('Adam', 'a12345'),
    ('Alex', 'a54321')
]","def create_email_password_dict(data):
 email_password_dict = {}
 for name, password in data:
 email_password_dict[name.lower() + '@example.com'] = password
 return email_password_dict

email_password_dict = create_email_password_dict(information)"
Correct the errors and run this Python code.,"print(""Hello&%World"")","print(""Hello World"")"
Create a python program that outputs a sentence when given an input of two words.,"words = [""red"", ""apple""]","words = [""red"", ""apple""]

sentence = words[0] + "" "" + words[1]
print(sentence)"
Create a Python program to search for a given query from a given array of strings using regular expressions.,"query = 'ab+c'
string_array = ['abc', 'def', 'ghi', 'abcd', 'abcde']","import re

query = 'ab+c'
string_array = ['abc', 'def', 'ghi', 'abcd', 'abcde']

for string in string_array:
    if re.search(query, string):
        print(string)

# Output:
# abc
# abcd
# abcde"
Edit a Python program to calculate the product of two numbers.,"def product(num1, num2):
 return 0","def product(num1, num2):
 return num1 * num2"
"Design a Python program to find the difference between two provided times. The two times should be provided as strings in the format ""[HH:mm:ss]"".","time1 = ""08:30:15""
time2 = ""10:20:20""","from datetime import datetime

def time_diff(time1, time2):
 t1 = datetime.strptime(time1, ""%H:%M:%S"")
 t2 = datetime.strptime(time2, ""%H:%M:%S"")
 return (t2 - t1).total_seconds()

print(time_diff('08:30:15', '10:20:20')) // 7200.0"
You are required to write a Python program to optimize an equation.,x + x + y + y + y,"def optimize_equation(equation):
    variables = []
    for term in equation.split('+'):
        var, count = term.strip().split(' ')
        variables.append((var, int(count)))

    new_equation = """"
    for var, count in variables:
        new_equation += (var + '^' + str(count)) + ' + '
    return new_equation[:-3]

equation = 'x + x + y + y + y'

print(optimize_equation(equation))"
"Create a Python program to remove all the elements in a given array, which are divisible by a certain number.","[23, 45, 12, 35, 29], 3","# Enter the Array
arr = [23, 45, 12, 35, 29] 
 
# Enter the Number
num = 3
 
# Print the New Array
new_arr = [x for x in arr if x % num != 0] 
 
# Print the Result
print(new_arr)"
Create a Python script that takes a number and a power as parameters and calculates the result.,Example input: number=2 power=3,"def power(number, power):
 return number**power

print(power(2, 3)) # Output: 8"
Write a Python program to get all the information associated with an IPv4 address.,"IPv4 address = ""8.8.8.8""","import socket
ip =  ""8.8.8.8""
address_info = socket.getaddrinfo(ip, None)

for info in address_info:
    print(""IP version :"", info[0])
    print(""IP address as string:"", info[4][0])
    print(""IP address as tuple:"", info[4])
    print(""IP protocol:"", info[6])"
Write a Python program to Reverse the word sequence of a given sentence,This is a test,"def reverse_sentence(sent):
    words = sent.split("" "")
    reversed_words = words[::-1]
    result = "" "".join(reversed_words)
    return result

sentence = ""This is a test""
print(reverse_sentence(sentence))

# Output
test a is This"
Write an algorithm in Python to determine the largest number in an array.,"arr = [10, 8, 12, 4, 6]","def find_max(arr): 
    max_val = arr[0] 
  
    for i in range(1, len(arr)): 
        if arr[i] > max_val: 
            max_val = arr[i] 
  
    return max_val 
  
# Driver code 
arr = [10, 8, 12, 4, 6]
result = find_max(arr) 
print(result) 

# Output: 12"
Write an algorithm in Python to sort an array of numbers in descending order.,"[13, 11, 7, 4, 2]","def descendingSort(arr): 
    arr.sort(reverse=True) 
    return arr
  
arr = [13, 11, 7, 4, 2]
result = descendingSort(arr) 
  
print (result)"
Create a Python program that creates a new list containing only even numbers from a given list.,"[1, 2, 3, 4, 5, 6, 7, 8, 9]","# create a list
original_list = [1, 2, 3, 4, 5, 6, 7, 8, 9]

# create a new list with only even numbers 
even_list = [num for num in original_list if num % 2 == 0] 
  
# display the even list 
print(even_list)"
Create a Python script to remove all empty elements from a list.,"list = [""a"", """", ""b"", """", ""c"", """"]","list = [""a"", """", ""b"", """", ""c"", """"] 

result = [element for element in list if len(element) > 0] 

print(result)"
Generate python code to rotate an array to the left.,"arr = [1, 2, 3, 4, 5]","def rotate_left(arr):
    first_element = arr[0]
    for i in range(len(arr) - 1):
        arr[i] = arr[i + 1]
    arr[len(arr) - 1] = first_element

rotate_left(arr)"
Write a Python script that takes in the arguments x and y and prints the result of p + q.,"p = 5
q = 7","def calculate_sum(x, y):
    """"""
    Takes in the arguments x and y and prints the result of p + q.
    Args:
        x: first argument.
        y: second argument.
    Returns:
        result: the sum of the two arguments.
    """"""
    result = x + y
    return result

p = 5
q = 7
result = calculate_sum(p, q)
print(result)"
Write a Python function that takes an array of numbers and returns an array with the greatest and smallest values.,"[3, 4, 2, 8, 15, 6]","def min_max(arr):
  min_val = min(arr)
  max_val = max(arr)
  return [min_val, max_val]

result = min_max([3, 4, 2, 8, 15, 6])
print(result)"
Create a Python program that prints out the Fibonacci sequence up to the nth number given as input.,n = 10,"def fibonacci(n):
    fib_list = [0 , 1]

    for i in range(2 , n):
        fib_list.append(fib_list[i - 2] + fib_list[i - 1])

    return fib_list[:n]

print(fibonacci(n))"
"Create a python function to check if a given string contains a specific substring. The function should loop through the string and find the substring, and return a boolean value indicating if the substring was found or not.","myString = ""Hello World!""
substring = ""World""","def checkIfStringContainsSubstring(myString, substring):
  for i in range(len(myString) - len(substring) + 1):
    if myString[i:i+len(substring)] == substring:
      return True
  return False"
Write a function in Python to remove all occurrences of a specific character from a string.,"string = ""computer science""
remove_char = ""c""","def remove_char_from_string(string, remove_char):
    new_string = """"
    for char in string:
        if char != remove_char:
            new_string += char
    return new_string

if __name__ == '__main__':
     string = ""computer science""
     remove_char = ""c""
     print(remove_char_from_string(string, remove_char))"
Rewrite the following CoffeeScript program in Python code.,"coffeeConvert = (x) ->
 x * 60","def coffeeConvert(x):
 return x * 60"
Generate a python program that create a pandas dataframe from a dictionary column.,"data_dict = {'name': ['Bob', 'Alice', 'John'],
             'age': [18, 20, 19]}","import pandas as pd

df = pd.DataFrame(data_dict)"
Write an algorithm in Python to find the maximum and minimum elements in a given array of integers.,"[3, 5, 8, 1, 10]","def findMinMax(arr):
    min = arr[0]
    max = arr[0]
    for i in range(1, len(arr)):
        if arr[i] < min:
            min = arr[i]
        elif arr[i] > max:
            max = arr[i]
    return min, max

arr = [3, 5, 8, 1, 10]

min_val, max_val = findMinMax(arr)
print(min_val, max_val)"
Write a Python script that randomly shuffles a list of strings.,"[""Apple"", ""Orange"", ""Banana"", ""Strawberry""]","import random

list = [""Apple"", ""Orange"", ""Banana"", ""Strawberry""]
random.shuffle(list)

for item in list:
    print(item)"
Create a class in Python that takes a list of numbers as input and returns the product of all the numbers.,"[5, 4, 9, 10]","class ProductCalculator:
    def __init__(self, num_list):
        self.num_list = num_list
    
    def find_product(self):
        product = 1
        for num in self.num_list:
            product *= num
        return product

# example usage
num_list = [5, 4, 9, 10]
calc = ProductCalculator(num_list)
product = calc.find_product()
print(product)"
Classify a set of programming language names into high-level languages and low-level languages.,"JavaScript, Python, C, Assembly","High Level Languages: 
1. JavaScript 
2. Python

Low Level Languages: 
1. C 
2. Assembly"
"Create a script in Python which receives a list of numbers, and prints the sorted list in ascending order.","List of numbers: [7, 3, 4, 2]","list_of_numbers = [7, 3, 4, 2]

# sort the list
list_of_numbers.sort()

# print the sorted list
print(list_of_numbers)"
Develop a Python program to find and print the first non-repeating character from a given string.,"""Hello, world!""","def non_repeating_character(string):
    for c in string:
        if string.count(c) == 1:
            return c
    return 'No result'

print(non_repeating_character('Hello, world!'))"
Transform the following Python code to achieve the same result with better performance,"def classify_number_bigger_5(number):
    result = []
    for n in number:
        if n > 5:
            result.append(1)
        else:
            result.append(0)
    return result","def classify_number_bigger_5(number):
    return [1 if n > 5 else 0 for n in number]"
"Given a list of numbers, create a program to find the maximum number using Python.","numbers = [1,2,3,4,5,6]","def find_max(numbers):
    maximum = numbers[0]
    for num in numbers:
        if num > maximum:
            maximum = num
    return maximum

if __name__ == ""__main__"":
    numbers = [1,2,3,4,5,6]
    print(find_max(numbers))"
Generate a Python program to insert an element into a given sorted array.,"The sorted array is [1, 2, 3, 5] and the new element is 4.","def insert(arr, x):
    i = len(arr)-1
    while (i >= 0 and x < arr[i]):
        arr[i+1] = arr[i]
        i = i-1
    arr[i+1] = x
    return arr
  
# Input array and element 
arr = [1, 2, 3, 5] 
x = 4
  
# Calling Insert Function 
arr = insert(arr, x) 
  
# Print the modified array 
print(arr)"
Write a Python program to compare two lists of numbers and return any combination of numbers that occur in both lists.,"list1=[1,2,3,4,5,6]
list2=[3,4,5,7,8,9]","combinedList = [] 

for num1 in list1:
 for num2 in list2:
 if num1 == num2:
 combinedList.append(num1)

print(combinedList) # [3,4,5]"
Generate a program in python that converts a given sequence of strings into a list,"""This is a test""","def convert_str_list(x):
    return x.split()

print(convert_str_list(""This is a test""))"
Generate a code in Python to print the length of the given string.,Hello world,"string = 'Hello world'

# print the length of string
print(len(string))"
Suggest a Python code to identify the median element of a given list,"example_list = [10,20,30,40]","def find_median(example_list):
    example_list.sort()
    if len(example_list) % 2 == 0:
        median = (example_list[int(len(example_list)/2)-1] + example_list[int(len(example_list)/2)])/2
    else:
        median = example_list[int((len(example_list)-1)/2)]
    return median"
Implement an algorithm in Python to sort a list of integers.,"List: [3, 9, 8, 5, 6, 4, 2, 1, 10, 7]","def sort(arr):
 for i in range(len(arr)):
 min_idx = i
 for j in range(i+1, len(arr)):
 if arr[min_idx] > arr[j]:
 min_idx = j
 arr[i], arr[min_idx] = arr[min_idx], arr[i]

list = [3, 9, 8, 5, 6, 4, 2, 1, 10, 7]
sort(list)
print(list) # [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"
Design a class in Python to store details of a person,"Name: John
Age: 34","class Person:
    def __init__(self, name, age):
        self.name = name
        self.age = age

person = Person('John', 34)"
Create a python program that takes a string and prints the reverse of it.,Hello,"""""""
Create a python program that takes a string and prints the reverse of it
""""""

# Get the input string 
my_string = input('Enter a string: ') 

# Reverse the string 
rev_string = my_string[::-1] 

# Print the reversed string
print(rev_string)"
Generate a function in Python to return the highest value in a dictionary for the given key.,"dictionary = {'A': 10, 'B': 20, 'C': 30, 'D': 40}","def highestValue(dictionary, key): 
    highest = 0 
    for key,value in dictionary.items(): 
        if value > highest: 
            highest = value 
    return highest 

highestValue(dictionary, key)"
Design a Python program to reverse the words in a sentence.,The quick brown fox,"def reverse_words(sentence):
    words = sentence.split("" "")
    reversed_words = reversed(words)
    reversed_sentence = "" "".join(reversed_words)
    return reversed_sentence

result = reverse_words(""The quick brown fox"")
print(result)"
Develop a Python program to count the frequency of each word in a given string.,"string = ""This is a string""","def countFreq(str): 
      
    # break the string into words  
    str = str.split("" "")  
      
    # Count each word using Dictionary  
    freq = {} 
    for word in str: 
        if word in freq: 
            freq[word] += 1
        else: 
            freq[word] = 1
    return freq"
Write a Python program to find the maximum possible sum of a sequence of consecutive numbers in a given array of integers.,"[2, 6, -2, -3, 8, 4]","def max_sum_sequence(arr):
    curr_max = 0
    max_so_far = 0
  
    for i in range(0, len(arr)):
        curr_max = max(arr[i], curr_max + arr[i])
        max_so_far = max(max_so_far, curr_max)
      
    return max_so_far

arr = [2, 6, -2, -3, 8, 4]
max_sum = max_sum_sequence(arr)
print(max_sum)"
Generate an optimized python program to calculate the sum of all digits in a given positive integer number.,123456,"input_number = 123456 

def find_sum_of_digits(number): 
    n = number 
    sum = 0
    while n > 0:
        sum += n % 10
        n //= 10
    return sum 

sum_of_digits = find_sum_of_digits(input_number) 
print(""Sum of all digits in {} is {}."" .format(input_number,sum_of_digits))"
Create a code snippet in Python that calculates the sum of the digits of a number.,123,"def sum_of_digits(number):
  sum_digits = 0
  while number > 0:
    sum_digits += (number % 10)
    number //= 10
  return sum_digits
  
print(sum_of_digits(123))"
Create a function in Python to return the media according to the following criteria:,"Given a list of numbers [1, 4, 7, 8, 10, 15, 21],","def get_median(num_list):
    sorted_list = sorted(num_list)
    length = len(sorted_list)
    if (length % 2 == 0):
        median = (sorted_list[length//2] + sorted_list[length//2 -1])/2.0
    else:
        median = sorted_list[length//2]
    return median"
Create a Python program to sort a given list according to the second element,"list = [[2,4], [3,2], [4,1], [1,3]]","def sortList(list):
    list.sort(key=lambda x: x[1]) 
    return list

list = [[2,4], [3,2], [4,1], [1,3]]
sorted_list = sortList(list)

print(sorted_list)

# output
[[4, 1], [3, 2], [1, 3], [2, 4]]"
Write a function in Python to sort the data in lexicographical order.,"[""red"", ""blue"", ""green"", ""purple"", ""pink"", ""black"", ""white""]","def sortLexicographical(data):
    return sorted(data, key=lambda x:x[0])

sorted_data = sortLexicographical([""red"", ""blue"", ""green"", ""purple"", ""pink"", ""black"", ""white""])
print(sorted_data)"
Design a recursive Python function that prints the Fibonacci series from 0 to n.,7,"def fibonacci(n):
  if n == 0:
    return 0
  elif n == 1:
    return 1
  else:
    return fibonacci(n - 1) + fibonacci(n - 2)
    
for i in range(0, n + 1):
    print(fibonacci(i))"
Create a basic web scraper in Python to parse HTML.,<p>This is some text</p><a href='www.example.com/'>Click Here</a>,"#import library
import bs4

#store HTML data
html_data = '<p>This is some text</p><a href='www.example.com/'>Click Here</a>'

#parse HTML data
soup = bs4.BeautifulSoup(html_data, 'html.parser')

#get all tags
all_tags = soup.find_all()

#print result
for tag in all_tags:
 print(tag)"
"Given a list of [x,y] coordinates, write a Python program to check whether the two points are on a straight line or not.","points = [[3,3], [2,2], [1,1]]","def line_checker(points):
    is_straight = True
    ref_x, ref_y = points[0]
    for i in range(1, len(points)):
        x, y = points[i]
        if (ref_y - y) * (ref_x - x) != 0:
            is_straight = False
            break
    return is_straight

points = [[3,3], [2,2], [1,1]]

print(line_checker(points))"
Edit the given python program to display the sum of all even numbers in the given list.,"list = [1, 2, 3, 4, 5]","list = [1, 2, 3, 4, 5]

total = 0
for num in list:
  if (num % 2 == 0):
    total += num
print (total)"
Convert the following Python function to C++,"def sum_list(numbers):
    result = 0
    for n in numbers:
        result += n
    return result","int sum_list(vector<int>& numbers) {
  int result = 0;
  for (auto& n : numbers) {
    result += n;
  }
  return result;
}"
Generate a Python function that takes as input a UTF-8 encoded string and returns a string where the characters in odd positions of the original string are repeated.,string = ‘HelloWorld’,"def repeat_char(s):
    result = ''
    for i,c in enumerate(s):
        if i % 2 == 0:
            result += c
        else:
            result += c*2
    return result

print(repeat_char('HelloWorld'))
# Output: HeellooWorrlld"
Design a function in Python to sort a list of numbers in increasing order using a recursive insertion sort algorithm.,"[3, 7, 4, 9, 5, 2, 6, 1]","def recursiveInsertionSort(arr):
    for i in range(1, len(arr)):
        currElem = arr[i]
        j = i - 1
        while j >= 0 and arr[j] > currElem:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = currElem
    return arr"
Generate a program in Python for sorting the elements of an array in descending order.,"[2, 4, 1, 6, 5]","def sort_descending(arr):
    # Sort array from largest to smallest
    arr.sort(reverse=True)

    # Print result
    print(arr)

# Test
arr = [2, 4, 1, 6, 5]
sort_descending(arr)
# Output: [6, 5, 4, 2, 1]"
Develop a Python function that removes duplicate elements from a given list and returns a list with unique elements.,"my_list = [1,2,3,3,4,5,5,5,6,7,7]","def remove_duplicates(my_list):
 new_list = []

 for item in my_list:
 if item not in new_list:
 new_list.append(item)

 return new_list

my_list = [1,2,3,3,4,5,5,5,6,7,7]
my_list = remove_duplicates(my_list)
print(my_list)
# [1, 2, 3, 4, 5, 6, 7]"
Generate a random number in Python between 2 inclusive numbers.,"int min = 1;
int max = 6;","import random

num = random.randint(min, max)
print(num)"
Port a Java code snippet to Python 3.,"public class Foo {
  public int foo( int a, int b ) {
    return a + b;
  }
}","def foo(a, b):
 return a + b"
Write a Python program to generate a bar chart visualizing a dataset.,"data = [3, 5, 2, 8, 9, 10]","import matplotlib.pyplot as plt

#create data
data = [3, 5, 2, 8, 9, 10]

#set plot size
plt.figure(figsize=(5, 2))

#generate the bar chart
plt.bar([str(i) for i in range(1, len(data)+1)], data)
plt.show()"
Suggest a completion for the following Python code so that it prints all the numbers between 0 and 10 (inclusive).,for num in range(11),"for num in range(11):
    print(num)"
Create a Python function to calculate the volume of a cube by taking its side length as input.,side_length = 5,"def cube_volume(side_length):
    return side_length ** 3

volume = cube_volume(side_length)
print(f""Volume of cube is {volume}"")"
Create a hierarchical clustering algorithm in Python to group data points into clusters.,"data_points=[1,2,3,4,5]","import numpy as np
from scipy.cluster.hierarchy import dendrogram, linkage

# define the data points
data_points = np.array([1,2,3,4,5])

# create the linkage matrix
linkage_matrix = linkage(data_points, 'ward')

# generate the dendrogram
dendrogram(linkage_matrix)"
Create a Python script to split a string into an array of substrings based on a given delimiter.,"text = ""one-two-three-four""","def split(text, delimiter):
  substring = []
  temp = """"
   
  for i in text:
    if i != delimiter:
      temp += i
    else:
      substring.append(temp)
      temp = """"
  substring.append(temp)
  
  return substring
    
text = ""one-two-three-four""
print(""Original String: ""+text)

print(""Split String:"",split(text,'-'))"
Optimize the following Python code by replacing the two for loops with one.,"list1 = [1,2,3]
list2 = [4,5,6]
for i in list1:
  for j in list2:
    print(i * j)","list1 = [1,2,3]
list2 = [4,5,6]
 
for i,j in zip(list1, list2):
    print(i * j)"
Write a method in Python to check whether two strings are an anagram of each other.,"string1 = ""abcde"";
string2 = ""edcba"";","def isAnagram(string1, string2):
 s1 = sorted(string1)
 s2 = sorted(string2)
 
 return s1 == s2"
Create an algorithm in Python to calculate the sum of all numbers between two given numbers.,"10, 20","def sumInRange(lower_limit, upper_limit): 
    
    # initialize sum variable 
    sum = 0; 
  
    # calculate sum of all numbers between 
    # lower_limit & upper_limit 
    for i in range(lower_limit, upper_limit + 1): 
        sum += i 
    
    # return the output 
    return sum;"
Create an optimized Python program to print all prime numbers in a given range.,Apr-15,"def is_prime(n):
    if n <= 1:
        return False
  
    for i in range(2, n):
        if n % i == 0:
            return False
  
    return True
 
start = 4
end = 15
 
for num in range(start, end+1):
   if is_prime(num):
       print(num)"
Edit the following Python program to remove the redundant lines.,"def foo(list):        
    list.append(1)         
    list.append(2)
    list.append(3)       
    list.append(1)
    list.append(2)
    return list

list = [1, 2, 3]","def foo(list):        
    list.append(1)         
    list.append(2)
    list.append(3)
    return list

list = [1, 2, 3]"
Write a Python program to combine two lists by alternating elements,"list1 = [11, 22, 33] 
list2 = [1, 2, 3]","def combine_list(list1, list2):
  combined_list = []
  for i in range(max(len(list1), len(list2))):
    if i < len(list1):
      combined_list.append(list1[i])
    if i < len(list2):
      combined_list.append(list2[i])
  return combined_list"
Create a Python function that prints the next prime number after a given number.,19,"def is_prime(n):
 
 if n <= 1:
 return False
 
 for i in range(2, int(n**0.5)+1):
 if n % i == 0:
 return False
 
 return True
 
 
def next_prime(num):
 
 if is_prime(num):
 num += 1
 
 while (True):
 if is_prime(num):
 return num
 
 num += 1
 
 
num = 19
print(next_prime(num))
# Output: 23"
Write a Python program to find the area of a triangle given its lengths of sides.,"a = 7, b = 6, c = 8","def triangle_area(a, b, c): 
	s = (a + b + c) / 2
	return (s*(s-a)*(s-b)*(s-c)) ** 0.5

result = triangle_area(7, 6, 8)
print(result)"
Write a for loop to iterate over the given list in Python.,"list = [3,7,11,13]","for x in list:
    print(x)"
Write a python program to shuffle a given list in random order.,"[3, 8, 2, 5, 4]","import random

def shuffle_list(lst):
    random.shuffle(lst)
    return lst

print(shuffle_list([3, 8, 2, 5, 4])) # prints [2, 3, 5, 4, 8] or any other combination"
Write a Python function to check if a given list of numbers is sorted in ascending order or not.,"list_numbers = [5, 8, 9, 11, 1]","def is_sorted_asc(list_numbers):
 for i in range(len(list_numbers) - 1):
 if list_numbers[i] > list_numbers[i + 1]:
 return False
 return True
 
result = is_sorted_asc(list_numbers)
print(result) # False"
Transform the following code from JavaScript to Python.,"if (cur_price > max_price) {
  max_price = cur_price;
}","if cur_price > max_price:
  max_price = cur_price"
Update a given MongoDB document using Python.,"db.collection.updateOne(
    { ""name"": ""John Doe"" },
    {
        $set:{
            ""age"": 28
        }
    }
)","import pymongo

# Open connection
client = pymongo.MongoClient(""mongodb://localhost:27017/"")
db = client[""mydatabase""]

# Update document
db.collection.update_one(
    {""name"": ""John Doe""},
    {""$set"": {""age"": 28}}
)

# Close connection
client.close()"
Write a Python code snippet to remove the last element from a list.,"example_list = [3, 1, 5, 7, 4, 8, 2]","def remove_last_element(lst):
    last_index = len(lst) - 1
    del lst[last_index]

example_list = [3, 1, 5, 7, 4, 8, 2]
remove_last_element(example_list)
print(example_list) 
# Output: [3, 1, 5, 7, 4, 8]"
Generate a python code to find the sum of the n terms of a series given the first term and the common ratio,"[a, r], n","def find_sum_series(a, r, n):
    sum = 0
    for i in range(1, n + 1):
        sum = sum + a*(r**(i - 1))
    return sum"
Write a Python program to get the sum of a given array of numbers.,"[1, 2, 3]","def get_sum(nums):
    sum = 0
    for num in nums:
        sum += num
    return sum

result = get_sum([1, 2, 3])
print(result)
# Output: 6"
Create an algorithm in Python to print the binary representation of a given number.,23,"def binary_rep(num):
    binary_string = """"
    while num>0:
        remainder = num%2
        binary_string = str(remainder) + binary_string
        num = num//2

    print(binary_string)

binary_rep(23) # prints 10111"
Create a Python script to calculate the circumference of a circle given its radius.,radius = 5,"def calc_circumference(radius):
  circumference = 2 * 3.14 * radius
  return circumference
  
circumference = calc_circumference(radius)
print(circumference)"
"Edit the following Python code to print ""Hello World"" in a loop 10 times.","for i in range(5):
    print(""Hello World"")","for i in range(10):
    print(""Hello World"")"
Implement a function in Python that prints the average of the two numbers passed as arguments.,"x=15
y=20","def compute_average(x, y):
	return (x + y) / 2

print(compute_average(x,y))"
Generate a list of the top 10 common words in a given list of words.,"['Python', 'programming', 'language', 'is', 'powerful', 'and', 'versatile']","from collections import Counter

words = ['Python', 'programming', 'language', 'is', 'powerful', 'and', 'versatile']

word_counts = Counter(words)
top_10 = word_counts.most_common(10)
print (top_10)"
Write a python program to filter a list of numbers and remove those that are divisible by 3.,"nums = [12, 14, 16, 18, 20, 21, 24]","def filter_list(nums):
    return [num for num in nums if num % 3 != 0]

print(filter_list(nums)) # Output: [12, 14, 20, 21]"
Design a solution in Python that creates a deep copy of an array of numbers.,"[1,2,3,4,5]","original_list = [1,2,3,4,5]

# Create a copy of the original list
copied_list = original_list[:]

# Modify the copied list so we can verify that it is a deep copy
copied_list[0] = 10

# Print both lists - the original list should be unchanged
print(""Original list:"", original_list)
print(""Copied list:"", copied_list)"
Write a Python program that takes in a list of strings and prints out the string with the most characters,"[“Hello”, “World”, “How”, “Are”, “You”]","longest_str = """"
for string in list_of_strings:
    if len(string) > len(longest_str):
        longest_str = string

print(longest_str)"
Create a basic script in Python that can automatically sort a list of items by price.,"items = [
    {
        'name': 'Sprite',
        'price': 1.99
    },
    {
        'name': 'Coca Cola',
        'price': 3.99
    },
    {
        'name': 'Pepsi',
        'price': 2.99
    }
]","items.sort(key=lambda x: x['price'])

print(items)
# Output:
[{'name': 'Sprite', 'price': 1.99},
{'name': 'Pepsi', 'price': 2.99},
{'name': 'Coca Cola', 'price': 3.99}]"
"Given a list of integers, write a Python function to find the largest consecutive sum of elements in the list.","nums = [1, 2, -5, 9, 0, 10]","def largest_consecutive_sum(nums):
    max_sum = 0
    total_sum = 0
    for num in nums:
        total_sum += num
        if total_sum > max_sum:
            max_sum = total_sum
    return max_sum"
Create a search algorithm in Python that takes two inputs 'word' and 'text' and returns true if the word is present in the text.,"word = ""code""
text = ""Today I wrote some code in Python""","def search(word, text):
    words = text.split()
    for w in words:
        if w == word:
            return True
    return False"
Create a function in Python that takes two strings as parameters and returns the string that has the longest length.,"string1=""Python""
string2=""Programming""","def longest_string(string1, string2):
    if len(string1) > len(string2):
        return string1
    else:
        return string2

string1=""Python""
string2=""Programming""

print(longest_string(string1, string2))"
Create a web scraper using Python that collects data from the given URL - http://example.com/,http://example.com/,"import requests
from lxml import html

# Get the response
resp = requests.get('http://example.com/')

# Parse the response
doc = html.fromstring(resp.text)

# Extract the data
data = doc.xpath('//div/span/text()')

# Print out the data
print(data)"
Create a Python program to compute the greatest common divisor (GCD) for two given numbers.,24 and 32,"def gcd(x, y):
 
    # Using Euclidean algorithm 
    while(y): 
        x, y = y, x % y 
  
    return x 
  
# Driver Code 
a = 24
b = 32
  
gcd = gcd(a, b) 
print(""GCD of"", a, ""and"", b, ""is:"", gcd)"
Compose a program in Python to convert every word of a given string to uppercase letters.,"sentence = ""the quick brown fox jumps over the lazy dog""","def to_uppercase(sentence):
    words = sentence.split(' ')
    new_sentence = []
    for word in words:
        new_sentence.append(word.upper())
    return ' '.join(new_sentence)

if __name__ == '__main__':
    print(to_uppercase(sentence))"
Generate python code to encode a given string in base64.,string = 'This is a test string.',"def base64_encode(string):
    encoded_string = base64.b64encode(string.encode('utf-8')) 
    return encoded_string.decode('utf-8')"
Maxminizing a Black-Box function (Python),"A Black box function:

def black_box (x):
  return x ** 2 + 40","import scipy.optimize

# define the black box function
def black_box(x):
    return x ** 2 + 40

# set the initial parameters 
start = (0, 0)

# minimize the black box function
res = scipy.optimize.minimize(black_box, start, method=""L-BFGS-B"")

# print the result
print(res.x) # prints [0.]"
Write a Python code to handle this data loading task.,Problem: Load a CSV file that contains data from multiple sources and store it in a DataFrame.,"import pandas as pd

def load_data(csv_file):
    '''This function will load the CSV file and store the data in a DataFrame'''
    
    data = pd.read_csv(csv_file, sep=',', encoding='utf-8')
    return pd.DataFrame(data)"
Edit this Python function such that it takes an optional parameter x.,"def add_two_numbers(a, b):
    return a + b","def add_two_numbers(a, b, x=0):
    return a + b + x"
Edit the following Python code to make it run without any errors,"def find_sum(x):
  sum = 0;
  for i in x:
      sum += i
  return","def find_sum(x):
    sum = 0
    for i in x:
        sum += i
    return sum"
Generate a Python code to compute the area of a triangle given its three sides.,"s1 = 3
s2 = 4
s3 = 5","def calculate_area(s1, s2, s3):
    # calculate the semi-perimeter
    s = (s1 + s2 + s3) / 2
    # calculate area using Heron's formula
    area = (s*(s-s1)*(s-s2)*(s-s3)) ** 0.5
    return area

if __name__==""__main__"":
    s1 = 3
    s2 = 4
    s3 = 5
    area = calculate_area(s1, s2, s3)
    print(""Area of triangle is: {:.2f}"".format(area))"
Write a Python script to rewrite the four-digit year of birth in the YYYY-MM-DD format.,Year: 1985,"def formatYear (birthYear):
 return str(birthYear)+""-01-01"""
Create a feature in Python to extract the category information from a given URL.,No input,"def extract_category_from_url(url):
    # Extract the hostname from the URL
    hostname = urlparse(url).hostname
    # Split the hostname on '/'
    categories = hostname.split('/')
    return categories"
Generate a python program to find the year of the oldest movie,"[{'title': 'The matrix', 'releaseYear': 1999 },
 {'title': 'Titanic', 'releaseYear': 1997 },
 {'title': 'Transformers', 'releaseYear': 2006 },
 {'title': 'Wall-E', 'releaseYear': 2008 }]","def oldest_movie(movies):
    oldest_year = movies[0][""releaseYear""]
    for movie in movies: 
        if movie[""releaseYear""] < oldest_year:
            oldest_year = movie[""releaseYear""]
    return oldest_year"
Create a Completion function in Python that takes a string and returns a list of strings that match the input string.,string = “th”,"def completion(string):
  results = []
  words = [""the"", ""that"", ""this"", ""those"", ""thing"", ""think"", ""thought""]
  for word in words:
    if len(word) > 2 and word.startswith(string):
      results.append(word)
  return results
  
print(completion(""th"")) # Output: [""those"", ""think"", ""thought""]"
Create a python script that extracts the first ten words from a given text.,The quick brown fox jumps over the lazy dog,"import re

text = ""The quick brown fox jumps over the lazy dog""

# Extract words using a regular expression
words_list = re.findall(r""[\w']+"", text)

# Print the first ten words
print(words_list[:10])"
Implement a decision tree model in Python for classifying a dataset.,"""data.csv"": 5 numerical features and one output label (0 or 1)","import numpy as np
from sklearn import tree

# Load the data
data = np.genfromtxt(""data.csv"", delimiter="","")
X = data[:,:-1]
y = data[:,-1]

# Create and train the decision tree model
clf = tree.DecisionTreeClassifier()
clf = clf.fit(X, y)

# Use the model to predict values
predictions = clf.predict(X)"
Can you design a function in Python for reversing a list?,"[1,2,3,4,5]","def reverse_list(list): 
    return list[::-1]"
Create a Python program to search through a list of names and print out any names that contain the letter 'a'.,"names = [""John"", ""Paul"", ""George"", ""Ringo"", ""Adam"", ""Peter"", ""Alice"", ""Karen"", ""Jerry""]","names = [""John"", ""Paul"", ""George"", ""Ringo"", ""Adam"", ""Peter"", ""Alice"", ""Karen"", ""Jerry""]

for name in names:
 if 'a' in name:
 print(name)

# Output
Adam
Alice
Karen"
Write a Python program to find the sum of all integers in a given list that are multiples of 8.,"4, 8, 12, 17, 30","# Initializing list 
l = [4, 8, 12, 17, 30] 

# Function to calculate sum 
def sum_multiples(l): 
	sum = 0
	
	# iterating over list 
	for num in l: 
		
		# checking for multiples of 8 
		if num % 8 == 0: 
			sum += num 
			
	return sum

# Driver code 
print(sum_multiples(l)) 
# Output: 20"
Create a function to convert a string to a list using Python.,"text = ""This is a sentence.""","def string_to_list(text):
    lst = text.split()
    return lst

text = ""This is a sentence.""
print(string_to_list(text))"
Write a Python program to create a list of powers of x for any given x.,x = 2,"def power_list(x):
    return [x**i for i in range(16)]"
Generate a code to merge two python dictionaries and update the values.,"dict_1 = {
    'a': 1,
    'b': 2
}

dict_2 = {
    'b': 3,
    'c': 4
}","def merge_dicts(dict_1, dict_2):
    # copy both dictionaries
    merged_dict = dict_1.copy()  
    merged_dict.update(dict_2)  
    return merged_dict

print(merge_dicts(dict_1, dict_2))"
Rewrite the code in Python to improve its readability.,"import math
def area(r):
 return math.pi*r**2","import math

def calculate_area(radius):
    return math.pi * (radius ** 2)"
Identify (classify) the programming language used in the following code snippet.,"# Start code
mylist = [1, 2, 3, 'hello']
for item in mylist:
    print(item)
# End code",Python
Build a sorting algorithm in Python that sorts an array of integers.,"[5, 3, 1, 4, 2]","def sort_arr(arr):
    for i in range(len(arr)): 
        min_idx = i 
        for j in range(i+1, len(arr)): 
            if arr[min_idx] > arr[j]: 
                min_idx = j

        arr[i], arr[min_idx] = arr[min_idx], arr[i]
    return arr

result = sort_arr([5, 3, 1, 4, 2])
print(result)"
Create a Python program that takes a given list and returns a new list without any duplicates.,"[1, 2, 2, 3, 4, 5, 5, 6]","def remove_duplicates(lst):
    new_list = []
    for i in lst:
        if i not in new_list:
            new_list.append(i)
    
    return new_list"
Write a Python program to generate all possible permutations of a given set of elements.,"[1, 2, 3]","def permutations(elements):
    if len(elements) <=1:
        yield elements
    else:
        for perm in permutations(elements[1:]):
            for i in range(len(elements)):
                yield perm[:i] + elements[0:1] + perm[i:]

result = list(permutations([1, 2, 3]))
print(result)"
Can you implement a function in Python that takes a list of two numbers as input and returns the sum of the two numbers?,"[5, 10]","def add(nums):
    return nums[0] + nums[1]

print(add([5, 10]))  #Prints 15"
Create a Python program that takes an expression as input and evaluates it.,4 + 7,"def calculate(expr):
    return eval(expr)

result = calculate(""4 + 7"")
print(result)"
"Using Python, detect if the given string is a palindrome or not.",madam,"def isPalindrome(s): 
    s = s.lower()
    return s == s[::-1]

string_input = ""madam""
palindrome_status = isPalindrome(string_input)

if palindrome_status:
    print(""The given string is a Palindrome"")
else:
    print(""The given string is not a Palindrome"")"
Compose a line of Python code to insert an element into a given list.,"list1 = [1, 3, 7, 8]
element = 5","list1 = [1, 3, 7, 8]
element = 5

list1.insert(2, element)
print(""New list:"", list1)"
Classify the following Python code as a function or a class.,"import math

class Circle:
   def __init__(self, radius):
      self.radius = radius

   def area(self):
      return math.pi * self.radius**2",Class
Convert the following Regular Expression matching code to a Regular Expression replacement code in Python.,"re_match = ""\w+@\w+\.\w+""","import re

re_match = ""\w+@\w+\.\w+""
re_replace = ""<valid email>""

print(re.sub(re_match, re_replace, ""my_email@example.com""))"
Create an algorithm in Python to search for a given item in a dictionary.,"Dictionary = {'name': 'john', 'age': 22, 'city': 'New York'}, item = 'John'","def search(dict, item): 
    for key, value in dict.items(): 
        if item == value: 
            return True 
    return False

dict = {'name': 'john', 'age': 22, 'city': 'New York'}
item = 'John'
print(search(dict, item))"
Design an algorithm in Python for finding out the factorial of a given number.,7,"def factorial(n):
 fact = 1
 for i in range(2,n+1):
  fact = fact * i
 return fact"
Find the smallest element in a 2D array using Python.,"arr = [[2, 5, 8],
       [1, 4, 7]]","def find_smallest_element_2D(arr):
    smallest = float('inf')
    for row in arr:
        smallest = min(smallest, min(row))
    return smallest"
Suggest a Python program that prints out the unique strings in a list of strings.,"['hello', 'world', 'hello', 'moon', 'sun']","list_of_strings = ['hello', 'world', 'hello', 'moon', 'sun']
unique_strings = set(list_of_strings)

for string in unique_strings:
    print(string)"
Compose a function to find the maximum value in an array in Python.,"[1, 4, 2]","def find_max_value(arr):
    max_value = arr[0]
    for i in range(1, len(arr)):
        if arr[i] > max_value:
            max_value = arr[i]
    return max_value

array = [1,4,2]
res = find_max_value(array)
print (res)"
code a recursive function in Python that accepts a list of integers and prints the sum of all even numbers.,"[1, 2, 3, 4, 5, 6, 7, 8]","def print_even_sum(L): 
    if len(L) == 0: 
        return 0
  
    if L[0] % 2 == 0: 
        return L[0] + print_even_sum(L[1:]) 
    else: 
        return print_even_sum(L[1:]) 
  
L = [1, 2, 3, 4, 5, 6, 7, 8] 
print(""Sum of even numbers in the list:"", print_even_sum(L))"
Create a program in Python that prints out the first 10 prime numbers.,"""<noinput>""","import math

def is_prime(n):
    if n == 1:
        return False
    
    for i in range(2, int(math.sqrt(n)) + 1):
        if n % i == 0:
            return False
    return True

prime_nums = []

for i in range(2, 1000):  
    if is_prime(i):
        prime_nums.append(i)
        if len(prime_nums) == 10:
            break

for item in prime_nums:
    print(item)"
Write a Python program to convert miles to kilometers,miles=10,"miles = 10
kilometers = miles * 1.60934
print(f""{miles} miles is equal to {kilometers} kilometers"")"
Generate an efficient implementation of quicksort in Python.,No input.,"def quicksort(arr):
    if len(arr) <= 1:
        return arr
        
    pivot = arr[len(arr) // 2]
    left = [x for x in arr if x < pivot]
    middle = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]
    return quicksort(left) + middle + quicksort(right)

result = quicksort([3,6,8,10,1,2,1])
print(result)"
Write a function to remove a given item from a python list.,"[1, 4, 8, 2], 8","def remove_item(lst, item):
    while item in lst:
        lst.remove(item)
    return lst

print(remove_item([1, 4, 8, 2], 8)) # prints [1, 4, 2]"
Write a python script that displays the greatest common divisor (GCD) of two positive integers?,"12, 24","def gcd(a, b): 
    if a == 0 : 
        return b 
      
    return gcd(b % a, a) 
      
a = 12
b = 24
gcd = gcd(a, b) 
print(gcd)"
Design an algorithm in Python that calculates the sum of all numbers in an array.,"numbers = [2, 4, 6, 8]","def sum_array(arr): 
 
    total = 0
    for item in arr: 
        total += item 
 
    return total
 
print(sum_array([2, 4, 6, 8])) 
# Output: 20"
Create a Python script for downloading a web page's HTML content.,http://example.com,"import requests
 
url = 'http://example.com'
 
r = requests.get(url)
html = r.text
 
with open('page.html', 'w') as f:
 f.write(html)"
"Create an optimization function to maximize a given function over a range of values in Python. The range should be given by [-5, 5], and the function is sin(x)","[-5, 5]","import numpy as np
from scipy import optimize

def optimization_function(x):
 return np.sin(x)

res = optimize.minimize_scalar(optimization_function, bounds=[-5, 5])

print(res.x)
# Result: -0.90898"
Write a Python program to parse a JSON data and print the values.,"{""name"": ""John"", ""age"": 30, ""city"": ""New York""}","""""""
Write a Python program to parse a JSON data and print the values
""""""

import json

# Load the input data as a json string
data = '{""name"": ""John"", ""age"": 30, ""city"": ""New York""}'

# Parse the json string into a dictionary
parsed_data = json.loads(data)

# Print out the values
for key, value in parsed_data.items():
    print(f'{key}: {value}')"
Create a Python program to generate all combinations of 3 elements from an array.,"array = [1, 2, 3, 4]","def comb3(arr):
    result = []
    for i in range(len(arr)):
       for j in range(i+1, len(arr)):
           for k in range(j+1, len(arr)):
               t = [arr[i],arr[j],arr[k]]
               result.append(t)
    return result"
Write a Python function to recognize a date (in “DD/MM/YYYY” format) in a string,The deadline is 23/05/2020,"def recognize_date(s):
    '''This function recognizes a date (in DD/MM/YYYY format) in a string.'''
    # Regex for DD/MM/YYYY format
    format_regex = re.compile(r'\d{2}/\d{2}/\d{4}') 
    match = format_regex.search(s)
    if match:
        date = match.group()
        return date
    else:
        return None"
Convert a given sentence to uppercase using Python.,This is a sample sentence.,"sentence = ""This is a sample sentence.""
output = sentence.upper()
print(output)"
Create a Python statement that prints a list of numbers 0 to n (inclusive).,n = 10,"for i in range(n+1):
    print(i)"
"Write a function in Python that takes two parameters, a positive integer n and a list of numbers, and returns the sum of the first n elements of the list.","n = 3, nums = [5, 8, 20, 3]","def func(n, nums):
  res = 0
  for i in range(n):
    res += nums[i]
  return res"
Create a function to calculate the sum of two values in Python.,< noinput >,"def add_two_numbers(x, y):
    sum = x + y
    return sum"
Write a Python program to create a 1D array of random numbers from 1 to 100.,5,"import random

# Create a 1-dimensional array of size 5
array = [0] * 5

# Fill the array with random numbers
for i in range(len(array)):
 array[i] = random.randint(1,100)

print(array)

# Output:
# [83, 5, 46, 69, 89]"
Create a module in Python to scrape the web for a particular website.,https://www.example.com/,"import requests
from bs4 import BeautifulSoup

def scrape_website(url):
    response = requests.get(url)
    html = response.text
 
    soup = BeautifulSoup(html, 'html.parser')
    return soup

if __name__ == '__main__':
    url = 'https://www.example.com/'
    soup = scrape_website(url)
    print(soup)"
Create a Python script that will take an array of numbers and generate the maximum possible combination using those numbers.,"[4, 2, 8, 12]","def generatemaxcombo(arr):
    max_combo = []
    value = 1
    for x in arr:
        value = value * x
        max_combo.append(value)
    return max_combo

arr = [4, 2, 8, 12]
max_combo = generatemaxcombo(arr)

print(""The maximum combination of {} is: {}"".format(arr, max_combo))"
Implement a Python parser to print return a list of words from a given string.,"""Hello, World!""","def parse_words(string):
    words = []

    for word in string.split("" ""):
        words.append(word.strip(""!,.? \n\t\r\""\'-""))
    return words

result = parse_words(""Hello, World!"")
print(result)
##
Output: ['Hello', 'World']"
Create a Python program to find all the solutions to a given equation.,ax^2 + bx + c = 0,"import cmath

a = int(input(""Enter a: ""))
b = int(input(""Enter b: ""))
c = int(input(""Enter c: ""))

#calculate the discriminant
d = (b**2) - (4*a*c)

# find two solutions
sol1 = (-b-cmath.sqrt(d))/(2*a)
sol2 = (-b+cmath.sqrt(d))/(2*a)

print('The solutions are {0} and {1}'.format(sol1,sol2))"
Write a Python script to check if the given string is a palindrome.,"string_to_test = ""racecar""","def is_palindrome(string_to_test):
    reverse = reversed(string_to_test)
    if list(string_to_test) == list(reverse):
        return True
    return False"
Generate a random 6-digit number using Python,No input,"import random

def generate_random_number(): 
    random_number = random.randint(100000, 999999) 
    return random_number

generatedNumber = generate_random_number() 
print(generatedNumber)"
Can you create a Python script to extract email addresses from a raw text?,"""John Doe john@example.com, Jane Doe jane@example.com, Kevin Smith kevin@example.com""","import re

text = ""John Doe john@example.com, Jane Doe jane@example.com, Kevin Smith kevin@example.com""

emails = re.findall(r""[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+"",
                    text)

print(emails) # ['john@example.com', 'jane@example.com', 'kevin@example.com']"
"Create an algorithm in Python to print the numbers from 1 to n in increasing order, except for any numbers which are divisible by 3 should be printed as ""Fizz"".",`n = 20`,"def fizz(n):
    for i in range(1, n+1):
        if i % 3 == 0:
            print(""Fizz"")
        else:
            print(i)

#example
fizz(20) # prints 1, 2, Fizz, 4, 5, Fizz, 7, 8, Fizz, 10, 11, Fizz, 13, 14, Fizz, 16, 17, Fizz, 19, 20"
Write a function in Python to compute the sum of all elements in a given 2-dimensional array.,"[[2, 3], [2, 5], [5, 6], [4, 5]]","def arraySum(arr): 
  sum = 0
  for sublist in arr: 
    for item in sublist: 
      sum = sum + item 
  return sum 

print(arraySum([[2, 3], [2, 5], [5, 6], [4, 5]])) 

# Output: 29"
Write a Python program to check if a given string is a rotation of another given string.,"str1 = ""waterbottle""
str2 = ""erbottlewat""","def is_rotation(str1, str2):
 if len(str1) != len(str2):
  return False
 
 concat_str2 = str2 * 2
 
 return str1 in concat_str2
 
is_rotation(str1, str2)"
"Create a Python program to create a list of unique emails from a given list of emails, by removing any duplicates.","myList = [""test1@example.com"", ""test2@example.com"", ""test1@example.com"", ""test3@example.com""]","def remove_duplicates(myList):
    unique_list = []
    for item in myList:
        if item not in unique_list:
            unique_list.append(item)
    return unique_list

result = remove_duplicates(myList)
print(result)"
Review this code and make any necessary changes in Python to make it more efficient.,"def add_items(items): 
    total = 0 
    for item in items: 
        total += item 
    return total","def add_items(items): 
    return sum(items)"
Create a Python function to compute the nth Fibonacci number of a provided number n.,n = 5,"def fibonacci(n): 
	if n<0: 
		print(""Incorrect input"") 
		
	# First Fibonacci number is 0 
	elif n==1: 
		return 0
	# Second Fibonacci number is 1 
	elif n==2: 
		return 1
	else: 
		return fibonacci(n-1)+fibonacci(n-2) 

print(fibonacci(5)) # Outputs 3"
Create a Python script to capture a range of numbers (as multiples of 100).,Start = 20 and End = 400,"# Python code to capture a range of numbers 
# Multiples of 100 

start = 20
end = 400
  
# printing multiples of 100 in the given range 
for num in range(start, end + 1): 
      
    # checking if the current number is multiple of 100 
    if num % 100 == 0: 
        print(num, end="" "")"
Design a Python program to generate a random password containing both lowercase and uppercase characters.,<no input>,"import random
import string

def generate_random_password():
  charset = string.ascii_letters + string.digits
  return ''.join(random.sample(charset, 8))

print(generate_random_password())"
Create a function in Python that will take a sentence as an argument and return a boolean depending on whether or not it is a palindrome.,"sentence = ""Able was I ere I saw Elba""","def is_palindrome(sentence): 
    rev=(sentence.lower()).replace("" "","""")
    return rev == rev[::-1]"
Create a Python program to calculate the average of a given list of integers while ignoring any values greater than 10.,"[1, 5, 9, 10, 12, 15]","def average_ignoring_ten(numbers):
    total = 0
    number_of_numbers = 0
    
    for number in numbers:
        if number <= 10:
            total += number
            number_of_numbers += 1
    
    return total / number_of_numbers"
Create a Python class for a rectangle with properties for the length and width and methods for finding the area and perimeter.,No Input,"class Rectangle:
    def __init__(self, length, width):
        self.length = length
        self.width = width
    def area(self):
        return self.length * self.width
    def perimeter(self):
        return (2 * self.length) + (2 * self.width)"
Create a Python program that takes an email message as input and prints the sender's email address.,"Email Message:
From: ""John Doe"" <john.doe@example.com>
To: ""Jane Doe"" <jane.doe@example.com>
Subject: Example Email","import re

email_message = """""" 
From: ""John Doe"" <john.doe@example.com>
To: ""Jane Doe"" <jane.doe@example.com>
Subject: Example Email
""""""

sender_email = re.findall(r'From: .+?<(.+?)>', email_message)

print('Sender\'s email address:', sender_email[0])"
Optimize the following Python code for efficiency.,"def search(list, query): 
    if query in list: 
        return True 
    else: 
        return False","def search(list, query): 
    return query in list"
Generate Python classes from the given JSON.,"{
""name"": ""Employee"",
""attributes"": {
""emp_id"": {
""type"": ""int""
},
""name"": {
""type"": ""string""
},
""department"": {
""type"": ""string""
},
""salary"": {
""type"": ""float""
}
}
}","class Employee:
    def __init__(self, emp_id, name, department, salary):
        self.emp_id = emp_id
        self.name = name
        self.department = department
        self.salary = salary"
Create a function in Python to sort this list of high-scores in descending order.,"[150, 160, 233, 700, 800, 1200]","def sortScores(scores):
    return sorted(scores, reverse=True)"
Create a function in Python that takes a list of strings and returns only the strings with length of 5.,"array = [""Hello"", ""Hi"", ""Hola"", ""Bye"", ""Goodbye""]","def five_length_strings(arr):
    return [string for string in arr if len(string) == 5]

output = five_length_strings([""Hello"", ""Hi"", ""Hola"", ""Bye"", ""Goodbye""])

print(output) # Output: ['Hello', 'Hola', 'Bye']"
Write a Python function to calculate the total cost of a shopping cart given a list of items. The items list should contain the item name and price.,"items = [('Apple', 2.25), ('Banana', 0.75), ('Lemon', 1.50)]","def calculateTotalCost(items):
 total_cost = 0
 for item in items:
  total_cost += item[1]
 return total_cost

# Usage
total_cost = calculateTotalCost(items)
print(total_cost)"
Create a program that takes a numerical array and returns a reversed array in Python.,"[1,2,3,4,5]","def reverse_array(array):
    reversed_array = array[::-1]
    return reversed_array

reversed_array = reverse_array([1,2,3,4,5])
print(reversed_array)"
"Given an array of integers and a target number, write a Python function to return the two numbers from the array that add up to the target number.","[1, 2, 3, 4, 5], 9","def two_sum(arr, target): 
    for i in range(0, len(arr)-1): 
        for j in range(i + 1, len(arr)): 
            if arr[i] + arr[j] == target: 
                return [arr[i], arr[j]]"
Create a program in Python that converts a given number into its corresponding binary representation in 8 bits.,10,"def int_to_bin(n):
 bin_num = bin(n)
 bin_num = bin_num[2:].zfill(8)
 return bin_num

print(int_to_bin(10)) # Output: 00001010"
Generate a Python program to evaluate a mathematical expression?,"expression = ""2 * (3 + 5)""","def evaluate(expression):
    return eval(expression)

print(evaluate(expression))

# Output
16"
Write a Python function to edit the given input string such that all consecutive duplicate characters in the string are removed.,"inputstring = ""aabbcccdddd""","def remove_duplicates(inputstring):
    result = """"
    for i in range(len(inputstring)):
        if i == 0 or inputstring[i] != inputstring[i-1]:
            result += inputstring[i]
    return result"
Write a python for loop to iterate over a list of numbers and compute the sum of all numbers greater than 0,"[-1, 5, -7, 10, -2]","sum = 18

# using a for-loop
sum = 0
for num in [-1, 5, -7, 10, -2]:
  if num > 0:
    sum += num

print(sum)

Output: 18"
Create a Python function to compute the root mean square (RMS) of an array of values.,"values = [3,4,5,6,7]","import math

def computeRMS(values):
    # calculate the mean
    mean = sum(values)/len(values)
    # calculate the sum of the squares
    squares_sum = sum([val**2 for val in values])
    # calculate the RMS
    rms = math.sqrt(squares_sum/len(values))
    
    return rms
    
values = [3,4,5,6,7]
rms = computeRMS(values)
print(""Root mean square is: "", rms)"
Produce a Python script that counts the number of words in a sentence,"Sentence: ""The quick brown fox jumps over the lazy dog""","sentence = ""The quick brown fox jumps over the lazy dog""

words = sentence.split()
print(""The sentence has"", len(words), ""words."")"
Write a python code to calculate the square of any given number.,num = 5,"""""""
Calculate the square of a given number
""""""

def square_num(num):
    return num * num

if __name__==""__main__"":
    num = 5
    square = square_num(num)
    print(""Square of ""+str(num)+"" is ""+str(square))"
Write a python script to format a list of numbers into a tabular form.,"[2, 3, 4, 5, 6]","def format_list(list_in):
   list_out = []

   for n in list_in:
      list_out.append('|'+str(n).ljust(2)+'|')
   
   header = '--|--+'
   header_line = '--|'+'--'*len(list_out)+'|'
   
   list_out = [header] + list_out + [header_line]
   
   return '\n'.join(list_out)

print(format_list([2, 3, 4, 5, 6]))

# Output:
--|--+
|2 |
|3 |
|4 |
|5 |
|6 |
--|---|"
Create a Python script to scrape a website and extract the main content of any webpage.,URL: www.example.com,"import requests
from bs4 import BeautifulSoup

url = ""https://www.example.com""
html = requests.get(url).content
soup = BeautifulSoup(html, 'html.parser')

content = soup.find(""div"", {""class"": ""main-content""}).text

print(content)"
Develop a function to generate all combinations of a given list in Python.,"[1, 2, 3]","def all_combinations(list_of_numbers): 
    if len(list_of_numbers) == 0: 
        return [] 
  
    if len(list_of_numbers) == 1: 
        return [list_of_numbers] 
  
    combinations = [] 
    for combination in all_combinations(list_of_numbers[1:]): 
        combinations.append(combination) 
        combinations.append([list_of_numbers[0]] + combination) 
  
    return combinations"
Write a Python function that takes two strings of equal length and returns the number of characters that are different between them.,"firstString = 'abcd'
secondString = 'abec'","def diff_characters(firstString, secondString):
 if len(firstString) != len(secondString):
 return -1

 diff_characters = 0
 for i in range(len(firstString)):
 if firstString[i] != secondString[i]:
 diff_characters +=1
 
 return diff_characters"
"Classify the following statement as a valid Python statement, an invalid Python statement or a comment.","print(""Hello Python!"")",Valid Python statement.
Create a function in Python to get the largest element in a given list.,"[4,8,2,9,10]","def get_largest_element(nums):
    largest = nums[0]
    for i in range(1, len(nums)):
        if nums[i] > largest:
            largest = nums[i]
    return largest

# Test the function
numbers = [4,8,2,9,10]
print(get_largest_element(numbers)) # Output: 10"
Write a function in Python that prints the multiplication table of a given number.,number=7,"def print_multiplication_table(number): 
    for i in range(1, 11): 
        print(number,""X"",i,""="",number*i)"
"In Python, create a list comprehension to extract the elements which are even in the given list.","list = [1, 2, 3, 4, 5, 6, 7, 8, 9]",even_list = [x for x in list if x%2 == 0]
Write a function to remove every other element in a Python list in place.,"[1, 2, 3, 4, 5, 6]","def remove_other_list_elements_inplace(list_elements):
    list_elements[:] = [element for index, element in enumerate(list_elements) if (index + 1) % 2 == 1]
    return list_elements 

sample_list = [1,2,3,4,5,6]
print(""Original List:"", sample_list) 

remove_other_list_elements_inplace(sample_list)
print(""Modified List:"", sample_list)"
Create a Python program to find the two smallest integers in an array and print the output.,"[5, 7, 12, 3, 8]","def findSmallestInteger(arr):
    smallest = float('inf')
    second_smallest = float('inf')
    for num in arr:
        if num < smallest:
            second_smallest = smallest 
            smallest = num
        if num < second_smallest and num > smallest:
            second_smallest = num
    return (smallest, second_smallest)"
Create a function in Python that takes a list of integers as input and returns a list of the sorted integers.,"[5, 7, 3, 2, 9]","def sort_list_of_integers(lst):
    lst.sort()
    return lst

print(sort_list_of_integers([5, 7, 3, 2, 9])) # Output: [2, 3, 5, 7, 9]"
Write a Python code to convert a given list of strings to all lowercase.,"['CoDE', 'OF', 'LinK']","def to_lowercase(strings):
    return [string.lower() for string in strings]
    
result = to_lowercase(['CoDE', 'OF', 'LinK'])
print(result)"
"Create a Python program to sort a list of numbers by their absolute value (e.g. sort [2,-5, -1, 3] in ascending order).","[2,-5, -1, 3]","def abs_sort(arr):
    return sorted(arr, key=abs)

abs_sort([2,-5, -1, 3])"
Code a Python program to concatenate two lists.,"[1, 2, 3] and [4, 5, 6]","list1 = [1, 2, 3] 
list2 = [4, 5, 6] 
  
# using + 
list3 = list1 + list2 
  
# printing list3 
print(list3) 

# using extend() 
list1.extend(list2) 
  
# printing list1 
print(list1)"
Write a Python program to optimize a list of numbers so that every follower is greater than its predecessor.,"[3, 8, 2, 6, 10]","def optimized_list(arr):
n = len(arr)
for i in range(n):
 j = i+1
 while(j < n):
  if arr[i] > arr[j]:
   temp = arr[i]
   arr[i] = arr[j]
   arr[j] = temp
  j+=1
 
return arr
 
arr = [3, 8, 2, 6, 10]
result = optimized_list(arr)
print(result) #[2, 3, 6, 8, 10]"
Create an optimization function in Python that takes in a list of integers and finds the smallest number that is greater than all of the other numbers in the list.,"[1, 2, 3, 4]","def optimize(arr):
    smallest = None
    
    for num in arr:
        if (smallest is None) or (num > smallest):
            smallest = num
    
    return smallest + 1

x = [1, 2, 3, 4]
result = optimize(x)

print(result) # 5"
Write a Python program to determine the maximum of two numbers.,"a = 15, b = 20","def get_max(a, b):
    if a > b:
        return a
    else:
        return b

a = 15
b = 20

max_value = get_max(a, b)
print(""The maximum value is:"", max_value)"
Write a Python script to print the frequency of occurrence of characters in a given string.,"text = ""Hello World""","def char_frequency(text):
    chars = {}
    for c in text:
        if c not in chars:
            chars[c] = 0
        chars[c] += 1
    return chars
    
print(char_frequency(text))"
Write a Python program to convert a unix timestamp to UTC time.,1594842400,"import time

timestamp = 1594842400
utc_time = time.strftime('%Y-%m-%d %H:%M:%S', time.gmtime(timestamp))

print(utc_time) # Output: 2020-07-17 02:00:00"
Edit a Python program given to produce a new program with different outputs according to the given criteria.,none,"def double(value): 
    return value * 2

def triple(value): 
    return value * 3

def quad(value):
    return value * 4

def calculate_value(n): 
    if n > 10: 
        return double(n) 
    elif n > 5: 
        return triple(n) 
    else: 
        return quad(n) 
    
print(calculate_value(-2))
print(calculate_value(8)) 
print(calculate_value(13))"
Create a Python script to automatically fill out a web form with a given set of data.,"The name ""John Doe"" 
The email ""john.doe@example.com""","import requests

url = 'https://www.example.com/form-url'

name = 'John Doe'
email = 'john.doe@example.com'

data = {
 'name' : name,
 'email' : email
}

response = requests.post(url, data)"
Convert the following Python function into C++,"def test_func(A, B):
 return A + B","#include <iostream>

int test_func(int A, int B)
{
 return A + B;
}

int main()
{
 int A = 10;
 int B = 20;
 
 std::cout << ""The value of A + B = "" << test_func(A, B) << std::endl;
 
 return 0;
}"
Generate a Python program to print all possible permutations of a given string.,"Input string: ""ABC""","from itertools import permutations 
  
# Get all permutations of length 2 
# and length 2 
perm = permutations(""ABC"", 2) 
  
# Print the obtained permutations 
for i in list(perm): 
    print(i) 

# Get all permutations of length 3 
# and length 3 
perm = permutations(""ABC"") 
  
# Print the obtained permutations 
for i in list(perm): 
    print(i)"
Write a Python program to calculate the total amount of taxes to be paid by a customer for an online purchase. The input should include the cost of the item and the tax rate.,"Item cost: 700, Tax rate: 10%","def calculate_total_tax(cost, rate):
 """"""Calculate the total amount of taxes to be paid""""""
 tax = cost * rate/100
 total = cost + tax

 return total

total_amount = calculate_total_tax(700, 10)
print(f""The total amount, including taxes, is {total_amount}"") # 770"
Optimize the provided Python code to run in linear time.,"def function(arr):
    for i in range(len(arr)):
        for j in range(i+1, len(arr)):
            if arr[i] > arr[j]:
                arr[i], arr[j] = arr[j], arr[i]","def function(arr):
    for i in range(len(arr)):
        min_idx = i
        for j in range(i+1, len(arr)):
            if arr[min_idx] > arr[j]:
                min_idx = j
        arr[i], arr[min_idx] = arr[min_idx], arr[i]"
"Given the following array of numbers, write a Python code snippet to sort it in descending order.","[9, 2, 4, 7, 6]","numbers = [9, 2, 4, 7, 6]
numbers.sort(reverse=True)
print(numbers)"
Convert this pseudocode into a working Python program.,"""FOR EACH item IN the list:
    IF item is less than 10:
        PRINT ""less than 10""
    ELSE: 
        PRINT ""greater than 10""""","list = [3, 5, 9, 15, 22]
for item in list:
    if item < 10:
        print(""less than 10"")
    else:
        print(""greater than 10"")"
Count the number of unique items in a list using dictionaries in Python.,"list = [1, 2, 5, 9, 10, 1, 3, 9, 1, 2]","def count_unique(list):
    unique = {}
    for item in list:
        if item not in unique:
            unique[item] = 1
        else:
            unique[item] += 1
    return len(unique)"
Design a program to filter out strings in a list that have length 3.,"['ada', 'python', 'ruby', 'egg', 'coffee']","def filter_by_length(list):
    """"""
    Filters out strings in the given list that have length 3.
    """"""
    filtered_list = [word for word in list if len(word) == 3]
    return filtered_list

if __name__ == '__main__':
    list = ['ada', 'python', 'ruby', 'egg', 'coffee']
    print(filter_by_length(list))"
Create a Python dictionary to store the number of occurrences of each character of the given string.,String = “abracadabra”,str_dict = {i:list(str).count(i) for i in set(str)}
Create a function in Python that takes a number N and returns the sum of the first N odd numbers.,N = 5,"def sum_of_odds(N):
    return sum([i for i in range(1, 2*N + 1, 2)])

N = 5
print(sum_of_odds(N))"
Create a function in Python to calculate the difference between two dates.,"(2020, 4, 1), (2021, 4, 16)","from datetime import date

def diff_dates(date1, date2): 
    return abs(date2 - date1).days 

date1 = date(2020, 4, 1) 
date2 = date(2021, 4, 16) 
difference = diff_dates(date1, date2) 

print(difference, ""days"")"
Generate a Python program to print the Fibonacci series up to n-th term.,The n value is 6.,"def Fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b 
  
print(Fibonacci(6))"
Write a python program to calculate maximum revenue.,"prices = [10, 7, 5, 8, 11, 9]","def max_revenue(prices):
    diff = [prices[i + 1] - prices[i] for i in range(len(prices) - 1)] 
    max_diff = 0
    for i in range(len(diff)): 
        for j in range(i + 1, len(diff) + 1): 
            current_diff = sum(diff[i:j]) 
            if current_diff > max_diff: 
                max_diff = current_diff 
 
    return max_diff"
Design a Python script to return the output of a description tag given an HTML page.,"<html>
  <body>
    <p>This is a sample text</p>
    <description>This is a description tag </description>
  </body>
</html>","from bs4 import BeautifulSoup
def get_description(html_str):
  soup = BeautifulSoup(html_str, ""lxml"")
  description = soup.find(""description"")
  return description.get_text()"
"Generate a Python function that reverses a given string, and test the function with an input of ""Hello"".","""Hello""","def reverse(string):
    return string[::-1]

print(reverse('Hello')) #prints ""olleH"""
Create a Python program that takes two strings as input and outputs a single concatenated string.,"""Hello "", ""world!""","def concat_strings(a, b):
    return a + b

result = concat_strings(""Hello "", ""world!"")
print(result)"
Generate a Python script to sort the given list of words.,"['bubble', 'selection', 'quicksort', 'insertion']","# function to sort the given list of words
def sort_words(words):
    # sort the list of words in alphabetical order
    words.sort()

    # print the sorted list of words
    print(words)

# driver code
words = ['bubble', 'selection', 'quicksort', 'insertion']
sort_words(words)

# output
['bubble', 'insertion', 'quicksort', 'selection']"
Create a Python program to sum the elements of two lists.,"list1 = [1,2,3,4]
list2 = [5,6,7,8]","def sum_list(list1, list2):
    result = []
 
    for i in range(len(list1)):
        result.append(list1[i] + list2[i])
 
    return result
 
list1 = [1,2,3,4]
list2 = [5,6,7,8]
 
print(sum_list(list1, list2))"
Write a Python program to remove duplicate characters from a given string.,"string = ""Hello World !""","string = ""Hello World !""

result = """" 
for char in string:
    if char not in result: 
        result += char

print(""String after removing duplicate characters:"", result)"
Write a Python function to filter out strings that contain numbers.,"[""apple"",""hello123"",""hi12345"", ""good15""]","def filter_numbers(strings): 
    return [s for s in strings if not any(c.isdigit() for c in s)]

if __name__ == '__main__':
    strings = [""apple"",""hello123"",""hi12345"", ""good15""]
    print (filter_numbers(strings))"
Write a Python code snippet to filter out elements from a given list lst where the element is not greater than 5.,"[3, 7, 2, 4, 6, 8]",filtered_lst = [x for x in lst if x <= 5]
Generate a Python program to find the maximum value in a list of numbers.,"[23, 12, 48, 61]","def find_max(list_of_numbers):
    max_val = max(list_of_numbers)
    return max_val

list_nums = [23, 12, 48, 61]
max_val = find_max(list_nums)
print(max_val)"
Create a Python program that prints the following numbers in a comma seperated list.,"1, 8, 10, 15, 12","print("", "".join([str(x) for x in [1, 8, 10, 15, 12]]))"
Write a code in Python to optimize this objective function.,Objective function: x + y^2 + z^3,"import scipy.optimize

def objective(variables):
    x,y,z = variables
    return x + y*y + z*z*z

x0 = [0,0,0] # Initial guess of variables

# Perform the optimization
res = scipy.optimize.minimize(
    objective, 
    x0,
    method='nelder-mead',
    options={'xtol': 1e-8, 'disp': True}
)

# Print resultant variables
print(res.x)

# Print minimal value
print(res.fun)"
Develop a Python script that determines the average age of people in a given list.,"[{""name"":""john"",""age"":20},{""name"":""jack"",""age"":25},{""name"":""jason"",""age"":30}]","def find_average_age(people_list):
    ages_sum = 0
    for person in people_list:
        ages_sum += person['age']
    return ages_sum / len(people_list)

people_list = [{""name"":""john"",""age"":20},{""name"":""jack"",""age"":25},{""name"":""jason"",""age"":30}] 
average_age = find_average_age(people_list)
print(average_age)"
Write a Python program to calculate the standard deviation of a given list of numbers.,"[1, 2, 3, 4]","def calculate_sd(lst):
    avg = sum(lst) / len(lst)
    return (sum([(x - avg)**2 for x in lst]) / len(lst)) ** 0.5"
Write a Python program to detect the largest word in a sentence. The program should take a string as input and return the largest word found in it.,This sentence has seven words.,"def find_largest_word(sentence):
 splits = sentence.split(' ')
 largest_word = """"
 for word in splits:
 if len(word) > len(largest_word):
 largest_word = word
 return largest_word

print(find_largest_word(""This sentence has seven words.""))
# Output: ""sentence"""
Develop a function in Python that takes a list of numbers as an argument and returns the difference between the maximum and minimum value.,"[3, 4, 7, 8, 12]","def maxMinDifference(arr):
    return max(arr)-min(arr)

result = maxMinDifference([3, 4, 7, 8, 12])
print(result)"
Create a Python script to create a data visualisation of the data provided.,"[5, 10, 15, 20, 25, 30, 35, 40, 45]","import matplotlib.pyplot as plt 
data = [5, 10, 15, 20, 25, 30, 35, 40, 45]
plt.plot(data) 

# formatting the text
plt.title('Data Visualisation') 
plt.xlabel('Data Points') 
plt.ylabel('Value') 

# function to show the plot 
plt.show()"
Write a Python program to sort a given list of strings based on their length.,"list1 = [""apple"", ""orange"", ""banana"", ""mango""]","def sort_str_by_length(list1):
 return sorted(list1, key=len)"
What is the output of this Python code?,"a = 3
b = 1
print(a+b)",4
What Python code can you write that takes two strings and returns whether they are anagrams?,"str1 = ""abcd""
str2 = ""cbda""","def is_anagram(str1, str2):
    if len(str1) != len(str2):
        return False

    str1_counts = collections.Counter(str1)
    str2_counts = collections.Counter(str2)
    
    for char in str1_counts:
        if str1_counts[char] != str2_counts[char]:
            return False
    return True"
Generate a code snippet to insert a key-value pair into a given dictionary.,"dict = {'I': 1, 'love': 2, 'coding': 3}
key = 'Python'
value = 10",dict['Python'] = 10
Write a function in Python that accepts a list of numbers and returns the  highest and lowest values in the list.,"numbers = [2, 18, 9, 22, 10, 17, 24]","def max_min(numbers):
  '''returns a tuple containing highest and lowest values in a given list'''
  return (max(numbers), min(numbers))"
Identify which of the following are palindromes in Python.,"words = ['radar', 'mom', 'dad', 'civic']","palindromes = []

for word in words:
    if word == word[::-1]:
        palindromes.append(word)

print(palindromes) # prints ['radar', 'mom', 'dad', 'civic']"
"Create a program in Python which takes an input string, and sorts it alphabetically",Fortnite,"def sort_string(string): 
    return ''.join(sorted(string)) 
  
string = ""Fortnite""
print(sort_string(string))"
Write a Python script to print out all prime numbers in a given list.,"[4, 15, 22, 50, 119]","import math

def is_prime(n):
    for i in range(2, int(math.sqrt(n))+1):
        if n % i == 0: 
            return False
    return True

input_list = [4, 15, 22, 50, 119]

for num in input_list:
    if is_prime(num):
        print(num)

# Output: 
# 4
# 15
# 50
# 119"
Create a program in Python to add the elements of two given lists.,"list1 = [1, 2, 3]
list2 = [4, 5, 6]","list1 = [1, 2, 3]
list2 = [4, 5, 6]

def addLists(list1, list2):
    result = [] 
    for i in range(0, len(list1)):
        result.append(list1[i] + list2[i])
    return result

print(addLists(list1, list2))"
Write a Python program to generate a random permutation of a given sequence.,"sequence = [1, 2, 3]","from random import shuffle

sequence = [1, 2, 3]
shuffle(sequence)
print(sequence)"
Write a Python program to find the maximum and minimum value of a given array.,"[-2, 15, 4, 8, 11]","def min_max(data):
    min_val = min(data)
    max_val = max(data)
    return min_val, max_val
 
min_val, max_val = min_max([-2, 15, 4, 8, 11])
 
print('Minimum Value: ', min_val)
print('Maximum Value: ', max_val)"
Build a list comprehension in Python to print numbers divisible by 3 and not divisible by 7 in the range of 30 to 50,Range: 30 to 50,"divisible_by_3_or_7 = [n for n in range(30,51) if n % 3 == 0 and n % 7 != 0]
print(divisible_by_3_or_7) # output: [30, 33, 36, 39, 42, 45, 48]"
Construct an algorithm in Golang to capitalize all the letters in a given string,"string = ""python""","package main

import (
	""strings""
)

func capitalize(string string) string {
	return strings.ToUpper(string)
}

func main() {
	string := ""python""
	fmt.Println(capitalize(string))
}"
Design a class in Python to represent a circle.,< noinput >,"class Circle:
    """"""Class to represent a circle.""""""
    def __init__(self, radius):
        """"""Initialize the circle.""""""
        self.radius = radius

    def get_area(self):
        """"""Calculate and return the area of the circle.""""""
        return 3.14 * self.radius * self.radius"
Create a Python code to check if two DNA sequences are equal.,"ATTCTCA, ATTCCTA","def equal(dna1, dna2):
    if (dna1 ==dna2):
        return True
    else:
        return False
dna1 = 'ATTCTCA'
dna2 = 'ATTCCTA'

print(equal(dna1,dna2))"
How would you optimize the following Python code?,"def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n - 1)","def factorial(n):
    if n == 0:
        return 1
    else:
        # Use dynamic programming
        # to store the intermediate results
        memory = {}
        if n in memory:
            return memory[n]
        else:
            memory[n] = n * factorial(n - 1)
            return memory[n]"
Create a Python program to calculate the factorial of an integer,7,"def factorial(n): 
    if n == 0 or n == 1: 
        return 1
    else: 
       return n * factorial(n - 1)

result = factorial(7)
print(result)"
Create a Python script to sort a list of tuples by the second element in the tuple in ascending order.,"myList = [('Tom',7),('Harry',5),('Bob',8)]","def sortList(myList): 
 # sort list by second element  
 myList.sort(key = lambda x: x[1]) 
  
 # printing the sorted list  
 print (""The sorted list in ascending order is : "") 
 for i in range(len(myList)): 
  print(myList[i]), 

myList = [('Tom',7),('Harry',5),('Bob',8)]
sortList(myList)"
Generate a python program for validating a phone number.,"Phone numbers should be in 10-digit format (no dashes, hyphens, etc.).","def valid_phone_number(phone):
    phone = str(phone)
    return len(phone) == 10 and phone.isdigit()"
Edit this Python code to be more efficient.,"def find_min(items):
    min = items[0]
    for item in items:
        if item < min:
            min = item
    return min","def find_min(items):
    min = float('inf')
    for item in items:
        if item < min:
            min = item
    return min"
Create a Python program that takes a sentence as input and returns a dictionary of the words and their frequencies,This is a sample sentence.,"def word_frequency(sentence):
    words = sentence.split()
    freq = {word: words.count(word) for word in words}
    return freq

sentence = 'This is a sample sentence.'
result = word_frequency(sentence)
print(result)"
Compute the frequency of the words in a sentence using Python.,"sentence = ""Hi there, how are you?""","def compute_word_frequency(sentence):
    words = sentence.split()
    frequency = {}

    for word in words:
        if word in frequency:
            frequency[word] += 1
        else:
            frequency[word] = 1
    return frequency"
Create a Python program that takes a string as input and prints all permutations of it in lexicographical order.,ABC,"def permutations(string):
 if len(string) == 0:
 return

 else:
 first_char = string[0]
 remainder = string[1:]
 permutations(remainder)
 for perm in permutations(remainder):
 for i in range(len(perm)+1):
 result = perm[:i] + first_char + perm[i:]
 print(result)

permutations(""ABC"") #run the code

# Output
ABC
ACB
BAC
BCA
CBA
CAB"
Create a Python function to identify the number of even numbers present in a given list of numbers.,"list = [1, 2, 3, 4, 5]","def countEvenNum(list):
    return len([x for x in list if x % 2 == 0])

list = [1, 2, 3, 4, 5]
print(countEvenNum(list))"
Create a Python program to log the current time (in the given timezone) every 20 minutes.,Timezone: America/Los_Angeles,"import time
import datetime
from pytz import timezone

def logtime(tz):
 while True:
 currtime = datetime.datetime.now(tz)
 print(""The current time is"", currtime.strftime(""%H:%M:%S""))
 time.sleep(60 * 20)

logtime(timezone('America/Los_Angeles'))"
Develop a Python program to remove duplicate characters in a given string.,"""Hello World""","def remove_duplicate(my_string):
    char_seen = []
    for character in my_string:
        if character not in char_seen:
            char_seen.append(character)
    return ''.join(char_seen)

print(remove_duplicate(""Hello World"")) #Helo Wrld"
"Generate a program in Python to take in two strings as input, and output a list of all thewords in both strings.","String 1: I want to make a difference
String 2: The journey to success is long","def string_to_list(s1, s2):
    s1_list = s1.split()
    s2_list = s2.split()
    output_list = s1_list + s2_list
    return output_list

words = string_to_list(""I want to make a difference"", ""The journey to success is long"")
print(words)"
Create a function in Python that checks if a given number is a prime.,15,"def isPrime(n):
    if n < 2:
        return False
    for i in range(2, int(sqrt(n))+1):
        if n % i == 0:
            return False
    return True"
Write a Python program to filter a list of numbers so only even numbers are kept.,"[2, 7, 3, 6, 10, 11, 13]","new_list = [x for x in input_list if x % 2 == 0]
print(new_list) # Output: [2, 6, 10]"
Write a Python script to implement an iterator that iterates over a given array.,"[2, 5, 6, 8, 9]","def iterator(array):
  index = 0
  while (index < len(array)):
    yield array[index]
    index += 1

given_array = [2, 5, 6, 8, 9]
iterating = iterator(given_array)

for value in iterating:
  print(value)"
Perform sentiment analysis on a given text using Python.,This movie was an amazing experience!,"from textblob import TextBlob

text = ""This movie was an amazing experience!""
blob = TextBlob(text)
print(""Sentiment score: "", blob.sentiment.polarity)"
Write a Python program to find the most common letter in the given string.,"str = ""hello world""","str = ""hello world""

from collections import Counter

def most_common_letter(str):
    letters_count = Counter(str).most_common()
    return letters_count[0][0]

print(most_common_letter(str))"
"Write a Python function that creates a JSON response with fields for score and data. The data field should contain a message that varies depending on the score value. If the score is 0, the message should state ""Try again"". If the score is 1, the message should state ""Well done"".",score = 0,"def create_response(score):
 if score == 0:
  message = ""Try again""  
 elif score == 1:
  message = ""Well done""
 else:
  message = """"
 
 return {""score"": score, ""message"": message}"
Write a Python program to scrape the text from a web page and remove all the html tags.,<p>This is a sample web page.<br>This text has <b>some</b> <i>html</i> tags.</p>,"import re

text = ""<p>This is a sample web page.<br>This text has <b>some</b> <i>html</i> tags.</p>""

cleaned_text = re.sub(r'<.*?>', '', text)

print(cleaned_text)
# Output: This is a sample web page.This text has some html tags."
Create a Python program to compare two list and return a new combined list,"list_a = [1, 2, 3]
list_b = [4, 5, 6]","def combine_list(list_a, list_b):
    combined_list = []
    for a in list_a:
        combined_list.append(a)
    for b in list_b:
        combined_list.append(b)
    return combined_list"
You are given a list containing integers. Generate a Python program to find the median of that list.,"list = [5, 3, 8, 1, 9, 2]","def find_median(list): 
    list = sorted(list) 
    mid = len(list) // 2 
    if len(list) % 2 == 0: 
        return (list[mid] + list[mid - 1]) / 2 
    else: 
        return list[mid] 

find_median(list)"
Create a function in Python to initialize an array with two parameters.,"params: (4, 5)","def initialize_array(rows, cols): 
    array = [[0 for i in range(cols)] for j in range(rows)]
    return array"
Construct a Python program that finds the maximum number in a given sequence of integers.,"7, 3, 12, 9, 4","sequence = [7, 3, 12, 9, 4]
maxnum = 0

for num in sequence:
 if num > maxnum:
  maxnum = num

print(maxnum) # Output: 12"
"Edit the following Python program to return true if the following string contains the word ""Hello"".",def check_hello(s):,"def check_hello(s):
    return 'Hello' in s"
Create a vectorized implementation in Python to solve the given problem.,"def add(a, b):
    c = []
    for i in range(len(a)):
        c.append(a[i] + b[i])
    return c","import numpy as np
def add_vector(a, b):
    return np.add(a,b)"
Write a function in Python which will take an array of numbers and return the numbers in descending order.,"Example Array: [1, 12, 3, 8]","def sortDescending(arr):
    return sorted(arr, reverse=True)

print(sortDescending([1, 12, 3, 8]))"
Create a Python code snippet to calculate the average of the following array.,"items = [1, 5, 6, 4, 8, 9]","def get_average(array):
    array_length = len(array)
    total_sum = 0
    for i in array:
        total_sum += i
    average = total_sum / array_length
    return average

print(get_average(items))"
Debug the following python code snippet so that it returns a list of even numbers from the given list of numbers.,"ls = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","ls = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
result = []

for num in ls:
 if num % 2 == 0:
 result.append(num)
 
print(result) # prints [2, 4, 6, 8, 10]"
Generate a list comprehension of python that adds two to each element of a given list.,"list = [1, 2, 3, 4]","list = [x+2 for x in [1, 2, 3, 4]]"
Write a Python program to split a given list into two lists based on a given condition.,"list = [1, 2, 3, 4, 5, 6, 7, 8]","list = [1, 2, 3, 4, 5, 6, 7, 8]

#Split the list into two lists based on a given condition
list_a = [x for x in list if x % 2 == 0]
list_b = [x for x in list if x % 2 != 0]

print(list_a) #[2, 4, 6, 8]
print(list_b) #[1, 3, 5, 7]"
Construct a Python program that shuffles a deck of cards.,A standard deck of cards with 52 cards,"import random

# A standard deck of cards with 52 cards
deck = [2, 3, 4, 5, 6, 7, 8, 9, 10, 
        'J', 'Q', 'K', 'A', 
        2, 3, 4, 5, 6, 7, 8, 9, 10, 
        'J', 'Q', 'K', 'A',
        2, 3, 4, 5, 6, 7, 8, 9, 10, 
        'J', 'Q', 'K', 'A',
        2, 3, 4, 5, 6, 7, 8, 9, 10, 
        'J', 'Q', 'K', 'A']

# Shuffle the deck
random.shuffle(deck)
print(deck)"
Create a Python function to remove duplicate elements from a given array.,"array = [1, 2, 5, 2, 1, 9]","def remove_duplicates(array): 
    result = set() 
    for element in array: 
        result.add(element) 
  
    return list(result) 
  
result = remove_duplicates(array) 
print(result)"
"Using Python, generate a program for solving linear equations.","x + 2y = 8
3x – 4y = -2","def solution(coefficients):
	# get the coefficients of the equations
	a = coefficients[0][0] 
	b = coefficients[0][1] 
	c = coefficients[0][2] 
	d = coefficients[1][0] 
	e = coefficients[1][1] 
	f = coefficients[1][2] 

	# solve for x and y
	y = (a*f - c*d)/(a*e - b*d) 
	x = (c*e - b*f)/(a*e - b*d) 

	# return the solutions
	return x, y


# example
solution([[1, 2, 8], [3, -4, -2]])"
Create a Python program to analyze the sentiment of a given sentence.,sentence = 'I am very happy to be here',"from textblob import TextBlob

sentence = 'I am very happy to be here'
sentiment = TextBlob(sentence).polarity

if sentiment > 0:
    print(""Sentiment: Positive"")
elif sentiment == 0:
    print(""Sentiment: Neutral"")
else:
    print(""Sentiment: Negative"")"
Write a python script to extract the text from a HTML page and count the number of words.,"<html>
<head>
    <title>My Page</title>
</head>
<body>
    <p>This is a test page</p>
</body>
</html>","from bs4 import BeautifulSoup
import re

html_doc = <input>
soup = BeautifulSoup(html_doc, 'html.parser')
text = soup.get_text()
words = re.findall(r'\w+', text)
print (len(words))"
Write a method in Python to print each element in a given dictionary.,"{
    ""Alice"": 23,
    ""Bob"": 30,
    ""John"": 27
}","def printDict(dictionary): 
    for key in dictionary: 
        print(""{}: {}"".format(key, dictionary[key])) 

dict = {
    ""Alice"": 23,
    ""Bob"": 30,
    ""John"": 27
}
printDict(dict)"
Create a Python program to classify the digits in a dataset,"Features: [0.25, 0.33, 0.46, 0.83, 0.14]
Labels: [0, 0, 1, 1, 0]","import numpy as np 
from sklearn.svm import SVC 

features = np.array([[0.25, 0.33, 0.46, 0.83, 0.14]]) 
labels = np.array([0, 0, 1, 1, 0]) 
clf = SVC() 
clf.fit(features, labels) 

# predicting the class of the following data 
test_data = np.array([[0.36, 0.22, 0.91, 0.81, 0.12]]) 
result = clf.predict(test_data) 
print(result)"
Create a function in Python to sort a list of dictionaries by a particular key.,Example of a list of dictionaries,"def sort_list(lst, key):
    # Sorts a list of dictionaries
    return sorted(lst, key=lambda k: k[key])"
"Create a python program which takes a sentance as the input, split it into words, and prints all the words on a new line.",This is a sentence,"sentence = ""This is a sentence""
words = sentence.split()
 
for word in words:
    print(word)"
"Write a Python function to generate a random number between 1 and 5, given two numbers X and Y.","4, 8","import random

def generate_random_number(x, y):
    start = min(x, y)
    end = max(x, y)
    return random.randint(start, end)

result = generate_random_number(4, 8)
print(result)"
Generate a Python program to split a given string into uppercase and lowercase letters.,"string=""GPTIsForever""","def case_split(string):
    string_list =list(string)
    upper_list = []
    lower_list = []
    
    for i in string_list:
        if i.isupper():
            upper_list.append(i)
        else:
            lower_list.append(i)
    return ''.join(upper_list), ''.join(lower_list)"
Create a Python program to classify a given set of data using a k-nearest neighbors algorithm.,"data = [[1, 2], [2, 3], [3, 4], [4, 5], [5, 6], [6, 7]]","import numpy as np
from sklearn.neighbors import KNeighborsClassifier

data = np.array([[1, 2], [2, 3], [3, 4], [4, 5], [5, 6], [6, 7]])

# Create the model
model = KNeighborsClassifier()

# Train the model
model.fit(data[:, 0].reshape(-1, 1), data[:, 1].reshape(-1, 1))

# Output the result
print(model.predict([[2]])) # [[3]]"
Determine the maximum of two values in Python without using the max function.,"x = 7
y = 3","# Determine the maximum of two values in Python
# without using the max function

x = 7
y = 3

# if x is greater than y, 
# then x is the max
if x > y:
    max_value = x
# if y is greater than x, 
# then y is the max
else:
    max_value = y

print(max_value)"
"Given an URL as a string, write a program in Python to find the domain name.","url = ""https://www.google.com""","def get_domain_name(url): 
    return url.split(""/"")[2]

print(get_domain_name(""https://www.google.com""))  # prints www.google.com"
Optimize a Python script's performance by refactoring the code to use multiprocessing.,"def process_list_data(data):
 for record in data:
  # Process the data

list_data = [1,2,3,4,5]

process_list_data(list_data)","from multiprocessing import Pool

def process_data(record):
 # Process the data

def process_list_data(data):
 with Pool() as p:
 p.map(process_data, data)

list_data = [1,2,3,4,5]

process_list_data(list_data)"
Sort the list in the following python code using the bubble sort algorithm.,"arr = [1, 10, 5, 4, 8]","def bubble_sort(arr): 
    n = len(arr) 
    for i in range(n): 
        for j in range(0, n-i-1): 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j]

bubble_sort(arr)"
Create a function in Python for evaluating a given expression.,"expression = ""2 * (3 + 4)""","def eval_expr(expr):
    return eval(expr)

print(eval_expr(""2 * (3 + 4)""))
# 14"
Create a Python script that takes a given text string and outputs the number of words in the string.,Text string: “I love programming”,"def wordCount(text):
    words = text.split(' ')

    return len(words)

print(wordCount(""I love programming""))  # 3"
Write a Python program to join two given lists.,"list1 = [1, 2, 3] 
list2 = [4, 5, 6]","def join_lists(list1, list2):
    return list1 + list2

list1 = [1, 2, 3] 
list2 = [4, 5, 6]

joined_list = join_lists(list1, list2)
print(joined_list)"
Build a Python program to sort values,"Sort the array [9, 3, 1, 8, 5] in ascending order.","def sort_ascending(arr):
    # Bubble sort
    for i in range(len(arr) - 1):
        for j in range(len(arr) - 1):
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]
    
    return arr"
Suggest a method to improve the efficiency of the following Python program.,"s = 'abcdefghijklmnopqrstuvwxyz'

def func(s):
    s_list = []
    for c in s:
        if c not in s_list:
            s_list.append(c)
    
    return s_list","s = 'abcdefghijklmnopqrstuvwxyz'

def func(s):
    s_list = set()
    for c in s:
        s_list.add(c)
    
    return list(s_list)"
"Using the given functions, write a Python program that takes an n-dimensional vector vector as an argument and returns its norm.","def vector_length(vector): 
    return math.sqrt(sum(c * c for c in vector))","def vector_norm(vector):
    return vector_length(vector)

vector = [1, 2, 3]
norm = vector_norm(vector)
print(norm)"
Create a Python program that prints a Fibonacci sequence.,length = 10,"def fibonacci(length):
  fibonacci_list = [1, 1]
  while len(fibonacci_list) < length:
    last_item = fibonacci_list[-1]
    second_last_item = fibonacci_list[-2]
    next_item = last_item + second_last_item
    fibonacci_list.append(next_item)
  return fibonacci_list

length = 10
print(fibonacci(length))"
Construct a program in Python that determines the largest prime factor of a number.,number = 300,"def find_largest_prime_factor(number):
  i = 2
  while i < number // 2:
    if number % i == 0:
      number = number // i
      i = 2
    else:
      i += 1
  return number

print(find_largest_prime_factor(300))"
Write a Python code that takes a given list of numbers and returns the mode of that list.,"List = [1,2,3,4,2,2,2,5]","def find_mode(List): 
    max_count = 0
    modes = [] 
    for num in List: 
        current_count = List.count(num) 
        if current_count > max_count: 
            max_count = current_count 
            modes = [num] 
        elif current_count == max_count: 
            modes.append(num) 
    return modes"
Find the maximum of three numbers using a Python program.,"5, 11, 6","def findMaxNum(a, b, c):
    maxNum = a
    if b > maxNum:
        maxNum = b
    if c > maxNum:
        maxNum = c
    return maxNum

maxNum = findMaxNum(5, 11, 6)
print(maxNum)"
Create a Python function to print out all the prime numbers between two integers.,"start = 10, end = 25","def print_primes(start, end):
 for n in range(start, end + 1):
 if is_prime(n):
 print(n)
 
def is_prime(n):
 if n <= 1:
 return False
 elif n <= 3:
 return True
 elif (n % 2 == 0) or (n % 3 == 0):
 return False
 
 i = 5
 while i ** 2 <= n:
 if (n % i == 0) or (n % (i + 2) == 0):
 return False
 i += 6
 
 return True

print_primes(10, 25)"
"Update the given python object with field name ""address"", value as ""London""","{""name"": ""John"", ""age"": 25}","{'name': 'John', 'age': 25, 'address': 'London'}"
Generate a Python program to apply custom formatting for the following output.,"Given a list of strings, output a HTML table with data in the strings","def create_html_table(slist):
    table_html = ""<table>""
    for str in slist:
        table_html += ""<tr>""
        table_html += ""<td>"" + str + ""</td>"" 
        table_html += ""</tr>""

    table_html += ""</table>""
    return table_html"
Write a code to sort a list of strings according to their lengths,"[""Python"", ""is"", ""a"", ""programming"", ""language""]","def sortByLength(strings):
    """"""Sort a list of strings according to their lengths""""""
    # Sort the list using a key function
    return sorted(strings, key=len)

if __name__ == '__main__':
    strings = [""Python"", ""is"", ""a"", ""programming"", ""language""]
    print(sortByLength(strings))"
Design a program that takes a date as input and calculates the day of the week that date falls on.,31-05-20,"#!/usr/bin/env python3

import datetime

def dayOfWeek(date):
   year,month,day = map(int,date.split('/'))
   dayNumber = datetime.date(year, month, day).weekday()
 
   return [""Monday"", ""Tuesday"", ""Wednesday"", ""Thursday"", ""Friday"", ""Saturday"", ""Sunday""][dayNumber]"
Create a Python script which takes two numbers as arguments and returns the maximum of the two numbers.,"Number1: 8
Number2: 4","def maxNumber(num1, num2):
 if num1 > num2:
   return num1
 else:
   return num2

if __name__ == '__main__':
 num1 = 8
 num2 = 4
 print(maxNumber(num1, num2))"
Write a Python program to calculate the total cost of a shopping cart containing multiple items. The program should take a list of items and their prices as input and output the total cost.,"items = {'apple': 2.99, 'banana': 0.99, 'mango': 4.98}","totalCost = 0
for item, price in items.items():
totalCost += price

print(f'Total cost of the cart is {totalCost}')"
Modify a given Python code to make it run faster.,Python code,"# original code 
def find_sum(numbers):
  total = 0
  for number in numbers:
    total += number
  return total 

# modified code 
def find_sum(numbers):
  return sum(numbers)"
Optimize performance of an existing code snippet by making use of Python's list comprehensions.,"numbers = [1, 2, 3, 4, 5]
squares = []
for n in numbers:
 squares.append(n*n)","numbers = [1, 2, 3, 4, 5]
squares = [n*n for n in numbers]"
Generate a Python program to round a floating point number to a certain number of decimal places.,"2.71828, 3","def round_float(num, decimal_ places):
    '''
    Function to round a floating point number to a certain number of decimal places
    '''
    return round(num, decimal_places)

result = round_float(2.71828, 3)
print(result)"
Implement a Python function to check if all n numbers in an array are equal.,"[1,1,1]","def checkEqual(arr):
    if len(arr) == 0:
        return False
    return all(arr[0] == x for x in arr)"
Generate a Python program that determines whether a given array is a palindrome or not.,"[3,2,1,1,2,3]","def is_palindrome(arr):
    if arr == arr[::-1]:
        return True
    return False

result = is_palindrome([3, 2, 1, 1, 2, 3])
print(result) # Output: True"
Generate a program in Python to output the top 3 numbers from an array of integers,"[7, 13, 5, 8, 50, 11, 64, 48]","def top_three(numbers):
    sorted_numbers = sorted(numbers, reverse=True)
    return sorted_numbers[:3]

print(top_three([7, 13, 5, 8, 50, 11, 64, 48]))"
Write a Python program that can detect the language of a given piece of text.,"The text is: ""Bonjour tout le monde""","import detect_language

text = ""Bonjour tout le monde""
language = detect_language.detect(text)
print(language) # fr"
Generate a python script to return the longest word in a given sentence.,This is a sentence with multiple words.,"def longestWord(sentence):
    words = sentence.split(' ')
    longest = ''
    for word in words:
        if len(word) > len(longest):
            longest = word
    return longest"
Create a python function which takes a list as an argument and returns the largest number in the list.,"numbers = [20, 9, 5, 10]","def largest_number(numbers):
    largest = numbers[0]
    for num in numbers:
        if num > largest:
            largest = num
    return largest

largest = largest_number(numbers)
print('The largest number in the list is: ', largest)"
"Create a function in Python to optimize the following function with respect to its two variables x, and y.","f(x,y) = 2x^3 + 3y^2 + y + 5","import numpy as np 
import scipy.optimize as opt 

def func(x): 
	return 2*np.power(x[0], 3) + 3*np.power(x[1],2) + x[1] + 5

opt.minimize(func, ([0, 0]), method='nelder-mead', 
options={'xtol': 1e-8, 'disp': True})"
Create a function in Python that takes a list of numbers andarranges them in ascending order.,"nums = [4, 5, 2, 1, 6, 5]","def sort_ascending(nums):
    sorted_list = sorted(nums) 
  
    return sorted_list

print(sort_ascending(nums)) # [1, 2, 4, 5, 5, 6]"
"Write a Python program that performs sentiment analysis on a given sentence and labels it as ""positive"", ""negative"" or ""neutral"".","Sample sentence - ""Life is beautiful""","def sentiment_analysis(sentence):
  # Use sentiment analyzer API here   
  sentiment = sentiment_analyzer.polarity_scores(sentence)
  if sentiment['compound'] > 0:
    return 'positive'
  elif sentiment['compound'] < 0:
    return 'negative'
  else:
    return 'neutral'"
Generate a python program to parse a string and extract the number of vowels.,"Input string: “Hello World!""","def count_vowels(s):
    vowels = [""a"", ""e"", ""i"" , ""o"", ""u""]
    count = 0 
    for character in s.lower():
        if character in vowels:
            count += 1
    print(""Number of vowels :"", count)"
Design a Python program to remove all the elements from a list that are not a prime number.,"[1, 2, 3, 4, 5, 6, 7, 8]","def remove_non_primes(my_list):
    result = []
    for num in my_list:
        prime = True
        for i in range(2, num):
            if num % i == 0:
                prime = False
                break
        if prime:
            result.append(num)
    return result

result = remove_non_primes([1, 2, 3, 4, 5, 6, 7, 8])
print(result)"
Generate a correct python statement to add two given numbers.,"num1 = 10
num2 = 20",sum = num1 + num2
Create a Python program that takes a sentence as an input and outputs all the words with their part of speech.,This is a sentence.,"import nltk

sentence = 'This is a sentence.'
words = nltk.word_tokenize(sentence)

for word in words:
 print(f'{word}: {nltk.pos_tag([word])[0][1]}')"
Create a python program to filter out all the even numbers from a given list.,"[3, 4, 5, 6, 7]","def filter_even_numbers(numbers):
    even_numbers = []
    for i in numbers:
        if i % 2 == 0:
            even_numbers.append(i)
    return even_numbers
    
    
filtered = filter_even_numbers([3, 4, 5, 6, 7])
print(filtered)"
Write a Python program to find all the roots of a given quadratic equation.,"a = 2, b = 5, c = -3","def quadratic_roots(a, b, c):
    # Calculate the discriminant 
    discriminant = (b**2) - (4*a*c)

    # Compute the root
    root1 = (-b + discriminant**0.5)/(2*a) 
    root2 = (-b - discriminant**0.5)/(2*a)

    # Print the roots
    print(""The roots are {0} and {1}"".format(root1, root2))

quadratic_roots(2, 5, -3)"
Write a Python script to get the sum of two numbers and check the correctness of the result.,"two_number = [4, 7]","# Get the numbers
two_numbers = [4, 7]

# Compute the sum
result = two_numbers[0] + two_numbers[1]

# Check the correctness of the result
if result != 11:
    print(""The result is wrong!"")
else:
    print(""The result is correct!"")"
Develop a python code that prints the longest word in a list.,"The list is [""Hello"", ""World"", ""Welcome"", ""To"", ""the"", ""universe""].","def longest_word(word_list): 
    maxLen = len(max(word_list, key = len)) 
    return [x for x in word_list if len(x) == maxLen] 
  
list = [""Hello"", ""World"", ""Welcome"", ""To"", ""the"", ""universe""]
  
print(longest_word(list)) # Output: [""Welcome"", ""universe""]"
Write a Python script to parse a given string and construct a dictionary from its content.,"""bio: John Smith, age: 32""","def parse_string(s):
    info = s.split("", "")

    result = {}
    for item in info:
        k, v = item.split("": "")
        result[k] = v

    return result

result = parse_string(""bio: John Smith, age: 32"")
print(result)"
Modify the given Python program to optimize the memory allocation and improve the execution time of the program,"import pandas as pd
data = pd.read_csv('dataset.csv')","import pandas as pd

# Load the dataset with memory optimization
data = pd.read_csv('dataset.csv', low_memory=True)

# Optimize the data to reduce the size 
data = data.drop_duplicates(keep=False)

# Optimize the data to increase the performance 
data = data.apply(pd.to_numeric, errors='coerce')"
Rewrite the following function in Python to use recursion instead of a loop,"def factorial_iterative(n):
    factorial = 1
    while n > 1:
        factorial = factorial * n
        n -= 1
    return factorial","def factorial_recursive(n):
    # Base case: 
    # n is 1, return 1
    if n == 1:
        return 1
    # Recursive case: 
    # return n * (n-1)
    return n * factorial_recursive(n - 1)

# Test
print(factorial_recursive(5))"
"Write a Python program to convert a given number of days into years, months and days.",Days = 500,"def convert_days_wm(Days):
    y = Days//365
    m = (Days%365)//30
    d = (Days%365)%30
    return y, m, d"
Create a Python script that orders a list of strings alphabetically from a to z.,"[""Banana"", ""Apple"", ""Orange"", ""Pear""]","def sort_list(list):
    list.sort()
    return list

sorted_list = sort_list([""Banana"", ""Apple"", ""Orange"", ""Pear""])
print(sorted_list)"
Write a script in Python to generate a dictionary of words from a given string.,def words_dict(string):,"def words_dict(string):
    """"""This function returns a dictionary with words as keys and their count as values.""""""
    words = string.split()
    word_dict = {}
    
    for word in words:
        if word in word_dict:
            word_dict[word] += 1
        else: 
            word_dict[word] = 1
    
    return word_dict"
Design a Python web crawler that takes a URL as an input and prints out a list of all the hyperlinks on the page.,https://www.example.com,"import requests 
from bs4 import BeautifulSoup 

def crawl_page(url): 
    page = requests.get(url) 
    soup = BeautifulSoup(page.content, 'html.parser') 
    return [link.get('href') for link in soup.find_all('a')] 

url = ""https://www.example.com""
links = crawl_page(url)
for link in links:
 print(link)"
Write a loop in Python that accumulates the sum of the numbers in an array.,"[1, 2, 3]","sum = 0

for num in [1, 2, 3]:
    sum += num

print(sum)"
Write a function in Python to Print a given string in Reverse order.,"string = ""Welcome to my site!""","def reverseString(string):
    revString = ''
    for i in range(len(string)-1, -1, -1):
        revString += string[i]
    return revString"
Create a Python program to join a list of strings with a delimiter.,"[""Apple"", ""Orange"", ""Mango""]","def join_list_str(list_str, delimiter):
  return delimiter.join(list_str)

list_str = [""Apple"", ""Orange"", ""Mango""]
delimiter = "",""

result = join_list_str(list_str, delimiter)

print(result)

# Output
Apple,Orange,Mango"
Edit a Python module to include a function that adds two given numbers.,"The Python module contains the following code:

def subtract(x, y):
 return x - y","def subtract(x, y):
    return x - y

def add(x, y):
    return x + y"
"Modify the Python function so that it prints ""Success!"" if the input parameter is greater than 10, or prints ""Failed!"" if it is less than or equal to 10.",7,"def check_num(num):
    if num > 10:
        print(""Success!"")
    else:
        print(""Failed!"")

check_num(7)"
Use Python to sort the list of words in descending alphabetical order.,"correct, tango, apple, banana","words = [""correct"", ""tango"", ""apple"", ""banana""] 

# Sort words in reverse alphabetical order 
words.sort(reverse=True) 

# Print list in descending order 
print(words)"
"Given a URL, write a Python script to fetch and decode the HTML web page using the `requests` library.","""https://example.org/""","import requests

url = ""https://example.org/""

response = requests.get(url)

if response.status_code == 200:
  html_page = response.content.decode('utf-8')"
Create a function in Python that takes a string as input and replaces the character at a given index with the character '*'.,"Input string: ""Hello world""
Index: 3","def replace_character(string, index):
    new_string = """"
    for i in range(len(string)):
        if i == index:
            new_string += ""*""
        else:
            new_string += string[i]
    return new_string

print(replace_character(""Hello world"", 3)) # Output: Hel*lo world"
Create a loop in Python to print the following sentence 5 times.,"""I love coding!""","for i in range(5):
    print(""I love coding!"")"
"Implement a function in Python that takes a nested list as an input, and flattens the list into a single list.","[[1,2,3],[4,5,6],[7,8,9]]","def flatten_list(list):
 flattened_list = []
 for sublist in list:
 for item in sublist:
 flattened_list.append(item)
 return flattened_list

print(flatten_list([[1,2,3],[4,5,6],[7,8,9]]))
# Output: [1, 2, 3, 4, 5, 6, 7, 8, 9]"
"Write a Python program to generate a dictionary that contains numbers (between 1 and n) in the form (x, x*x).",n = 8,"nums = {x: x*x for x in range(1, n+1)}
print(nums)"
Can you create a Python program that compares two lists and finds common elements?,"list1 = [3, 4, 5, 6, 7]
list2 = [2, 3, 4, 5, 6]","list1 = [3, 4, 5, 6, 7]
list2 = [2, 3, 4, 5, 6]

common_elements = set(list1) & set(list2)
print(list(common_elements)) 
# Output: [3, 4, 5, 6]"
Enhance a given program in python so that it prints all divisors of a given number.,"def printDivisorsOfNumber(n): 
    print(""The divisors of the number are: "")","def printDivisorsOfNumber(n): 
    print(""The divisors of the number are: "")
    for x in range(1, n+1):
        if n%x == 0: 
            print(x)"
Generate a Python program that translates a sentence into pig latin,Hello world,"def pig_latin(sentence):
  words = sentence.split(' ')
  result = """"
  for word in words:
    result += word[1:] + word[0] + ""ay"" + "" ""
  return result

print(pig_latin(""Hello world""))"
Generate a function in Python that takes a list and returns a list of all possible subsequences.,"[1, 2, 3]","def get_subsequences(arr):
    subsequences = [[]]
    for num in arr:
        new_subsequences = []
        for sub in subsequences:
            new_subsequences.append(sub + [num])
        subsequences += new_subsequences
    return subsequences

arr = [1, 2, 3]
result = get_subsequences(arr)
print(result)"
Convert a string to lowercase using Python.,HELLO WORLD!,"str = ""HELLO WORLD!""
lowerCaseStr = str.lower()
print(lowerCaseStr)"
Implement a Python program to remove all duplicates from an array.,"array = [3, 8, 12, 3, 17, 8, 25]","def remove_duplicates(my_list):
    result = []
    seen = set()
    for item in my_list:
        if item not in seen:
            seen.add(item)
            result.append(item)
    return result"
"Using a built-in sorting algorithm, write a Python program to sort a given list of integers.","[3, 4, 6, 1, 9, 5, 2]","def sort_list(arr):
    return sorted(arr)

my_list = [3, 4, 6, 1, 9, 5, 2]
sorted_list = sort_list(my_list)
print(sorted_list)"
Translate the following code from Python to JavaScript,"def calculate_area(width, height):
    return width * height","function calculateArea(width, height) {
    return width * height;
}"
Develop a Python program to calculate the Volume of a Sphere with the given radius.,Radius = 5,"def calculateSphereVolume(radius):
    volume = (4/3) * (3.142) * (radius**3)
    return round(volume, 2)

radius = 5
result = calculateSphereVolume(radius)
print(result)  # Output: 523.6"
Construct a Python program to sum the items of a given list.,"[3, 5, 6, 10]","def list_sum(input_list):
    """"""Computes the sum of the items of a given list.""""""
    output = 0
    for item in input_list:
        output += item
    return output

print(list_sum([3, 5, 6, 10]))"
Create a Python program to visualize the performance of different stock prices over a period of time.,A list of stock prices for a given company over the past 10 years,"import matplotlib.pyplot as plt
 
# Read in data
data = []
with open('stock_prices.txt') as f:
    data = [float(x) for x in f.read().split()]

# Plot data
plt.plot(range(1, len(data)+1), data)
plt.title('Stock Price Over Time')
plt.xlabel('Time')
plt.ylabel('Price')
plt.show()"
Create a function in Python that converts a sentence to upper case.,"""This is an example sentence.""","def sentence_to_upper(sentence):
    return sentence.upper()

print(sentence_to_upper(""This is an example sentence.""))"
Create a program in Python to print the following output.,"string = ""programming""","str = ""programming""
print(str[::-1])

Output: gnimmargorp"
"In Python, create a function to identify whether a given number is even or odd.",Number: 21,"def is_odd(n):
  if(n % 2 == 0):
    return ""Even""
  else:
    return ""Odd""
 
print(is_odd(21)) # Outputs: ""Odd"""
"Given a set of numbers, write a Python program to find the maximum number after performing arithmetic operations on the digits of the set of numbers.","nums = [12, 198, 16]","def find_max(nums):
    max_num = 0
    for num in nums:
        str_num = str(num)
        mul_res = 1
        for digit in str_num:
            mul_res *= int(digit)
        max_num = max(max_num, mul_res)
    return max_num"
Write a Python program that takes two given strings and checks if the first is a substring of the second one.,"string_1 = 'cat'
string_2 = 'the cats meow'","def is_substring(string_1, string_2):
    
    if string_1 in string_2:
        return True
    else:
        return False"
Write a python code for taking an array of numbers and returning only the odd numbers in descending order.,"[1, 8, 5, 9, 12, 17]","def extract_odd(arr):
    odd = [x for x in arr if x % 2 != 0]
    return sorted(odd, reverse = True)

arr = [1, 8, 5, 9, 12, 17]
print(extract_odd(arr)) # Output: [17, 9, 5, 1]"
"Create a Python script to print out the values in a given dictionary, with each key and value on a separate line.","my_dict = {'a': 1, 'b': 2, 'c': 3}","for k, v in my_dict.items():
    print(f'{k}: {v}')"
Implement a Python program to calculate the area of a triangle given the length of three sides.,"5, 6, 7","def triangle_area(a, b, c): 
    # Semi-perimeter
    s = (a + b + c) / 2
    # calculate the area
    area = (s*(s-a)*(s-b)*(s-c)) ** 0.5    
    return area 

# Driver code 
a = 5
b = 6
c = 7
print(""Area of the triangle is {:.2f}"".format(triangle_area(a, b, c)))"
Create a Python code to split a given string into an array with all of the individual sentences.,'This is a test string with three sentences!',"def split_sentences(text):
    sentences = []
    start = 0
    for i in range(len(text)):
        if text[i] == '.' or text[i] == '!' or text[i] == '?':
            sentences.append(text[start:i+1])
            start = i+1
    return sentences

split_sentences('This is a test string with three sentences!')"
Create a Python program for sorting a dictionary based on a given key.,"{""apple"": 10, ""banana"": 5, ""pear"": 7}","def sort_dict(d, key): 
 return sorted(d.items(), key=lambda x: x[1][key])

#Test
d = {""apple"": 10, ""banana"": 5, ""pear"": 7} 

print(sort_dict(d, ""price""))
# Output: [('banana', {'price': 5}), ('pear', {'price': 7}), ('apple', {'price': 10})]"
Compare two strings using Python and output the similarity score between them.,"String 1: hello world 
String 2: hey world","import difflib

def compare_strings(str1, str2):
 score = difflib.SequenceMatcher(None, str1, str2).ratio() 
 print(""Similarity score is:"", score)

compare_strings(""hello world"", ""hey world"") # Output: Similarity score is: 0.909"
Change the following Python code such that it prints the difference between two numbers.,"n1 = 9
n2 = 4
print(n1+n2)","n1 = 9
n2 = 4
print(n1 - n2)"
Create an API using flask and python which takes a list or array of integers and returns their minimum and maximum values.,"[12, 4, 9, 24, -5]","from flask import Flask, request
app = Flask(name)

@app.route('/minmax', methods=['POST'])
def minmax():
 data = request.get_json()
 nums = data['nums']
 minVal = min(nums)
 maxVal = max(nums)
 return {'min': minVal, 'max': maxVal}

if name == 'main':
 app.run()"
Modify a Python program to optimize its performance and handle errors gracefully.,A Python program to read a file and print its contents,"# Library import
import os

# Path of the file
file_name = ""myfile.txt""

# Open file
try:
  with open(file_name, 'r') as f:

    # Read file
    contents = f.read()

    # Print file
    print(contents)

except IOError:
  print('Error: file not found!')

finally:
  if f:
    f.close()"
Write a Python program to print out all possible pairs of two lists.,"list1 = [1, 2, 3]
list2 = ['a', 'b', 'c']","for i in list1:
    for j in list2:
        print(i,j)

# Output:
# (1, 'a')
# (1, 'b')
# (1, 'c')
# (2, 'a')
# (2, 'b')
# (2, 'c')
# (3, 'a')
# (3, 'b')
# (3, 'c')"
Explain the following Python code,"def fun(a,b):
   return a+b","The given code defines a function named 'fun' which accepts two arguments, 'a' and 'b'. The function returns the sum of 'a' and 'b'."
Generate a Python program to sort a list of strings alphabetically.,"['banana', 'apple', 'orange']","def sort_strings(string_list):
    sorted_list = sorted(string_list)
    return sorted_list

unsorted_list = ['banana', 'apple', 'orange']
sorted_list = sort_strings(unsorted_list)
print(sorted_list)"
Write a function in Python which takes a string as input and returns its reversed version.,"Input string: ""Hello World""","def reverse_string(string): 
  
  # Create an empty string  
  rev_str = """" 
  
  # Iterate over characters of the given string  
  for char in string: 
    # Prepend the character to the beginning of rev_str 
    rev_str = char + rev_str 
  
  return rev_str 
  
# Driver code 
string = ""Hello World""
print(reverse_string(string)) # Output: dlroW olleH"
Develop a program in Python to subtract two given integers.,"int1=-5
int2=3","# Program to subtract two integers

int1 = -5
int2 = 3

# Subtract
subtract = int1 - int2
 
print("" Difference of two given integers is :"", subtract)"
Generate a stack trace for the following Python program,"import traceback
def foo(x, y):
    return x/y

try:
    foo(10, 0)
except:
    traceback.print_exc()","Traceback (most recent call last):
  File ""code.py"", line 6, in <module>
    foo(10, 0)
  File ""code.py"", line 3, in foo
    return x/y
ZeroDivisionError: division by zero"
Modify the python code to correctly display the output.,"if 4 < 8: 
  print('Hello World')","if 4 < 8: 
  print('Hello World')
else:
  print('Goodbye World')"
Create a for loop in Python to iterate over a list of numbers and print only the even numbers.,"my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","for num in my_list:
    if num % 2 == 0:
        print(num)"
Write a python program to sort a given list of tuples based on its first element in increasing order.,"[(3, 'ape'), (1, 'cat'), (4, 'dog'), (2, 'bee')]","def sortTuplesByFirstElement(lst):
    lst.sort(key = lambda x: x[0])
    return lst

sortedList = sortTuplesByFirstElement([(3, 'ape'), (1, 'cat'), (4, 'dog'), (2, 'bee')])
print(sortedList)"
Design an algorithm in Python to find the largest number in a list.,"[2, 5, 8, 10, 21]","def largest_num_in_list(arr):
    largest_num = 0
    for num in arr:
        if num > largest_num:
            largest_num = num
    return largest_num

if __name__ == '__main__':
    print(largest_num_in_list([2, 5, 8, 10, 21])) # 21"
Compare two arrays of Python objects and return True if all objects in arrayA are also in arrayB.,"arrayA = ['a', 'b', 'c', 'd']
arrayB = ['c', 'b', 'a', 'd', 'e']","def compare_arrays(arrA, arrB):
    for i in arrA:
        if i not in arrB:
            return False
    return True"
"Rewrite the following Python code in Java.

myString = ""Hello World""
print(myString[0:5])",No input,"String myString = ""Hello World"";
System.out.println(myString.substring(0,5));"
Develop an algorithm for a Linear Search of an unordered array in Python.,"[4, 8, 15, 23]","def linear_search(arr, target):
    for i in range(len(arr)):
        if arr[i] == target:
            return i
    return -1"
Generate a python code to rotate an array by k steps.,"[1,2,3,4,5]","def leftRotate(arr, k): 
    new_arr = arr[k:] + arr[:k] 
    return new_arr"
Create a short Python program that prints out the current date and time in the specified format.,"Format - ""YYYY-MM-DD HH:MM:SS""","import time

time_now = time.strftime(""%Y-%m-%d %H:%M:%S"")
print(time_now)"
Refactor a Python function to use list comprehension.,"def square_list(nums):
    squares = []
    # Iterate over the given list
    for num in nums:
        # Append the value of num squared to the new list
        squares.append(num ** 2)
    
    return squares","def square_list(nums):
    return [num ** 2 for num in nums]"
Can you write a Python program that finds the second largest element in the given array by sorting it?,"arr = [6, 1, 35, 65, 4]","arr.sort()
second_largest = arr[-2] # 35"
Create a python program to convert the given time value to 24-hour time format.,time = '08:45 PM',time_24_hour = '20:45'
Write a Python function to find the most frequent elements in a list.,"[3, 4, 2, 5, 4, 3, 2, 5, 4]","def most_frequent_elements(lst):
 count = {}
 for item in lst:
 if item in count:
 count[item] += 1
 else:
 count[item] = 1
 max_count = 0
 max_element = None
 for item in count:
 if count[item] > max_count:
 max_count = count[item]
 max_element = item

return max_element

print(most_frequent_elements([3, 4, 2, 5, 4, 3, 2, 5, 4]))
# Output: 4"
Write a Python comparative sorting algorithm,"[9, 8, 7, 6, 5, 4, 3, 2, 1]","def sort(list):
    """"""
    Implements a comparison sorting algorithm using Python.
    Sorts the given list in ascending order.
    """"""
    for i in range(len(list)):
        for j in range(i + 1, len(list)):
            if list[i] > list[j]:
                list[i], list[j] = list[j], list[i]
    return list

if __name__ == '__main__':
    list = [9, 8, 7, 6, 5, 4, 3, 2, 1]
    print(sort(list))"
Write a Python program to sort a given list according to specified criteria.,"lst = [('a', 1), ('b', 3), ('c', 2)]","def sort_list(lst):
  return sorted(lst, key=lambda x: x[1])

result = sort_list([('a', 1), ('b', 3), ('c', 2)]) 
print(result)"
"Using the input dictionary as a guide, implement a Python function to print out the list of values for each key.","my_dict = {""Alice"": 25, ""Bob"": 21, ""Eve"": 45}","def print_values(dict_in):
    for key,value in dict_in.items():
        print(key, "":"", value)

print_values(my_dict)"
Create a program in Python that takes an array of integers and prints the first odd number from the left side.,"arr = [1, 4, 5, 6, 9, 10, 11]","def first_odd(arr):
    for num in arr:
        if num % 2 != 0:
            print(num)
            break

arr = [1, 4, 5, 6, 9, 10, 11]
first_odd(arr)"
Write an algorithm in Python to find the Fibonacci number at a given position.,Position: 5,"def fibonacci(n):
  if n == 0: 
    return 0
  elif n == 1: 
    return 1
  else: 
    return fibonacci(n-1) + fibonacci(n-2) 
  
# Test
print(fibonacci(5))

# Output
5"
Write a Python program to classify the type of an angle based on the measure of the angle.,angle = 180,"def classify_angle(angle):
  if angle == 0:
    return ""Zero angle""
  elif angle > 0 and angle < 90:
    return ""Acute angle""
  elif angle == 90:
    return ""Right angle""
  elif angle > 90 and angle < 180:
    return ""Obtuse angle""
  elif angle == 180:
    return ""Straight angle""

result = classify_angle(angle)"
Optimize the following Python code to print the numbers in reverse.,"for i in range(1,11):
    print(i)","for i in reversed(range(1,11)):
    print(i)"
Create a function in Python that takes a list of numbers and finds the largest even number.,"[2, 5, 7, 6]","def largest_even(arr):
    even_nums = []
    for num in arr:
        if num % 2 == 0:
            even_nums.append(num)
    
    if len(even_nums) == 0:
        return None
    
    largest = even_nums[0]
    for num in even_nums:
        if num > largest:
            largest = num
    
    return largest

result = largest_even([2, 5, 7, 6])
print(result)"
Write a Python program to measure the similarity between two strings using Jaccard index.,"String1: Apple
String2: Orange","def jaccard_index(str1, str2):
    set1 = set(str1.split())
    set2 = set(str2.split())

    return float(len(set1 & set2)) / len(set1 | set2)

str1 = input(""String1: "")
str2 = input(""String2: "")
print(""Jaccard Index: "", jaccard_index(str1, str2))"
Create a python function to take two integers input and calculate the sum of both integers.,"int1 = 7
int2 = 3","def add(int1,int2):
    sum = int1 + int2
    return sum"
Create a Python function to sort the words in a sentence.,"Sentence = ""I love coding""","def sort_words(sentence): 
  words = sentence.split("" "")
  words.sort()
  return ' '.join(words)

sentence = ""I love coding""
sortedSentence = sort_words(sentence)
print(sortedSentence) 
// Outputs 'I coding love'"
Construct a Python function which takes two strings as input arguments and returns their concatenation.,"""Hello "", ""World!""","def concat_strings(str1, str2):
  return str1 + str2

result = concat_strings(""Hello "", ""World!"")
print(result)"
Create a program in Python that adds two numbers together.,"5, 10","def add(x, y): 
    return x + y 
  
x = 5
y = 10

print(add(x, y))"
Generate a json response from a python method that takes two parameters and returns a dictionary of key-value mappings.,"param1 = 'key1'
param2 = 'value1'","def generate_response(param1, param2):
    # dictionary of key-value mappings
    key_value_mappings = {
        param1: param2
    }

    # create json response
    json_response = json.dumps(key_value_mappings)

    return json_response"
Write a Python program to optimize the following code such that it runs faster.,"xx = [4, -4, 2, -2]
s = 0
for i in xx:
     if i > 0:
         s += i","xx = [4, -4, 2, -2]
s = 0
for i in xx:
    s += max(i, 0)

if __name__ == ""__main__"":
    xx = [4, -4, 2, -2]
    s = 0
    for i in xx:
        s += max(i, 0)
    print(s) # Output: 6"
Implement a function in Python that prints out the contents of a given list with even indices only.,"my_list = [1, 5, 10, 15, 20]","def print_even_indices(my_list):
    for i in range(len(my_list)):
        if i % 2 == 0:
            print(my_list[i])
            
print_even_indices(my_list)"
Create a for loop in python to loop through a list of numbers.,"[1, 5, 8]","for num in [1, 5, 8]: 
    print(num)"
Make necessary changes to the given code to make it compatible with Python 3,"# Python 2
print ""Hello World!""","# Python 3
print(""Hello World!"")"
Write a Python program for searching a 2-dimensional array for a target value.,"arr = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
target = 8","def search(arr, target):
 for row in arr:
  for element in row:
   if element == target:
    return True
 return False

result = search(arr, target)
print(result) # True"
Write a Python program to make a prediction using a Support Vector Machine (SVM),"X = [[0, 0], [1, 1]]
y = [0, 1]","import numpy as np
from sklearn import svm

X = np.array([[0, 0], [1, 1]])
y = np.array([0, 1])

clf = svm.SVC(kernel='linear')
clf.fit(X, y)

prediction = clf.predict([[2., 2.]])
print(prediction)"
Develop a function in Python to randomly select one element from a given array.,"[1, 2, 3, 4]","import random

def randomElement(arr):
    return random.choice(arr)"
Write a Python program to compute the square of a given number.,5,"def square(num):
    return num ** 2"
Suggest a code optimization to make this python snippet run faster.,"def add_numbers_in_list(l):
    sum = 0
    for i in l:
        sum += i
    return sum","def add_numbers_in_list(l):
    total = 0
    for i in range(0, len(l), 2):
        total += (l[i] + l[i+1]) if (i+1 < len(l)) else l[i]
    return total"
Assemble a Python program to measure similarity,Compute the similarity between two strings.,"def compute_similarity(s1, s2):
    len1 = len(s1)
    len2 = len(s2)
    max_len = max(len1, len2)
    count = 0

    for i in range(max_len):
        if i >= len1 or i >= len2:
            break
        if s1[i] == s2[i]:
            count += 1
    
    return count / max_len"
Create a Python function to sort an array of numbers based on their size.,"[5, 1, 2, 6, 4, 3]","def sort_array(arr):
    arr.sort()
    return arr"
Write a Python program to detect the most frequently occurring element in a given array.,"array = [1, 3, 1, 4, 5, 3, 4, 3]","from collections import Counter

def most_frequent_element(array):
  return Counter(array).most_common(1)[0][0]
  
# Driver code 
print(most_frequent_element([1, 3, 1, 4, 5, 3, 4, 3]))"
Write a code in python to remove given character from a given string.,"given_string = ""Hello world!""
character = ""l""","def remove_char(given_string, character):
    new_string =  given_string.replace(character, """")
    return new_string"
How would you write a code to flatten a given nested list in Python?,"nested_list = [1, [2, [3, 4], 5], 6]","def flatten_list(nested_list):
    flattened_list = []
    for item in nested_list:
        if type(item) == list:
            flattened_list.extend(flatten_list (item))
        else:
            flattened_list.append(item)
    return flattened_list"
Generate an appropriate Python command to edit the following list such that all the negative numbers are replaced with 0.,"[-1, 5, 9, -8, 2]","def filter_negative(nums):
    return [max(0, n) for n in nums]"
Identify the data type of the following input and provide a code to convert it to an integer in Python.,"""123""","input_type = type(""123"") # str

converted_int = int(""123"") # 123"
Debug the given Python code.,"def calculate_sum(a, b):
   sum = a + b 
   return 

c = calculate_sum(2, 3)
print(""The sum is"", c)","def calculate_sum(a, b):
   sum = a + b 
   return sum 

c = calculate_sum(2, 3)
print(""The sum is"", c)"
Create a Python program to print out the following message and its variables.,Name: John,"name = ""John""

print(""Hello "" + name + ""!"")  # Outputs: ""Hello John!"""
Write a Python function that takes an array of integers as input and computes the average of the elements.,"array = [1, 2, 3, 4]","def compute_average(arr):
 sum = 0
 for i in arr:
 sum += i
 return sum / len(arr)
 
 arr = [1, 2, 3, 4]
 avg = compute_average(arr)
 print(""Average of array elements is:"", avg)"
Write a Python function to generate a multiplication table for a given number.,Number: 9,"def generate_table(num):
    # print the table heading
    print(""MULTIPLICATION TABLE FOR {}"".format(num))
    # generate the table
    for i in range(1, 11):
        print(""{} x {} = {}"".format(num, i, num*i))

# generate table for 9
generate_table(9)"
Generate a Python script to classify the given data points according to their label.,"data_points = [(2,2),(3,3),(4,4)]
labels = ['x', 'y',]","def classify_data_points(data_points, labels):
    classified_data_points = []
    for data_point in data_points:
        if data_point[0] == data_point[1]:
            classified_data_points.append((data_point, labels[0]))
        else:
            classified_data_points.append((data_point, labels[1]))
    return classified_data_points"
Write a Python program to classify a given set of data into any two classes.,"data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","def classify_data(data):
 class_1 = []
 class_2 = []

 for value in data:
 if value % 2 == 0:
 class_1.append(value)
 else:
 class_2.append(value)

 return class_1, class_2"
"Create a program in Python to calculate the sum of the first n positive integers, using recursion.",n = 5,"def calculateSum(n):
    if n <= 0:
        return 0
    else:
        return n + calculateSum(n-1)

result = calculateSum(5)
print(result)"
Generate a Python program that adds a given number to an array.,Number: 5,"def add_to_array(num, array):
  for i in range(len(array)):
    array[i] += num

  return array"
Create a program to search for a substring in a string and return the starting position of the substring.,"String: ""Python is powerful & fun""
Substring: ""pow""","string = ""Python is powerful & fun""
substring = ""pow""
 
start_pos = string.find(substring)
if start_pos == -1:
    print(""substring not found"")
else:
    print(""substring found at position:"", start_pos)"
Create a function in Python that takes a list of numbers as an argument and prints the highest value in the list.,"[13, 6, 8, -2, 20]","def get_largest(nums):
    largest = nums[0]
    for num in nums[1:]:
        if num > largest:
            largest = num
    return largest

print(get_largest([13, 6, 8, -2, 20]))"
Write a function in Python to return the kth smallest element in the given array.,"arr = [7, 10, 4, 3, 20, 15]
k=3","def find_kth_smallest(arr, k):
    """"""
    This function finds the kth smallest element in an array. 
    :param arr: array of integers
    :param k: integer
    :return: kth smallest element
    """"""
    sorted_arr = sorted(arr)
    return sorted_arr[k-1]"
Design a program in Python to find the largest of three numbers.,"2, 5, 7","def getMax(a,b,c):
    if a > b and a > c:
        return a
    elif b > a and b > c:
        return b
    else:
        return c

print(getMax(2, 5, 7))"
Generate a Python program to search an array of strings and return the string that contains a given substring.,"array = [""apple"", ""banana"", ""pear"", ""kiwi""]
query = ""ana""","def searchArray(array, query):
    results = []
    for string in array:
        if query in string:
            results.append(string)
    return results

array = [""apple"", ""banana"", ""pear"", ""kiwi""]
query = ""ana""

print(searchArray(array, query))"
Write a function in Python which takes a question string and returns the answer.,What is the capital of China?,"def answer_question(question):
    if question == 'What is the capital of China?':
        return 'Beijing'
    else:
        return 'I don\'t know'"
"Given a sentence, generate a dictionary with the most frequently used words.","""Python is an interpreted, high-level, general-purpose programming language.""","freq_words_dict = {
    'python': 2,
    'is': 1,
    'an': 1,
    'interpreted': 1,
    'high-level': 1,
    'general-purpose': 1,
    'programming': 1,
    'language': 1
}"
Create a Python program that computes the median of an array of numbers.,"[5, 4, 3, 2, 1]","def median(array):
    sorted_array = sorted(array)
    length = len(sorted_array)
    if (length % 2 == 0):
        median = (sorted_array[length//2] + sorted_array[length//2 - 1]) / 2
    else:
        median = sorted_array[length//2]

    return median

array = [5, 4, 3, 2, 1]
print(median(array))  # Output: 3"
Design an algorithm in Python that sorts an unordered array of numbers from low to high.,"[2, 5, 1, 8, 7, 4]","def sort(arr): 
  for i in range(len(arr)): 
    minIdx = i 
    for j in range(i+1, len(arr)): 
      if arr[minIdx] > arr[j]: 
        minIdx = j       
    arr[i], arr[minIdx] = arr[minIdx], arr[i]
  return arr"
Can you write a program in Python to remove the duplicate elements in a list?,"[5, 9, 2, 4, 5, 9, 2]","def remove_duplicates(arr):
    new_arr = []
    for item in arr:
        if item not in new_arr:
            new_arr.append(item)
    return new_arr

my_list = [5, 9, 2, 4, 5, 9, 2]
print(remove_duplicates(my_list))
# Output: [5, 9, 2, 4]"
Generate an efficient python code which finds the most frequent element in an array.,"arr = [3, 2, 1, 3, 4, 2]","# Find the most frequent element in the array
most_freq = 0
count = 0

for x in arr:
    freq = arr.count(x)
    if freq > count:
        most_freq = x
        count = freq

# Print the most frequent element
print(""Most frequent element:"",most_freq)"
How would you convert the following pseudocode into python?,"IF A > B {
 PRINT “A is greater than B”
} ELSE {
 PRINT “B is greater than A”
}","if A > B:
    print(""A is greater than B"")
else:
    print(""B is greater than A"")"
Design a Python program to print out the list of prime numbers up to the input value.,25,"def printPrimeNum(n): 
  
    prime_list = [] 
   
    for num in range(2, n + 1): 
        prime = True
        for i in range(2, num): 
            if (num % i == 0): 
                prime = False
        if prime:
            prime_list.append(num) 
              
    print(prime_list)
  
  
num = 25 
printPrimeNum(num)"
Implement a Python program that takes an input string and returns the first character that appears more than once in that string.,"input_string = ""programming""","def find_duplicate_char(input_string):
 char_count = {}
 for char in input_string:
  if char in char_count:
   return char
  else:
   char_count[char] = 1
 return 'No duplicates found'

input_string = ""programming""
print(find_duplicate_char(input_string))

# Output:
# 'r'"
Generate a python program that matches regular expression pattern.,"pattern = ""\d+""
text = ""I have 3 cats and 5 dogs""","import re

def regex_match(pattern, text):
    regex = re.compile(pattern)
    matches = regex.findall(text)
    return matches"
Implement a sorting algorithm in Python.,"list of integer numbers: [98, 86, 100, 5, 34, 22]","def bubble_sort(items):
    for pass_num in range(len(items) - 1, 0, -1):
        for idx in range(pass_num):
            if items[idx] > items[idx + 1]:
                items[idx], items[idx + 1] = items[idx + 1], items[idx]

numbers = [98, 86, 100, 5, 34, 22]
bubble_sort(numbers)

print(numbers)"
Compose a function in Python to take two numbers as input and return the greatest number.,5 and 8,"def getGreatestNumber(a, b):
    if a > b:
        return a
    return b

greatest_num = getGreatestNumber(5, 8)
print(""Greatest number is"", greatest_num)"
Write a Python program to print the key of the element in a dictionary that has the maximum value.,"{'a': 3, 'b': 6, 'c': 9, 'd': 12}","dictionary = {'a': 3, 'b': 6, 'c': 9, 'd': 12}

max_value = max(dictionary.values())
for key, value in dictionary.items():
 if value == max_value:
 print(key)"
Develop a natural language processing (NLP) model in Python that takes a sentence as an input and returns the subject and predicate of the sentence.,The cat is happy.,"def parse_sentence(sentence):
 tokens = nltk.word_tokenize(sentence)
 tagged_tokens = nltk.pos_tag(tokens)
 subject = None
 predicate = None
 for token, tag in tagged_tokens:
 if tag == 'NN':
 subject = token
 elif tag == 'VBP':
 predicate = token
 return subject, predicate"
Write a function in Python that takes an array of integers as an input and returns an array with only the distinct numbers from the input.,"[1, 2, 3, 4, 4, 5, 5]","def distinct_numbers(arr):
 return list(set(arr))"
Create a python function that reads comma-separated values to generate a dataframe.,"Name, Age, City
Jane, 36, London
John, 24, Paris","def csv_to_df(csv):
    # Create an empty list
    df = []

    # Add each row as a list
    lines = csv.split(""\n"")
    for line in lines:
        df.append(line.split("",""))

    # Convert list into a DataFrame
    import pandas as pd
    df = pd.DataFrame(df[1:], columns=df[0])
    return df"
"Generate a program in Python to remove all vowels from a sentence, and print the resulting string to the console.",This is a sentence,"def remove_vowels(word):
    new_word = """"
    for i in word:
        if i not in ""aeiouAEIOU"":
            new_word += i
    return new_word

sentence = ""This is a sentence""
print(remove_vowels(sentence))"
Develop a Python program to calculate the largest sum of a consecutive sequence of n numbers given in an array.,"array = [1, 2, -5, 4, 5, 7, -8]","def max_consecutive_sum(array):
    max_val = 0
    cur_man = 0
    for x in array:
        cur_man = max(cur_man + x, 0)
        max_val = max(cur_man, max_val)
    return max_val"
Compress a given folder using GZip in Python.,folder /files,"import gzip 
import shutil 

# Source files to compress 
source = '/files'
  
# Destination to store compressed files 
destination = '/files/compressed'
  
# set the compression level 
compression_level = 3

shutil.make_archive(destination, 'gz', source, compression_level)"
Write a code to remove a specific value from a list in Python.,"mylist = [10, 20, 30, 40, 10]
value = 10","mylist = [10, 20, 30, 40, 10]
value_to_remove = 10

# new list after value is removed
new_list = [item for item in mylist if item != value_to_remove] 

print(new_list)"
Develop a Python function to compare two given dictionaries.,"d1 = {'a':1, 'b':2}
d2 = {'a':2, 'b':1}","def compare_dictionaries(d1, d2):
  for key in d1:
    if key not in d2 or d1[key] != d2[key]: 
      return False
  return True"
Optimize the following code snippet for accessing an element in a Python list.,"my_list = [1, 2, 3, 4, 5]","my_list = [1, 2, 3, 4, 5]

if len(my_list) > 0:
  element = my_list[0]
else:
  element = None"
Develop a program in Python for printing an asterisk triangle consisting of n rows.,5,"def asterisk_triangle(n):
    for i in range(n):
        for j in range(i+1):
            print('*', end="" "")
        print()

n = 5
asterisk_triangle(n)"
Generate a python program to check the sum of two numbers and determine if they are equal or not.,Compare a = 4 and b = 6,"def compare_sum(a, b):
  if a + b == 10:
    return True
  else:
    return False"
Build a function in Python to test whether a string is a palindrome.,"""aba""","def is_palindrome(s): 
    # Reverse the string 
    rev = s[::-1] 
  
    # Check if the string is equal to its reverse 
    if (s == rev): 
        return True
    return False
  
# Driver code 
s = ""aba""
ans = is_palindrome(s) 
  
if ans == 1: 
    print(""Yes"") 
else: 
    print(""No"")"
Write a Python program to detect out-of-range values in a given column of a data set.,"column = ""Salary""
dataset = {
 ""John"": {""Salary"": 75000, ""Age"": 30},
 ""Sam"": {""Salary"": 90000, ""Age"": 45},
 ""Jill"": {""Salary"": 120000, ""Age"": 25},
 ""Thomas"": {""Salary"": 80000, ""Age"": 40}
}","for row in dataset.values():
 salary = row['Salary']
 if salary < 40000 or salary > 100000:
 print(""Out-of-range value: {}"".format(salary))"
Generate a Python function to convert a given sentence into a list of words.,"Convert ""This is a sentence""","def split_sentence(sentence):
    return sentence.split("" "")

sentence = ""This is a sentence""

words = split_sentence(sentence)
print(words)"
Create a machine learning model using Python and Scikit-Learn that can classify emails as either spam or ham.,CSV file containing features extracted from Spam and Ham emails.,Machine learning model using Python and Scikit-Learn that can classify emails as either spam or ham.
Implement a K-Means clustering algorithm in Python to cluster the given set of points into three clusters.,"dataset = [[2, 4], [5, 8], [3, 7], [9, 2], [7, 1]]","import numpy as np 
from sklearn.cluster import KMeans 

dataset = [[2, 4], [5, 8], [3, 7], [9, 2], [7, 1]]

X = np.array(dataset) 

kmeans = KMeans(n_clusters=3, random_state=0).fit(X)

labels = kmeans.labels_

for i in range(len(X)):
 print(""datapoint:"", X[i], ""belongs to cluster"", labels[i])"
Design a Python algorithm to compute the total number of inversions in an array of integers.,"[2, 4, 1, 3, 5]","def count_inversions(arr): 
  inversion_count = 0  
  for i in range(len(arr)): 
    for j in range(i + 1, len(arr)): 
        if arr[i] > arr[j]: 
            inversion_count += 1
  
  return inversion_count"
Write a Python function to calculate the difference between two dates in days.,"(11/22/2016, 12/30/2016)","def days_difference(date1, date2): 
    from datetime import datetime 
    difference = datetime.strptime(date1, '%m/%d/%Y') - datetime.strptime(date2, '%m/%d/%Y') 
    return abs(difference.days)"
Perform automatic code refactoring on a python program that calculates the factorial of a given number.,"def factorial(num):
 if num < 0:
  return ""Error: Must be a positive integer""
 elif num <= 1:
  return 1
 else:
  return num * factorial(num-1)","def factorial(num: int):
 if num < 0:
  return ""Error: Must be a positive integer""
 elif num <= 1:
  return 1
 else:
  return num * factorial(num-1)"
Build a function in Python to fetch records from a MongoDB database.,"host = ""hostname""
port = ""27017""
database_name = ""dbname""
collection_name = ""users""","import pymongo

def fetchRecords(host, port, database_name, collection_name):
    client = pymongo.MongoClient(host, int(port))
    db = client[database_name]
    collection = db[ collection_name ]
    records = collection.find({})
    return records"
Create a Python function to filter a dictionary that contains strings only.,"{'name': 'John', 'age': 20, 'likes': ['apple', 'banana']}","def filterStringDict(input):
    result = {}
    for key, value in input.items():
        # Check if value is a string
        if isinstance(value, str):
            # Add to result
            result[key] = value
    return result"
Create a program using Python to classify the type of company an advertising company can be.,"The advertising company can be classified into the following types: Automotive, Food & Beverage, Finance, Technology, and Others.","def classify_company(company):
 if company in [""AUTOMOTIVE"", ""FOOD & BEVERAGE"", ""FINANCE"", ""TECHNOLOGY""]:
 return company
 else:
 return ""OTHER"""
Program a Python function to calculate the average of a list of integers.,"[1, 3, 5, 3, 7, 1]","def avg_list(lst): 
  sum_lst = 0
  for i in range(len(lst)): 
    sum_lst = sum_lst + lst[i] 
  return sum_lst/len(lst) 
  
print(avg_list([1, 3, 5, 3, 7, 1]))"
"Create a Python script that reads an integer, n, from the user and prints out the value of n factorial.",8,"# Get input from the user
n = int(input(""Enter a number: ""))

# Calculate the factorial of the number
factorial = 1
while n > 1:
    factorial *= n
    n -= 1

# Print out the result
print(""The factorial of the given number is:"", factorial)"
Write a python program to find the maximum value in the given list of numbers.,"[-2, 6, 8, -10]","def find_max(nums):
    max_val = nums[0]
    for num in nums[1:]:
        if num > max_val:
            max_val = num
    return max_val"
Write a Python program to insert a given string at the beginning of all items in a list.,"mylist=[""one"",""two"",""three""]","# Insert the given string at the beginning of all list items 
new_list = [""prefix_"" + item for item in mylist]

# Print the new list 
print(new_list) # Output: [""prefix_one"", ""prefix_two"", ""prefix_three""]"
Write a Python code snippet to flatten the given list.,"my_list = [2, 3, [4, 5, [6]], [7, 8]]","my_list = [2, 3, [4, 5, [6]], [7, 8]]
new_list = []
def flatten(lst):
    for item in lst:
        if isinstance(item, list):
            flatten(item)
        else:
            new_list.append(item)

flatten(my_list)
print(new_list)"
Generate a function in Python for finding the maximum value in a list of numbers with time complexity O(n).,"num_list = [3, 7, 4, 2, 8, 16, 1, 9, 10]","def max_val(num_list):
	if len(num_list) == 0:
		return None
	
	max_num = num_list[0]
	
	for num in num_list:
		if num > max_num:
			max_num = num
	
	return max_num"
Create a program in Python that takes a list of words and an integer n and returns a list of words that appear at least n times in the given list.,"words =['a', 'b', 'a', 'c', 'd', 'a', 'x', 'd', 'd']
n = 3","from collections import Counter

def frequent_words(words, n):
    counts = Counter(words)
    return [word for word, count in counts.items() if count >= n]

result = frequent_words(words, n)

print(result) # prints ['a', 'd']"
Write a Python code to replace all the given elements of a list with the given value.,"list1 = [1, 3, 5, 7, 9]
value = 0","def replace_list_with_value(list1, value):
    list1[:] = [value] * len(list1) 
    return list1

result = replace_list_with_value(list1, value) 
print(result)"
Create a program in Python to convert a Celsius temperature to its equivalent Fahrenheit temperature.,celsiusTemp = 37,"def convertCelsiusToFahrenheit(celsiusTemp):
    fahrenheitTemp = (celsiusTemp*9/5)+32
    return fahrenheitTemp"
Create a Python function for sorting a given list of integers using QuickSort algorithm.,"[8,5,4,7,3,1]","def quick_sort(numbers):
    if len(numbers) <= 1:
        return numbers 
    else:
        pivot = numbers[0]
        less = [i for i in numbers[1:] if i <= pivot]
        greater = [i for i in numbers[1:] if i > pivot]
        return quick_sort(less) + [pivot] + quick_sort(greater)

numbers = [8,5,4,7,3,1]
sorted_numbers = quick_sort(numbers)
print(sorted_numbers)"
Modify an existing Python function to eliminate any redundancies,"def just_me(name):
    print(""Hi, my name is ""+name+""."")
    print(""I am special and nothing else matters."")
    print(""What about you?"")","def just_me(name):
    print(""Hi, my name is ""+name+"". I am special and nothing else matters."")
    print(""What about you?"")"
Compose a code in Python that counts the number of positive integers in a list.,"numbers = [1, -2, 3, -4, 5]","def count_positive_numbers(numbers):
    count = 0
    for num in numbers:
        if num > 0:
            count += 1
    return count"
Generate a Python function that takes a list and a target number as input and returns a list of the indices of all elements in the given list that are smaller than the given target number.,"[2, 3, 4, 5, 6], 4","def find_smaller_elements(nums, target):
  indices = []
  for i, num in enumerate(nums):
    if num < target:
      indices.append(i)
  return indices
  
result = find_smaller_elements([2, 3, 4, 5, 6], 4)
print(result) # [0, 1]"
Program a python method that enables the user to access and store items in an online database.,The online database contains information related to restaurant reviews and ratings.,"def access_database(db):
 connection = db.connect()
 cursor = connection.cursor()
 cursor.execute(""SELECT * FROM restaurant_reviews"")
 results = cursor.fetchall()
 connection.close()
 return results"
Write a Python script to print all prime numbers from 1 to n,n = 10,"def print_primes(n):
    for num in range(2, n+1):
        for i in range(2, num):
            if (num % i) == 0:
                break
        else:
            print(num)

print_primes(10)"
Design an algorithm in Python to detect duplicate elements in an array.,"[1, 2, 3, 4, 2]","def find_duplicates(lst):
    seen = set()
    duplicates = []
    for item in lst:
        if item in seen:
            duplicates.append(item)
        else:
            seen.add(item)
    
    return duplicates"
Write a Python code snippet to find the words which are at least 4 characters long in a given string.,"string = ""This is a sample sentence""","def find_words(string):
    words = string.split()
    result = []
    for word in words:
        if len(word) >= 4:
            result.append(word)
    return result"
Create a Python program to find the square root of a number without using the square root function.,25,"# A function to calculate the Square Root of a number using 
# the babylonian method 
def sqrt(n): 
	
	# We are using n itself as initial approximation 
	# This can definitely be improved 
	x = n 
	y = 1
	
	# e decides the accuracy level 
	e = 0.000001
	
	while(x - y > e): 
		x = (x + y)/2
		y = n/x 

	return x 

# Driver Program 
num = 25
print(sqrt(num))"
Write a Python function to sort a dictionary by value.,"dictionary = {
 'a': 10,
 'b': 3,
 'c': 5
}","def sortDictByValue(dictionary):
 sorted_dictionary = sorted(dictionary.items(), key=lambda x: x[1])
 return dict(sorted_dictionary)
     
dictionary = {
 'a': 10,
 'b': 3,
 'c': 5
}

print(sortDictByValue(dictionary)) 
// Output: {'b': 3, 'c': 5, 'a': 10}"
Create a Python program to find the sum of the series - 1² + 2² + 3² + ... + n²,n = 5,"def series_sum(n):
    sum = 0
    for i in range(1, n+1):
        sum += i**2
    return sum

print(series_sum(5))"
Write a Python code to check if a given number is divisible by both 5 and 7,50,"def is_divisible_by_5_and_7(num):
    if (num % 5 == 0 and num % 7 == 0):
        return True
    else:
        return False

print(is_divisible_by_5_and_7(50))"
Create a Python program that takes in an array of arrays of numbers as an argument and returns a new array with each of the inner arrays multiplied by its index in the outer array.,"[[1, 2, 3], [4, 5, 6]]","def arrayMultiplied(arr):
 resultArr = []
 for index, innerArr in enumerate(arr):
  resultArr.append([x * index for x in innerArr])
 return resultArr

print(arrayMultiplied([[1, 2, 3], [4, 5, 6]]))
# Output: [[0, 2, 6], [0, 5, 12]]"
Develop a Python function to sum an array of integers,"[1, 2, 3, 4]","def sumIntArray(arr):
    arr_sum = 0
    for num in arr:
        arr_sum += num
    return arr_sum

arr = [1, 2, 3, 4]
print(sumIntArray(arr)) #prints 10"
Create a function in Python that takes two numbers as inputs and prints out their sum.,"x = 5, y = 8","def sum_numbers(x, y):
    return x + y
  
print(sum_numbers(5, 8))"
Develop a Python function to select the odd numbers from a given list.,"[2, 3, 4, 5, 6, 7, 8, 9]","def selectOddNumbers(arr):
    oddNumbers = []
    for num in arr:
        if num % 2 == 1:
            oddNumbers.append(num)
    return oddNumbers

arr = [2, 3, 4, 5, 6, 7, 8, 9]
result = selectOddNumbers(arr)
print(result)"
Write a Python program to find the number of times each character in an array occurs.,"Given an array = ['a', 'b', 'c', 'a', 'c', 'b', 'd', 'd']","from collections import Counter

s = ['a', 'b', 'c', 'a', 'c', 'b', 'd', 'd']
counts = Counter(s)

for c, count in counts.items():
 print(f'{c}: {count} times')"
Write a Python program to sort a list of dictionaries by a given key.,"list_of_dicts = [
{'name': 'John', 'age': 25},
{'name': 'Adam', 'age': 30},
{'name': 'Sarah', 'age': 28}
]

sort_by_key = 'age'","def sort_dicts_by_key(list_of_dicts, key):
    return sorted(list_of_dicts, key=lambda k: k[key])

sorted_dicts = sort_dicts_by_key(list_of_dicts, sort_by_key)

# Output:
[
{'name': 'John', 'age': 25},
{'name': 'Sarah', 'age': 28},
{'name': 'Adam', 'age': 30}
]"
Create a Python function that takes two arguments: a list of numbers and an integer k. The function should return a list of all pairs of numbers in the given list whose sum is equal to k.,"list = [1, 2, 3, 4, 5], k = 5","def get_pairs(list, k):
 pairs = []
 for i in range(len(list)):
 for j in range(i+1, len(list)):
 if list[i] + list[j] == k:
 pairs.append( [list[i], list[j]] )
 return pairs

print(get_pairs([1, 2, 3, 4, 5], 5))

# Output: [[1, 4], [2, 3]]"
Optimize the python code using premature optimization techniques.,"def foo():
    a = []
    for i in range(1000):
        a.append(i)","# optimizing python code using premature optimization techniques
def foo():
    a = [i for i in range(1000)]"
Generate a Python program that checks if all elements of a given list are the same.,"[1, 4, 1, 4, 1]","def check_list_elements(list_of_elements):
    if len(set(list_of_elements)) == 1:
        return True
    else:
        return False

list_of_elements = [1, 4, 1, 4, 1]
same_elements = check_list_elements(list_of_elements)
print(same_elements)"
Come up with an algorithm in Python that takes two strings as input and checks whether one string is a rotation of another.,"""ABACD"", ""CDABA""","def is_rotation(s1, s2):
    if len(s1) != len(s2):
        return False
    
    s1s1 = s1 + s1
    if s2 in s1s1:
        return True
    return False

print(is_rotation(""ABACD"", ""CDABA""))"
Create a web scrapper in Python to fetch data from a website. The scrapper should accept a URL and fetch the data and output it in a JSON format.,URL to example website: https://www.example.com,"import requests 
import json

url = ""https://www.example.com""

response = requests.get(url)
if response.status_code == 200:
    response_data = response.text
    parsed_data = json.loads(response_data)
    print(parsed_data)"
Write a Python function to find the index of the smallest integer in a list.,"[1, 4, 7, 8, 10]","def find_smallest_int(lst):
  min_index = 0
  for index, num in enumerate(lst):
    if num < lst[min_index]:
      min_index = index
  return min_index

lst = [1, 4, 7, 8, 10]
smallest_int_index = find_smallest_int(lst)
print(""Index of the smallest integer:"", smallest_int_index)"
Create a function in Python to move a list of items from one list to another.,"list1 = [2, 4, 6, 8, 10]
list2 = [1, 3, 5, 7, 9]","def move_items(list1, list2): 
    for item in list1: 
        list2.append(item) 
    for i in range(len(list1)): 
        list1.pop() 

list1 = [2, 4, 6, 8, 10]
list2 = [1, 3, 5, 7, 9] 

move_items(list1, list2) 

print(""List 1 = "", list1) 
print(""List 2 = "", list2)"
Specify a quick sort algorithm in Python to sort the given array of numbers.,"[9, 6, 5, 3, 4, 7, 4, 1]","def quick_sort(arr):
    if len(arr) <= 1:
        return arr
    pivot = arr[len(arr) // 2]
    left = [x for x in arr if x < pivot]
    mid = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]
    return quick_sort(left) + mid + quick_sort(right)

print(quick_sort([9, 6, 5, 3, 4, 7, 4, 1]))"
Write a Python program that classifies and prints the type of a given triangle based on the lengths of its sides.,"8, 8, 12","a = 8
b = 8
c = 12

if a == b and b == c:
    print(""Equilateral triangle"")
elif a == b or b == c or a == c:
    print(""Isosceles triangle"")
else:
    print(""Scalene triangle"")"
Generate a Python script to download the source code of a given web page.,"url = ""https://www.example.com""","import urllib.request

def download_webpage_source(url):
    '''This function will download the source code of a given web page'''

    response = urllib.request.urlopen(url)
    data = response.read()
    text = data.decode('utf-8')

    return text"
Use Python loops to generate a new list containing the square of all numbers in the following list.,"list = [1,2,3,4,5]","""""""
Generate a new list containing the square of all numbers in a list
""""""
# input list
in_list = [1,2,3,4,5]

# output list
out_list = []

# loop over the input list
for i in in_list:
    # calculate the square of the element and append it to output list
    out_list.append(i**2)

# print the output list
print(out_list)"
Create a Python program that takes two numbers from user and generates a list of all numbers in between them.,"2, 6","def generateList(start, end):
    res = []
    for num in range(start, end+1):
        res.append(num)
    return res

start = 2
end = 6
print(generateList(start, end))  # Output: [2, 3, 4, 5, 6]"
Can you create a Python program that converts binary numbers to decimal numbers?,"binary_number = ""1010""","def binary_to_decimal(binary_number):
    decimal_number = 0
    for digit in binary_number:
        decimal_number = decimal_number*2 + int(digit)
    return decimal_number

binary_number = ""1010""

print(binary_to_decimal(binary_number)) # 10"
Develop a function in Python that removes all the duplicates from a list.,"arr = [1, 2, 2, 3, 3, 4, 4]","def remove_duplicates(arr):
    new_list = []
    for i in arr:
        if i not in new_list:
            new_list.append(i)
    return new_list

arr = [1, 2, 2, 3, 3, 4, 4]
print(remove_duplicates(arr))"
Optimize the following function in Python so that it runs faster:,"def three_times_sum(a,b,c):
    total = a + b
    total += c
    return total","def three_times_sum(a, b, c):
    return a + b + c"
Write a Python code to return the highest frequency element in a given array of integers.,"arr = [1, 2, 4, 2, 3, 2]","from collections import Counter

def highest_frequency(arr):
    arr_counts = Counter(arr)
    max_freq = 0
    max_freq_num = 0
    for num in arr_counts:
        if arr_counts[num] > max_freq:
            max_freq = arr_counts[num]
            max_freq_num = num
    return max_freq_num

print(highest_frequency(arr))"
Write a Python program to traverse a two-dimensional array and print each row.,"[
    [1, 2, 3],
    [4, 5, 6]
]","def traverse_2d_list(list2d):
    for row in list2d:
        print(row)"
"Edit an existing Python script so that it prints the sum of two numbers, instead of only the first number.","a = 4
b = 8
print(a)","a = 4
b = 8
print(a + b)"
Write an Python program to convert Celsius to Fahrenheit.,Celsius = 100,"def celsius_to_fahrenheit(celsius):
    fahrenheit = celsius * 9/5 + 32
    return fahrenheit

celsius = 100
result = celsius_to_fahrenheit(celsius)
print(result)"
Create a Python program to reverse a string.,Hello,"def reverse_string(string):
    reversed_string = """"
    for c in string:
        reversed_string = c + reversed_string
    return reversed_string

string = ""Hello""
print(reverse_string(string))"
Create a Python function to generate a list of numbers between given two numbers,"start = 10
end = 20","def numbers_between(start, end):
    return [x for x in range(start, end + 1)]"
Generate a python program to generate a json response based on following specification,"The response should contain the following keys:
- name
- email
- age","import json

data = {
    'name': 'John Doe',
    'email': 'john@example.com',
    'age': 32
}

json_data = json.dumps(data)
print(json_data)"
Create a Python program to remove all the duplicates in the given list,"list = [2, 10, 20, 30, 10, 20, 40]","def remove_duplicates(list): 
    temp_list = [] 
    for i in list: 
        if i not in temp_list:
            temp_list.append(i)
    return temp_list

remove_duplicates(list) # output: [2, 10, 20, 30, 40]"
Transform the following Python code into valid JavaScript code.,"def fun() :
    a = 1
    b = 2
    c = a + b
    return c","function fun() {
  let a = 1;
  let b = 2;
  let c = a + b;
  return c;
}"
Create a solution that detects the presence of a character in a string.,Python,"def detect_character(string, char):
    for ch in string:
        if ch == char:
            return True
    return False

string = 'Python'
char = 'y'
print(detect_character(string, char))"
Edit the following Python function to raise an exception if the given number is lower than 0.,"def square(num):
    return num**2","def square(num):
    if num < 0:
        raise ValueError('Cannot square negative numbers.')
    return num**2"
Find the maximum element in an array using a Python program.,"[1, 4, 9, 3, 6]","def findMax(arr):
    max = arr[0] 
    for i in range(1,len(arr)): 
        if arr[i] > max: 
            max = arr[i] 
  
    return max"
Write a Python list comprehension to extract the individual digits of a given number.,num = 5112,[int(d) for d in str(num)]
Construct a program in Python to find the total number of words in a list of strings.,"strings = [""Hello World"", ""Foo Bar"", ""Hello Again""]","def count_words(strings):
    count = 0
    for string in strings:
        words = string.split(' ')
        count += len(words)
    return count

strings = [""Hello World"", ""Foo Bar"", ""Hello Again""]
count = count_words(strings)
print(count)"
Apply a filter in Python that removes any stop words from a text,"text: ""This is a test to see how the filter works""","from nltk.corpus import stopwords 
from nltk.tokenize import word_tokenize 

def filter_stop_words(text):
    word_tokens = word_tokenize(text)
    filtered_text = [w for w in word_tokens if not w in stopwords.words('english')]
    return ' '.join(filtered_text)"
Use automated refactoring to make Python code more readable.,"def concat(str1, str2):
    output = str1 + str2
    return output","def concat(str1: str, str2: str) -> str:
    """"""Concatenate two strings.

    Args:
        str1: The first string
        str2: The second string

    Returns:
        str: The concatenated string
    """"""
    return str1 + str2"
Generate a Python code for a decision tree classifier.,"X (features): height, weight
Y (target): gender","import pandas as pd
from sklearn import tree

# Load the data
data = pd.read_csv('data.csv')
X = data[['height', 'weight']]
y = data['gender']

# Train the model
clf = tree.DecisionTreeClassifier()
clf = clf.fit(X, y)

# Make a prediction
prediction = clf.predict([[180, 80]])
print(prediction)"
Create a Python program which takes in a string of text and returns all the unique words in the string.,"""Hello, my name is John""","def find_unique_words(string):
    return set(string.split())"
Construct a python program which takes in input the size of a jagged array and prints it(no values).,<noInpit>,"def print_jagged_array(array_size):    
    # Initialize a jagged array with the given size
    array = [None] * array_size
    
    # Populate the array with empty arrays
    for i in range(array_size):
        array[i] = []
    
    # Print the output array
    print(array)

if __name__ == ""__main__"":
    array_size = 4
    print_jagged_array(array_size)"
Design a program in Python to calculate the sum of all the elements in a given list.,"[1, 2, 3, 4, 5]","def get_sum(list_nums):
    sum = 0
    for num in list_nums:
        sum += num
    return sum"
"Given a json-formatted string, create a python program to parse it into a dict.","data = '{""name"": ""John"",""age"": 30,""address"": {""city"": ""New York"",""state"": ""NY""}}'","import json

data = '{""name"": ""John"",""age"": 30,""address"": {""city"": ""New York"",""state"": ""NY""}}'

data_dict = json.loads(data)"
Construct a Python program to generate a random password using alphanumeric characters and special symbols.,Password Length = 8,"import random
import string

def generate_password(length):
    chars = string.ascii_letters + string.digits + string.punctuation
    return ''.join(random.choice(chars) for _ in range(length))

print(generate_password(8))"
Write a python program that adds two numbers together.,"8, 10","def add_numbers(num1, num2):
  return num1 + num2
  
result = add_numbers(8, 10)
print(result)"
Write a Python script that will take an array of numbers and output the distinct elements.,"[1, 1, 3, 4, 5, 6, 6, 7, 8, 9, 9]","my_list = [1, 1, 3, 4, 5, 6, 6, 7, 8, 9, 9]
new_list = []

for item in my_list:
 if item not in new_list:
 new_list.append(item)

print(new_list)
# Output: [1, 3, 4, 5, 6, 7, 8, 9]"
Write a function in Python that takes a list of integers and returns a new list containing only odd numbers.,"[3, 8, 6, 10, 17]","def odd_numbers_list(numbers):
    return [num for num in numbers if num % 2 != 0]"
"Create a function in Python that takes a list of strings and a value, and returns a new list of the strings with the value preprended to each string.","List = [""one"", ""two"", ""three""]
Value = ""STR-""","def prepend_list(List, Value):
    return [Value + Value for Value in List]
  
List = [""one"", ""two"", ""three""]
Value = ""STR-""
print (prepend_list(List, Value))

# Output: ['STR-one', 'STR-two', 'STR-three']"
Use Python to modify the list below by swapping the first and last elements.,"[3, 6, 8, 5, 4]","[4, 6, 8, 5, 3]"
Write a Python script to search for a specific word in a given string.,The quick brown fox,"import re 
  
def searchWord(string, word): 
    return re.search(word, string)
  
result = searchWord(""The quick brown fox"", ""brown"") 
if result is not None:
    print(""Word found"")
else:
    print(""Word not found"")"
Rewrite the given Java code into Python.,"Int n = 5
for (int i = 1; i <= n; i++) {
 System.out.print(i + "" "");
}","n = 5
for i in range(1, n+1):
 print(i, end=' ')"
"Write a Python program to convert a given time in seconds to the equivalent time in hours, minutes, and seconds.",time_in_seconds = 82836,"def convert_to_hms(time_in_seconds):
    hours = int(time_in_seconds / 3600)
    minutes = int((time_in_seconds % 3600) / 60)
    seconds = int(time_in_seconds % 60)
    return hours, minutes, seconds"
Design a program in Python that converts a text string to a titlecase.,"str = ""Hello World""","def to_titlecase(str):
    new_str = """"
    for word in str.split(): 
        new_str += word.capitalize() + "" ""
    return new_str.strip()

print(to_titlecase(""Hello World""))"
Create a function in Python that takes an integer input and prints all combinations of the numbers.,4,"def permutations(n):
 for i in range(n+1):
  for j in range(n+1):
   for k in range(n+1):
    for l in range(n+1):
     print(i,j,k,l)

# Calling the function
permutations(4)"
Write a Python program to print the numbers of a specified list after removing even numbers from it.,"[1, 2, 3, 4, 5, 6, 7, 8, 9]","def remove_even_numbers(numbers):
    odd_numbers = []
    for number in numbers:
        if number % 2 != 0:
            odd_numbers.append(number)
    return odd_numbers

numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]
odd_numbers = remove_even_numbers(numbers)
print(odd_numbers)"
Rewrite the following JavaScript string-manipulation function in Python.,"function fix_string(s) {
  s = s.replace(/\s/g, '');
  s = s.toLowerCase();
  s = s.split('').reverse().join('');
  return s;
}","def fix_string(s): 
    s = s.replace("" "", """") 
    s = s.lower() 
    s = """".join(reversed(s)) 
    return s"
"Creating a Python dictionary comprehension, generate a new dictionary with keys from the first dictionary and values multiplied by 2.","{'a': 1, 'b': 2, 'c': 3,}","my_dict = {'a': 1, 'b': 2, 'c': 3}

new_dict = {k:v*2 for k, v in my_dict.items()}

print(new_dict) # {'a':2, 'b':4, 'c':6}"
"Create a Python function to search for a substring in a string. The function should take two arguments, the haystack string and the needle string, and should return a boolean indicating whether the substring was found or not.","haystack: ""This is a string"" 
needle: ""is""","def contains_substring(haystack, needle): 
 return needle in haystack

# Usage example
contains_substring(""This is a string"", ""is"") # returns True 
contains_substring(""This is a string"", ""xyz"") # returns False"
Create a python program that takes a list of user-defined objects as input and prints a summary of the objects.,"[{'name': 'John', 'age': 23}, {'name': 'Mary', 'age': 35}]","def print_summary(object_list):
    for object in object_list:
        print('Name: {}\nAge: {}\n'.format(object['name'], object['age']))

print_summary([{'name': 'John', 'age': 23}, {'name': 'Mary', 'age': 35}])"
Develop a Python function to calculate the tax of each item,"price = 100
tax_rate = 0.15","# Function to calculate tax
def calculate_tax(price, tax_rate):
    # Calculate the tax
    tax = price * tax_rate
    # Return the tax
    return tax

# Demonstration
price = 100
tax_rate = 0.15
tax = calculate_tax(price, tax_rate)
print(""Tax of the item:"", tax)"
"Generate a function in Python that takes an unsorted list of integers, and sorts it using a bubble sort algorithm.","[9, 4, 5, 1, 0]","def bubble_sort(list):
  for i in range(len(list)-1):
    for j in range(len(list)-i-1):
      if list[j] > list[j+1]:
        temp = list[j]
        list[j] = list[j+1]
        list[j+1] = temp
  return list
  
print(bubble_sort([9, 4, 5, 1, 0])) // [0, 1, 4, 5, 9]"
Create a function in Python that takes a dictionary and a string as an argument and checks if the key is present in the given dictionary.,"dict = {
    ""Name"":""John"",
    ""Age"":25
}
String = ""Name""","def checkKeyExists(dictionary, key):
    return key in dictionary.keys()

dict = {
    ""Name"":""John"",
    ""Age"":25
}
String = ""Name""

print(checkKeyExists(dict, String))"
Build a Python script that takes an array of numbers as input and prints the maximum element.,"[1,4,7,3]","def find_max(arr):
    max_value = -float('inf')
    for num in arr:
        if num > max_value:
            max_value = num
    return max_value

arr = [1,4,7,3]
result = find_max(arr)
print(result)"
Design a Python script to generate a frequency table from a given data set.,"data_set = [9, 5, 9, 8, 5, 5, 9]","def calculateFrequency(data_set):
    frequency_table = dict()
    for item in data_set:
        frequency_table[item] = frequency_table.get(item, 0) + 1
    return frequency_table

data_set = [9,5,9,8,5,5,9]
frequency_table = calculateFrequency(data_set)
print(frequency_table) # Outputs {9: 3, 5: 3, 8: 1}"
Optimize the following Python program by introducing several code refactoring techniques.,"def factorial(number):
	if (number == 0):
		return 1
	else:
		return number * factorial(number - 1)
 
print(factorial(5))","def factorial(number):
  total = 1
  while number > 0: 
    total *= number
    number -= 1
  return total

print(factorial(5))"
Create a python script which replaces each letter in a string by the letter which appears n positions after it.,"string = ""abcdef""
n = 2","def replace_letter(string, n):
    result = """"
    for char in string:
        if char == 'z':
            result += 'b'
        elif char == 'Z':
            result += 'B'
        else:
            result += chr(ord(char) + n)
    
    return result"
Provide a solution using Python to capitalize the first letter of each word in a given phrase.,the quick brown fox,"def capitalize(phrase):
  words = phrase.split("" "")
  capitalized_words = [word.capitalize() for word in words]
  capitalized_phrase = "" "".join(capitalized_words)
  return capitalized_phrase

capitalized_phrase = capitalize(""the quick brown fox"")
print(capitalized_phrase)"
Write code in Python to count the number of distinct substrings for a given string.,string = “abcd”,"def count_distinct_substrings(string):
    count = 0
    for i in range(len(string)):
        for j in range(i+1, len(string)+1):
            count += 1
    return count

result = count_distinct_substrings(""abcd"")
print(result)"
Create an algorithm in Python using numpy to normalize a given array of numbers.,"[1, 2, 3, 4]","import numpy as np

def normalize(arr):
  return (arr - np.mean(arr)) / np.std(arr)

normalize([1,2,3,4]) # [-1.,  0.,  1.,  2.]"
"Craft a program in Python to take in a list of integers, and return the sum of the even numbers in the list.","[1, 2, 3, 4, 5]","def sum_even(arr):
    '''
    Function to calculate the sum of even numbers in an array
    
    Parameters
    arr: list of integers
    
    Returns
    sum of even numbers in the array
    '''
    total = 0
    for num in arr:
        if num % 2 == 0:
            total += num
    return total"
Design a program in Python to remove duplicate items in a list and display the resulting list.,"mylist = ['apple', 'pineapple', 'apple', 'banana']","def remove_duplicates(mylist):
    newlist = list(set(mylist))
    return newlist

mylist = ['apple', 'pineapple', 'apple', 'banana']
print(remove_duplicates(mylist))"
Write a Python program to randomly shuffle a list of elements.,"[1,2,3,4,5,6,7]","import random

list_elements = [1,2,3,4,5,6,7]
random.shuffle(list_elements)
print (list_elements)"
Generate a python function to find the largest number from the given list,"[10, 20, 40, 19]","def largest_number(list):
    largest = list[0]
    for number in list:
        if number > largest:
            largest = number
    return largest"
Optimize a given Python program for better runtime,"x = 0
for i in range(1,10000):
    x += i","x = 0
for i in range(0,10000,2):
    x += i
x *= 2
x += (10000 - 1)"
Generate a Python program to print the most popular item in a list.,"A list of integers [1, 5, 9, 1, 4, 5, 9]","from collections import Counter

def most_popular(arr):
    cnt = Counter()
    for number in arr:
        cnt[number] += 1
    return cnt.most_common(1)[0][0]

result = most_popular([1, 5, 9, 1, 4, 5, 9])
print(result)"
Design an algorithm in Python to calculate the maximum of two numbers.,"10, 11","def max_of_two(a,b):
    if a> b:
        return a
    else:
        return b

max_of_two(10,11)"
"Write a function in Python to sort a dictionary according to its values, in descending order.","dictionary = {'apple': 2, 'banana': 3, 'mango': 1}","def sortDictionary(dictionary):
  sorted_list = sorted(dictionary.items(), key=lambda x: x[1], reverse=True)
  sorted_dictionary = dict(sorted_list)
  return sorted_dictionary

sorted_dictionary = sortDictionary({'apple': 2, 'banana': 3, 'mango': 1})
print(sorted_dictionary)"
Create a function in python to calculate the distance between two points in 3D space.,"(x1,y1,z1) = (8, -4, 1)
(x2,y2,z2) = (5, 8, -2)","def calculateDistance(x1,y1,z1,x2,y2,z2): 
	dist = math.sqrt((x2 - x1)**2 + (y2 - y1)**2 + (z2 - z1)**2) 
	return dist 

print(calculateDistance(8,-4,1,5,8,-2))"
Build a Python program that extracts all email addresses from a given string.,"""This is an example with two emails: john@example.com, and jane@example.com""","import re

def find_emails(text):
    regex = r""([a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+)""
    emails = re.findall(regex, text)
    return emails

emails = find_emails(""This is an example with two emails: john@example.com, and jane@example.com"")
print(emails)"
Create a python program that clean up the given text.,Hello \t   world!,"def clean_text(text):
    return text.replace(""\t"", """").strip()"
Create a Python dictionary for alphabetical order of numeric input,"[2, 3, 1]","def createDict(arr):
  res = {}
  for i in range(len(arr)):
    res[arr[i]] = i + 1
  return res

d = createDict([2, 3, 1])
print(d)"
Compose a Python program to move zeros in a given list to the end.,"[1,0,2,3,0,4,5,0]","def move_zeroes(nums):
    """"""
    Moves all the zeros in a given list to the end.
    @param nums: List
    @return: List
    """"""
    i = 0
    for num in nums:
        if num != 0:
            nums[i] = num
            i += 1
    while i < len(nums):
        nums[i] = 0
        i += 1
    return nums"
Create a python program that outputs a given number of random numbers within a given range,"max_num = 100
num_of_nums = 10","import random

def get_n_random_numbers(max_num, num_of_nums):
    random_numbers = []
    for _ in range(num_of_nums):
        random_numbers.append(random.randrange(max_num))
    return random_numbers"
Out put the first 3 characters of a given string.,Python,"string = ""Python""

print(string[:3])"
Write a python program to a calculate the area of a circle given its radius.,radius = 8,"import math

radius = 8
area = math.pi * radius * radius
print(area)"
Write an optimized sequential search algorithm in Python that takes a list of numbers and a target number as input and returns the index of the target if it exists in the list.,"[1, 2, 3, 4, 5, 6], target = 4","def find_target(nums, target):
  for i in range(len(nums)):
    if nums[i] == target:
      return i
  return -1"
Edit the following Python code to remove duplicate values in the given array.,"arr = [1, 2, 4, 2, 5, 4]","arr = [1, 2, 4, 5]
 
unique_arr = []
 
for element in arr:
    if element not in unique_arr:
        unique_arr.append(element)
 
print(unique_arr) # [1, 2, 4, 5]"
Optimize a Python program for calculating the sum of the first N numbers.,n = 20,"def get_sum(n):
    return (n*(n+1)) // 2

n = 20
sum_of_num = get_sum(n)

print(""Sum of first"", n, ""numbers is"", sum_of_num)"
Create a python program for creating a dictionaries of char count in a given string.,"string = ""Hello World""","def get_char_count(s):
    """"""
    This function returns a dictionary of character count in a given string.
    :param s: string
    :return: dictionary
    """"""
    char_count = dict()
    for char in s:
        if char not in char_count.keys():
            char_count[char] = 1
        else:
            char_count[char] += 1
    return char_count"
Debug existing Python code to update a field in a table.,"Context:

Table: records

Columns: id, name, value

# Incorrect Python code
cur.execure('UPDATE records SET value = ? WHERE name = ?', (value, name))","cur.execute('UPDATE records SET value = ? WHERE name = ?', (value, name))
conn.commit() # Added statement to commit changes to the database."
Can you build an algorithm in Python to check whether a given number is a prime or not?,7,"def is_prime(num):
    if num < 2:
        return False
    for i in range(2, num):
        if num % i == 0:
            return False
    return True

print(is_prime(7))"
Develop a function to delete duplicates from a given string in Python.,"string=""mississippi""","def remove_duplicates(string):
    new_string = """"
    for char in string:
        if char not in new_string:
            new_string += char
    return new_string

no_duplicates = remove_duplicates(""mississippi"")
print(no_duplicates)"
Create a lambda expression in Python to filter a list of integer greater than 50.,"[45, 12, 52, 89, 33, 99]","list1 = [45, 12, 52, 89, 33, 99]
filtered_list = list(filter(lambda x: x > 50, list1))

print(filtered_list)"
Develop a Python program to check if a list contains any duplicates,"nums = [1, 4, 5, 1]","def contains_duplicates(nums):
    seen = set()
    for num in nums:
        if num in seen:
            return True
        seen.add(num)
    return False

if __name__ == '__main__':
    nums = [1, 4, 5, 1]
    contains = contains_duplicates(nums)
    if contains:
        print('The list contains duplicates.')
    else:
        print('The list doesn\'t contain duplicates.')"
Generate a program in Python that will check if a given number is a palindrome.,123321,"def is_palindrome(n):
 n = str(n)
 
 return n == n[::-1]
 
num = 123321
if is_palindrome(num):
 print(f""{num} is a palindrome"")
else:
 print(f""{num} is not a palindrome"")"
Write a function in Python that takes a list of words as an argument and outputs a string of comma separated words.,"words = ['cat', 'dog', 'bird']","def listToString(words):
 return ', '.join(words)"
Generate a code snippet in Python to convert a given number to its binary format.,245,"def toBinary(num):
   result = """"
   while num > 0:
      result = str(num % 2) + result
      num = num // 2
   return result

print(toBinary(245))  # output: 11110101"
Write a python program to classify the source of an error.,Error message: Connection timed out,"def classify_error(message):
    if 'Connection timed out' in message:
        return 'Network'
    else:
        return 'Other'"
Read the following data structure and create an equivalent dictionary in Python.,"height: 150cm
age: 20
name: John","data = {
    'height': '150cm',
    'age': 20,
    'name': 'John'
}"
Generate a Python program to test the equality of two given strings,"St1= ""Python""
St2= ""Programming""","if st1 == st2:
    print(""Strings are equal."")
else:
    print(""Strings are not equal."")"
Create a Python program to display a multiplication table of size n x n.,3,"n = 3

for i in range(1, n+1):
    for j in range(1, n+1):
        print(f'{i} x {j} = {i*j}', end='\t')
    print()"
Write a Python program to call a given API with an input parameter and store the result in a variable.,"API URL: ""https://example.org/api?name=test""","import requests

url = 'https://example.org/api?name=test'
response = requests.get(url)
data = response.json()
result = data['result']"
Design a function in Python that computes the area of a triangle given its base length and height.,base_length = 8,"def triangle_area(base_length, height):
    area = 0.5 * base_length * height
    return area"
Create a Python program that takes in an array and returns an array with each element multiplied by two.,"[2, 3, 4]","def double_array_elements(arr):
    new_arr = []
    for num in arr:
        new_arr.append(num * 2)
    return new_arr

arr = [2, 3, 4]

new_arr = double_array_elements(arr)
print(new_arr) # [4, 6, 8]"
Come up with a python program to find the longest common prefix in a list of strings.,"[""hello"", ""hey"", ""hi"", ""have""]","def longest_common_prefix(strings):
    if len(strings) == 0: 
        return ''

    prefix = strings[0]
    for s in strings:
        i = 0 
        while i < len(prefix) and i < len(s) and s[i] == prefix[i]: 
            i += 1 
        prefix = prefix[:i] 
    return prefix 

print(longest_common_prefix([""hello"", ""hey"", ""hi"", ""have""]))  # Output: h"
"Create a function in Python that takes two parameters, an array and an integer, and returns a new array with all of the elements of the array multiplied by the integer.","array = [1, 2, 3]
int = 4","def multiply_by_int(array, int):
    new_array = []
    for elem in array:
        new_array.append(elem * int)
    return new_array"
Generate a Python function that takes a list of strings and returns a dictionary with each string as the key and the length of the string as the value.,"['one', 'two', 'three', 'four']","def count_lengths(strings):
  return {string : len(string) for string in strings}

strings = ['one', 'two', 'three', 'four']

print(count_lengths(strings))
# Output: {'one': 3, 'two': 3, 'three': 5, 'four': 4}"
Clean the following dataset using Python to remove any irrelevant entries.,"data = [
    [1, 'John', 'Apple'],
    [2, 'Allan', ''],
    [3, 'Kim', 'Orange'],
    [4, '', 'Banana'],
    [5, 'Sam', 'Kiwi']
]","def clean_data(data):
    cleaned_data = []
    for row in data:
        if row[1] != '' and row[2] != '':
            cleaned_data.append(row)
    
    return cleaned_data"
Generate a list of distinct values from an array of integers using a python program.,"[50, 20, 30, 40, 10]","unique_list = list(set([50, 20, 30, 40, 10]))
print(unique_list)"
Develop a code to sort the following  Python dictionary by its values from low to high.,"students = {
    'Jacob': 95.5, 
    'Leah': 91.8,
    'Sebastian': 98.4,
    'David': 95.1,
    'Joseph': 90.4
}","def sort_dict_by_values(students):
    sorted_students = sorted(students, key=students.get)
    return [sorted_students, [students[key] for key in sorted_students]]

print(sort_dict_by_values(students))"
Generate a Python program to identify the last occurrence of an element in a list.,"element: 8
list: [3, 1, 4, 5, 8, 6, 8]","def last_occurrence(x, lst):
  last_index = -1
  for i in range(len(lst)):
    if lst[i] == x:
      last_index = i
  return last_index"
Create a Python script that takes a list of integers and finds the highest value.,"[2, 5, 3, 4, 8]","The highest value is 8.

list_ints = [2, 5, 3, 4, 8]

highest_value = max(list_ints)

print('The highest value is ' + str(highest_value) + '.')"
Create a program in Python to to compute the sum of all the numbers present in a given string.,string = 'The sum of 5 and 9 is 14',"def sum_of_numbers_in_string(string):
    number_list = []
    for word in string.split(' '):
        if word.isdigit():
            number_list.append(int(word))

    return sum(number_list)"
Create a PDF document from a Word document using Python.,word file,"import win32com.client

# word file to be converted
wordFile =  r'filename.docx'

# Open the word file
word = win32com.client.Dispatch(""Word.Application"")
doc = word.Documents.Open(wordFile)

# Set the pdf parameters
pdf_format_id = 17
file_name = r'filename.pdf'

# Save the file as pdf
doc.SaveAs(file_name, FileFormat=pdf_format_id)

# Close the word file
word.Quit()"
Edit the following Python program to take user input.,"name = ""John""
print(""Hello World"")","name = input(""Please enter your name: "")
print(""Hello {name}"".format(name=name))"
Construct a Python class with the following atributes and methods.,"Attributes: name, ID
Methods: setName, setID, getName, getID","class MyClass:
    def __init__(self):
        self.name = """"
        self.ID = 0
 
    def setName(self, name):
        self.name = name
    
    def setID(self, ID):
        self.ID = ID
 
    def getName(self):
        return self.name
 
    def getID(self):
        return self.ID"
Create a Python program to group words of the same length together,"words = ['hello', 'world', 'word', 'whale', 'panda']","def group_words(words):
    # Function to group words of the same length together
    groups = {}
    
    for word in words:
        length = len(word)
        if length not in groups:
            groups[length] = []
        groups[length].append(word)
    return groups"
Create a Python program to generate a list of random integers with the size,5,"import random

def generate_random_int_list(n):
  return [random.randint(0,10) for i in range(n)]"
"Generate a Python dictionary from two arrays, such that the first array serves as keys and the second array serves as values.","keys = ['name', 'age', 'gender']
values = ['John', 24, 'male']","my_dict = {
    'name': 'John',
    'age': 24,
    'gender': 'male'
}"
Write a Python program to encrypt a sentence using substitution cipher.,"""Hello, world!""","def encrypt(text):
    encrypted_text = """"
    for letter in text:
        if letter.isalpha(): 
            encrypted_text += chr(ord(letter) + 2)
        else:
            encrypted_text += letter

    return encrypted_text

text = ""Hello, world!""
encrypted_text = encrypt(text)
print(encrypted_text)"
"Write a function in Python that takes two parameters ""n"" and ""k"" and returns the number of ways to jump ""k"" steps, starting from 0, taking 1 or 2 steps at a time, and not going beyond n.","n = 4, k = 4","def steps(n, k):
 if k == 0 or n == k:
  return 1
 if n > k:
  return steps(n-1, k-1) + steps(n-2, k-1)
 else:
  return 0"
Can you write a Python3 program to calculate the number of times a character appears in a given string?,"""Hello World!""","str1 = ""Hello World!""

char = 'l'
count = 0

for i in str1:
     if i == char:
          count = count + 1

# Print the result 
print (f'The character {char} appears {count} times in the string {str1}')"
Convert a given list of integers to a string in Python.,"[56, 23, 7]","def list_to_string(int_list):
  return ' '.join(str(x) for x in int_list)

int_list = [56, 23, 7]
print(list_to_string(int_list))"
Generate a Python method to format a given string in the desired manner.,"""I am learning python""","def format_string(string):
  return string.lower().title()"
Create a Python dictionary from two given lists.,"list1 = ['a', 'b', 'c'] 
list2 = [1, 2, 3]","dict1 = dict(zip(list1, list2)) 
print(dict1)"
Identfy the techniques used in the code snippet to achieve concurrent execution.,"import threading 

 def func1():","The code snippet uses the threading module from Python to achieve concurrent execution. This is done by using the Thread class to create new threads and using the start() method to start each thread. The Thread class also provides methods for synchronization and communication between the threads, such as the Lock and Condition Objects."
Create a code that would prompt the user for a given number and print out the Python equivalent of the given number.,number = 10,"def user_number(number):
    number_py = '{}'.format(number)
    print(""The Python equivalent of {} is {}"".format(number, number_py))"
Rewrite this JavaScript code in Python.,"let arr = [1, 2, 3, 4, 5]
arr.forEach(function(element) {
    console.log(element * 2)
});","arr = [1, 2, 3, 4, 5]
for element in arr:
   print(element * 2)"
Create a Python program to remove repeating numbers from an array.,"[2, 3, 3, 4, 5, 4]","def removeRepeats(arr):
    result = []
    seen = set()
    for num in arr:
        if num not in seen:
            result.append(num)
            seen.add(num)
     return result

res = removeRepeats([2, 3, 3, 4, 5, 4])
print(res)"
"Given two strings, write a python function to check whether one string is a substring of another.","String1 = ""abc""
String2 = ""abcdef""","def is_substring(string1, string2): 
    if string1 in string2:
        return True
    else:
        return False"
Design an algorithm in Python to convert a binary string into its decimal representation.,"""1010""","def binaryToDecimals(binary_number):
  decimal = 0
  for i, digit in enumerate(reversed(binary_number)):
    decimal += int(digit) * (2**i)
  return decimal

print (binaryToDecimals(""1010""))  # Output 10"
Design a Python program to find the sum of the two largest numbers in a list.,"[1, 3, 5, 7, 9]","def find_sum_of_largest(lst):
  lst.sort()
  return lst[-1] + lst[-2]

print(find_sum_of_largest([1, 3, 5, 7, 9]))"
Generate a code to create an array in python of size n.,n = 5,array = [None] * n
Create a function in Python to optimize a cost function using gradient descent.,A cost function of the form f(x) = x^2 + 10.,"def optimize(x, alpha):
 grad = 2 * x
 x = x - alpha * grad
 return x

for i in range(1000):
 x = optimize(x, 0.1) 

print(x) # Output: 0.0"
Write a function in Python that takes a single string argument and prints it out in reverse.,"""Hello World!""","def printReverseString(in_str): 
  
    reversed_str = in_str[::-1] 
    print(reversed_str) 

printReverseString(""Hello World!"")"
Develop a Python code which can search for a name in a list and return the position of the name in the list.,"[""John"", ""Richard"", ""Paul"", ""Ringo""]","def search(name_list, name): 
    for i in range(len(name_list)): 
        if name_list[i] == name: 
            return i 
    return -1"
Create a Python dictionary comprehension to remove all odd numbers from the provided list.,"[1, 2, 3, 4, 5]","even_dict = {k: v for k, v in enumerate([1, 2, 3, 4, 5]) if v % 2 == 0}"
"Write a Python program to replace all occurrences of the word ""hello"" with ""hi"".",This is a sentence with hello,"updated_sentence = sentence.replace(""hello"", ""hi"")"
Improve the following Python program,"def get_product_listing(product_category):
    listings = []
    for product in product_category:
        listings.append(product.get_listing())
    return listings","def get_product_listing(product_category):
    return [product.get_listing() for product in product_category]"
Develop a recursive solution in Python to calculate the Fibonacci sequence up to the nth term.,n = 7,"def fibonacci_sequence(n): 
    if n <= 1: 
        return n 
    else: 
        return(fibonacci_sequence(n-1) + fibonacci_sequence(n-2)) 

print(""The Fibonacci sequence up to the nth term:"") 
for i in range(7): 
    print(fibonacci_sequence(i))"
Write a function in Python which takes a number as a parameter and returns the factorial.,5,"def factorial(num):
  if num == 0 or num == 1:
    return 1
  else:
    return num * factorial(num - 1)
  
print(factorial(5))"
Generate a Python program to find the maximum number in a given set of numbers.,"7, 6, 5, 9, 8","def find_maximum(nums):
    # Initialize the maximum number 
    max_num = nums[0]
    # Loop through the list
    for num in nums:
        # Check if the current number is bigger
        if num > max_num:
            # If it is, save the number
            max_num = num

    return max_num

# call the function
maximum = find_maximum(nums)
print(""The maximum is "" + str(maximum))"
Write a Python function that takes a list of strings and returns a list of tuples containing each string and the number of characters in that string.,"['foo', 'bar', 'baz']","def list_to_tuples(words):
    # create an empty list
    result = []

    # create a tuple for each string
    for word in words:
        result.append((word, len(word)))
    
    return result

result = list_to_tuples(['foo', 'bar', 'baz'])
print(result)"
Write a Python program that creates a new dictionary from two existing dictionaries.,"dict1 = {'a':1, 'b':2, 'c':3} 
dict2 = {'d':4, 'e':5, 'f':6}",dict3 = {key:dict1[key] if key in dict1 else dict2[key] for key in (dict1.keys() | dict2.keys())}
Write a Python script to print the frequency of all unique words in a given string.,"""Hello world, hello programmer""","words = ""Hello world, hello programmer"".split()

word_freq = {}
for word in words:
    if word not in word_freq:
        word_freq[word] = 1 
    else:
        word_freq[word] += 1

for key, value in word_freq.items():
    print(f""{key} : {value}"")"
Write a Python script to find the GCD of two numbers.,"1000, 500","def findGCD(a, b): 
   if (b == 0): 
       return a
   return findGCD(b, a % b)
    
a = 1000
b = 500
print(""GCD of number is: "", findGCD(a, b))"
Calculate the sum of a given list of integers in Python.,"[ 7, 15, 23, 5, 9 ]","def sum_list(my_list):
  total = 0
  for num in my_list:
    total += num
  return total

print(sum_list([7, 15, 23, 5, 9]))"
Create a function in Python that will convert a given string of text into its equivalent URL-safe slug format.,This is a sample string,"def url_slug(text):
 '''Takes text and converts it to url-safe slug format.
 
 Args:
 text (str): Text to be converted to slug
 
 Returns:
 str: slugified text
 '''
 
 text = text.lower()
 text = re.sub(r'\s+', '-', text)
 text = re.sub(r'[^\w-]', '', text)
 return text"
"Finish a Python program to select all employees with a salary greater than 10,000.",SELECT *,"SELECT *
FROM employees
WHERE salary > 10000"
Improve the following code in Python to find the product of two given numbers without using the multiply operator.,"def multiply(x, y):
    result = 0
    for i in range(x):
        result += y
    return result","def multiply(x, y):
    result = 0
    for i in range(y):
        result += x
    return result

def power(x, y):
    result = 1
    for i in range(y):
        result *= x
    return result"
Suggest improvements to the following Python code.,"def get_fibonacci_series(n):
	series = []
	for i in range(n):
		if i == 0 or i == 1:
			series.append(i)
		else:
			series.append(series[i-1] + series[i-2])
	return series","def get_fibonacci_series(n):
	# Initialize empty list for Fibonacci series 
	series = []
	a = 0
	b = 1
	# Iterate till number of terms required 
	for i in range(n):
		series.append(a)
		c = a + b 
		a = b 
		b = c 
	return series"
Generate a python program that takes an integer and then prints out the factorial of it?,7,"def factorial(num):
    if num <= 1:
        return 1
    else:
        return num * factorial(num - 1) 

n = int(input(""Enter a number: ""))  
print(""Factorial of"",n,""is"",factorial(n))"
Create an algorithm in Python to find the maximum number in a list,"list = [1, 4, 5, 9, 12, 14]","def find_max(list):
    max_num = list[0]
    for num in list:
        if num > max_num:
            max_num = num
    return max_num

max_number = find_max(list)
print(max_number)"
"Given a list of student records consisting of student name, roll number, and marks, write a Python program to sort the records based on marks in descending order.","records = [['John Doe', 1, 92], ['Anna Smith', 2, 91], ['Jim Green', 3, 87]]","def sort_by_marks(records):
    # Sort the records list according to the marks 
    sorted_records =sorted(records, key = lambda x: x[2], reverse=True)

    # Return the sorted list
    return sorted_records"
Can you convert a given dictionary into a string using Python?,"{""foo"": ""bar"", ""hello"": ""world""}","dictionary_string = str({""foo"": ""bar"", ""hello"": ""world""})"
Create an algorithm in Python that reads and stores the following data into a dictionary.,"""John,31;Alice,27;Bob,40""","input_data = ""John,31;Alice,27;Bob,40""
data_dict = {}

temp = input_data.split("";"") 
for i in temp: 
    data = i.split("","") 
    data_dict[data[0]] = data[1] 

print(data_dict)"
"Given a 2D array in Python, write a code to calculate the sum of all elements.","arr = [[1, 2, 3], [4, 5, 6], [7 , 8, 9]]","total = 0
for row in arr: 
    for num in row: 
        total += num 
print(total) # 45"
Develop a program in Python to remove all the punctuation from an English sentence.,This is an example sentence!,"def remove_punctuation(sentence):
    punctuations = '''!()-[]{};:'""\,<>./?@#$%^&*_~'''
    clean_sentence = """" 
    for letter in sentence: 
        if letter not in punctuations: 
            clean_sentence += letter 
    return clean_sentence

sentence = ""This is an example sentence!""
print(remove_punctuation(sentence))"
Debug the given python program to output b2 instead of a3.,"a1 = 6
a2 = 3
b1 = a1 // a2
a3 = b1 * a2","a1 = 6
a2 = 3
b1 = a1 // a2
b2 = a1 % a2"
"In Python, write a program to find the average of all the even numbers in a given list.","list = [1, 7, 8, 10, 12, 17]","def average_even(list):
    even_list = []
    for i in list:
        if i % 2 == 0:
            even_list.append(i)
    return sum(even_list)/len(even_list)"
Edit a given Python program to use regex to extract the phone numbers from the text.,"import re

txt = ""My number is 666-111-1111 and my office number is 888-666-1234.""","import re

txt = ""My number is 666-111-1111 and my office number is 888-666-1234.""

phone_numbers = re.findall(r'\d{3}-\d{3}-\d{4}', txt)
print(phone_numbers) # output: ['666-111-1111', '888-666-1234']"
Create a Python program to find all numbers in a given list that are evenly divisible by 4.,"[1, 8, 10, 15, 20, 25]","def find_divisible_by_4(num_list):
    result_list = []
    
    for i in num_list:
        if i % 4 == 0:
            result_list.append(i)
            
    return result_list
 
print(find_divisible_by_4([1, 8, 10, 15, 20, 25]))"
Write a Python program to convert a list into a dictionary.,"[1, 2, 3, 4]","input_list = [1, 2, 3, 4]
output_dict = {}

for item in input_list:
  output_dict[item] = None

print(output_dict)"
Develop a function to search for a character into a given string and return its index if present.,"String: Python
Character: y","#function to search for a character
def search_char(str, char):
	idx = -1
	for i in range(len(str)):
		if str[i] == char:
			idx = i
			break
	return idx
    
#call the function
str = 'Python'
char = 'y'

index = search_char(str, char)
#print the result
if index != -1:
	print('Character found at index:', index)
else:
	print('Character not found')"
Create a Python script to search a list of words for a given word and return its index.,"words = ['GPT', 'model', 'natural', 'language', 'processing'], search = 'language'","def search(words, search):
    for i, word in enumerate(words):
        if word == search:
            return i
    return -1

index = search(words, 'language')
print(index)"
Generate Python code to search through a given list of integers and return the closest match to the given number.,"[1, 5, 9, 10, 12, 15], search_term = 11","def closest_match(numbers, search_term):
    closest_match = None
    min_diff = float('inf')
    
    for number in numbers:
        diff = abs(number - search_term)
        if diff < min_diff:
            min_diff = diff
            closest_match = number
    
    return closest_match"
Print the Fibonacci sequence up to a given number in Python.,10,"# Declare a function
def Fibonacci(num):
    a = 0
    b = 1
    
    # Iterate
    for i in range(num):
        print(a, end="" "")
        c = a + b
        a = b
        b = c
    print()
    
# Print the sequence
Fibonacci(10)"
Generate a Python 3 program to find out the highest common factor of two numbers.,60 and 80,"def find_hcf(x, y): 
  
    if x > y: 
        smaller = y 
    else: 
        smaller = x 
    for i in range(1,smaller + 1): 
        if((x % i == 0) and (y % i == 0)): 
            hcf = i 
              
    return hcf 
      
x = 60
y = 80

hcf = find_hcf(x, y) 
print(""The Highest Common Factor of"", x,""and"", y,""is"", hcf)"
Write a function in Python to check if a given array of numbers is in ascending order.,"[3, 5, 7, 9, 16, 19]","def isSorted(arr):
    for i in range(len(arr) - 1):
        if arr[i] > arr[i+1]:
            return False
    return True

print(isSorted([3, 5, 7, 9, 16, 19]))"
Modify the existing Python program to add an exception clause.,"def calculate_square(x):
    try:
        return x * x
    except TypeError:
        print(""The argument must be a number"")
        
calculate_square(10)","def calculate_square(x):
    try:
        return x * x
    except TypeError:
        print(""The argument must be a number"")
    except ValueError:
        print(""The argument cannot be a negative number"")
        
calculate_square(10)"
Improve the execution time of a given Python program.,"def factorial(n):
    if n==1 or n==0:
        return 1
    return n * factorial(n-1)

num = 4
print(factorial(num))","def factorial(n):
    ans = 1
    while(n > 1):
        ans *= n
        n -= 1
    return ans

num = 4
print(factorial(num))"
Write a Python code to find the factorial of a given number without using inbuilt functions like factorial().,num = 6,"def factorial(num): 
    if num == 0: 
        return 1 
  
    return num * factorial(num - 1) 
  
num = 6
print(""Factorial of"", num, ""is"", factorial(num))"
Write a Python function to compare two lists and return the elements that are not common in both lists.,"list1=[1, 2, 3, 4, 5]
list2=[4, 5, 6, 7, 8]","def get_unique_elements(list1, list2):
 return list(set(list1) - set(list2))"
Generate a Python statement to select unique values from a list.,"seq = [2, 3, 5, 3, 4, 9, 5]","result = set(seq)
print(result)"
Generate a function in Python to delete a key from a dictionary.,"dictionary = {'a':1,'b':2,'c':3}
key = 'b'","def delete_key(dictionary, key): 
    if key in dictionary: 
        del dictionary[key] 
    else: 
        print('Error! Key not found') 

delete_key(dictionary, key) 
print(dictionary)"
Write a Python program to convert a list of numeric values into an array of even numbered values.,"[2, 3, 4, 5, 6, 7]",even_arr = [x for x in arr if x % 2 == 0]
"Given a list of names, write a program in Python to create a new list with the first letter in each name capitalized.","names = [""kevin"", ""david"", ""james"", ""george""]","def capitalized_list(names):
    new_list = []
    for name in names:
        new_list.append(name.capitalize())
    
    return new_list

print(capitalized_list(names))

# Output
['Kevin', 'David', 'James', 'George']"
Generate a script in python to split a given string into words and store them in a list.,"str = ""This is a great day""","def split_str(str):
    words = str.split("" "")
    return words"
Create a class in Python with a method to sort the given array in an ascending order.,"[3, 2, 5, 1, 4]","class Sort: 
    def sort_arr(self, arr):
        arr.sort()
        return arr"
Generate a Python script to sort an array of strings in case-insensitive order.,"[""Apple"", ""banana"", ""APple""]","def sort_strings(arr):
    arr_lower = [element.lower() for element in arr]
    sorted_lower = sorted(arr_lower)

    sorted_arr = [arr[arr_lower.index(element)] for element in sorted_lower]

    return sorted_arr

arr = [""Apple"", ""banana"", ""APple""]
sorted_arr = sort_strings(arr)
print(sorted_arr) # prints [""APple"", ""Apple"", ""banana""]"
Create a sorting algorithm in Python to organize a given array of numbers.,"Array of numbers: [3, 5, 4, 1, 6]","def bubbleSort(nums): 
    for i in range(len(nums)-1): 
        for j in range(0, len(nums)-i-1): 
            if nums[j] > nums[j+1] : 
                nums[j], nums[j+1] = nums[j+1], nums[j] 
    return nums
  
arr = [3, 5, 4, 1, 6]
print (bubbleSort(arr))"
"Write a Python program to query all 10,000 rows in the provided SQL table.","Table ""Example"" with 10,000 rows","import sqlite3

# connect to SQL database
db = sqlite3.connect('example.db')

# create cursor
cur = db.cursor()

# execute query
cur.execute('SELECT * FROM ""example""')

# fetch all rows
rows = cur.fetchall()

# display all rows
for row in rows:
    print row"
"Write a Python script that processes the list of words, and changes the case of the characters to capital letters.","words = [""elephant"", ""goose"", ""rabbit""]","def capitalize_strings(words):
    capital_words = []
    for word in words:
        capital_words.append(word.upper())
    
    return capital_words

capitalized_words = capitalize_strings(words)
print(capitalized_words)"
Generate an algorithm in Python that finds the number of times an element is present in an array.,"arr = [4, 5, 2, 4, 2]
x = 2","def countOccurrences(arr, x): 
  
    count = 0
    for i in range(len(arr)): 
        if (x == arr[i]): 
            count = count + 1
  
    return count 
  
arr = [4, 5, 2, 4, 2]
x = 2
print(countOccurrences(arr, x))"
Edit the following object-oriented Python code to use inheritance.,"class A:
    def __init__(self, x):
        self.x = x
    
    def get_x(self):
        return self.x

class B:
    def modify_x(self, x):
        self.x = x + 1","class A:
    def __init__(self, x):
        self.x = x
    
    def get_x(self):
        return self.x

class B(A):
    def modify_x(self, x):
        A.modify_x(self, x)
        self.x += 1"
Write a Python program to generate all possible strings by rearranging the characters of a given string.,"String = ""ABC""","def generate_all_strings(string):
   if len(string) == 1: 
       return [string]
    result = []
    for i, letter in enumerate(string):
        for permutation in generate_all_strings(string[:i] + string[i+1:]):
            result += [letter + permutation]
    return result"
Design a linear search algorithm in Python that returns the index of an item in an array.,"arr = [1,2,3,4,5]","def linear_search(arr, target):
    """"""
    Searches through a given input array to find the index of a provided target number.
    Returns -1 if the target number is not found.
    """"""
    for i in range(len(arr)):
        if arr[i] == target:
            return i
    return -1"
Create a Python program to classify a set of numbers into odd and even.,"[1, 2, 3, 4, 5]","def classify_odd_even(input_list):
    odd_nums = []
    even_nums = []
    for item in input_list:
        if item % 2 == 0:
            even_nums.append(item)
        else:
            odd_nums.append(item)

    return odd_nums, even_nums

input_list = [1, 2, 3, 4, 5]
odd_nums, even_nums = classify_odd_even(input_list)
print(""Odd Numbers: "", odd_nums)
print(""Even Numbers: "", even_nums)"
Generate a Python script that takes a list of integers and prints out the sum of their squares.,"data: [1, 2, 3]","data = [1, 2, 3] 
sum = 0 

for number in data: 
 sum += number ** 2 

print(f""The sum of the squares of the given numbers is {sum}."")"
Can you write a function in Python that takes in a 2-dimensional array of integers and returns the lowest element in the array?,"[[3, 4, 5], [2, 7, 8], [12, 1, 9]]","def find_min(matrix): 
    result = float('inf') 
    for row in matrix: 
        result = min(result, min(row))
    return result 

matrix = [[3, 4, 5], [2, 7, 8], [12, 1, 9]]
print(find_min(matrix)) # Output: 1"
Optimize a function in Python which takes a list and returns the sum of all its elements.,"[1, 2, 3]","def sum_list_elements(lst):
    sum = 0
    for item in lst:
        sum += item
    return sum

print(sum_list_elements([1, 2, 3]))"
Create a Python program to read an array of integers and calculate their sum.,"[1, 3, 5, 7]","def calculate_sum(arr):
  sum = 0

  for i in arr:
    sum += i

  return sum

input_array = [1, 3, 5, 7]

result = calculate_sum(input_array)

print(result) # prints 16"
Create a function in Python for converting currencies from one type to another.,"currency_from = 'USD'
currency_to = 'EUR'
exchange_rate = 0.9","def convert_currencies(currency_from, currency_to, exchange_rate):
 return currency_fit * exchange_rate 

c = convert_currencies('USD', 'EUR', 0.9)
print(c) # Output: 0.9"
Optimize an existing Python program to reduce its running time.,"def find_sum(n): 
  
    final_sum = 0
  
    for i in range(n+1): 
        final_sum += i 
      
    return final_sum 

print(find_sum(10))","def find_sum(n): 
   return n * (n + 1) // 2
  
print(find_sum(10))"
Come up with a Python program to generate a Fibonacci sequence till n steps,n = 8,"def fibonacci(n):
    numbers = []
    a = 0
    b = 1

    while len(numbers) <= n:
        c = a + b
        numbers.append(c)
        a = b
        b = c
    
    return numbers

if __name__ == '__main__':
    print(fibonacci(8))"
Generate a Python algorithm to generate the following pattern,"""* * * *""","for i in range(4):
    for j in range(4):
        print(""*"", end="" "")
    print()"
Construct a Python function that takes in three strings as parameters and returns a list containing sorted versions of the strings.,"""apples"", ""oranges"", ""peaches""","def sort_strings(s1, s2, s3):
    return sorted([s1, s2, s3])

result = sort_strings('apples', 'oranges', 'peaches')
print(result)"
Write a python program to detect the occurrence of a given string in another large string.,"String 1: ""This is a test.""
String 2: ""test""","def str_find(str1, str2):
    return str1.find(str2) != -1

str_find(""This is a test."", ""test"")"
Generate a correct python program that reverses a string,"string = ""Hello""","def reverse_string(string):
    reversed_string = """"
    for char in string:
        reversed_string = char + reversed_string
    return reversed_string"
Identify the type of object a Python expression will evaluate to.,expression = 8 + 5,Integer.
Write an algorithm in Python to perform a linear search.,"arr = [1, 5, 7, 8, 10]
key = 7","def linear_search(arr, key):
    for index, element in enumerate(arr):
        if element == key:
            return index
    return -1

print(linear_search(arr, key))"
Write an algorithm in Python to determine if a number is an Armstrong number or not.,The number is 370.,"def armstrong_number(num):
  digits = [int(x) for x in str(num)]
  n_digits = len(digits)
  sum_of_cubes = 0
  for digit in digits:
    sum_of_cubes += digit ** n_digits
  if sum_of_cubes == num:
    return True
  else:
    return False

armstrong_number(370)"
Design a Python script to rank a set of given numbers.,"[3, 8, 2, 9, 5]","def rank(nums): 
    sortedNums = sorted(nums, reverse = True) 
    for i in range(len(sortedNums)): 
        if sortedNums[i] == nums[i]: 
            print (i + 1, end = "" "") 
  
# Driver code 
nums = [3, 8, 2, 9, 5] 
rank(nums)"
Compute the greatest common divisor of two numbers with Python.,"a = 24
b = 36","def gcd(a, b): 
    if (a == 0): 
        return b 
    return gcd(b % a, a) 
  
print (""GCD("", a, "","", b, "") = "", gcd(a, b))"
Create a Python program which calculates the mean of a dataset,"data = [2, 4, 6, 8]","def dataset_mean(data):
    return sum(data)/len(data)"
Create a Python function that takes two numbers and returns the biggest of them.,"x = 3, y = 6","def max_of_two(x, y):
    if x > y:
        return x
    else:
        return y
 
x = 3
y = 6
maximum = max_of_two(x, y)
print('The maximum of', x, 'and', y, 'is', maximum)"
Write a Python program to turn a string into Pig Latin.,"string = ""Hello World""","def toPigLatin(s):
   vowels = ('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')
   if s[0] in vowels:
      return s + 'way'
   else:
      return s[1:] + s[0] + 'ay'
      
print(toPigLatin(""Hello World""))"
Write a Python program to multiply two given lists containing integers of the same size.,"list1 = [1, 2, 3]
list2 = [4, 5, 6]","# Create a new list with the elements of both lists 
list1 = [1, 2, 3]
list2 = [4, 5, 6]

# Multipliy each element of 2 lists and store in the 3rd list 
list3 = [] 
for x, y in zip(list1, list2): 
    list3.append(x*y) 

# Print the result 
print(list3)

# Output 
[4, 10, 18]"
Generate a Python dictionary of given word frequencies.,"[('cat', 2), ('dog', 5), ('bird', 3)]","wordFrequencies = {
 'cat': 2,
 'dog': 5,
 'bird': 3
}"
Generate a Python program to print a square matrix of size n containing the numbers from 11 to n*n.,3,"n = 3

output_matrix = [[0 for x in range(n)] for y in range(n)] 
  
num = 1
  
for i in range (0, n):    
 for j in range(0, n):     
 output_matrix[i][j] = num    
 num = num + 1    
  
for i in range(0, n):
 for j in range(0, n):
 print(output_matrix[i][j], end = "" "")
 print("""")"
"Given a list of words and a length, write a Python program that returns a list of words with length equal or greater than the given length.","words = ['apple', 'toy', 'trees']
length = 5","def search_by_length(words, length):
    result = []
    for word in words:
        if len(word) >= length:
            result.append(word)
    return result

words = ['apple', 'toy', 'trees']
length = 5

print(search_by_length(words, length))"
Write a Python program that prints out all possible words from a collection of letters.,"letters = [""a"", ""b"", ""t""]","import itertools

letters = [""a"", ""b"", ""t""]
words = []

# we use itertool's permutations to generate all combinations of letters
Result = itertools.permutations(letters, 3)

# we iterate through the output of itertool's permutation
# and append it to result list of words
for ele in list(Result):
    words.append(''.join(ele))

# printing the result
print(words)"
Use a for-loop in Python to print the ASCII value of each character in a given string.,"string = ""Hello""","for i in range(len(string)):
    print(ord(string[i]))  # Output: 72, 101, 108, 108, 111"
Edit the following Python code to add exception handling for user input.,"name = input('What is your name? ')
print('Hello, ' + name)","try:
  name = input('What is your name? ')
  print('Hello, ' + name)
except:
  print('There was an error parsing your name.')"
Write a Python program to convert a list of lists into a dictionary where the first element of each list is the key and the rest of the elements are the values.,"list1 = [""apple"", ""red"", ""green""]
list2 = [""banana"", ""yellow"", ""green""]","dict1 = {}
for lst in [list1, list2]:
 key = lst[0]
 val = lst[1:]
 dict1[key] = val

print(dict1)
# Output: {'apple': ['red', 'green'], 'banana': ['yellow', 'green']}"
Write a Python program to convert a query string into a dictionary.,"queryString = ""country=usa&city=ny&lang=en&temp=77""","queryString = ""country=usa&city=ny&lang=en&temp=77""

queryDict = {}

for keyValueString in queryString.split('&'):
 key, value = keyValueString.split('=')
 queryDict[key] = value

print(queryDict)
# Output: {'country': 'usa', 'city': 'ny', 'lang': 'en', 'temp': '77'}"
Write a Python program to generate a list of even numbers between two given numbers.,"Start value = 2
End value = 20","def generate_list(start, end):
    result = []
    for i in range(start, end+1):
        if i%2 == 0:
            result.append(i)
    return result

print(generate_list(2, 20))"
Create a script in Python that can sort the following list of items alphabetically.,"list = ['car', 'apple', 'ball', 'Boat']","def sortAlpha(list):
    list.sort()
    return list"
Design a FOR loop algorithm in Python to print all numbers starting from one to the given number.,10,"for i in range(1, 11): 
    print(i)"
Generate a JSON string from a Python dict object.,"dict_object = { 'name': 'John Doe', 'age': 40 }","import json

json_obj = json.dumps(dict_object)"
Write an algorithm in Python that identifies and removes duplicates from a given array.,"Array = [2, 3, 4, 3, 2]","def removeDuplicates(array):
 result = []

 for number in array:
 if number not in result:
 result.append(number)

 return result

array = [2, 3, 4, 3, 2]
print(removeDuplicates(array))"
Develop a Python script for creating a dictionary with all the occurrences of the words in a sentence.,John and Mary went to the school,"sentence = ""John and Mary went to the school""
words = sentence.split()
word_dict = {}

for word in words:
    if word in word_dict:
        word_dict[word] += 1
    else:
        word_dict[word] = 1

print(word_dict)"
Find the largest number in an array using Python.,"Array: [1, 10, 5, 6, 9, 8, 20]","arr = [1, 10, 5, 6, 9, 8, 20]

def largest_number(arr):
  largest = arr[0]
  for num in arr:
    if num > largest:
      largest = num

  return largest

largest = largest_number(arr)
print(largest) # 20"
"Create a Python program to determine if a given string is a palindrome and if so, print it.","String = ""racecar""","# Function to check if a string is a palindrome
def isPalindrome(s):
 # Reverse the string
 rev_s = s[::-1]

 # Check if the string is the same as its reverse
 if (s == rev_s):
 return True
 return False

# Driver code
s = 'racecar'

# Check if the given word is a palindrome
if (isPalindrome(s)):
 print(s)"
Convert the following pseudo code into a Python Program.,"INPUT n
OUTPUT ""Even"" OR ""Odd""
IF n is divisible by 2
    OUTPUT ""Even""
ELSE
    OUTPUT ""Odd""","n = int(input(""Enter a number: ""))
if n%2 == 0:
    print(""Even"")
else:
    print(""Odd"")"
Debug the following Python code,"def f1 (x):
 y = x + 1
def f2(x):
 return f1(x)*f1(x)

f2(2)","# define f1 #
def f1(x):
    return x + 1

# define f2 #
def f2(x):
    return f1(x) * f1(x)

# call f2 #
print(f2(2)) #Output: 9"
Generate a python code to calculate the sum of two numbers given.,"a = 10
b = 20","def calculate_sum(a, b):
    """"""Calculate the sum of two numbers given.
    
    Parameters
    ----------
    a : int
        The first argument.
    b : int
        The second argument.
        
    Returns
    -------
    int
        The sum of the two numbers given.
    """"""
    sum = a + b
    return sum"
Create a Python script to find the maximum and minimum numbers from a list.,"list1 = [2, 3, 7, 4, 5]","maxnum = max(list1)
minnum = min(list1)
print(""Maximum number is:"", maxnum) 
print(""Minimum number is:"", minnum) 
#prints Maximum number is: 7   Minimum number is: 2"
Create a method in Python that accepts two strings and returns a boolean if the two strings are anagrams.,“listen” and “silent”,"def is_anagram(string1, string2):
    return (sorted(string1) == sorted(string2))

print(is_anagram(""listen"", ""silent"")) # prints True"
Create a function in Python for calculating the surface area of a cube.,The length of one of the sides of the cube,"def cube_area(side):
 return 6 * (side ** 2)"
Generate a Python program for merging two sorted lists.,"l1 = [1, 2, 5] 
l2 = [3, 4, 6]","def merge_sorted_lists(l1, l2):
        l3 = l1 + l2
        l3.sort()
        return l3
    
l1 = [1, 2, 5] 
l2 = [3, 4, 6]

result = merge_sorted_lists(l1, l2)
print(result)"
Create a method in Python to search through a list and return all elements which are divisible by 5.,"[4, 9, 5, 20, 21, 33]","def find_division_by_5(lst):
    """"""Search through a list and return all elements which are divisible by 5""""""
    result = []
    for item in lst:
        if item % 5 == 0:
            result.append(item)
    
    return result
    
if __name__ == '__main__':
    lst = [4, 9, 5, 20, 21, 33]
    print(find_division_by_5(lst))"
Write an algorithm in Python to calculate the area of a triangle given by its three points.,"A(x1,y1), B(x2,y2), C(x3,y3)","def area(x1,y1,x2,y2,x3,y3): 
    a = (x1 * (y2 - y3) + x2 * (y3 - y1) + 
         x3 * (y1 - y2))/2; 
    return abs(a); 

# Driver Code 
x1,y1 = (4,7)
x2,y2 = (5,6)
x3,y3 = (7,4)

print(area(x1,y1,x2,y2,x3,y3));"
"Write a Python program that parses and prints the value of the ""name"" field in a json string.","json_string = '{""name"":""John"", ""age"":20, ""city"":""San Fransisco""}'","import json

data = json.loads(json_string)

print(data['name'])

# Output: John"
Create a Python dictionary structure that stores a warning message for each item in the following list.,"['apple', 'orange', 'banana']","{
 'apple': 'This apple is not fresh.',
 'orange': 'This orange has gone bad.',
 'banana': 'This banana is too ripe.'
}"
Create a logic gate simulation using a Python program,Details of an OR gate,"def or_gate(a, b):
    if a or b == 0:
        return 0
    else:
        return 1"
Write a Python program to insert a given string at the beginning of all items in a list.,"my_list = [""hello"", ""world"", ""python""]
prefix = ""Programming - ""","my_list = [""hello"", ""world"", ""python""]
prefix = ""Programming - ""

# Insert the prefix to all items in the list
new_list = [prefix + item for item in my_list]

print(new_list)"
Create a Python program to generate a list of random numbers.,"length = 5, min = 2, max = 10","import random

def generate_random_numbers(length, min, max):
  result = []
  for _ in range(length):
    result.append(round(random.uniform(min, max), 1))
  return result

print(generate_random_numbers(5, 2, 10)) # [2.6, 6.2, 2.5, 8.5, 8.1]"
Debug this Python code.,"def calculate_sum(numbers):
      sum = 0
      for num in numbers
         sum += num
      return sum","def calculate_sum(numbers):
      sum = 0
      for num in numbers: # the colon is missing
         sum += num
      return sum"
Design a function in Python to classify an input into positive or negative.,number = -3,"def classify_number(number):
    if number > 0:
        return 'positive'
    else:
        return 'negative' 

result = classify_number(number)
print(result)"
Design a script in Python to scrape text data from a particular web page.,url = 'https://en.wikipedia.org/wiki/Movie',"from bs4 import BeautifulSoup
import requests

# Get the HTML of the page
html_content = requests.get(url).text

# Create the Soup object
soup = BeautifulSoup(html_content, 'lxml')

# Find the text data
data = soup.find_all('p')

# Print the text data
for element in data:
      print(element.text)"
Extract the 2nd and 3rd element from a given list in Python.,"list = [1, 2, 3, 4, 5]",new_list = list[1:3]
Generate a Python program to implement the following feature: Search a phrase in a given string.,"Search the phrase ""to be or not to be"" in the string ""Whether 'tis nobler in the mind to suffer"".","def search(phrase, string):
  if phrase in string:
     return True 
  else:
     return False 

result = search(""to be or not to be"", ""Whether 'tis nobler in the mind to suffer"")
print(result)"
Write a Python program to read in three numbers and find the smallest of the three.,"3, 6, 8","a = int(input(""Enter first number: ""))
b = int(input(""Enter second number: ""))
c = int(input(""Enter third number: ""))

minimum = min(a, b, c)

print(""The smallest of the three numbers is"", minimum)"
Write a Python program to calculate the sum of two given numbers. The two supplied numbers will be equal or one will be greater than the other.,"num1 = 3
num2 = 5","def sum_two_numbers(num1, num2):
 return num1 + num2

print(sum_two_numbers(num1, num2))
# Output: 8"
Create a Python program to generate all the permutations of a string using backtracking.,ABC,"def permute(s, l, r):
 if l == r:
  print(''.join(s))
 else:
  for i in range(l, r+1):
   s[l], s[i] = s[i], s[l]
   permute(s, l + 1, r)
   s[l], s[i] = s[i], s[l] 

def generate_all_permutations(s):
 n = len(s)
 permute(list(s), 0, n-1)

s = 'ABC'
generate_all_permutations(s)"
Find a bug in the given Python program and fix it.,"def get_times_table(x):
  times_table = []
  for i in range(10):
      times_table[i] = x * i
  return times_table","def get_times_table(x):
  times_table = []
  for i in range(10):
      times_table.append(x * i)
  return times_table"
Create an algorithm and its corresponding code implementation in Python that counts the number of words in a string.,This is a sentence,"def word_count(string):
 words = string.split()
 return len(words)

print(word_count(""This is a sentence""))"
Suppose you are given a list of strings in Python. Write a function that takes the list of strings as input and prints out the first string that is longer than 10 characters.,"[""cat"", ""doggo"", ""elephant"", ""giraffe""]","def find_long_string(string_list):
    for string in string_list:
        if len(string) > 10:
            print(string)
            break

string_list = [""cat"", ""doggo"", ""elephant"", ""giraffe""]
find_long_string(string_list)"
Create a Python function that returns all the prime numbers between 1 and a given number.,Number: 25,"def get_primes(n):
 primes = []
 for num in range(2, n + 1):
 is_prime = True
 for divisor in range(2, num):
 if num % divisor == 0:
 is_prime = False
 break
 
 if is_prime:
 primes.append(num)
 
 return primes
 
primes = get_primes(25)
print(primes) # prints [2, 3, 5, 7, 11, 13, 17, 19, 23]"
"Given a JSON string, write a Python program that prints out the values for each key.","{""FirstName"": ""John"", ""LastName"": ""Smith""}","import json

data_string = '{""FirstName"": ""John"", ""LastName"": ""Smith""}'
data = json.loads(data_string)

for key, value in data.items(): 
    print(""{} = {}"".format(key, value))"
Write a code in Python to display a sorted array of the numbers in an array that are greater than the given value.,"[2, 4, 6, 8, 10, 12]
Given number: 6","def sort_greater_numbers(arr, num):
    result = [x for x in arr if  x > num]
    result.sort()
    return result"
Write a Python program for creating email address based on input domain name and username.,"username=johndoe
domain=example.com","def generate_email_address(username, domain):
  return f""{username}@{domain}""

username = input(""Enter username:"")
domain = input(""Enter domain:"")

email_address = generate_email_address(username, domain)
print(""Generated email address:"", email_address)"
Write a Python program to optimize this linear equation.,x + y = 5,"# function to solve equation 
def solve(eqn): 
    x, y = sympy.symbols('x y') 
    return sympy.solve((eqn, ), (x, y)) 
  
# equation
eqn = x + y - 5

# solve equation
result = solve(eqn)
x_sol = result[x]
y_sol = result[y]

print(""x ="", x_sol)
print(""y ="", y_sol)"
Write a Python program to convert a list to a tuple,"[1,2,3]","def list_to_tuple(list):
    return tuple(list)"
Create a Python program that takes two string as input and produces a new string as output. The output string is the concatenation of the two inputs with all the vowels removed.,"string1 = 'Hello World!'
string2 = 'This is a test.'","def remove_vowels(string1, string2):
  res = ''
  vowels = 'aeiouAEIOU'

  for char in string1 + string2:
    if char not in vowels:
      res += char
  
  return res

print(remove_vowels(string1, string2))"
Create a python program that calculates the maximum of three numbers.,"Numbers: 5, 8, 3","def max_three(a, b, c):
    m = max(a, b)
    m = max(m, c)
    return m"
Convert the following basic Python code into its equivalent JavaScript code.,"for i in range(1, 5):
    print(i)","for(let i = 1; i < 5; i++){
    console.log(i);
}"
"Given a Python dictionary, write a function that prints out the key-value pairs in alphabetical order.","{
 'Mark': '68',
 'Carol': '35',
 'John': '42'
}","def print_dict_alphabetically(dictionary):
    sorted_keys = sorted(dictionary.keys())
    for key in sorted_keys:
        print(f""{key}: {dictionary[key]}"")

print_dict_alphabetically({
 'Mark': '68',
 'Carol': '35',
 'John': '42'
})"
Generate an algorithm in Python to classify an email as spam or not spam.,"""This email is from the spamming company.""","def classify_email(email):
    spam_words = ['spam', 'scam', 'unsubscribe', 'refund', 'free', 'win']

    # Check if email contains any words that indicate a spam email
    for word in spam_words:
        if word in email:
            return 'spam'

    # If no words were found, return 'not spam' 
    return 'not spam'"
"Given a Python list of integers, write a function to find the sum of the elements in the list.","nums = [1, 2, 3, 4, 5]","def findSum(nums):
 total = 0
 for num in nums:
 total += num
 return total"
Create a Python program to replace all vowels in a given string with a given character.,"string = ""replace all vowels""
character = '*'","def replace_vowels(s, c): 
    return s.translate(str.maketrans('aeiou', c*5))

print(replace_vowels(string, character)) 

# Output: 
 r*pl*c* *ll v*w*ls"
Design a Python program that computes the reverse of a given string.,Hello,"def reverseString(s):
    return s[::-1]
 
s = ""Hello""
print(reverseString(s))"
Rewrite the following JavaScript code to a python code.,"function addNums(x, y) {
    return x + y;
}","def addNums(x, y):
    return x + y"
Create a Python program to count the number of occurrences of a certain element in a list.,"[1, 2, 1, 2, 5, 2, 1]","def count_occurrences(lst, element):
    count = 0
    for item in lst:
        if item == element:
            count += 1
    return count

result = count_occurrences([1, 2, 1, 2, 5, 2, 1], 2)
print(result)"
Write a Python script to find all prime numbers in a given list of numbers.,"[13, 19, 23, 5, 7]","""""""
Find all prime numbers in a given list of numbers
""""""

def is_prime(n):
    for i in range(2, n):
        if n % i == 0:
            return False
        else:
            return True

numbers = [13, 19, 23, 5, 7]
for num in numbers:
    if is_prime(num):
        print(num,""is a prime number"")"
Create a Python program to count the number of upper case and lower case letters in a given string,Hello World,"def countLetters(s): 
   uppercase, lowercase = 0, 0
   for x in s: 
      if x.islower(): 
         lowercase+= 1
      elif x.isupper(): 
         uppercase+= 1
   print (""No. of Upper case characters : "", uppercase) 
   print (""No. of Lower case Characters : "", lowercase) 

countLetters('Hello World')"
"Create a function which takes two strings as arguments, concatenates the two strings, and capitalizes the result.","str1 = 'python'
str2 = 'programming'","def concat_and_capitalize(str1, str2):
    result = str1 + str2
    return result.capitalize()

str1 = 'python'
str2 = 'programming'
print(concat_and_capitalize(str1, str2))"
Write a Python program that takes a list of numbers and creates a new list of even numbers only.,"lst = [2, 3, 5, 6, 7, 8, 10, 11]","def get_even_numbers(lst):
    even_lst = []
    for num in lst:
        if num % 2 == 0:
            even_lst.append(num)
    return even_lst"
Develop a Python program to determine the frequency of characters in an input string.,Input string: hello world,"def frequency(string):
 freq = {}
 for c in string:
 if c not in freq:
 freq[c] = 1
 else:
 freq[c] += 1
 return freq

string = input('Please enter your string: ')
print(frequency(string))"
Compose a python program to search an element in an array,"[2, 3, 4, 5]","def linear_search(arr, x): 
    for i in range(len(arr)): 
  
        if arr[i] == x: 
            return i+1
  
    return -1

arr = [2, 3, 4, 5] 
x = 4

print(linear_search(arr, x))"
Create a Python program to convert raw JSON data into a Pandas DataFrame.,"{
    ""Name"": ""John Smith"",
    ""Age"": 25,
    ""Location"": ""New York, USA""
}","import json
import pandas as pd

data = {
 ""Name"": ""John Smith"",
 ""Age"": 25,
 ""Location"": ""New York, USA""
}

df = pd.DataFrame.from_dict(json.loads(json.dumps(data)))
print(df)

Output
   Name  Age      Location
0  John   25  New York, USA"
Create a function to find the number of times the given string appears in the array.,"Python, ""Python""","def count_occurrences(items, string):
  count = 0
  for item in items: 
    if item == string:
      count += 1
  return count

print(count_occurrences(['Python', 'Python'], ""Python""))

# Output: 2"
Create a Python program to find the elements that are common in two unsorted lists.,"list1 = [12, 5, 7, 45, 32]
list2 = [7, 2, 45, 11, 32]","def common_in_two_lists(list1, list2):
    common_elements = []
    for number in list1:
        if number in list2:
            common_elements.append(number)
    return common_elements"
Model a logistic regression algorithm using Python to predict a binary target: true or false.,"[[0,0], [0,1], [1,0], [1,1]], [1,1,0,1]","import numpy as np

X = np.array([[0,0], [0,1], [1,0], [1,1]])
y = np.array([1,1,0,1])

from sklearn.linear_model import LogisticRegression

clf = LogisticRegression(random_state=0).fit(X, y)

print(""Prediction:"", clf.predict([[2,2]]))"
Write a Python script that sorts a list of tuples in descending order based on the second element of each tuple.,"[('a', 3), ('b', 1), ('c', 4)]","def sortTupleListInDescendingOrder(tuple_list):
    tuple_list.sort(key=lambda tup: tup[1], reverse=True)
    return tuple_list

sorted_list = sortTupleListInDescendingOrder([('a', 3), ('b', 1), ('c', 4)])

print(sorted_list)"
Create a Python script to remove all elements from a list that are divisible by 3.,"[2, 3, 4, 6, 8, 9]","def remove_divisible_by_3(arr):
    new_arr = []
    for num in arr:
        if num % 3 != 0:
            new_arr.append(num)
    return new_arr

arr = [2, 3, 4, 6, 8, 9]
result = remove_divisible_by_3(arr)
print(result)"
Write a Python program that takes an array containing n elements and generates the power set.,n = 3,"import itertools

def powerset(lst):
    powerset = []
    for n in range(len(lst) + 1):
        for subset in itertools.combinations(lst, n):
            powerset.append(subset)
    return powerset

arr = [1, 2, 3]
print(powerset(arr))"
Create a program in Python to accept user input and sort the user input in ascending order.,"2, 7, 4, 5","user_list = [2, 7, 4, 5]
sorted_list = sorted(user_list)
print(sorted_list)
# Output: [2, 4, 5, 7]"
Generate a Python program that finds the maximum and minimum values of a given list.,"[-1, 6, 4, -2, 3]","def findMaxMin(numbers):
    max_val = max(numbers)
    min_val = min(numbers)
    return max_val, min_val

numbers = [-1, 6, 4, -2, 3]
max_val, min_val = findMaxMin(numbers)

print(""The maximum value is:"", max_val)
print(""The minimum value is:"", min_val)"
Create a Python program to find the sum of all divisors of an input number.,No input.,"def sum_divisors(num): 
    r = 0
    for i in range(1, num + 1):
        if num % i == 0:
            r += i
    return r

num = int(input(""Input a number: ""))
print(""Sum of all divisors of input is"", sum_divisors(num))"
"Create a data structure in Python to store the following data: Student Name, Score in Mathematics, Score in English.","Student1: John, 91, 83
Student2: Mary, 94, 93","students = {
 'John': {'Math': 91, 'English': 83},
 'Mary': {'Math': 94, 'English': 93},
}"
Write a Python program for converting a decimal number into its corresponding binary string.,56,"def decimal_to_binary(n):
 binary_string = """"
 while n > 0:
 binary_string += str(n % 2)
 n //= 2
 return binary_string[::-1]

# Example
result = decimal_to_binary(5)
print(result) 

# Output
101"
Generate a Python program to implement binary search on the given sorted array.,"[2, 3, 5, 6, 8, 9]","def binary_search(arr, target):
    low = 0
    high = len(arr) - 1
    while low <= high:
        mid = (low + high) // 2
        if arr[mid] == target:
            return mid
        elif arr[mid] < target:
            low = mid + 1
        else:
            high = mid - 1
    return -1"
Write a Python program to combine two given strings by alternating its characters,"string1 = ""ab""
string2 = ""xy""","def combine_strings(string1, string2):
    combined_string = """"
    length = max(len(string1), len(string2))
    for i in range(length):
        combined_string += string1[i] if i < len(string1) else """"
        combined_string += string2[i] if i < len(string2) else """"
    return combined_string

result = combine_strings(""ab"", ""xy"")
print(result)"
Optimize the following Python code to compute the sum of even numbers in a list.,"my_list = [1, 2, 3, 4, 5, 6]
total = 0
for num in my_list:
 if num % 2 == 0:
  total += num
print(total)","my_list = [1, 2, 3, 4, 5, 6]

# sum comprehension 
total = sum(num for num in my_list if num % 2 == 0)
print(total)"
Create a python program to find if a number is a prime number,15,"def is_prime(num):
    for i in range(2, num):
        if not num % i:
            return False
    return True

num = 15 
if is_prime(num):
    print(""The number is prime"")
else:
    print(""The number is not prime"")"
"Write a python program to clean up a string by removing punctuation, non-alphanumeric regions  or converting to lowercase.","example_string = ""This i$n't a siMPle StrinG""","import string

example_string = ""This i$n't a siMPle StrinG""
new_string = example_string.translate(str.maketrans('', '', string.punctuation)).replace(' ', '').lower()
print(new_string)

Output:
thisisntasimplestring"
Design a Python function to print out all permutations of a given string.,"""ABC""","def permute(s):
    if len(s) == 1:
        return s

    perms = []
    for i in range(len(s)):
        element = s[i]

        remaining_elements = s[:i] + s[i+1:]
        z = permute(remaining_elements)

        for t in z:
            perms.append(element + t)

    return perms

print(permute(""ABC""))"
How can you write a function in Python to pivot a data frame with 2 columns?,"Data frame:
  A  B
1 a  b
2 c  d","import pandas as pd 
  
def pivot_dataframe(df): 
    df_pivot = df.pivot(index = 'A', columns ='B') 
    return df_pivot

df = pd.DataFrame({'A':{1:'a',2:'c'}, 
                   'B':{1:'b',2:'d'} 
                  }) 

print(pivot_dataframe(df)) 
# Output 
   B  
A     b  d
  a  c"
Develop a program in Python to sort a list of integer numbers.,"[1, 7, 5, 9, 3]","def sort_list(list):
 sorted_list = sorted(list)
 return sorted_list 

list = [1, 7, 5, 9 , 3]
print(sort_list(list)) # will print [1, 3, 5, 7, 9]"
Create a Python program that finds the low and high stock prices from a given array of stock prices.,"Example array: [9, 15, 7, 8, 13, 5]","def min_max_stock_price(arr):
 low = float('inf')
 high = float('-inf')
 
 for price in arr:
 low = min(low, price)
 high = max(high, price)
 
 return [low, high]
 
print(min_max_stock_price([9, 15, 7, 8, 13, 5])) # Output: [5, 15]"
"Create a function in Python that takes a list of strings, converts it to camelCase, and returns a new list with the converted strings.","list = [""this"", ""is"", ""an"", ""example""]","def convertToCamelCase(list):
    camelCaseList = []

    for string in list:
        string = string.capitalize()
        camelCaseList.append(string)

    return ''.join(camelCaseList)"
Write a function in Python to print a random permutation of array elements.,"input_array = [1, 2, 3, 4, 5]","import random
def random_permutation(input_array):
    perm = []
    while(len(input_array) > 0):
        el = random.choice(input_array)
        perm.append(el)
        input_array.remove(el)
    return perm"
Create a Python program that finds the longest common prefix strings among an array of strings.,"[""flower"",""flow"",""flight""]","def lcp(arr):
    if len(arr) == 0:
        return """"
    elif len(arr) == 1:
        return arr[0]
    else:
        prefix = arr[0]
        for i in range(1, len(arr)):
            while arr[i].find(prefix) != 0:
                prefix = prefix[:-1]
        return prefix

result = lcp([""flower"",""flow"",""flight""])
print(result)"
Create a function in Python that takes two strings and combines the characters of each string keeping the order of the characters.,"foo
bar","def combine(s1, s2):
    result = """" 
    for i in range(max(len(s1), len(s2))):
        if i < len(s1):
            result += s1[i]
        if i < len(s2):
            result += s2[i]
    return result"
"Assuming a Python class Point for representing a point in a two dimensional plane with x and y as its field variables, write a method to calculate the distance from a point to the origin.","class Point:
    def __init__(self, x=0, y=0):
        self.x = x
        self.y = y","class Point:
    def __init__(self, x=0, y=0):
        self.x = x
        self.y = y
    
    def distance_from_origin(self):
        return ((self.x ** 2) + (self.y ** 2)) ** 0.5"
Write a Python function to input a list of integers and a number and output the number of times that number appears in the list.,"[1, 2, 3, 4, 5, 2, 6], 2","def count_occurrences(numbers, n):
 count = 0
 for num in numbers:
 if num == n:
 count += 1
 return count"
Implement an algorithm in Python to find the mode of the given array,"arr = [2, 4, 3, 3, 5, 3, 7]","def findMode(arr): 
 max_count = 1 
 mode = arr[0] 
 count = 1 
  
 for i in range(1,len(arr)): 
 if (arr[i] == arr[i - 1]): 
 count = count + 1 # increment count
 if (count > max_count): 
 max_count = count # update max_count 
 mode = arr[i] 
 else: 
 count = 1 # reset count 
  
 return mode 

# Driver program 
arr = [2, 4, 3, 3, 5, 3, 7] 
print(findMode(arr)) # prints 3"
Generate a correct python program to store a dictionary of customer information,"The dictionary should store customer name, phone number and address","customer_dict = {}

def store_customer_info(name, phone_number, address):
    customer_dict[name] = {
        'phone_number': phone_number,
        'address': address
        }

if __name__ == '__main__':
    store_customer_info('John Doe', '1234567890', 'New York')"
Create a Python program to find the longest word in a given sentence.,"""This is a test sentence""","def longestWord(sentence): 
    words = sentence.split(' ')
    longest_word = ''
    for word in words:
        if len(word) > len(longest_word):
            longest_word = word
    return longest_word

sentence = ""This is a test sentence""
print(longestWord(sentence)) // ""sentence"""
Write a script in Python to filter out the strings containing the character 'x'.,"['abc', 'efg', 'X', 'xyz', 'xabc']","def filter_x(list):
    new_list = []

    # iterate through the list 
    for i in list:
        if 'x' not in i:
            # add the string not containing x
            new_list.append(i)
    return new_list

list = ['abc', 'efg', 'X', 'xyz', 'xabc']
filtered_list = filter_x(list)
print(""The list after filtering: "", filtered_list)"
Generate a hashmap in Python to store the given data.,"Name: Alice, Age: 30, Gender: Female
Name: Bob, Age: 20, Gender: Male","dict = {}

dict['Alice'] = {'Age': 30, 'Gender': 'Female'}
dict['Bob'] = {'Age': 20, 'Gender': 'Male'}"
Write a function in Python to remove a specific character from a string.,"string = ""Hello World""
character = 'l'","def remove_character(string, character):
    return string.replace(character, '')

print(remove_character(string, character))"
Generate an api response in Python for the provided data.,"Data = {
""name"" : ""John"",
""age"" : 28
}","response = {
  ""status"": 200,
  ""data"": {""name"": ""John"",""age"":28},
  ""message"": ""Success""
}"
You need to write a Python program to convert a decimal number into its binary equivalent.,num = 8,"def get_binary(num):
    return bin(num)[2:]

res = get_binary(num)
print(res)"
"Given a list of words and a target word, write a Python function to check if the target word exists in the list.","Let's say the list is ['apple', 'banana', 'car', 'dog'] and the target word is 'banana'.","def isElementPresent(list, target): 
  for word in list: 
    if word == target: 
      return True
  return False

wordlist = ['apple', 'banana', 'car', 'dog'] 
target = 'banana'
print(isElementPresent(wordlist, target)) 
# prints True"
Create a Python program that reads in an unsorted array of integers and prints the array in sorted order.,"[3, 2, 5, 1, 7, 4]","def sort_array(arr):
   arr.sort()
   return arr

arr = [3, 2, 5, 1, 7, 4]

sorted_arr = sort_array(arr)
print(sorted_arr) # [1, 2, 3, 4, 5, 7]"
"Given a 2D array of integers, write a Python function to rotate the array clockwise by 90 degrees.","[[1, 2, 3],
[4, 5, 6],
[7, 8, 9]]","def rotate_array(arr):
    newarr = []
    for i in range(len(arr[0])):
        newarr_row = []
        for j in range(len(arr)):
            newarr_row.append(arr[len(arr)-j-1][i])
        newarr.append(newarr_row)

    return newarr"
Create a slugify function in Python that converts a sentence into a valid URL slug.,This Is a Test,"def slugify(string):
    slug = string.lower().strip().replace(' ', '-')
    return slug

slug = slugify(""This Is a Test"")
print(slug)"
Generate a program in Python to solve a given linear equation,3x + 5 = 10,"def solve_linear_eq(eq):
    x, b = eq.split(' ')
    a, op, constant_term = x.split('x')

    a = int(a)
    b = int(b)
    constant_term = int(constant_term)
    
    if op == '+':
        x = (constant_term - b) / a
    elif op == '-':
        x = (b - constant_term) / a
    
    return x

solution = solve_linear_eq('3x + 5 = 10')
print(""x = "" + str(solution))"
Develop a program to track the stock price using the Yahoo Finance API in Python,Yahoo API token: abc123,"import yfinance as yf

# Get the data of the stocks for the given ticker
ticker = ""AAPL""
data = yf.Ticker(ticker)

# The Yahoo API token
token = ""abc123""

# Get historical data for the ticker
data.history(period=""1mo"", token=token)

# Print the price
print(data.history(token=token)[""Close""].iloc[-1})"
Optimize a given Python function to run faster.,"def long_function(lst):
    counter = 0
    for i in lst:
        inner_counter = 0
        while inner_counter < i:
            counter += 1
            inner_counter += 1
    return counter","def long_function(lst):
    counter = 0
    for i in lst:
        counter += i
    return counter"
Generate a python script to calculate the total public holiday hours for a given state.,"state = ""Illinois""","state = ""Illinois""

def calculate_public_holiday_hours(state):
    # code to calculate public holiday hours for a given state
    if state == ""Illinois"":
        return 8
    # code for other states

hours = calculate_public_holiday_hours(state)
print(""Public holiday hours:"", hours)"
Design a program in Python to print out the prime numbers from 2 to a given upper limit.,upper_limit = 20,"def is_prime(upper_limit):
    for num in range(2, upper_limit+1):
        if num > 1:
            for i in range(2, num):
                if (num % i) == 0:
                    break
            else:
                print(num, end="" "")

upper_limit = 20
is_prime(upper_limit)"
Generate a Python program to convert a list of lists into one flat list.,"[[1, 2], [3, 4], [5, 6]]","def flattenList(inputList): 
    outputList = [] 
    for subList in inputList: 
        for item in subList: 
            outputList.append(item) 
    return outputList"
Generate a Python program that finds the maximum of an array of numbers.,"Find the maximum number from this array: [2, 4, 6, 1, 7, 12]","def find_max(arr): 
    # Initialize max 
    max = arr[0] 
  
    # Traverse from arr[1] to end 
    for i in range(1, len(arr)): 
  
        # Compare every element with current max 
        if arr[i] > max: 
            max = arr[i] 
              
    return max

arr = [2, 4, 6, 1, 7, 12] 

result = find_max(arr)
print(result)"
Write a python statement to extract the first element from a 3-item tuple.,"Tuple: (3, 4, 5)","first_element = (3, 4, 5)[0]"
Write a Python program to remove all occurrences of a specific number in a given list.,"list = [2, 3, 4, 2, 5, 2, 6, 2, 7]","def remove_num(myList, num):
    return [x for x in myList if x != num]
  
removed_list = remove_num(list, 2)
print(removed_list)"
Optimize the following Python code for adding two numbers,"a = 3
b = 4
c = a + b","def addTwoNum(a, b):
 return a + b

c = addTwoNum(3, 4)"
Generate a function in Python to take a list of numbers as input and count the number of elements that are greater than a given number.,"list = [1, 5, 8, 10, 4], threshold = 7","def count_greater_than_threshold(list, threshold):
    count = 0
    for num in list:
        if num > threshold:
            count += 1
    return count
print(count_greater_than_threshold(list, threshold)) # Prints 2"
Write a script in Python using the Requests library to scrape all the websites from a list.,"Site URLs = [""http://www.example1.com"" , ""http://www.example2.com""]","import requests

site_urls = [""http://www.example1.com"" , ""http://www.example2.com""]

for url in site_urls:
 response = requests.get(url)
 page_source = response.content
 print(page_source)"
Create a Python program to compare two given strings and returns the number of mismatched letters.,"string1 = ""abcdefg""
string2 = ""accfghe""","def compare_strings(string1, string2):
    mismatched = 0
    for i in range(min(len(string1), len(string2))):
        if string1[i] != string2[i]:
            mismatched += 1
    return mismatched

string1 = ""abcdefg""
string2 = ""accfghe"" 
compared = compare_strings(string1, string2)
print(""Number of mismatched letters:"", compared)"
Create a Python program to generate a random password of length n.,10,"import random

def generate_password(length):
  characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%^&*(){}[]?/'
  password = ''
  for c in range(length):
    password += random.choice(characters)
  return password

length = 10
password = generate_password(length)
print(password)"
Create a Python script that generates a random password of length n with a minimum required characters.,n = 8,"import string
import random

def generate_password(length):
    password_characters = string.ascii_letters + string.digits + string.punctuation
    return ''.join(random.choice(password_characters) for i in range(length))

print(generate_password(8))"
Write a python program to calculate the sum of the squares of the odd numbers between the given two numbers.,"n1 = 10
n2 = 20","def sum_square_odd(n1, n2):
    sum = 0
    for i in range(n1, n2+1):
        if i % 2 != 0:
            sum += i*i
    return sum

sum = sum_square_odd(n1, n2)
print(sum)"
Generate a Python program that takes a number as input and prints all of the powers of two up to that number.,number = 10,"def pow_2(number):
 for i in range(number + 1):
  print(2 ** i)
  
pow_2(10)"
Generate a sentence in Python that uses a for loop to iterate over a list of strings.,"strings = ['apple', 'banana', 'cherry']","for s in strings:
    print(f'I like to eat {s}!')"
Design an algorithm in Python which takes a given 2D array and finds the product of the elements in each row.,"[[1, 2], [3, 4]]","def rowProduct(arr):
    result = []
    for row in arr:
        product = 1
        for num in row:
            product = product * num
        result.append(product)

    return result

arr = [[1, 2], [3, 4]]

result = rowProduct(arr)
print(result)"
Develop a Python program that encrypts a given string using 'Caeser Cipher',string = 'Hello World',"def caesarCipherEncryptor(string, key):
  newLetters = []
  newKey = key % 26
  for letter in string:
   newLetters.append(getNewLetter(letter, newKey))
  return ''.join(newLetters)
 
def getNewLetter(letter, key):
   newLetterCode = ord(letter) + key
   return chr(newLetterCode) if newLetterCode <= 122 else chr(96 + newLetterCode % 122)"
Create a Python function to calculate the sum of all numbers in a nested list.,"nested_list = [[1,2], [3,4], [6,7]]","def calculate_sum(nested_list):
    sum = 0
    for item in nested_list:
        for num in item:
            sum += num
    return sum

nested_list = [[1,2], [3,4], [6,7]]
print(calculate_sum(nested_list))"
Write a Python program to sort the input list according to its length.,"list = [""Hello"", ""World"", ""This is a test""]","list = [""Hello"", ""World"", ""This is a test""]

def sort_list_length(list):
    '''
    Function to sort the list according to its length
    '''
    return sorted(list, key=len)

if __name__ == ""__main__"":
    list = [""Hello"", ""World"", ""This is a test""]
    sorted_list = sort_list_length(list)
    print(sorted_list)"
"Using the Pandas library, create a Python script to calculate statistics for a given dataset.","The dataset (csv file):
name,age
John,30
Sam,20
Steven,40","import pandas as pd

data = pd.read_csv('input.csv')
print(data.describe())"
Create a Python program that sorts a list of integers.,"my_list = [9, 3, 6, 7, 1]","def sort_list(list):
    for i in range(len(list)):
        for j in range(i+1, len(list)):
            if list[i] > list[j]:
                list[i], list[j] = list[j], list[i]
    return list

my_list = [9, 3, 6, 7, 1]
my_list = sort_list(my_list)
print(my_list)"
Generate a Python code to search for an element in an array,"[2, 3, 4, 5, 7, 8, 9], N = 7","def linear_search(arr, N):
  for i in range(len(arr)):
    if arr[i] == N:
      return i+1
  return -1"
Calculate the area of a rectangle in Python.,"length = 5
width = 10","area = length * width
print(area)"
Generate a python code to calculate the factorial for a given number.,num = 5,"def factorial(number):
    if number == 0:
        return 1
    else:
        return number * factorial(number -1)

factorial(num)"
Identify all bugs in the following Python code and suggest fixes.,"a = input('Enter a number: ')
b = input('Enter a number: ')
if a > b
 print('a is greater than b')","a = int(input('Enter a number: '))
b = int(input('Enter a number: '))
if a > b:
 print('a is greater than b')"
Develop a program to normalize a list of numbers in Python.,"[1.2,-2.3, 3.4, -4.5, 5.6]","def normalize_list(lst):
    '''Normalizes a list of numbers'''
    max_val = max(lst)
    min_val = min(lst)

    normalized_lst = []
    for num in lst:
        normalized_val = (num - min_val)/(max_val - min_val)
        normalized_lst.append(normalized_val)

    return normalized_lst"
Write a Python program to determine if one number is a multiple of another.,"num1: 32
num2: 8","def is_multiple(num1, num2):
   if (num1 % num2 == 0):
       print(f'{num1} is a multiple of {num2}')
   else:
       print(f'{num1} is not a multiple of {num2}')

is_multiple(32, 8)

Output:
32 is a multiple of 8"
Write a Python program to filter a list and sort it in descending order by length.,"a = [""apple"", ""ball"", ""cat"", ""dog"", ""elephant"", ""frog"", ""giraffe""]","a.sort(key=len, reverse=True)
# Output: ['elephant', 'giraffe', 'ball', 'apple', 'dog', 'cat', 'frog']"
Create a Python program to reverse a string in place.,"""Hello World!""","def reverse_string_in_space(s): 
    temp_list = list(s) 
    start = 0
    end = len(temp_list) - 1
  
    while start < end: 
        temp_list[start], temp_list[end] = temp_list[end], temp_list[start] 
        start += 1
        end -= 1
  
    s = """".join(temp_list) 
      
    return s
  
s = ""Hello World!""
print(reverse_string_in_space(s))"
Develop a Python script to print out the prime numbers up to a given limit.,An integer limit of 100.,"def is_prime(n):
 if n == 1:
 return False
 for i in range(2, n):
 if n % i == 0:
 return False
 return True

# Print out prime numbers from 1 to 100
limit = 100

for i in range(1, limit+1):
 if is_prime(i):
 print(i)"
Create a Python program to calculate the Mean Squared Error (MSE) of a given dataset.,"x = [1,2,3,4,5]
y = [0,2,3,3,5]","mse = (sum([(x[i]-y[i])**2 for i in range(len(x))]))/len(x)
print(mse)"
Create a Python function to print all elements in a nested list.,"nested_list = [1, [2, 3], 4, [[5, 6], 7], 8, [9]]","def print_elements(nested_list):
    
    for item in nested_list:
        if type(item) == list:
            print_elements(item)
        else:
            print(item)

print_elements(nested_list)"
Create a function in Python to calculate the total cost after applying a discount. The function should accept the original cost and the discount percentage as arguments.,"original cost = 100
discount percentage = 25","def calculate_discounted_cost(cost, discount_percentage):
 discounted_cost = cost - (cost * (discount_percentage/100))
 return discounted_cost

discounted_cost = calculate_discounted_cost(100, 25)
print ('The discounted cost is: ', discounted_cost)"
Write a script in Python that takes a URL and a list of words as input and then searches the page content for any of the given words.,"URL: https://www.example.com
Word List: [cat, dog, bird]","import requests

url = 'https://www.example.com'
word_list = ['cat', 'dog', 'bird']

r = requests.get(url).text
for word in word_list:
 if word in r:
  print('Word ""{}"" found on the given URL'.format(word))
else:
  print('Word ""{}"" not found the given URL'.format(word))"
Create a python program to randomly select a survivor from a given list of names,"names = [""Alex"", ""Bob"", ""Charlotte"", ""John"", ""Mike""]","import random

names = [""Alex"", ""Bob"", ""Charlotte"", ""John"", ""Mike""]

def randomly_select_survivor(names):
    survivor = random.choice(names)
    print(f""The randomly selected survivor is: {survivor}"")

randomly_select_survivor(names)"
Design a Python program that prints out the reverse of a given string.,"String = ""Hello World""","def reverse_string(String):
    rev_str = """" 
    for i in String: 
        rev_str = i + rev_str
    return rev_str

print(reverse_string(""Hello World""))"
Develop a unit test in Python to verify correctness of an algorithm.,"def algorithm(arr):
	sum = 0
	for i in range(len(arr)):
		sum += arr[i]
	return sum","import unittest

class TestAlgorithm(unittest.TestCase):
    
    def test_algorithm(self):
        10 = algorithm([1, 2, 3, 4])
        self.assertEqual(10, 10)
        
        40 = algorithm([10, 10, 10, 10])
        self.assertEqual(40, 40)

if __name__ == '__main__':
    unittest.main()"
"In Python, generate a script to find the length of a given list.","Input List: [1, 3, 5, 7, 9]","def lengthList(arr):
    length = 0
    for i in arr:
        length += 1
    return length
 
print(lengthList([1, 3, 5, 7, 9])) # Outputs: 5"
"Create a program in any language that outputs all the prime numbers between 1 and a given number (say, n).",90,"# Python code

n = 90

for num in range(2, n+1):
   if num > 1:
       for i in range(2, num):
           if (num % i) == 0:
               break
       else:
           print(num)"
Create a Python program to rotate a 2-dimensional array clockwise.,"[[1, 2],
 [3, 4]]","def rotate_sqr_matrix_clockwise(matrix):
    N = len(matrix)
    res = [[0] * N for i in range(N)]
    for i in range(N):
        for j in range(N): 
            res[i][j] = matrix[N - 1 - j][i] 
    return res"
Create a class in python that finds the sum of two numbers.,No input,"class Sum:
    def __init__(self, x, y):
        self.x = x
        self.y = y
    
    def find_sum(self):
        return self.x + self.y
        
if __name__ == '__main__':
    s = Sum(10, 5)
    print(s.find_sum())"
Write a Python utility to calculate the Fibonacci series up to a specified number.,Length of the Fibonacci series : 5,"def fibonacci(length):
 # Initialize the first two numbers 
 a, b = 0, 1 

 # We generate the Fibonacci series 
 # up to a given length 
 res = [] 
 while (len(res) < length): 
 res.append(b)
 
 # Calculate the next Fibonacci number 
 a, b = b, a + b 

 # Return the generated Fibonacci series 
 return res

print(fibonacci(5))
# Output -> [1, 1, 2, 3, 5]"
Write a Python program that takes in a string of numbers delimited by spaces and returns the largest number.,64 8 224 54 21,"def findMax(string):
  numbers = string.split("" "")
  largest = 0
  
  for number in numbers:
    if number > largest:
      largest = number
      
  return largest
  
string = ""64 8 224 54 21""
print(f""The largest number is {findMax(string)}."")"
Create a new program in Python that creates a list of prime numbers ranging from 2 to n.,15,"""""""
Create a list of prime numbers ranging from 2 to n.
""""""

def prime_list(n):
    prime_list = []
    for num in range(2, n + 1):
        for prime in prime_list:
            if num % prime == 0: 
                break
        else: 
            prime_list.append(num)
    return prime_list

if __name__ == '__main__':
    n = 15
    print(prime_list(n))"
Produce a program using Python that visualizes the given function.,"f(x, y) = x + y","import matplotlib.pyplot as plt 
import numpy as np 

x = np.arange(-4.0, 4.0, 0.1) 
y = np.arange(-4.0, 4.0, 0.1) 
X, Y = np.meshgrid(x, y) 

def f(x, y): 
    return x + y 

Z = f(X, Y)

fig = plt.figure()
plt.contourf(X, Y, Z) 
plt.xlabel('x')
plt.ylabel('y')
plt.title('f(x,y) = x + y') 
plt.show()"
Write a script in Python to input a list of strings and convert it into a single string.,"[‘hello’, ‘world’]","# Convert list of strings into a single string
def list_to_string(lst):
    return ' '.join(lst)"
Optimize the following Python code by replacing the for-loop with a list comprehension,"def hipsterify(sentence):
  hipster_sentence = []

  for i in range(len(sentence)):
    hipster_sentence.append(""hipster "" + sentence[i])

  return ' '.join(hipster_sentence)","def hipsterify(sentence):
  return ' '.join([""hipster "" + word for word in sentence])"
Design a Python program to perform linear regression for predicting the numbers in a given dataset.,"X = [1,2,3,4,5]
Y = [3,5,7,9,13]","import numpy as np
from sklearn.linear_model import LinearRegression

X = np.array([1,2,3,4,5]).reshape(-1,1)
Y = np.array([3,5,7,9,13])

model = LinearRegression()
model.fit(X, Y)

# Predicts the value of y
print(model.predict([[7]]))"
Generate a Python code to calculate the value of the nth Fibonacci number.,6,"def fib(n):
    if n == 0:
        return 0
    elif n == 1:
        return 1
    else:
        return fib(n-1) + fib(n-2)

print(""The requested Fibonacci number is: "" + str(fib(6)))"
Create a function in Python which takes a parameter and finds the maximum value in the parameter.,"parameter = [100, 10, 75, 23, 96]","def max_value(parameter):
    max_val = parameter[0]
    for num in parameter:
        if num > max_val:
            max_val = num
    return max_val

max_num = max_value(parameter)
print(max_num)"
"With the input, create a Python program which takes in a sentence and returns the word which appears most frequent.","I am a programmer, so I program every day","def most_frequent_word(sentence):
    """"""Return the word which appears most frequent in a sentence.""""""
    words = {}
    for word in sentence.split():
        if word in words:
            words[word] += 1
        else:
            words[word] = 1
    return max(words, key=words.get)"
Generate an algorithm in Python that takes a decimal number x and converts it to binary.,178,"# Input decimal number
decimal_number = 178

# Output binary number
binary_number = """"

# Main algorithm to convert from decimal to binary
while decimal_number > 0:
    remainder = decimal_number % 2
    binary_number = str(remainder) + binary_number
    decimal_number = decimal_number // 2

print(binary_number)"
Implement the following pseudocode in Python,"A = [x, y, z]
 B = [a, b, c]
 Output: [x, a, y, b, z, c]","A = [x, y, z]
B = [a, b, c]

C = []
for x,y in zip(A,B):
    C.append(x)
    C.append(y)

print(C) #[x, a, y, b, z, c]"
Write a Python program to create a list of dictionaries from a given list of dictionary keys and a list of dictionary values.,"keys: [1, 2, 3]
values: [""a"", ""b"", ""c""]","keys = [1,2,3] 
values = [""a"",""b"",""c""]
list_of_dict = [dict(zip(keys, values)) for i in range(len(keys))] 
print(list_of_dict) # Output: [{1: 'a', 2: 'b', 3: 'c'}]"
Can you create a Python program to get the largest element from a list?,"myList = [13, 7, 5, 21, 101]","def largestElement(myList): 
    return max(myList)"
Create a Python program to join two strings together.,"string1 = ""Hello,""
string2 = ""World!""","def join_strings(string1, string2):
    return string1 + string2"
Create a Python program to split a given string into two parts according to a given character.,"Str = ""apple-banana-orange""
Char = ""-""","def split_string(s, char):
    new_list = s.split(char)
    return new_list

result = split_string(""apple-banana-orange"", ""-"")
print(result)"
Create a function ``squareSum`` in python which will take a list of numbers as arguments and calculate their sum of squares.,"numbers=[1, 2, 3, 4, 5]","def squareSum(numbers):
    sum_of_squares = 0
    for num in numbers:
        sum_of_squares += num**2
    return sum_of_squares"
Write a code in Python to parse a JSON string.,"{
    ""name"": ""James"",
    ""age"": 27
}","import json

json_string = '{""name"": ""James"",""age"": 27}'
data = json.loads(json_string)
print(data[""name""], data[""age""])"
Generate a Python code which calls a function to print the following array?,"[1,3,7,9,10]","arr = [1,3,7,9,10]

def print_array(arr):
    '''This function prints the elements of an array'''
    for ele in arr:
        print(ele)

print_array(arr)"
Write a Python program to generate a multiplication table of given number.,number = 8,"for i in range(1, 11):
    print(number,""X"",i,""="",number*i)"
Generate a Python program to search an element in an array.,"[2, 4, 6, 8], 8","def searchElement(arr, x): 
    for i in range(len(arr)): 
        if arr[i] == x: 
            return i
    return -1
    
arr = [2, 4, 6, 8]
x = 8

result = searchElement(arr, x) 

if(result == -1): 
  print(""Element is not present in array"") 
else: 
  print(""Element is present at index"", result)"
Generate a Python function that takes a list and a number as input and assigns the number to each item in the list.,"[2, 3, 4, 5], 7","def assign_value(lst, num):
    for i in range(len(lst)):
        lst[i] = num
    return lst

print(assign_value([2, 3, 4, 5], 7)) # Output: [7, 7, 7, 7]"
"Design a program in Python and select features from list A and list B, given the following constraints:","List A: [a, b, c, d]
List B: [1, 2, 3, 4]
Constraints: 
Select 2 features from list A, and 
select 1 feature from list B","features = [a, c, 2] # Selecting a, c from list A and 2 from list B."
Design a Python program to sort the given list using insertion sort.,"[3,8,15,2,6,10]","def insertionSort(arr): 
    for i in range(1, len(arr)): 
  
        j = i-1
        key = arr[i] 
  
        while j >=0 and key < arr[j] : 
                arr[j+1] = arr[j] 
                j -= 1
        arr[j+1] = key 
  
arr = [3,8,15,2,6,10]
insertionSort(arr) 
print (""Sorted array is:"") 
for i in range(len(arr)): 
    print (""%d"" %arr[i])"
Create a program using Python to generate a histogram given a list of numbers.,"numbers = [2, 5, 2, 8, 3, 9, 4, 10]","# importing matplotlib module
import matplotlib.pyplot as plt

# list of numbers 
numbers = [2, 5, 2, 8, 3, 9, 4, 10]

# draw histogram 
plt.hist(numbers, bins = [0, 2, 4, 6, 8, 10])

# x label, y label and title
plt.xlabel('Numbers');
plt.ylabel('Frequency');
plt.title('Histogram for Numbers')

# display histogram 
plt.show()"
Create a function in Python that can tell if a string is a palindrome or not.,civic,"def is_palindrome(word):
    reversed_word = word[::-1]

    if word == reversed_word:
        return True
    else:
        return False
        
result = is_palindrome('civic')
print(result)"
Write a Python function to remove all consecutive duplicates of a given number.,"[1,1,2,3,3,3,4,4,4,4]","def remove_duplicates(lst):
  result = []
  curr = lst[0]

  for num in lst:
    if num != curr:
      result.append(num)
      curr = num
  return result"
Develop a function in Python for performing sentiment analysis of a given text.,A given text.,"Develop a function in Python to analyze the sentiment in a given text. Utilize natural language processing (NLP) techniques such as tokenization and parts of speech tagging, then leverage a pre-trained sentiment classifier to determine the sentiment in the given text."
"Optimize the existing Python code, so that the application runs faster (on average).","def factorial(n):
 if n == 0:
 return 1
 else:
 return n*factorial(n-1)

print(factorial(3))","def factorial(n):
 result = 1
 for i in range(1, n+1):
 result *= i
 return result
 
print(factorial(3))"
Create a Python program that takes a number and prints the product of that number and its next two values.,num = 5,"def product(num):
	return num * (num + 1) * (num + 2)

print(product(num))"
"Edit the following code snippet to print out ""Hello World"" instead of ""Hello Python""","print(""Hello Python"")","print(""Hello World"")"
Write a Python program to implement a sorting algorithm (your choice).,"num_list = [5,2,1,9,7,8]","def sorting_algorithm(num_list):
    for i in range(len(num_list)):
        for j in range(i + 1, len(num_list)):
            if num_list[i] > num_list[j]:
                num_list[i], num_list[j] = num_list[j], num_list[i]
    return num_list"
Create a Python program to find the total number of elements in a stack.,"Stack: [1, 2, 3, 4, 5]","def findNumOfElements(stack): 
    return len(stack)"
Edit the existing Python program to append a new record with data programmatically.,"people = [
 {""name"": ""Alice"", ""age"": 8},
 {""name"": ""Bob"", ""age"": 11},
 {""name"": ""Charlie"", ""age"": 13},
]","people = [
 {""name"": ""Alice"", ""age"": 8},
 {""name"": ""Bob"", ""age"": 11},
 {""name"": ""Charlie"", ""age"": 13},
 {""name"": ""John"", ""age"": 15},
]

# Append a new record with data programmatically:
record = {""name"": ""John"", ""age"": 15}
people.append(record)"
Use Python to create a dictionary whose keys are strings and whose values are lists containing numbers.,"keys = [""cat"", ""dog"", ""mouse""]
values = [1, 2, 3]","my_dict = {""cat"": [1], ""dog"": [2], ""mouse"": [3]}"
Implement a Python function that takes a list of numbers as an input and counts the number of odd numbers in the list.,"[2, 3, 5, 7]","def countOddNumbers(arr):
    count = 0
    for num in arr:
        if num % 2 != 0:
            count += 1
    return count

count = countOddNumbers([2, 3, 5, 7])
print(""Number of odd numbers found: "" + str(count))"
Write a Python program to parse a set of given comma-separated numbers in a string.,"string = ""1,2,3,4,5,6""","# Parsing the string
numbers = [int(num) for num in string.split(',')]

print(numbers)"
Generate a code for a Python program that removes all instances of a given character from a string.,"'Hello World!', 'o'","def remove_letter(word, letter):
    new_word = ''
    for char in word:
        if char != letter:
            new_word += char
    return new_word 

print(remove_letter('Hello World!', 'o'))"
Create a Python program to calculate the formula 2*sqrt(x+2).,x = 10,"import math

x = 10

result = 2*math.sqrt(x+2)

print(result ) # 12.0"
Create a Python script that will create a dictionary that contains the character count of the given string.,"""Python""","from collections import Counter 
  
str = ""Python""

# character count 
# using collections.Counter() 
res = Counter(str) 

# printing result  
print(""Count of all characters in GeeksforGeeks is :\n ""
                                        +  str(res))"
Can you generate code to clear all whitespace from a given string in Python?,"Input String = "" Hello World    ""","def clear_whitespace(s):
        s = s.strip() # Remove leading and trailing whitespaces
        s = """".join(s.split()) # Remove middle whitespaces
        return s

print(clear_whitespace("" Hello World    ""))"
Propose a Python program to tokenize the given sentences.,The quick brown fox jumps over the lazy dog,"import nltk

def tokenize_sentences(sentence):
    tokens = nltk.word_tokenize(sentence)
    return tokens"
"Using Python, create a program that calculates the average grade of 4 students.","John: 85
George: 90
Sarah: 75
Emily: 95","john_grade = 85
george_grade = 90
sarah_grade = 75
emily_grade = 95

def average_grade(john_grade, george_grade, sarah_grade, emily_grade):
    return (john_grade + george_grade + sarah_grade + emily_grade) / 4

avg_grade = average_grade(john_grade, george_grade, sarah_grade, emily_grade)
print('The average grade of 4 students is', avg_grade)"
Write a script in Python which takes a two-dimensional array as input and finds the smallest number in the array.,"array = [[2,3,4], [5,6,7], [-1,2,0]]","def find_smallest(array):
    smallest_item = array[0][0]
    for row in array:
        for item in row:
            if item < smallest_item:
                smallest_item = item
    return smallest_item"
Create a Python program to randomly filter out half of the elements of an array.,"[9, 2, 7, 4, 5, 6, 8, 1, 4, 0]","import random

def filter_half_array(arr):
    while len(arr)>0:
        el = random.choice(arr) # randomly select an element of the list
        arr.remove(el) # remove the selected item from the list
    return arr

arr = [9, 2, 7, 4, 5, 6, 8, 1, 4, 0]
filter_half_array(arr)"
Design a function in Python which takes a string and returns the string with the last word capitalized.,"mystring = ""This is a simple string""","def capitalize_last_word(mystring):
    words = mystring.split()
    words[-1] = words[-1].capitalize()
    return ' '.join(words)

result = capitalize_last_word(mystring)
print(result)"
Develop an algorithm in Python that takes an array of integers and returns the maximum of the numbers.,"[7, 9, 5, 10, 2]","def get_max(arr):
    max_num = None

    for num in arr:
        if max_num == None or num > max_num:
            max_num = num 

    return max_num

result = get_max([7, 9, 5, 10, 2])
print(result)"
Create a Python program that takes in a string and counts the number of vowels in it.,"""Hello""","def count_vowels(s):
    count = 0
    for char in s:
        if char in ""aeiouAEIOU"":
            count += 1
    return count

s = ""Hello""
result = count_vowels(s)
print(result)"
How can you design a Python program to find the sum of all prime numbers between 1 and a given limit?,Limit = 10,"def sum_primes(limit):
    sum = 0
    for i in range(2, limit+1):
        if is_prime(i):
            sum += i

    return sum

def is_prime(n):
    for i in range(2, int(n ** 0.5) + 1):
        if n % i == 0:
            return False
    return True"
Use Python to generate a program that takes a list of integers as input and prints out their factors.,"[24, 75]","def print_factors(numbers):
    
    for n in numbers:
        print(""Factors of {}:"".format(n)) 
        for i in range(1, n + 1):
            if n % i == 0:
                print(i)

print_factors([24, 75])"
Design a Python program that computes the maximum and minimum of a given list.,"[5, 3, 4, 10, 7]","def find_max_min(list_vals): 
    max_val = max(list_vals) 
    min_val = min(list_vals) 
  
    return max_val, min_val 

list_vals = [5, 3, 4, 10, 7] 
print(""Maximum value :"", find_max_min(list_vals)[0]) 
print(""Minimum value :"", find_max_min(list_vals)[1])"
Generate a Dataframe in Python,"The table should have three columns - name, age, gender
Example data: 
John, 24, Male
Sarah, 32, Female","import pandas as pd

data = [('John', 24, 'Male'), 
        ('Sarah', 32, 'Female')] 
  
# Create the pandas DataFrame 
df = pd.DataFrame(data, columns = ['Name', 'Age', 'Gender']) 
  
print(df)"
Write a python program to extract the non-vowel words in a sentence.,This machine learning project is challenging.,"def extract_words(sentence):
    non_vowel_words = []
    words = sentence.split()
    vowels = ['a','e','i','o','u','A','E','I','O','U']
    for word in words:
        if not any(char in vowels for char in word):
            non_vowel_words.append(word) 
    return non_vowel_words"
Write a Python program to remove items from a list present in other list.,"list1 = [1, 2, 3, 4, 5]
list2 = [3, 4, 5, 6]",result_list = [item for item in list1 if item not in list2]
Create a Python program to take a list of names and sort them alphabetically.,"['Adam', 'David', 'Mark', 'John', 'Sam']","def sort_names_alphabetically(names):
    names.sort()
    print(names)

names = ['Adam', 'David', 'Mark', 'John', 'Sam']
sort_names_alphabetically(names)

# Output: 
# ['Adam', 'David', 'John', 'Mark', 'Sam']"
Create an algorithm in Python which takes a list of numbers and sorts them in ascending order.,"numbers = [4, 1, 8, 5, 6]","def sortAscending(numbers):
    for i in range(len(numbers)):
        for j in range(i+1,len(numbers)):
            if numbers[i] > numbers[j] :
                temp = numbers[i]
                numbers[i] = numbers[j]
                numbers[j] = temp
    return numbers

print(sortAscending([4, 1, 8, 5, 6]))

# Output:
# [1, 4, 5, 6, 8]"
Create a Python script to calculate the Fibonacci sequence for a given integer n.,7,"# Fibonacci sequence
def Fibonacci(n):
 a = 0
 b = 1
 if n < 0:
 print(""Incorrect input"")
 elif n == 0:
 return a
 elif n == 1:
 return b
 else:
 for i in range(2,n):
 c = a + b
 a = b
 b = c
 return b

# Driver Program
print(Fibonacci(7)) 
# Output: 13"
"Given a list of squares in a 2D array, generate a Python program to find the number of squares with a side greater than 5.","[[2, 6, 1], [4, 3, 9], [4, 6, 7]]","count = 0
for row in arr:
    for col in row:
        if col > 5:
            count += 1
print(count)"
Compose a Python program for finding the maximum number from a given list of numbers.,"list = [10, 11, 25, 80, 50]","def max_number(list):
    max_num = 0
    for i in list:
        if i > max_num:
            max_num = i
    return max_num

max_num = max_number(list)
print(""The maximum number is:"", max_num)"
Develop a Python program to insert a given element into a specific position in a list,"2, [1, 3, 4]","# Create a function
def insert_element(el, lst):
    # Insert the element into the specific position
    lst.insert(2, el)
    return lst

# Test the function
print(insert_element(2, [1,3,4]))

# Output
[1, 3, 2, 4]"
Create a class in Python to generate a calendar.,"calendarName = ""My Calendar""","class CalendarGenerator(object):

    def __init__(self, name):
        self.name = name

    def generate_calendar(self):
        calendar = []

        # Code to generate a calendar goes here

        return calendar

calendar = CalendarGenerator(calendarName)
calendar.generate_calendar()"
Generate a function in Python to find the maximum element from a given array.,"[10, 15, 20, 11, 99]","def findMaxElement(array):
    maxElement = 0
    for element in array:
        if element > maxElement:
            maxElement = element
    return maxElement

array = [10, 15, 20, 11, 99] 
maxElement = findMaxElement(array)
print(""The maximum element in the array is"", maxElement)"
Write a python program to fill missing values in a given dataset.,Dataset with missing values,"def fill_missing_values(data):
    for column in data.columns:
        if data[column].isnull().any():
            mean = data[column].mean()
            data[column] = data[column].fillna(mean)
    return data"
Take the following Python data structure and render it to JSON format.,"data = {
 'name': 'John',
 'age': 34,
 'hobbies': ['surfing', 'hiking', 'golf']
}","import json

data = {
 'name': 'John',
 'age': 34,
 'hobbies': ['surfing', 'hiking', 'golf']
}

json_data = json.dumps(data)

print(json_data)"
"Write a function in Python which takes two parameters, a string and a single character, and returns a count of occurrence of the single character in the string.","String = ""The quick brown fox""
Character = ""q""","def countOccurrence(string, char):
    count = 0
    for c in string:
        if c == char:
            count += 1
    return count

String = ""The quick brown fox""
Character = ""q""
count = countOccurrence(String, Character)
print(count)"
Implement an algorithm in Python that takes an array of numbers and returns the maximum value in the array.,"[2, 5, 8, 10, 4]","def find_max(arr):
    max_val = arr[0]
    
    for num in arr:
        if num > max_val:
            max_val = num
    return max_val

result = find_max([2, 5, 8, 10, 4])
print(result)"
Write a Python program to print out the even numbers in the given list.,"list = [1, 4, 5, 6, 7, 8]","#Print out even numbers from the given list
for num in list:
    if (num % 2 == 0):
        print(num)"
Create a Python function that prints a string in reverse order.,"""GPT-3""","def reverse_string(string): 
  return string[::-1] 
  
print(reverse_string(""GPT-3""))"
Create an algorithm in Python to determine all pairs of negative numbers in an array.,"[-2, -1, 0, 1, 2]","def findNegativePairs(arr):
  results = []
  for i in range(0, len(arr)):
    for j in range(i + 1, len(arr)):
      if arr[i] < 0 and arr[j] < 0:
        results.append((arr[i], arr[j]))
  return results 

print(findNegativePairs([-2, -1, 0, 1, 2]))"
Identify errors and write fix for the following python code,"def uppercase_letter_count(string):
    count = 0
    for c in string
        if c.isupper():
            count += 1
    return count","def uppercase_letter_count(string):
    count = 0
    for c in string: # Added missing colon
        if c.isupper():
            count += 1
    return count # Removed an unnecessary '-'"
Write an algorithm in Python that uses an iterative approach to count all elements greater than a given value in an array.,"array: [7, 8, 4, 2, 9], target: 5","def countGreaterThan(arr, target):
    count = 0
    for element in arr:
        if element > target:
            count += 1
    return count

# Example
arr = [7, 8, 4, 2, 9]
target = 5
print(countGreaterThan(arr, target))
# Output: 3"
Create a scoring system for a trivia game in Python. The system should take two inputs - the correct answer and user response - and return a single score value.,"correct_answer = '5'
user_response = 'five'","def score_trivia(correct, user):
    correct = correct.lower()
    user = user.lower()

    max_score = 10
    score = 0

    if correct == user:
        score = max_score
    elif user in correct or correct in user:
        score = max_score * 0.8

    return score"
Construct a loop in Python that iterates over a given list of strings and prints each string.,"[""apple"", ""banana"", ""cherry""]","strings = [""apple"", ""banana"", ""cherry""]

for string in strings:
    print(string)"
Refactor the following Python code to improve its readability and make it easier to maintain:,"images = list()
for item in allitems:
 if item.endswith('.jpg'):
 images.append(item)",images = [item for item in allitems if item.endswith('.jpg')]
Create a script in Python to sort a list of names by alphabetical order.,"names = [""John"", ""Sara"", ""Joseph"", ""James""]","names.sort()
print(names)"
Construct a Python program that reads a user input and returns twice the value.,Number = 3,"def double(number):
    return number * 2

# Output 
6"
Create a new Python list with only the odd numbers from the following list.,"[1, 2, 3, 4, 5, 6, 7, 8, 9]","odd_numbers = [num for num in [1, 2, 3, 4, 5, 6, 7, 8, 9] if num % 2 != 0]"
Design a Python program that counts the number of words in a sentence.,This is a sentence with seven words.,"def countWords(sentence): 
 
    # split the sentence into words 
    words = sentence.split() 
    wordCount = len(words) 
   
    return wordCount 
  
# Driver code 
sentence = ""This is a sentence with seven words.""
wordCount = countWords(sentence) 
print(""Number of words in the sentence ="", wordCount)"
Write a Python program to input a list of integers and remove any duplicate values.,"my_list = [1, 3, 3, 5, 6, 6, 9]","def remove_duplicates(my_list):
    unique_list = []
    for i in my_list:
        if i not in unique_list:
            unique_list.append(i)
    return unique_list"
Write a Python program to classify a set of input data as either True or False.,"[1, 2, 3, 4, 5]","def classify(data):
    if min(data) < 0:
        return False
    elif max(data) > 1:
        return False
    else:
        return True"
Develop a program in Python to store 5 integer numbers in a list and print out the maximum value.,"[7, 9, 23, 0, 4]","numbers = [7, 9, 23, 0, 4]

maximum = max(numbers)

print(""The maximum value is: ""+ str(maximum))"
"Write a Python program to take a user's input, store it in a variable, and then print out a greeting combining the user's name and the value they entered.","Name: Allan 
Value: 5","name = input(""Name: "")
value = input(""Value: "")
print(""Hello {}, your value is {}"".format(name, value))"
Optimize a Python code to calculate the sum of digits in a number.,n = 123,"def digit_sum(n):
    if n == 0:
        return 0

    return (n % 10) + digit_sum(n // 10)

n = 123
print(digit_sum(n))"
optimize a given python code by using correct data structures and algorithms.,"def someFunction(someList):
    outputList = []
    for item in someList:
        if item not in outputList:
            outputList.append(item)
    return outputList","def someFunction(someList):
    seen = set()
    outputList = []
    for item in someList:
        if item not in seen:
            outputList.append(item)
            seen.add(item)
    return outputList"
Rewrite the following Python function to minimize the number of lines and improve readability.,"def add_numbers(num1, num2):
    sum = num1 + num2 
    print(""The sum of two numbers is :"",sum)","def add_numbers(num1, num2):
    print(f""The sum of two numbers is : {num1 + num2}"")"
Design a program in Python which takes an array of words as input and return an alphabetically ordered array of the words.,"[""apple"",""banana"",""grapes""]","def sortAlphabetically(arr):
    arr.sort()
    return arr

print(sortAlphabetically([""apple"",""banana"",""grapes""]))"
Create a Python script that uses regular expressions to find all phone numbers in a string.,The following phone number should be found: (111) 111-1111,"import re

phone_string = ""(111) 111-1111""

phone_numbers = re.findall(r'\(?\d{3}\)?-?\s?\d{3}-\d{4}', phone_string)

for number in phone_numbers:
 print(number)
# Output: (111) 111-1111"
Create a for loop in Python to print out the numbers in a given list in reverse order.,"[1,2,3,4,5]","list = [1,2,3,4,5]
for i in reversed(list):
    print(i)"
Create a Python program to calculate the number of times a word appears in a given sentence.,"sentence = ""Hello World""
word = ""Hello""","count = sentence.count(word)
print(count)"
"Given a Python script containing functions, optimize the code to reduce the number of iterations.","def myfunc(n):
    for i in range(n):
        print(i) 

def main():
    myfunc(50)
    myfunc(100)","def myfunc(n):
   for i in range(0, n, 5): 
       print(i) 

def main(): 
   myfunc(50) 
   myfunc(100)"
Optimize a code snippet in Python for maximum performance.,"import time
 
def sleep_for_the_ night():
 time.sleep(5)
 
while True:
 sleep_for_the_ night()","import time

def sleep_for_the_night():
 while True:
  start_time = time.time()
  time.sleep(5)
  end_time = time.time()
  elapsed_time = end_time - start_time
  if elapsed_time < 5:
   time.sleep(5-elapsed_time)

while True:
 sleep_for_the_night()"
Create a script in Python to replace all occurrences of a character in a string with another character.,"string = ""This is an example""","def replace_char(string, char1, char2):
    new_string = """"
    for char in string:
        if char == char1:
            new_string += char2
        else:
            new_string += char
    return new_string

string = ""This is an example""
new_string = replace_char(string, ""s"", ""z"")
print(new_string)
# Output: Thiz iz an example"
"Using the comment as a guide, create a python loop that calculates the sum of the numbers in a given list","Input List: [1, 2, 3, 4, 5]","def sum_list(input_list):
    """"""Calculate the sum of the numbers in a given list""""""
    total = 0
    for num in input_list:
        total += num
    return total"
Create a python script that outputs the following string,My favorite color is blue.,print('My favorite color is blue.')
Create a function in Python to remove all duplicates from a given list.,Example of a list containing duplicates,"def remove_duplicates(lst): 
    new_list = [] 
    for item in lst: 
        if item not in new_list: 
            new_list.append(item) 
    return new_list"
Optimize the following Python code to use built-in functions.,"def removeDuplicates(array): 
    for i in range (len(array)): 
        for j in range (i + 1, len(array)): 
            if array[i] == array[j]: 
                array.pop(j)","def removeDuplicates(array): 
    finalArray = []
    for element in array: 
        if element not in finalArray: 
            finalArray.append(element)
    return finalArray"
Design a Python program to generate a set of Fibonacci numbers up to a given value.,n = 10,"def fibonacci(n): 
 fib = [] 
 
 a, b = 0, 1
 while a < n: 
  fib.append(a) 
  a, b = b, a + b 
 
 return fib

n = 10
print(fibonacci(n))"
Construct a python script to display the frequency of each words appearing in a document,"The text document contains the following content:

The quick brown fox jumps over the lazy dog.","from collections import Counter
 
with open('text.txt', 'r') as f:
    data = f.read().lower().split()
    
word_counter = Counter(data)
 
# Print the sorted most common 10 words
for word, count in word_counter.most_common(10):
    print('{}: {}'.format(word, count))"
Convert the following JavaScript function to Python.,"function double(x) {
  return 2 * x;
}","def double(x):
  return 2 * x"
Write a python program to combine two lists in a dictionary. The dictionary should have the first list as keys and the second list as the corresponding values.,"list1 = [1,2,3]
list2 = [4,5,6]","def list_to_dict(keys, values):
 result = {}
 for i in range(len(keys)):
  result[keys[i]] = values[i] 
 return result"
Construct a function to reverse an array in Python.,"[1, 2, 3, 4]","def reverse_array(arr):
    left = 0
    right = len(arr) - 1

    while left < right:
        temp = arr[left]
        arr[left] = arr[right]
        arr[right] = temp
        left += 1
        right -= 1

arr = [1, 2, 3, 4]

reverse_array(arr)

print(arr)  # [4, 3, 2, 1]"
"Using the input, write a Python function to calculate the average number of items in the list.","list_items = [1, 3, 5, 7, 8, 10]","def average_list_items(list_items):
  list_length = len(list_items)
  list_sum = sum(list_items)
  average = list_sum/list_length
  return average"
Create a class in Python to handle the following Student object.,"Name: John
Age: 20
Marks: [80, 90, 85, 100]","class Student:
    def __init__(self, name, age, marks):
        self.name = name
        self.age = age
        self.marks = marks
        
    def get_name(self):
        return self.name
    
    def get_age(self):
        return self.age
    
    def get_total_marks(self):
        return sum(self.marks)"
Develop an algorithm to find the least common multiple of two non-negative integers using Python.,"12, 18","# Find the greatest common denominator
def gcd(num1, num2):
    if num2 == 0:
        return num1
    else:
        return gcd(num2, num1 % num2)

# Find the least common multiple
def lcm(num1, num2):
    return (num1 * num2) // gcd(num1, num2)

num1 = 12
num2 = 18

print(lcm(num1, num2))"
Create a Python method which will make an HTTP GET request to the given URL and return the response.,url='http://www.example.com/',"import requests

def getRequest(url):
 response = requests.get(url)
 return response

res = getRequest('http://www.example.com/')
print(res.text)"
Generate Python code that collects all the even numbers from a given list of numbers.,"[1, 2, 3, 4, 5, 6, 7, 8]","def collect_even_numbers(nums):
    even_nums = []
    for num in nums:
        if num % 2 == 0:
            even_nums.append(num)
    return even_nums"
Write a Python program to find the most common number among a given array of numbers.,"[1, 5, 4, 3, 2, 5, 4, 1, 3, 5]","def most_common(arr):
    counts = {}
    for n in arr:
        if n in counts:
            counts[n] += 1
        else:
            counts[n] = 1
    max_count = 0
    max_element = None
    for k, v in counts.items():
        if v > max_count:
            max_count = v
            max_element = k
    return max_element"
Provide a type definition for the following class in Python.,"class Student:
    def __init__(self, name, age):
        self.name = name
        self.age = age","from typing import NamedTuple

class Student(NamedTuple):
    name: str
    age: int"
Create a Python script for downloading webpages from a list of URLs.,"The URLs are: https://www.google.com, https://www.youtube.com and https://www.yahoo.com","import requests

urls = [""https://www.google.com"", ""https://www.youtube.com"", ""https://www.yahoo.com""]

for url in urls:
 response = requests.get(url)
 html = response.text
 with open(f""{url.split('//')[1]}.html"", ""w"") as file:
 file.write(html)"
Build a python program to extract only the unique words from the following sentence.,"sentence = ""I like to play soccer and i like to play basketball""","def extract_unique_words(sentence):
    words_list = sentence.split()
    unique_words_list = set(words_list)
    return unique_words_list"
Create an algorithm in Python that takes in a two-dimensional array (matrix) and returns a flattened version of the array.,"matrix = [[1,2,3],
          [4,5,6],
          [7,8,9]]","def flattenMatrix(matrix):
    return [elem for row in matrix for elem in row]

matrix = [[1,2,3],
          [4,5,6],
          [7,8,9]] 

flatMatrix = flattenMatrix(matrix)
print(flatMatrix)

# Output: [1, 2, 3, 4, 5, 6, 7, 8, 9]"
"In Python, generate a function to extract data from a MySQL table, given a query string.","query_string = ""SELECT * FROM student WHERE course='Python'""","def extract_data_from_mysql(query_string):
    conn = mysql.connector.connect(host=""localhost"", user=""root"", passwd=""password"", database=""student"")
    
    cursor = conn.cursor()
    cursor.execute(query_string)
    
    result = cursor.fetchall()
    
    conn.close()
    
    return result"
Create a python program that reads a list of names and picks a random name from that list.,"John, Mary, Paul, Gerry","import random

names = [""John"", ""Mary"", ""Paul"", ""Gerry""]

print(""The randomly chosen name is"", random.choice(names))"
"Generate an appropriate Python program to calculate the future value of an investment with the given principal, rate of interest and years.","Principal: 10000
Rate of interest: 10
Years: 5","# Calculate the Future Value of an Investment 
def future_value(principal, rate, years): 

# Calculate the total amount  
total_amount = principal * (1+(rate/100))**years

# return the future value
return round(total_amount,2)

# Testing 
print(future_value(10000,10,5))"
Create a Python program that takes a list of digits as input and returns a 2D list of all the possible permutations of these digits.,"[1, 2]","def permutations(nums):
 permutations_list = []
 for permutation in itertools.permutations(nums):
 permutations_list.append(list(permutation))
 
 return permutations_list
 
 print(permutations([1, 2]))
# Output: [[1, 2], [2, 1]]"
Implement a function in Python which takes an array of integers and an integer target and returns whether the given target exists in the array or not.,"[1, 4, 7, 11], 4","def contains_target(numbers, target):
    return target in numbers"
Can you generate a Python program that takes a list of numbers and creates a new list with only even numbers?,"[1, 2, 3, 4, 5, 6, 7, 8]","def extractEvenNumbers(numbers): 
    even_numbers = [num for num in numbers if num % 2 == 0]
    return even_numbers
  
numbers = [1, 2, 3, 4, 5, 6, 7, 8]
even_numbers = extractEvenNumbers(numbers)
print(even_numbers)"
"Given two strings A and B, construct a Python program to determine if B is a substring of A.","A = ""I am here"" 
B = ""here""","def is_substring(A, B): 
    if B in A: 
        return True 
    else: 
        return False"
Generate a SQL query in Python to find the sum of numbers in a given dataset.,"Input data:
[[1, 2], [3, 4], [5, 6]]","import pandas as pd

df = pd.DataFrame([[1, 2], [3, 4], [5, 6]])

query = 'SELECT SUM(NUM1 + NUM2) AS SUM_NUM FROM df'

sum_num = pd.read_sql_query(query, con=df.to_sql('df'))
print(sum_num)"
Create a call to an external API in Python and process the response.,The API URL: 'https://www.example.com/api/data',"import requests

url = 'https://www.example.com/api/data'
response = requests.get(url)
data = response.json()

# Process response data
for item in data:
  # Do something with item..."
Write a script in Python to extract the title of a webpage from its HTML code.,"html = ""<title>This is page title</title>""","soup = BeautifulSoup(html, 'html.parser')
title = soup.find('title').text
print(title)"
"Given a string which humans can read, write a Python program to create a list that contains all the words in the string in reverse order","input_string = ""I love to write code""","input_words = input_string.split()
output_words = [word[::-1] for word in input_words]
print(output_words)"
Write a Python program to look for an element in an array and return its index if found or -1 otherwise,"[10, 20, 10, 40, 5], 10","def search_element(arr, ele):
    for i in range(len(arr)):
        if arr[i] == ele:
            return i
    return -1"
Make a program that finds the reverse of a string in Python.,Hello World,"def reverse(s): 
    return s[::-1] 

reverse(""Hello World"")"
Design a Python program to find all the palindromes in a given list of words.,"[""apple"", ""eye"", ""ball"", ""abba""]","mylist = [""apple"", ""eye"", ""ball"", ""abba""]

palindromes = [word for word in mylist if word == word[::-1]]
print(palindromes)"
Convert a SQL query to Python code.,SELECT * FROM orders WHERE status = 'shipped',"import sqlite3

conn = sqlite3.connect('database.db')
c = conn.cursor()
c.execute('SELECT * FROM orders WHERE status = \'shipped\'')

result = c.fetchall()

for row in result:
    print(row)

conn.close()"
edit the following Python code to make the loop stop when the counter is equal to five,"counter = 0
while counter < 10:
    print(counter)
    counter = counter + 1","counter = 0
while counter < 10:
    print(counter)
    if counter == 5:
        break
    counter = counter + 1"
Construct a Python program to sort an array in descending order.,"arr = [4, 5, 2, 6, 1, 3]","def descending_sort(arr): 
    for i in range(len(arr)): 
        for j in range(0, len(arr)-i-1): 
            if arr[j] < arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j]
    return arr
  
arr = [4, 5, 2, 6, 1, 3]
  
descending_sort(arr)

print (""Sorted array is:"") 
for i in range(len(arr)): 
    print (""%d"" %arr[i])"
Generate a Python script that takes any number of integer arguments and returns their sum.,3 5 7,"def sum_ints(*args):
    total = 0
    for num in args:
        total += num
    
    return total

print(sum_ints(3, 5, 7))"
Can you modify the given Python program to fetch the top 5 elements in the list?,"sequence = [2, 8, 6, 4, 1, 9, 5]","sequence = [2, 8, 6, 4, 1, 9, 5]

top_5 = sorted(sequence)[-5:]

print(top_5)"
"Write a Python program to replace all empty strings in a given list with ""NULL"".","data = [""A"", """", ""B"", """", ""C"", """"]","data = [""A"", ""NULL"", ""B"", ""NULL"", ""C"", ""NULL""]

##
new_data = []
for i in data:
 if i == """":
 new_data.append(""NULL"")
 else:
 new_data.append(i)

print(new_data)"
Create a Python function which adds the given list of numbers and returns the sum.,"list_of_nums = [1, 2, 3, 4, 5]","def add_nums(list_of_nums):
 sum = 0
 for num in list_of_nums:
  sum += num
 return sum

sum_of_nums = add_nums(list_of_nums)
print(sum_of_nums) # 15"
Convert the given JSON object to a Python list.,"{""name"": ""John"", ""age"": 25, ""hobby"": ""programming""}","data = {""name"": ""John"", ""age"": 25, ""hobby"": ""programming""}

list = list(data.values())
 
print(list)
# Output: [""John"", 25, ""programming""]"
Implement a method in Python to calculate the factorial of a given number.,5,"def factorial(x):
    result = 1
    for i in range(1,x+1):
        result = result*i
    return result
    
print(factorial(5))"
Create a function in Python to search a list for a given item.,"list = [1, 2, 3, 4, 5, 6]
item = 4","def search_list(lst, item): 
    for i in range(len(lst)): 
        if lst[i] == item: 
            return i 
    return -1

idx = search_list(list, item) 
if idx == -1: 
    print(""Item not found"")
else:
    print(""Item found at index"", idx)"
"Create a function in Python that takes a list as an input and returns a list containing the same elements, but with all duplicates removed.","list = [1, 2, 3, 1, 4, 2, 5]","def remove_duplicates(list):
 result = []
 for element in list:
  if element not in result:
    result.append(element)
 return result

print(remove_duplicates(list)) # Will return [1, 2, 3, 4, 5]"
Write a python code to sort the given array of numbers in ascending order.,"[3, 5, 1, 6, 9, 4]","""""""
Sort array of numbers in ascending order
""""""

def sort_in_ascending(arr):
    arr.sort()
    return arr

if __name__==""__main__"":
    arr = [3, 5, 1, 6, 9, 4]
    sorted_arr = sort_in_ascending(arr)
    print(""Sorted array in ascending order is ""+str(sorted_arr))"
Define a function in Python that takes two strings and returns a new string which is the concatenation of the two.,"""Hello"" and ""World""","def concatenate_two_strings(str_1, str_2):
    return str_1 + str_2

conc_str = concatenate_two_strings(""Hello"", "" World"")
print(conc_str)"
Generate a python script that replaces each character in a string with its reverse:,string = 'Hello World',"def reverseString(string):
    n = len(string) 
    # create an empty array
    revString = [0 for i in range(n)] 
  
    for i in range(n):
        revString[n-i-1] = string[i] 
  
    return ""("" + ''.join(revString) + "")""
print(reverseString(""Hello World""))"
Design a Python function to return the sum of three numbers.,"[5, 10, 8]","def sum_three_numbers(nums):
    return sum(nums)

result = sum_three_numbers([5, 10, 8])
print(result)"
What Python code can you create to remove the second character from a given string?,"string = ""example""","removed_string = string[:1] + string[2:]
print(removed_string) # ""xample"""
Implement a sorting algorithm in Python that takes in a list of integers and returns a sorted version.,"[3, 5, 18, 6, 1, 20]","def sort_list(lst): 
  for i in range(len(lst)):
    min_idx = i
    for j in range(i+1, len(lst)):
      if lst[min_idx] > lst[j]:
        min_idx = j
    lst[i], lst[min_idx] = lst[min_idx], lst[i]
  return lst

print(sort_list([3, 5, 18, 6, 1, 20]))"
Generate Python code that computes the nth Fibonacci number.,n = 5,"def nth_fibonacci(n):
    """"""Return the nth Fibonacci number""""""
    a = 0
    b = 1
    if n == 0:
        return 0
    elif n == 1:
        return 1
    else:
        for i in range(2, n):
            c = a + b
            a = b 
            b = c
        return b"
Create an algorithm in Python to find the smallest number in an unsorted list,"[12, 5, 9, 8, 10]","def find_smallest(list):
    smallest = list[0]
    for num in list:
        if num < smallest:
            smallest = num
    return smallest

result = find_smallest([12, 5, 9, 8, 10])
print(result)"
Create a serverless API in Python that takes a text string as input and returns the associated Wikipedia page for the text.,Text String: Python programming language,"import wikipedia

def get_wiki_page(query):
 try:
 page = wikipedia.page(query)
 except:
 return None
 
 return page.content"
Write an Algorithm to sort an array of integers using the insertion sort technique in Python,"[9, 3, 4, 2, 6, 7]","def insertion_sort(arr): 
 for i in range(1, len(arr)): 
 key = arr[i] 
 j = i-1
 while j>=0 and key < arr[j] : 
 arr[j+1] = arr[j] 
 j -= 1
 arr[j+1] = key 
return arr 
  
arr = [9, 3, 4, 2, 6, 7]
answer = insertion_sort(arr)
print(answer) # [2, 3, 4, 6, 7, 9]"
Create a python program to remove all characters in a string that occur more than once,"string = ""aaabbcdefg""","def remove_duplicates(string):
    unique_chars = """"
    for ch in string:
        if ch not in unique_chars:
            unique_chars += ch

    return unique_chars

remove_duplicates(""aaabbcdefg"") # returns ""bcdefg"""
Create an algorithm using Python to generate random passwords.,Number of characters: 10,"import random
 
def generate_password(length):
    # Generate a random password that is length characters long
    chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'
    password = ''
    for _ in range(length):
        password += random.choice(chars)
    return password
 
generated_password = generate_password(10)
print(generated_password)"
Write a python program to find the smallest element in an array.,"arr = [4, 6, 2, 7, 5]","def find_smallest(arr):
    smallest = arr[0]
    for i in range(1, len(arr)):
        if arr[i] < smallest:
            smallest = arr[i]
    return smallest"
"Given a list of numbers, write a Python program to find the number which occurs the most in the list","list1 = [1, 2, 3, 4, 4, 3, 3, 3]","def most_frequent(list1): 
	return max(set(list1), key = list1.count) 

list1 = [1, 2, 3, 4, 4, 3, 3, 3]
print(""Number that occurs the most in the list is : "", most_frequent(list1))"
Write a code snippet in Python to print out the contents of a given dictionary.,"{""apple"": 1, ""banana"": 2, ""carrot"": 3}","dictionary = {""apple"": 1, ""banana"": 2, ""carrot"": 3}

for item in dictionary:
  print(""{}: {}"".format(item, dictionary[item]))"
Modify the following python code to print the count of values greater than 5.,"data = [1,2,3,4,5,6,7,8,9]","data = [1,2,3,4,5,6,7,8,9]

count = 0
for value in data:
  if value > 5:
    count += 1

print(count)"
Edit a given Python program in order to make it run faster.,"# This function calculates the sum of the numbers 0 to n.
def my_sum(n):
  s = 0
  for i in range(n+1):
    s += i
  return s","# This function calculates the sum of the numbers 0 to n.
def my_sum(n):
  if n <= 1:
    return n
  else: 
    return n + my_sum(n-1)"
Create a function in Python that takes a list of strings and replaces each string with its length.,"[""apple"", ""banana"", ""mango""]","def length_strings(string_list):
  new_list = []
  for string in string_list:
    new_list.append(len(string))
  return new_list

print(length_strings([""apple"", ""banana"", ""mango""])) # [5, 6, 5]"
Develop a Python script to delete all non-alphabetic characters in a string.,String with non-alphabetic characters- '123hello!?,"def remove_non_alpha(string):
    new_string = """"
    for char in string:
        if char.isalpha():
            new_string += char
    return new_string"
Design a program to reverse a given string.,Python,"def reverse_string(input_string):
    reversed_string = """"
    for i in range(len(input_string)-1, -1, -1):
        reversed_string += input_string[i]
    return reversed_string

input_string = ""Python""

print(reverse_string(input_string))"
"Given a list of integers, write a Python program to compute the maximum difference between any two numbers of the list?","[4, 8, 2, 10, 6]","def max_difference(numbers):
 max_diff = 0
 for i in range(len(numbers)-1):
 for j in range(i+1, len(numbers)):
 cur_diff = abs(numbers[i] - numbers[j])
 if cur_diff > max_diff:
 max_diff = cur_diff
 return max_diff

result = max_difference([4, 8, 2, 10, 6])
print(result)"
Develop Python code to print all possible permutations of a given string.,"string = ""abc""","def permutations(string): 
    if string == """": 
        return [''] 
          
    prev_list = permutations(string[1:]) 
    next_list = [] 
    char = string[0] 
    for word in prev_list: 
        for j in range(len(word) + 1): 
            next_list.append(word[:j] + char + word[j:]) 
    return next_list 

string = ""abc""
perm_list = permutations(string) 
print (perm_list)"
Can you create a Python function that returns the sum of all the elements in a given list?,"[1, 2, 3, 4, 5]","def list_sum(list):
   sum = 0
   for el in list:
       sum += el
   return sum"
Create a python program to insert a new element into a given list in the correct order,"Input List: [1, 2, 3, 4]
Element: 0","def insert_element(array, element):
    if element >= array[len(array)-1]:
        array.append(element)
    else:
        for i in range(len(array)):
            if element < array[i]:
                array.insert(i, element)
                break
    return array"
Write a Python function that takes two strings as arguments and returns true if the second string could be obtained by rotating the first string.,"'waterbottle', 'erbottlewat'","def is_rotation(str1, str2):
    if len(str1) == len(str2) and len(str1) > 0:
        return (str1 + str1).find(str2) != -1
    return False
    
is_rotation('waterbottle', 'erbottlewat')"
Optimize a Python function for maximum performance.,"def reverse_string(s): 
    return s[::-1]","def reverse_string(s): 
    start = 0 
    end = len(s) 
    string="""" 

    while end > 0: 
        string += s[end-1] 
        end -= 1

    return string"
Write a script in Python to sort a list of words alphabetically.,"[python, java, c, sql, ruby]","def sort_words(words):
    '''
    Function to sort a list of words alphabetically
    
    Parameters
    words: list of strings
    
    Returns
    sorted list of strings
    '''
    sorted_list = sorted(words)
    return sorted_list"
Write a python script to sort the given array,"[10, 15, 7, 8, 12]","arr = [10, 15, 7, 8, 12]
arr.sort()
print(arr)"
Generate a code snippet in Python to convert a string with the following format to a dictionary. (name1=123&name2=456&name3=789).,name1=123&name2=456&name3=789,"inp = ""name1=123&name2=456&name3=789""
kv = inp.split(""&"")
d = {}
for i in kv:
    k,v = i.split(""="")
    d[k] = v

print(d)"
Generate a valid Python script which calculates the median of a given  list of numbers.,"my_list = [1, 8, 4, 9, 5]","def median(my_list):
  my_list.sort()
  if len(my_list) % 2 == 0:
    return (my_list[(len(my_list) // 2) - 1] + my_list[(len(my_list)) // 2]) / 2
  return my_list[len(my_list) // 2]"
Design a Python function to sort a list of strings by their first character alphabetically.,"[""yesterday"", ""today"", ""tomorrow""]","def sort_list_by_first_char(strings):
    return sorted(strings, key=lambda s: s[0])

strings = [""yesterday"", ""today"", ""tomorrow""]
print(sort_list_by_first_char(strings))"
Create a function in Python that will take an array of integers and return the minimum value.,"[3, 9, 0, 7, 88]","def find_min(arr):
min = arr[0]
for num in arr:
 if num < min:
 min = num
return min

# Test
arr = [3, 9, 0, 7, 88]
min_val = find_min(arr)
print(""Minimum value is:"", min_val)  # Output: Minimum value is: 0"
Sort a given list of integers in Python in ascending order.,"list_of_integers = [5, 8, 1, 4, 0, 2, 7]",list_of_integers.sort()
Answer a question using Python.,Question: What is the sum of all numbers divisible by 25 between 500 and 1000?,"int sum = 0
 
for i in range(500, 1000):
  if(i % 25 == 0):
    sum += i
 
print(sum)"
Create a Python function that takes a list of strings as input and returns a dictionary of words with their frequency counts.,"words = [""apple"", ""orange"", ""apple"", ""orange"", ""pear""]","def word_count(words):
    counter = {}
    for word in words:
        if word not in counter:
            counter[word] = 0
        counter[word] += 1
    return counter
    
words = [""apple"", ""orange"", ""apple"", ""orange"", ""pear""]
word_count(words)
""""""
{'apple': 2, 'orange': 2, 'pear': 1}
"""""""
Create a Python program which prints the top three elements in a given list,"[10, 4, 45, 34, 99, 24, 10]","def top_three(list):
    sorted_list = sorted(list, reverse = True) 
    return sorted_list[:3]"
Upgrade the following code so that it runs on Python 3,"#This code runs on python 2
print ""Hello World!""","print(""Hello World!"")"
Create a code generation task to generate a Python program to calculate the sum of a list of numbers.,"nums = [2, 5, 10, 15]","def list_sum(nums): 
    '''This function will take a list as input and return the sum of its elements.'''
    result = 0
    for num in nums:
        result += num
    return result

nums = [2, 5, 10, 15]
print(list_sum(nums))"
Generate a Python program to find the greatest common divisor (GCD) for two given numbers.,"6, 4","def gcd(number1, number2): 
    if(number2 == 0): 
        return number1 
    return gcd(number2, number1%number2) 

first_num = 6
second_num = 4

print(""The greatest common divisor of 6 and 4 is"", gcd(first_num, second_num))"
Generate a script in Python to run a linear regression model using scikit-learn.,[7 5 3 9 8 4] [7 3 4 6],"import numpy as np
from sklearn.linear_model import LinearRegression

x = np.array([[7,5,3,9,8,4]]).T
y = np.array([7,3,4,6])

model = LinearRegression()
model.fit(x, y)

preds = model.predict(x)

print(f""R-squared score: {model.score(x,y)}"")
print(f""Coefficients: {model.coef_}"")
print(f""Predictions: {preds}"")"
"Create a function in Python that takes a list as input and searches for a number ""x"" and returns the index of it.","[10, 8 , 5, 15], x = 15","def search(arr, x):
    for i in range(len(arr)):
        if arr[i] == x:
            return i
    return -1

arr = [10, 8 , 5, 15]
x = 15
print(search(arr, x))"
"Generate code for a Python for loop that prints ""Hello World"" n times.",Number = 5,"for i in range(5):
 print(""Hello World"")"
Write a Python program to search for a specific value in a large array of integers and return the index of the value if found.,"arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
target = 8","def search(arr, target):
 for i in range(len(arr)):
  if arr[i] == target:
   return i
 return -1
  
arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
target = 8
index = search(arr, target)
if index != -1:
 print(""Found at index: "" + str(index))
else:
 print(""Not Found"")"
Modify this Python program to compute the sum of all elements in a multi-dimensional array.,"multi_dim_array = [[1,2], [3,4], [15,16]]","def sum_multi_dim_array(multi_dim_array):
    # init sum to 0 
    sum = 0 
  
    # iterate over rows 
    for row in multi_dim_array: 
  
        # iterate over columns 
        for num in row: 
  
            # add number to sum 
            sum += num 
  
    return sum"
Edit the following code snippet to ensure it meets the Python PEP 8 coding standards.,"def exampleFunction(a,b):
    return a+b","def example_function(a, b):
    return a + b"
Compute the output of this Python program.,"def countdown(n):
    if n <= 0:
        print(""Blast off!"")
    else:
        print(n)
        countdown(n-1)

countdown(3)","3
2
1
Blast off!"
"Generate an algorithm in Python that given a string of words, should check if it is a Palindrome.","""racecar""","def isPalindrome(s):
 s = s.lower()
 
 left = 0
 right = len(s) - 1
 
 while left < right:
 if s[left] != s[right]:
 return False
 left += 1
 right -= 1
 
 return True

s = 'racecar'
isPalindrome = isPalindrome(s)

print(isPalindrome) # Output: True"
Create Python code to edit a given piece of code and make it more efficient.,"def sum_of_squares(arr):
    total = 0
    for i in range(len(arr)):
        for j in range(len(arr)):
            total += arr[i] * arr[j]
    return total","def sum_of_squares(arr):
    total = 0
    for num in arr:
        total += num * num
    return total"
Create a program in Python that prints the following figure with the given number of units.,7,"for row in range(7):
    for col in range(7):
        if (row + col) % 2 == 0:
            print('#', end='')
        else:
            print(' ', end='')
    print()"
Generate a reinforcement learning algorithm.,Design a RL algorithm to solve an environment with a single agent and sparse rewards.,"Create a Python program to implement a reinforcement learning agent that utilizes Q-learning for solving an environment with sparse rewards. The algorithm should keep the learning agent in a continuous loop of taking actions, observing rewards and updating the Q-value function to reach the outcome desired."
"Create a program in Python, which takes two parameters: a list of integers and a number X, and returns true if there are two numbers in the list, such that their sum is equal to X.","list = [1, 3, 7, 4, 5]
X = 12","def two_sum(lst, x):
 for i in range(len(lst)):
  for j in range(i+1, len(lst)):
   if lst[i] + lst[j] == x:
    return True 
 return False

list = [1, 3, 7, 4, 5]
X = 12

two_sum(list, X) # True"
Create a function in Python that takes a string of any length and capitalizes every word.,'hello world',"def capitalize_words(string):
 words = string.split(' ')
 capitalized = [word.capitalize() for word in words]
 return ' '.join(capitalized)

# Usage

print(capitalize_words('hello world')) # Hello World"
Create a Python program that reads two dates and computes the number of days between them.,"date_1 = '2020-01-01'
date_2 = '2020-01-30'","from datetime import date

date_1 = date(2020, 1, 1)
date_2 = date(2020, 1, 30)

diff = date_2 - date_1
print('There are {} days between the two dates.'.format(diff.days))"
Create a program in Python that reads a text and then prints out the longest word in the text.,This is an example of a sample text.,"def find_longest_word(text):
  words = text.split("" "")
  longest = """"
  for word in words:
    if len(word) > len(longest):
      longest = word
  
  return longest

if __name__ == ""__main__"":
  text = ""This is an example of a sample text.""
  print(find_longest_word(text))"
Develop an algorithm to detect and fix Python syntax errors in a given code snippet.,"def test ():
    x = 5
    y = 3 
    z","def test():
    x = 5
    y = 3
    try:
        z
    except NameError:
        print(""NameError: Name 'z' is not defined"")"
Create a Python program that takes a sentence as an input and replaces all the blank spaces with hyphens.,The quick brown fox,"def replace_spaces(str):
 return str.replace("" "", ""-"")
 
print(replace_spaces(""The quick brown fox""))  # Result: The-quick-brown-fox"
"Create a Python dictionary with three keys named ""Name"", ""Address"" and ""Phone"".","Name = 'John';
Address = '212 Smith Street';
Phone = '732-123-4567';","info = {
 'Name':Name,
 'Address':Address,
 'Phone':Phone
}"
Implement a Python program that takes in a string and prints out the ASCII codes for each character in the string.,"""Hello""","def get_ascii_codes(string):
    ascii_codes = [] 
  
    for char in string: 
        ascii_codes.append(ord(char)) 
  
    return ascii_codes 


print(get_ascii_codes(""Hello""))

# Output: [72, 101, 108, 108, 111]"
Modify the following Python code to detect and remove punctuation from a given string.,"my_string = 'Hello, world!'","my_string = 'Hello, world!'
punctuation = '!,.'
for char in my_string: 
 if char in punctuation: 
 my_string = my_string.replace(char, """")

print(my_string)
# Output: Hello world"
Load a dataset in CSV format into a Python pandas DataFrame.,"# dataset.csv
ColA, ColB, ColC
1, 2, 3
4, 5, 6
7, 8, 9","import pandas as pd

data = pd.read_csv('dataset.csv')"
Generate a Python program to optimize a low-cost route between two points,startX = 0 and endX = 10,"def optimize_route(startX, endX):
    best_route = [startX]
    next_x = startX

    while next_x < endX:
        best_cost = float(""inf"")
        for x in range(next_x+1, endX+1):
            cost = abs(x - next_x)
            if cost < best_cost:
                best_cost = cost
                next_x = x
        best_route.append(next_x)

    return best_route"
"Given a list of strings, write a Python program to search for a string and return its index.","myList = [""a"", ""b"", ""c"", ""d"", ""e""]","def find_string(search_string, myList):
    for index, s in enumerate(myList):
        if s == search_string:
            return index"
Write a Python script that reads in a user-defined data set and prints the top-5 highest values contained in the data set.,"[100.0, 74.0, 56.2, 45.5, 27.8, 21.0, 8.2, 4.1]","data = [100.0, 74.0, 56.2, 45.5, 27.8, 21.0, 8.2, 4.1]

def get_top_five_values(data):
    sorted_data = sorted(data, reverse=True)
    top_five_values = sorted_data[:5]
    return top_five_values

top_five_values = get_top_five_values(data)
print(top_five_values)"
Create a Python script to generate all possible 3-letter words from a 4-letter alphabet.,"alphabet = ['a', 'b', 'c', 'd']","import itertools

alphabet = ['a', 'b', 'c', 'd']
words = [''.join(i) for i in itertools.combinations_with_replacement(alphabet, 3)]
print(words)"
Create a function in Python to remove punctuation from a text.,"text = “Welcome! My name is Mike, and I’m here to help you.”","import string

def remove_punctuation(text):
    punct_chars = string.punctuation
    no_punct = """"
    for char in text:
        if char not in punct_chars:
            no_punct += char
    return no_punct

print(remove_punctuation(""Welcome! My name is Mike, and I’m here to help you.”""))
# Output: Welcome My name is Mike and Im here to help you"
Write a Python function that takes a list as an argument and returns the second largest element in the list.,"lst = [1, 14, 8, 5]","def second_largest(lst):
    sorted_list = sorted(lst)
    return sorted_list[-2]

result = second_largest(lst)
print(result)"
Create an algorithm in Python to sort a sequence of numbers in nondecreasing order.,"[1, 3, 5, 4, 2, 0, 9]","def insertion_sort(seq):
    for i in range(1, len(seq)):
        j = i-1
        key = seq[i]
        while (seq[j] > key) and (j >= 0):
           seq[j+1] = seq[j]
           j -= 1
        seq[j+1] = key
   
 
seq = [1, 3, 5, 4, 2, 0, 9]
insertion_sort(seq)
print(seq)

# Output: [0, 1, 2, 3, 4, 5, 9]"
Generate a Python program to print the elements of a given array in reverse order.,"arr = [3, 7, 2, 5]","def print_reverse(arr):
    for i in range(len(arr)-1, -1, -1):
        print(arr[i])"
Write a Python function to calculate the number of possible permutations for a given input array.,"[2, 1, 3]","from math import factorial 
  
def calculate_permutations(arr): 
    n = len(arr) 
    return factorial(n) 
  
result = calculate_permutations([2, 1, 3])
print(result)"
Create a python script to group values according to given conditions.,"group1 = [1, 2, 3, 4] 
group2 = [5, 6, 7, 8] 
condition = lambda x: x > 5","group1 = [1, 2, 3, 4] 
group2 = [5, 6, 7, 8] 
condition = lambda x: x > 5

group_1 = list(filter(condition, group1))
group_2 = list(filter(condition, group2))

print(group_1)
print(group_2)"
Compose a Python program that takes a list of strings and checks if each string length is 2 or more.,"['dog', 'cat', 'mouse', 'snake', 'python', 'go']","def isStringLengthMoreThanTwo(list): 
    new_list = [] 
  
    for string in list:
        if len(string) >= 2: 
            new_list.append(string) 
     
    return new_list
  
# Driver Code 
list = ['dog', 'cat', 'mouse', 'snake', 'python', 'go']
print(isStringLengthMoreThanTwo(list))"
Create a Python program that takes a string and returns a new string with the first letter of each word capitalized.,"""my name is john""","def capitalize_words(string): 
    words = string.split(' ') 
    capitalized_words = [word.capitalize() for word in words] 
    return ' '.join(capitalized_words)"
Create a Python program to generate unique coupon codes with a given length and character set.,"length = 8
characters = '0123456789ABCDEF'","import random

def generate_coupon(length, characters):
 coupon_code = ''
 for i in range(length):
  coupon_code += random.choice(characters)
 return coupon_code

coupon_code = generate_coupon(8, '0123456789ABCDEF')
print(coupon_code)"
Write a Python program for searching for a particular item in a list.,"[1, 5, 4, 6, 9, 10], item = 6","def search(input_list, item):
  for i in range(len(input_list)):
    if item == input_list[i]:
      return i
  
  return -1

if __name__ == '__main__':
  input_list = [1, 5, 4, 6, 9, 10]
  item = 6
  result = search(input_list, item)
  print(result)"
Construct a Python program to add two matrices.,"[[1,4,7], [2,5,8], [3,6,9]]","def add_matrix(m1, m2):
    result = [[0] * len(m1[0]) for i in range(len(m1))]
    
    for i in range(len(m1)):
        for j in range(len(m1[0])):
            result[i][j] = m1[i][j] + m2[i][j]
            
    return result

result = add_matrix([[1,4,7], [2,5,8], [3,6,9]], [[9,1,2], [5,3,4], [1,8,7]])
print(result)"
What is the best way to optimize the following Python code which prints the first and last letters of an array of strings?,"words = [""cat"", ""dog"", ""snake"", ""elephant""]","# optimized version 
words = [""cat"", ""dog"", ""snake"", ""elephant""]

first_letters = [word[0] for word in words] # list of first letters
last_letters = [word[-1] for word in words] # list of last letters

# print the results
print(first_letters)
print(last_letters)"
Generate a code snippet to convert the given JSON string to a dictionary in Python.,"json_str = '{ ""name"" : ""John"", ""age"" : 20, ""city"" : ""New York"" }'","import json

json_dict = json.loads(json_str)"
Create a function in Python that prints out all the odd numbers from a given list.,"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","def print_odd_numbers(lst):
    odd_nums = []
    for num in lst:
        if num % 2 != 0:
            odd_nums.append(num)
    print(odd_nums)

print_odd_numbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])"
Write a Python program that checks if a given number is prime.,7,"def is_prime(n):
    if n == 2 or n == 3:
        return True
    if n < 2 or n%2 == 0:
        return False
    if n < 9:
        return True
    if n%3 == 0:
        return False

    r = int(n**0.5)
    f = 5
    while f <= r:
        if n%f == 0:
            return False
        if n % (f+2) == 0:
            return False
        f += 6
    return True

num = 7
print(""Is"", num, ""prime?: "", is_prime(num))"
Modify the following Python function to ensure that the two strings are converted to lowercase before comparison.,"def compare_strings(str1, str2):
    return str1 == str2","def compare_strings(str1, str2):
    str1 = str1.lower()
    str2 = str2.lower()
    
    return str1 == str2"
Write a Python script to convert a list of positive integers to a comma-separated string.,"[1, 2, 3, 4]","def convert_list_to_string(list): 
  string = """"
  for num in list:
    string += str(num) + "",""
  return string

print(convert_list_to_string([1, 2, 3, 4]))

# Output: ""1,2,3,4,"""
Develop a Python script for extracting data from a web page.,URL of a web page containing relevant data.,Properly functioning Python script for extracting data from a web page.
Write a Python code which randomly generates a hopscotch board of given size.,size = 7,"import random 

def generate_hopscotch_board(size):
    board = []
    for row in range(size):
        board.append([])
        for col in range(size):
            board[row].append(random.randint(1,6))
    return board

# Generate a hopscotch board
print(generate_hopscotch_board(size))"
"Write a string slicing function in Python that takes a string and start and end index, and return the slice.","string = ""This is a slicing test""
start = 8
end = 15","def slicing(string, start, end):
    return string[start:end]
    
print(slicing(string, start, end))"
Create a Python script that searches the string for a given pattern and returns the starting position.,"""Hello world""","def find_pattern_position(string, pattern):
    for i in range(len(string) - len(pattern) + 1):
        if string[i:i+len(pattern)] == pattern:
            return i
    else:
        return -1

position = find_pattern_position(""Hello world"", ""world"")
print(position)"
Classify this Python function according to behavior.,"def is_even(n):
    '''
    This function takes a number n and 
    returns True if n is even and False if n is odd
    '''
    return n % 2 == 0",Classifying this Python function as a Predictive Function.
Edit the following Python function to handle keyboard interrupts.,"def main():
 try:
 counter = 0
 while True:
 print(counter)
 counter += 1
 time.sleep(1)
 
except KeyboardInterrupt:
 print('Goodbye!')","def main():
 try:
 counter = 0
 while True:
 print(counter)
 counter += 1
 time.sleep(1)
 
 except KeyboardInterrupt:
 print('Goodbye!') 
 sys.exit()"
Write a Python program to format a given date from one format to another.,"start_date = ""3-5-2020""
end_date = ""5-5-2020""","from datetime import date

def format_date(date_str, start_format, end_format):
    date_obj = date.strptime(date_str, start_format)
    return date_obj.strftime(end_format)"
Generate a Python program that finds all palindromes in a given string.,"input_str = ""madamabcdcba""","input_str = ""madamabcdcba""

def find_palindromes(input_str):
 palindromes = []
 for i in range(len(input_str)):
  for j in range(i+1, len(input_str)):
   curr_str = input_str[i:j+1]
   if curr_str == curr_str[::-1]:
    palindromes.append(curr_str)
 return palindromes

print(find_palindromes(input_str))

# Output: ['madam', 'aba', 'bcdbcd', 'cba']"
Write down logic to generate all permutations of a given string in Python.,"String = ""ABC""","def permutations(str): 
    ans = []
    if len(str) == 1: 
        ans = [str] 
    else: 
        for i, letter in enumerate(str):
            for perm in permutations(str[:i] + str[i+1:]):
                ans += [letter + perm]
    return ans

print (permutations(""ABC""))"
Suggest a completion of the following Python code to print all perfect squares between 25 and 45.,for n in range():,"for n in range(25, 46):
    if n ** 0.5 == int(n ** 0.5):
        print(n)"
Produce a Python code for finding the largest element in an array.,"[40, 50, 11, 70, 39]","def find_max(arr):
    max = arr[0]
    for i in range(1,len(arr)):
        if arr[i] > max:
            max = arr[i]
    return max

result = find_max([40, 50, 11, 70, 39])
print(result)"
Write a python program to convert degree Celsius to Fahrenheit.,c = 22,"def convert_celsius_to_fahrenheit(c):
    f = (c * (9/5)) + 32
    return f

f = convert_celsius_to_fahrenheit(c)
print('{} degree Celsius = {} degree Fahrenheit'.format(c, f))"
You are given a list of integers and a number n. Write a python program that checks if any two numbers in the list sum up to n.,"numbers = [1, 5, 6, 10, 8, 20]
n = 11","def sum_check(numbers, n):
    for i in range(len(numbers)):
        for j in range(i + 1, len(numbers)):
            if numbers[i] + numbers[j] == n:
                return True
    return False

numbers = [1, 5, 6, 10, 8, 20]
n = 11

print(sum_check(numbers, n))"
Write a Python function to remove duplicate characters from a string.,"InputString=""tree traversal""","def remove_duplicate_characters(string): 
 result = """" 
  
 for i in range(len(string)): 
  if string[i] not in result: 
   result += string[i] 
  
 return result 
  
print(remove_duplicate_characters(""tree traversal""))"
Write a Python program which prints all perfect numbers between 1 and a given number N (inclusive).,25,"def print_perfect_numbers(N):
 for val in range(1, N + 1):
   sum = 0
   for testval in range(1, val):
       if (val % testval) == 0:
           sum += testval
   if (sum == val):
       print(val)"
Write a Python program to sort a given list of numbers and return the sorted list,"list_of_numbers = [2, 3, 5, 8, 1, 4]","list_of_numbers = [2, 3, 5, 8, 1, 4]

def sort_list(list_of_numbers): 
    list_of_numbers.sort() 
    return list_of_numbers

sorted_list = sort_list(list_of_numbers) 
print(sorted_list)"
Create a Python script to search for a given element in a list?,"my_list = [1, 3, 5, 7, 8]","def find_element(my_list, x):
  found = False
  for item in my_list:
    if item == x:
      found = True
      break
  
  return found

element = 3

print(find_element(my_list, element))

# Output
True"
Write a Python program to calculate the factorial of a number.,number = 6,"def factorial(number): 
 if number == 0: 
 return 1
 else: 
 return number * factorial(number-1) 
  
number = 6
print(factorial(number)) 
# Output: 720"
Design a program in Python to change the background color of a web page.,color = '#FF0000',"from selenium import webdriver
from selenium.webdriver.common.keys import Keys

driver = webdriver.Chrome()
driver.get(""http://example.com"")
html = driver.find_element_by_tag_name('html')
html.send_keys(Keys.CONTROL + Keys.SHIFT + Keys.BACKSPACE)
driver.execute_script(""document.body.style.backgroundColor='"" + color + ""'"")"
Construct a python program to identify the number of times the given element is present in the given list.,"list: [2, 3, 4, 5, 2, 3]
x: 3","def count_x(list, x):
    count = 0
    for i in list:
        if i == x:
            count += 1
    return count"
Create a Python script that uses a for loop to display the items from a list.,"[apple, orange, banana]","# Create a list
list = ['apple', 'orange', 'banana']

# Loop over the list
for item in list:
    print(item)"
"Given a Python list containing a set of numbers and strings, create a new list with only the integers.","mylist = ['a', 1, 3, 2.5, 'b']","mylist = [item for item in mylist if isinstance(item, int)]"
Edit the following program written in Python in order to remove None from the list.,"lst = ['a', 'b', None, 'c']",lst = [x for x in lst if x is not None]
Opitmize a Python program to search a list of numbers for a given target number.,"list = [10,20,30,40,50]
target = 40","def search(list, target):
  
 for i in range(len(list)):
  if list[i] == target:
   return i
 return -1

list = [10,20,30,40,50]
target = 40

# linear search in list

index = search(list, target)

if index != -1:
 print(""Element found at index :"", index)
else:
 print(""Element not found"")"
Optimize the following Python Octave code by introducing vectorization.,"for  i = 0:datasize-1
    freq = (float(freq[i]) + float(new_freq[i]))","#Vectorization
freq = (np.array(freq) + np.array(new_freq)).tolist()"
Write an algorithm in Python to find the largest and smallest element in an array.,"arr = [3, 7, 1, 12, 5]","def find_min_max(arr):
    min, max = arr[0], arr[0]
    for item in arr:
        if item < min:
            min = item
        if item > max:
            max = item
    return min, max

# test
arr = [3, 7, 1, 12, 5]
min, max = find_min_max(arr)
print(f'min: {min}, max: {max}')"
Generate a function in Python that returns the index of the first occurrence of a given number in an array.,"[1, 4, 6, 9], 5","def first_occurrence(arr, num):
    '''Returns index of the first occurrence of num in an array.'''
    for i in range(len(arr)):
        if(arr[i] == num):
            return i
    return -1

arr = [1, 4, 6, 9]
num = 5

first_occurrence(arr, num) # -1"
Create a function in Python to calculate the sum of the cubes of the first n positive integers.,n = 4,"def sum_cubes(n): 
    sum = 0
    for i in range(1,n+1): 
        sum += i**3 
    return sum"
Parse the following JSON into a Python dictionary.,"{
  ""name"": ""John"",
  ""age"": 28,
  ""hobbies"": [
    ""Programming"",
    ""Sports""
  ]
}","# import the json module
import json

# parse the json
json_dict = json.loads('{  ""name"": ""John"",  ""age"": 28,  ""hobbies"": [    ""Programming"",    ""Sports""  ]}')

# print the parsed json
print(json_dict)"
Write a Python program to find the sum of all the divisors of a given integer.,90,"def calculate_sum_divisors(n):
    total_sum = 0
    for i in range(1, n + 1):
        if n % i == 0:
            total_sum += i
    return total_sum
 
print(calculate_sum_divisors(90))"
Convert this psuedocode into a Python program.,"num = 0

while num < 20:
    print (num)
    num += 4","num = 0
while num < 20:
    print (num)
    num += 4"
Develop a program in Python to remove all the vowels from a given sentence.,Sentence: This is a test sentence.,"def removeVowels(sentence):
 vowels = ""aeiouAEIOU""
 result = """"

 for char in sentence:
 if char not in vowels:
 result = result + char

 return result

print(removeVowels(""This is a test sentence.""))  # Output: ""Ths s  tst sntnc."""
Write a Python program to print a formatted price list with a given list of expenses.,"expenses = {
    ""bread"": 2.50,
    ""butter"": 4.50,
    ""cake"": 12.75,
    ""sugar"": 6.95
}","def print_price_list(expenses):
    print(""Price list of items available:"")
    print(""-"" * 30)
    print(""Item\tPrice"")
    print(""-"" * 30)
    for item in expenses.keys():
        print(""{}\t{}"".format(item, expenses[item]))
    print(""-"" * 30)"
Edit the given Python program to use for loop instead of while loop.,"i = 0
while i < 10:
  print(i)
  i = i + 1","for i in range(10):
 print(i)"
Translate this JavaScript code to Python.,"function sum(nums) {
  let result = 0
  for(let i = 0; i < nums.length; i++) {
    result += nums[i]
  }
  return result
}","def sum(nums):
    result = 0
    for i in range(len(nums)):
        result += nums[i]
    return result"
Write a Python program that takes a list of numbers and lists all the prime numbers in the list.,"[4, 8, 11, 13]","[11, 13]"
Write a Python script that takes a list of strings as input and prints out a modified version of the list. The modified version should contain only strings that have the letter 'b' in them.,"['foo', 'bar', 'baz', 'hello', 'world']","input = ['foo', 'bar', 'baz', 'hello', 'world']
output = [x for x in input if 'b' in x]
print(output) # ['bar', 'baz']"
Create a Python script that prints out the Fibonacci sequence of a given number.,A value n = 6,"def fibonacci_sequence(n):
  a, b = 0, 1
  
  for i in range(n):
    print(a)
    a, b = b, a+b

fibonacci_sequence(6)

# Output:
# 0
# 1
# 1
# 2
# 3
# 5"
Develop Python code to calculate the Average of two numbers.,"2, 3","def average(a, b):
    return (a + b) / 2

result = average(2, 3)
print(result)"
Develop an algorithm in Python that takes a number as input and outputs the sum of all its divisors.,6,"def sum_divisors(num):
    # Initialize sum 
    summation = 0
    
    # Iterate upto num 
    for i in range(1, num+1):
        # If num is divisible  
        # by i, add it to sum 
        if num%i == 0:
            summation += i
    # Return summation 
    return summation
  
   
# Driver Code 
num = 6
result = sum_divisors(num) 
  
# Printing result  
print(result)"
Create a function to sort the below list of numbers in ascending order in Python.,"[3,7,1,9,2]","def sorting_ascending(lst): 
    lst.sort() 
    return lst"
Generate a Python script that sorts a given array of integers.,"Array: <10, 8, 1, 4, 6, 5>","def array_sort(array):
  # Iterate over the array
  for i in range(len(array)):
    # Find the minimum element
    min_position = i
    for j in range(i + 1, len(array)):
      if array[min_position] > array[j]:
        min_position = j

    # Swap minimum element to current position
    array[i], array[min_position] = array[min_position], array[i]
  
  return array"
Generate a python program for creating a function to take a list of strings as input and return the longest string,"list of strings: ['hello', 'world', 'this', 'is', 'awesome']","def find_longest_string(arr):
    longest = arr[0]
    for string in arr:
        if len(string) > len(longest):
            longest = string
    return longest

result = find_longest_string(['hello', 'world', 'this', 'is', 'awesome'])
print(result)"
Generate a program in Python to evaluate the accuracy of a machine-learning model.,"from sklearn.svm import SVC
clf = SVC(kernel='poly', degree=2, gamma=0.05)","import numpy as np
from sklearn.metrics import accuracy_score

clf.fit(X_train, y_train)
y_pred = clf.predict(X_test)

# Calculating the accuracy
accuracy = accuracy_score(y_test, y_pred)

print(""Accuracy: "" + str(accuracy))"
Generate a python program that prints out all the even numbers between a given range of integers,1 to 50,"def print_even_numbers(start, end):
    for num in range(start, end+1):
        if num % 2 == 0:
            print(num)

# main
start = 1
end = 50
print_even_numbers(start, end)"
Create a function in Python to convert a given time from 12-hour clock format to 24-hour clock format.,3:45pm,"def time_conversion(time):
    # Get hour and convert it to 24-hour format
    hour = int(time[:2])
    if time[-2:] == ""PM"":
        hour += 12
    # Get minutes
    min = time[-5:-3]

    return str(hour) + "":"" + min

# Test
print(time_conversion(""3:45pm"")) # 15:45"
Create a Python program to take an array of numbers and calculate the average.,"[1, 4, 5, 6, 7]","def average(nums):
    sum = 0
    for n in nums:
        sum += n
    return sum / len(nums)

nums = [1, 4, 5, 6, 7]
print(average(nums))"
Generate a Python program to update the value of a variable by given percentage.,"Given variable value = 25.22
Given percentage = 5","value = 25.22
percent = 5

new_value = value + (value * (percent/100))

print(""The new value is: "", new_value) 
# Output: The new value is: 26.496"
Create a Python program to compute the average of all the numbers in a list.,"[1, 5, 9.7, 8, 5.6]","def avg(list):
    if len(list) == 0:
        return 0
    else:
        sum = 0
        for num in list:
            sum += num
        return sum / len(list)"
Write a Python program to iterate through a list and return the index of the maximum of all the even numbers in the list.,"[1, 5, 8, 10, 3, 13, 21, 24]","def find_max_even_index(lst):
  max_even = None
  index = -1
  
  for i, num in enumerate(lst):
    if num % 2 == 0 and (max_even is None or num > max_even):
      max_even = num
      index = i
  
  return index"
Generate code to de-serialize JSON into Python objects,"data_json = '{""name"":""John Doe"",""age"":18,""hobbies"":[""reading"",""swimming"",""gaming""],""contact"":{""email"":""johndoe@example.com"",""mobile"":""+1900000000""}}'","import json

data = json.loads(data_json)

# Output:
data = {
 ""name"": ""John Doe"",
 ""age"": 18,
 ""hobbies"": [""reading"", ""swimming"", ""gaming""],
 ""contact"": {
  ""email"": ""johndoe@example.com"",
  ""mobile"": ""+1900000000""
 }
}"
Develop a Python program to evaluate a given polynomial given a value of the independent variable.,"polynomial = 4x^3 + 7x + 2
x = 6","def evaluate_polynomial(polynomial, x):
    terms = polynomial.split(""+"")
    result = 0
    for term in terms:
        factor, exponent = term.split(""x^"")
        result += int(factor)*(x**int(exponent))
    return result

polynomial = ""4x^3 + 7x + 2""
x = 6
print(evaluate_polynomial(polynomial, x))"
Generate a python program to sort a list of numbers,"array = [4, 2, 6, 7, 1]","def sort_list(array): 
    n = len(array) 
  
    for i in range(n): 
  
        min_idx = i 
        for j in range(i+1, n): 
            if array[min_idx] > array[j]: 
                min_idx = j 
        array[i], array[min_idx] = array[min_idx], array[i]

if __name__ == ""__main__"":
    array = [4, 2, 6, 7, 1]
    sort_list(array)
    print(array)"
Create a Python function to replace a specific character in a string?,"string = ""Hello World""
character = ""l""
replacement = ""X""","def replace_char(string, character, replacement):
   return string.replace(character, replacement)

string = ""Hello World""
character = ""l""
replacement = ""X""
print(replace_char(string, character, replacement))"
Generate a python program to convert a list of strings to a new list of strings with each string's first letter capitalized,"[""apple"", ""cat"", ""dog"", ""hello""]","def capitalize(list):
    # Create an empty list to contain the corrected strings 
    output = []
    
    # Iterate over the strings 
    for string in list:
        output.append(string.capitalize())
    
    # Return the corrected list
    return output"
Generate a valid JSON from a given Python dictionary.,"data = {
    'name': 'John',
    'age': 25
}","import json
data = {
    'name': 'John',
    'age': 25
}

json_data = json.dumps(data)
# json_data = '{""name"":""John"",""age"":25}'"
Design a Python program to count how many words appear in a given sentence.,Sentence: I am writing this code to practice,"def word_count(sentence): 
    count = 0
    words = sentence.split() 
    for word in words: 
        count += 1
    return count
  
sentence = ""I am writing this code to practice""
count = word_count(sentence)
print(""Number of words present inGiven sentence:"")  
print(count)"
Create a function in Python which can take in a string and capitalize the first character of the string.,"mystring = ""hello world""","def capitalize_first_character(mystring):
    return mystring[0].upper() + mystring[1:]"
Implement a function in Python that takes in a list of integers and returns a new list where the elements are reversed.,"Input list: [1, 2, 3, 4, 5]","def reverse_list(arr): 
    return arr[::-1] 

Input_list = [1, 2, 3, 4, 5]
print(""Original List:"", Input_list) 
Rev_list = reverse_list(Input_list) 
print(""Reversed List:"", Rev_list)"
Create a Python program to write a string in Reverse order,This is a Test string,"def reverse_string(input_string): 
    str = """" 
    for i in input_string: 
        str = i + str
    return str
  
if __name__ == ""__main__"": 
    input_string = ""This is a Test string""
    print(reverse_string(input_string))"
Convert the following Python code to equivalent JavaScript code.,"def add_two_numbers(a, b):
    return a + b","function add_two_numbers(a, b) {
  return a + b;
}"
Construct a Python program to find the index of a given item in a list,"[""a"", ""b"", ""c""], ""b""","def index_of_item(list_of_items, item):
    for i in range(len(list_of_items)):
        if list_of_items[i] == item:
            return i

list_of_items = [""a"", ""b"", ""c""]
result = index_of_item(list_of_items, ""b"")
print(result)"
Write a Python function for encrypting a string of plaintext.,"plaintext = ""Hello World!""","import base64
from cryptography.fernet import Fernet

def encrypt(plaintext):
 key = Fernet.generate_key()
 f = Fernet(key)
 encrypted_data = f.encrypt(plaintext.encode())
 return base64.b64encode(encrypted_data)"
"Using the comments as a guide, fix the given python code.","num_list = [2, 7, 4, 10, 5]
            
 # TODO: replace the line below
total = 0       
for num in num_list:
    total += num

print(total)","num_list = [2, 7, 4, 10, 5]
            
# Replace the line below
total = 0       
for num in num_list:
    total += num

print(total)"
Optimize a Python program to print the sum of the 10 smallest even numbers larger than a user-defined number.,num = 20,"num = int(input(""Enter a number: ""))

# Find the 10 smallest even numbers larger than the user-defined number
numbers = []
total = 0
for i in range(num+1, num+21):
 if i%2 == 0:
  numbers.append(i)
  total += i
  
print('The sum is', total)"
Identify the bug in the following Python code snippet and suggestion a fix.,"def updateList(myList):
 myList = myList + [1]

myList = [1, 2, 3]
updateList(myList)
print(myList)","def updateList(myList):
 myList.append(1)
 
myList = [1, 2, 3]
updateList(myList)
print(myList)"
Improve the following Python code to check if a number is in the range of 1 to 10 (inclusive).,"def check_number(num):
if num >= 1 and num <= 10:
   return True","def check_number(num):
  if (num > 0 and num < 11):
    return True
  else:
    return False"
Develop a program in Python for finding the factorial of a given number.,7,"def factorial(n):
    if n < 0:
        return None
    elif n == 0:
        return 1
    else:
        result = 1
        for i in range(1, n + 1):
            result *= i
        return result

num = 7
print('factorial of {} is {}'.format(num, factorial(num)))"
Create a Python program that wraps a function with a given input sequence and prints out the output of the function.,"def my_function(x):
 return x * x

sequence = [1, 2, 3, 4, 5]","def wrapped(f, seq):
    for x in seq:
        print(f(x))

def my_function(x):
    return x * x

sequence = [1, 2, 3, 4, 5]

wrapped(my_function, sequence)

# Output: 
1
4
9
16
25"
Create a Python program that accepts a sentence as an input and prints out the number of vowels present in that sentence.,This is a sentence.,"def count_vowels(sentence):
    vowels = ""aeiouAEIOU""
    count = 0
    for character in sentence:
        if character in vowels:
            count += 1
    return count

sentence = input(""Enter a sentence: "")

vowel_count = count_vowels(sentence)
print(f""Number of vowels in the sentence is {vowel_count}"")"
Create a Python program which calculates the sum of the two given numbers.,"10, 20","sum = 0
a = 10
b = 20
sum = a + b

print(""The sum of"", a, ""and"", b, ""is"", sum)"
Create a Python program which sorts elements of an array in ascending order.,"[5, 2, 1, 3, 6, 4]","def sort_ascending(array):
    for i in range(len(array)-1):
        for j in range(i, len(array)):
            if array[i] > array[j]:
                array[i], array[j] = array[j], array[i]

    return array

sort_ascending([5, 2, 1, 3, 6, 4]) # Output = [1, 2, 3, 4, 5, 6]"
You need to write a Python code to revert a given list back to its original form.,"my_list = [3, 2, 1, 4]",my_list = my_list[::-1]
Edit a given python program,"Input: A program to round off a number to the nearest integer 

def round_off(a): 
    if (a - math.floor(a) >= 0.5): 
        a = math.ceil(a) 
    else: 
        a = math.floor(a) 
    return a","import math

def round_off(a): 
    if (a - math.floor(a) >= 0.5): 
        a = math.ceil(a) 
    else: 
        a = math.floor(a) 
    return int(a)"
Generate a Python program to convert a given binary string to its equivalent decimal value.,1110,"def binary_to_decimal(n):
    num = n
    dec_value = 0
    base = 1
    temp = num
    
    while temp > 0:
        last_digit = temp % 10
        temp = temp // 10
        dec_value += last_digit * base
        base = base * 2
    return dec_value"
Write a Python program to extract the text from an HTML document.,<h2>Hello World!</h2>,"from bs4 import BeautifulSoup

html = '<h2>Hello World!</h2>'
soup = BeautifulSoup(html, 'html.parser')
text = soup.find('h2').text

print(text) # Hello World!"
Create a Python function that takes a list of numbers and returns the sum of the odd numbers in the list.,"[1, 2, 3, 4, 5]","def sumOdds(nums):
 total = 0
 for num in nums:
 if num % 2 != 0:
 total += num
 return total

nums = [1,2,3,4,5]
sum_odds = sumOdds(nums)
print(sum_odds) #output: 9"
Convert the following JavaScript code to its equivalent Python code.,"const array = [1, 2, 3];","array = [1, 2, 3]"
Create a class in Python to represent a 2-D point and implement a method for finding the Euclidean distance between the two points.,"p1 = (3, 4)
p2 = (7, 8)","class Point:
    def __init__(self, x, y):
        self.x = x
        self.y = y

    def distance(self, point):
        x_diff = self.x - point.x
        y_diff = self.y - point.y
        return math.sqrt(x_diff**2 + y_diff**2)"
Modify the given Python program to sort a list of words in alphabetical order.,"words = ['cat', 'dog', 'bird', 'fish']","words = ['cat', 'dog', 'bird', 'fish']

sorted_words = sorted(words)

print(sorted_words)"
Create a python program for the following purpose:,"Create a program that takes a positive integer N and an array A of length N, and outputs the total number of unique pairs of elements in A which sum up to an even number.","def count_even_pairs(N, A):
    n = 0
    for i in range(N):
        for j in range(i+1,N):
            if (A[i] + A[j]) % 2 == 0:
                n += 1
    return n"
Create a Python program that prints out the words in a sentence in reverse order.,I love programming.,"def reverse_words(sentence):
    words = sentence.split()
    words.reverse()
    return "" "".join(words)

print(reverse_words(""I love programming.""))"
Generate a program in Python to get the index of a particular word in a given sentence,"sentence=""Python is a programming language.""; word=""language""","def index_of_word(sentence, word):
    words = sentence.split()
    for index, value in enumerate(words):
        if value == word:
            return index
    return -1

sentence = ""Python is a programming language.""
word = ""language""
print(index_of_word(sentence, word))"
Create a program to print out the pyramid pattern in Python.,rows = 5,"for i in range(rows):
    for j in range(i):
        print(""#"", end="""")
    print()"
Design a Python program to find the maximum of two numbers.,"a = 25
b = 10","def maximum(a, b):
    if a > b:
        maxVal = a
    elif b > a:
        maxVal = b
    else:
        maxVal = a
    return maxVal

maxVal = maximum(a, b) 
print(""The maximum of two numbers is"", maxVal)"
Optimize a code snippet in Python. The code snippet is a function for computing the factorial of a number.,"def factorial(n):
 if n < 1:
  return 1
 else:
  return n*factorial(n-1)","def factorial(n):
    if n == 0:
        return 1
    else:
        result = 1
        for i in range(1, n+1):
            result *= i
        return result"
Write a script in Python that takes an array of numbers as parameter and returns the minimum and maximum values.,"array=[4, 6, 3, 2, 8, 10]","def min_max(array):
    min = array[0]
    max = array[0]

    for value in array:
        if value < min:
            min = value
        elif value > max:
            max = value
    
    return min, max

array=[4, 6, 3, 2, 8, 10]

min, max = min_max(array)

print(""Minimum: "", min)
print(""Maximum: "", max)"
"Using Python, optimize the following code and explain the optimizations you applied.","def count_words(text):
    ''' Counts the number of words in a text '''
    word_count = 0
    for word in text.split(' '):
        word_count += 1
    return word_count","def count_words(text):
    ''' Counts the number of words in a text '''
    # Optimization #1: Replacing the loop and using Python's count method
    word_count = len(text.split(' ')) 
    return word_count"
Write a Python code fragment to print all the leap years between two years.,"start_year = 2010
end_year = 2020","for year in range(start_year, end_year+1):
    if year % 4 == 0 and (year % 100 != 0 or year % 400 == 0):
        print(year)"
Write a Python program to perform a series of transformations on a given list.,"[1,2,3,4,5,6,7]

Transformations: Multiply each element by 2, select only odd elements, subtract 3 from each remaining element.","def transformations(arr):
    result = [x*2 for x in arr if x%2 != 0]
    result = [x-3 for x in result]
    return result"
Build a Python program to compute the sum of the two given integers.,"a = 10
b = 20","def add_two_ints(a, b):
    return a + b"
Produce a Python program that calculates the average of a list of numbers.,"[1,2,3,4,5,6]","def average(numbers):
	total = 0
	for num in numbers:
		total += num
	return total/len(numbers)

nums = [1,2,3,4,5,6]
print(""Average of the list of numbers is:"", average(nums))"
Create a Python program to swap the first and last items in a list.,"items = [1, 2, 3, 4]","def swap(items):
    temp = items[0]
    items[0] = items[-1]
    items[-1] = temp
    return items"
Write a Python script to compute the mean of a given set of numbers.,"[78.3, 75.1, 76.7, 78.2]","def mean(list_of_numbers):
    total = 0
    for num in list_of_numbers:
        total += num
    return total / len(list_of_numbers)

list_of_numbers = [78.3, 75.1, 76.7, 78.2]
mean_of_list = mean(list_of_numbers)
print(mean_of_list)"
Write a function in Python that takes a list and prints out all the elements in the list.,"list1 = [1, 2, 3, 4, 5]","def printList(list1): 
    for x in list1: 
        print(x) 

printList(list1)"
Create a Python script that takes a word as an input and returns a list of synonyms for that word.,Word (e.g. happy),"import requests
import json

word = input(""Enter a word: "")

url = ""https://api.datamuse.com/words?rel_syn="" + word

response = requests.get(url)

if response.status_code == 200:
 json_data = json.loads(response.text)
 synonyms = [item['word'] for item in json_data]
 print(synonyms)
else:
 print(""Something went wrong!"")"
"Design a function in Python which takes a list of numbers as the input, and returns the maximum element of the list.","[1, 5, 3, 9, 0, 4, 2]","def max_list_element(list):
    max_list_element = None
    for element in list:
        if max_list_element is None or max_list_element < element:
            max_list_element = element
    return max_list_element"
Write Python code to maximize this objective function.,"def obj_func(x):
    return x**2 - 4*x + 3","def maximize_obj_func(x):
    return 2*x - 4

x_opt = maximize_obj_func(x)
opt_val = obj_func(x_opt)
print(""Optimum value of objective function: "", opt_val)"
Rewrite this C++ loop in Python:,"for(int i=0; i<10; i++) {
		cout << i;
	}","for i in range(10):
    print(i)"
Write a Python code to sort a dictionary by values,"dictionary = {
  ""red"": 5,
  ""blue"": 6,
  ""yellow"": 9
}","sorted_dictionary = sorted(dictionary.items(), key=lambda x: x[1])
print(sorted_dictionary)"
Develop a program in Python to identify the longest string in a list of strings.,"[‘apple’, ‘bee’, ‘cat’]","def longest_string(string_list):
    longest_str = string_list[0]
    longest_len = len(longest_str)
    for string in string_list:
        if len(string) > longest_len:
            longest_str = string
            longest_len = len(string)
    return longest_str

string_list = ['apple', 'bee', 'cat']
longest_str = longest_string(string_list)
print(longest_str)"
"Using the given input, sort a list containing both numerical and strings data types in Python.","[1, 'c', 3, 'a', 2, 'b']","# define list 
lst = [1, 'c', 3, 'a', 2, 'b']

# sort list
sorted_lst = sorted(lst, key=lambda x:str(x))

# print sorted list
print(sorted_lst)"
Create a Python program to remove all the duplicates from a given list.,"[1, 4, 2, 5, 6, 4, 1, 5]","def remove_duplicates(lst): 
  non_duplicate_lst = [] 

  for i in lst: 
    if i not in non_duplicate_lst: 
      non_duplicate_lst.append(i) 

  return non_duplicate_lst 

lst = [1, 4, 2, 5, 6, 4, 1, 5]
print(remove_duplicates(lst))"
Write a Python code snippet to sum the elements of two given lists.,"list1 = [1, 2, 3]
 list2 = [4, 5, 6]","def sum_lists(list1, list2):
  return [a + b for a, b in zip(list1, list2)]"
Edit the following python program to ensure that it runs correctly.,"def addNumbers(a, b):
    prop = 10 * a + b
    return product","def addNumbers(a, b):
    product = 10 * a + b
    return product"
Write a code in Python to add two given numbers.,"x = 5 
y = 11","#Function to add two given numbers
def add(x, y):
   return x + y
  
# Print the sum
print(add(x, y))"
Optimize this code in Python to reduce the time complexity from O(n^2) to O(nlogn).,"def maximum_two(arr):
    m1 = m2 = float('-inf')
    for n in arr:
        if n > m2:
            if n > m1:
                m1, m2 = n, m1
            else:
                m2 = n

    return (m1, m2)","def maximum_two(arr):
    arr.sort(reverse=True) 
    m1 = arr[0] 
    m2 = arr[1]
    return (m1, m2)"
Generate a function in Python that returns a random element from a given list.,"[""cat"", ""dog"", ""bird""]","import random

def getRandomElement(list):
  random_index = random.randint(0,len(list)-1)
  return list[random_index]

list = [""cat"", ""dog"", ""bird""]
random_element = getRandomElement(list)
print(random_element)
// Output: one of [""cat"", ""dog"", ""bird""] randomly"
Create a Python program to check for anagrams of a string.,"""listen"", ""silent""","def anagramCheck(str1, str2):
    if (len(str1) != len(str2)):
        return False

    str1 = sorted(str1)
    str2 = sorted (str2)

    # Compare each character in str1 with
    # each character in str2
    for i in range( len( str1 ) ):
        if (str1[i] != str2[i]):
            return False
 
    return True"
Create a Python program to check if a list is sorted in ascending order.,"listA = [1, 5, 9, 10]","def isListAscending(listA): 
    return all(listA[i] <= listA[i+1] for i in range(len(listA)-1)) 

# Driver code 
listA = [1, 5, 9, 10] 
# listA = [10, 9, 5, 1] 

# Print result 
print(isListAscending(listA))"
Find and fix the errors in this Python code.,"a = 10
b = 15
c = a b

print (c)","a = 10
b = 15
c = a + b

print(c)"
"Classify the following Python code as a linear search, binary search, or other.","def search(items, item):
    for i in range(len(items)):
        if items[i] == item: 
            return i
    return -1",This is a linear search.
Generate a Python script to print an inverted triangle pattern made up of asterisks.,5,"def inverted_triangle(length):
    for i in range(length, 0, -1):
        for j in range(length - i):
            print(' ', end="""")
        for j in range(2 * i - 1):
            print('*', end="""")
        print()

inverted_triangle(5)

# Output:
# *****
#  ***
#   *"
Create a Python algorithm to calculate the maximum profit that can be earned given a stock's price list for the day.,"`List of prices = [5, 7, 1, 3, 6, 8]`","def maxProfit(prices):
 maxProfit = 0
 minPrice = float('inf')

 for price in prices:
 minPrice = min(minPrice, price)
 maxProfit = max(maxProfit, price - minPrice)

 return maxProfit

# example
maxProfit([5, 7, 1, 3, 6, 8]) # returns 7"
Convert the following algorithm into a recursive Python function,"def sum_digits(n):
    total = 0
    while n > 0:
        digit = n % 10
        total += digit
        n //= 10
    return total","def sum_digits(n):
    """"""
    Calculates the sum of all digits of a number

    Args:
        n (int): The number

    Returns:
        int: The sum of the digits
    """"""
    if n == 0:
        return 0
    return n % 10 + sum_digits(n // 10)"
Optimize an algorithm written in Python that sums up the numbers in an array.,"[2, 4, 6, 8]","def sum_numbers(arr):
    result = 0
    for num in arr:
        result += num
    return result

arr = [2, 4, 6, 8]

print(sum_numbers(arr))

# optimized version
def optimised_sum_numbers(arr):
    return sum(arr)

print(optimised_sum_numbers(arr))"
Write a python script that normalizes the given text.,The cat and rat chAsEd eAch other,"import re

def normalize_text(text):
    return re.sub(r'[^\w\s]','',text.lower())

text = ""The cat and rat chAsEd eAch other""
print(normalize_text(text))

# Output: the cat and rat chased each other"
"Create a Python function that takes a dictionary as an argument, and returns the value with maximum frequency in that dictionary.","dic = {1: 'a', 2: 'b', 3: 'b', 4: 'c'}","def max_freq_val(dic): 
    max_freq = 0
    max_val = None
    for val in dic.values():
        if dic.values().count(val) > max_freq:
            max_freq = dic.values().count(val)
            max_val = val
    
    return max_val

max_val = max_freq_val(dic)
print(max_val)"
Find the most frequent value in the given array in Python.,"[2, 3, 4, 2, 5, 3]","from collections import Counter

def most_frequent(input_list):
    count = Counter(input_list)
    max_freq = max(count.values())
    for num, freq in count.items():
        if freq == max_freq:
            most_frequent_element = num
    return most_frequent_element

result = most_frequent([2, 3, 4, 2, 5, 3])
print(result)"
Design a loop in Python to iterate over the elements of a list and print the elements in reverse order.,"[10, 15, 20]","my_list = [10, 15, 20]
for i in my_list[::-1]:
    print(i)"
Code an algorithm in Python to compute the Fibonacci sequence.,"A positive integer n.

n = 10","def fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b 
  
# Driver Program 
print(fibonacci(10)) 

# Output: 55"
Create a Python script to extract a list of unique words from the given text.,This is a sample text with some duplicate entries,"import re

text = 'This is a sample text with some duplicate entries'
words_list = re.findall(r'\w+', text)
unique_words = set(words_list)

print(unique_words)
# output: {'some', 'is', 'duplicate', 'with', 'entries', 'text', 'This', 'a'}"
Create a function to replace all instances of a string in another string.,"Input string ""I love Python programming language"" and replace all the 'Python' with 'JavaScript'","def replace_string(old, new, s): 
    return s.replace(old, new) 


input_string = ""I love Python programming language""
new_string = replace_string(""Python"", ""JavaScript"", input_string)
print(new_string)

# Output: I love JavaScript programming language"
Create a method to find the maximum element in a 2-D array in Python.,"Array: 
[[1, 2, 3], 
[4, 5, 6],
[7, 8, 9]]","def maxElement2DArray(arr):
    maxElement = arr[0][0]

    for row in range(len(arr)):
        for column in range(len(arr[row])):
            maxElement = max(maxElement, arr[row][column])
    return maxElement"
Construct a Python program that calculates a person's BMI given their height and weight.,"Weight: 70 kg
Height:  1.80 m","def calculate_bmi(weight, height):
    bmi = weight / (height**2)
    return bmi

weight = 70
height = 1.80

bmi = calculate_bmi(weight, height)
print(""BMI: "" + str(bmi))"
Write a function in Python that takes a list of integers and returns the sum of the even numbers in the list.,"[1, 2, 3, 4, 5, 6]","def sum_even_integers(lst):
    total = 0
    for num in lst:
        if num % 2 == 0:
            total += num
    return total

print(sum_even_integers([1, 2, 3, 4, 5, 6])) # 12"
"Generate a class in Python, implementing the __init__ and __str__ methods to initialize a variable and print its value.","name = ""John Doe""","class Person:
    def __init__(self, name):
        self.name = name

    def __str__(self):
        return self.name

p = Person('John Doe')
print(p)"
"Write a function in Python that receives two positive integers and prints out all the numbers in the range of the two integers (inclusive), except for numbers divisible by three.","lower_bound = 5
upper_bound = 15","def print_numbers(lower_bound, upper_bound):
 for num in range(lower_bound, upper_bound+1):
 if num % 3 != 0:
 print(num)
  
print_numbers(5, 15)"
You need to write a Python program which converts a given Fahrenheit temperature to its corresponding Celsius temperature.,temperature_fahrenheit = 68,"def fahrenheit_to_celsius(temperature_fahrenheit):
    temperature_celsius = (temperature_fahrenheit - 32) * 5.0 / 9.0
    return temperature_celsius

result = fahrenheit_to_celsius(temperature_fahrenheit)
print(f""{temperature_fahrenheit}°F = {result}°C"")
# Output: 68°F ="
Develop a program that alters and returns a given string.,"string: ""Python is fun!""","""""""
Develop a program that alters and returns a given string
""""""

def alter_string(string):

    # alter the original string 
    string_altered = string.replace(""!"", ""?"")

    return string_altered

if __name__ == '__main__':
    string = ""Python is fun!""
    print(alter_string(string))"
Implement a python function to remove all special characters from a string.,"string = “@#$&#() <>, +/”","import re

def remove_special_characters(string):
    return re.sub('[^A-Za-z0-9]+', '', string)"
Generate a python code to classify an array of numbers into a set of categories,"Given an array of numbers [3, 8, 15, 7, 20], classify the array into two categories - even and odd.","def even_odd_classification(arr):
    evens = []
    odds = []

    for i in arr:
        if i % 2 == 0:
            evens.append(i)
        else:
            odds.append(i)
    
    return evens, odds"
Write a python function to search a list of numbers for a given number and output the position if found.,"numbers=[1,2,3,4,5], search=3","def search_list(numbers, search):
    for index, num in enumerate(numbers):
        if num == search:
            return index
    return -1"
Can you create a Python script to find the maximum element in the given array using divide and conquer algorithm?,"arr = [3, 5, 7, 9, 1, 20]","def findMaxElement(arr, low, high):
    if (high == low): 
        return arr[low] 
    else: 
        mid = (low + high) // 2
        max_left = findMaxElement(arr, low, mid) 
        max_right = findMaxElement(arr, mid + 1, high) 
        return max(max_left, max_right) 

print(findMaxElement(arr, 0, len(arr)-1)) # 20"
Design an algorithm in Python to calculate the greatest common divisor of two numbers.,"x = 32
y = 8","def gcd(x,y): 
 if x == 0: 
 	return y 
 return gcd(y%x, x) 

# Driver code
print(gcd(x,y))"
Build a decision tree model in Python.,"X = [[0, 0], [1, 1]]
y = [0, 1]","# Import decision tree classifier from the sklearn library
from sklearn import tree
 
# Input data to the model
X = [[0, 0], [1, 1]]
y = [0, 1]
 
# Create a decision tree classifier object
clf = tree.DecisionTreeClassifier()
 
# Train the decision tree classifier
clf = clf.fit(X, y)"
"Optimize the following Python code to sort a set of numbers (set = [2, 6, 3, 8, 4]) in O(n) time complexity.","unsorted_list = [2, 6, 3, 8, 4]","def sort_list(unsorted_list):
    sorted_list = []
    while unsorted_list:
        min_elem = min(unsorted_list)
        unsorted_list.remove(min_elem)
        sorted_list.append(min_elem)
    return sorted_list"
Design a Python program to implement the Bubble Sort algorithm.,"[1, 8, 4, 6, 2, 5]","def bubble_sort(arr):
    for i in range(len(arr) - 1):
        for j in range(len(arr) - i - 1):
            if arr[j] > arr[j + 1]:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
    return arr

result = bubble_sort([1, 8, 4, 6, 2, 5])
print(result)"
Write a Python script to sort dictionaries as per the value.,"{""a"": 10, ""b"": 3, ""c"": 4, ""d"": 1, ""e"": 5}","dictionary = {""a"": 10, ""b"": 3, ""c"": 4, ""d"": 1, ""e"": 5}
sorted_dict = dict(sorted(dictionary.items(), key=lambda x: x[1],reverse = False)) 
 
print(""Sorting Dictionary as per the Value: "")
print(""The Original Dictionary : "",dictionary)  
print(""The Sorted Dictionary : "",sorted_dict)"
Create another version of a python program which multiplies two numbers without using the multiplication operator.,"Number 1: 8, Number 2: 9","def multiply_2_numbers(x, y):
    product = 0
    for i in range(y):
        product += x
    return product"
Create a basic Python program that prints out the class average for a list of student grades.,"[80, 85, 90, 75, 95]","numbers = [80, 85, 90, 75, 95]

total = 0
for number in numbers:
 total += number

class_average = total / len(numbers)
print(class_average)"
Create a function in Python which takes a given string and returns a dictionary containing the frequency of each word in the string.,"""Hello world hello world""","def word_frequency(string):
    word_freq = {} 
  
    for word in string.split(): 
        if word in word_freq: 
            word_freq[word] += 1
        else: 
            word_freq[word] = 1
  
    return word_freq 
      
string = ""Hello world hello world""
print(word_frequency(string))"
Combine the two Python lists into a single list.,"list1 = [1, 2, 3]
list2 = [4, 5, 6]","combined_list = list1 + list2
print(combined_list)"
Create a Python function that converts an integer into a binary representation as a string.,13,"def to_binary(num):
  result = """"
  while num > 0:
   remainder = num % 2
   num = num // 2
   result = str(remainder) + result
  return result

print(to_binary(13)) # '1101'"
Create a Python program that prints out the Fibonacci series up to n.,n = 5,"# Returns the nth Fibonacci number
def Fibonacci(n):
    if n == 0: 
        return 0
    elif n == 1: 
        return 1
    else: 
        return Fibonacci(n-1) + Fibonacci(n-2) 

# Prints the Fibonacci series
n = 5 
for i in range(n+1): 
    print(Fibonacci(i))"
Create a Python script to divide two sets and store the results in a new set.,"Set 1: {2, 4, 6, 8, 10}
Set 2: {3, 5, 7, 9}","set1 = {2, 4, 6, 8, 10} 
set2 = {3, 5, 7, 9}

# Divide two sets and store the results in a new set
new_set = set1.difference(set2) 
 
# Print the result
print(new_set) # Output: {2, 4, 6, 8, 10}"
Classify the following items using a supervised machine learning algorithm in Python,"[3, 5, 7, 1, 0]","import numpy as np 
from sklearn import svm 

# Input data to classify
X = np.array([[3, 5, 7, 1, 0]])

# Label data, either 0 or 1
y = np.array([0])

# Create a SVC classifier
clf = svm.SVC(gamma=0.001, C=100.)

# Train the model, using the training sets
clf.fit(X, y)

print('Prediction:', clf.predict(X))

Output:
Prediction: [0]"
Create a Python program to detect if a number is a prime number.,No input.,"def is_prime(x):
    if x < 2:
        return False
    
    for i in range(2, x):
        if x % i == 0:
            return False
    return True"
Create a Python program to check if two given lists are disjoint.,"list1 = [2, 3, 4, 5]
list2 = [6, 7, 8, 9]","def check_disjoint(list1, list2):
    return not bool(set(list1) & set(list2))

result = check_disjoint(list1, list2)
print(result)"
"Create a python function which takes two inputs, a list of strings and a character, and returns a dictionary containing the count of each string beginning with the given character.","words = ['apple','ball','cat','dog','elephant']
char = 'a'","def find_words(words, char):
    count_dict = dict()
    for word in words:
        if word.startswith(char):
            count_dict[word] = count_dict.get(word, 0) + 1
    return count_dict"
"Input a text string, and build a function in Python to count the number of vowels in the string.",The quick brown fox jumps over the lazy dog,"def countVowels(sentence):
    vowels = 'aeiouAEIOU'
    count = 0
    for ch in sentence:
        if ch in vowels:
            count += 1
    return count

result = countVowels('The quick brown fox jumps over the lazy dog')
print(result)"
Create a python program to sort a given array in increasing order.,"[21, 3, 14, 15, 5, 21]","def insertion_sort(arr):
    for key in range(1,len(arr)):
        j=key
        while j>0 and arr[j-1] > arr[j]:
            arr[j-1],arr[j]=arr[j],arr[j-1]
            j-=1
    return arr

print(insertion_sort([21, 3, 14, 15, 5, 21]))"
Develop an algorithm in Python to store a set of objects in the most efficient data structure.,"Objects: [1, 2, 3, 4, 5]","def store_elements(elements):
    store = []
    for i in elements:
        store.append(i)
    return store

objects = [1, 2, 3, 4, 5]
storage = store_elements(objects)
print(storage)"
Create a function in Python that will take two strings and merge them together without spaces.,"string1 = ""Hello""
string2 = ""World""","def joinStrings(s1, s2):
    return s1 + s2

print(joinStrings('Hello', 'World'))"
Create a program in Python that takes two lists and checks for common elements between them.,"list1 = [1,2,3,4]
list2 = [3,4,5,6]","list1 = [1,2,3,4]
list2 = [3,4,5,6] 

def check_common(list1, list2): 
    result = False
    for x in list1: 
        for y in list2: 
            if x == y: 
                result = True
                return result  
    return result 
  
print(check_common(list1, list2))"
Develop a python program that checks if a given word is consonant or not.,"word: ""hello""","def is_consonant(word): 
    # List containing all consonants 
    consonants = [""b"",""c"",""d"",""f"",""g"",""h"",""j"",""k"",""l"",""m"",""n"",""p"",""q"",""r"",""s"",""t"",""v"",""x"",""z""] 
    for char in word: 
        if char in consonants: 
            return True
    return False

# Example
print (is_consonant(""hello"")) # False"
Can you provide a Python program to generate all possible combinations of a given list of numbers?,"""list = [1, 2, 3]""","import itertools

# list of numbers
list_of_nums = [1, 2, 3]

# get all possible combinations of numbers
combinations = itertools.combinations(list_of_nums, 3)

# print all possible combinations
for combination in combinations:
    print(combination)"
Compute the sum of two matrices in Python.,"matrix_1 = [[1, 2, 3], [4, 5, 6]]
matrix_2 = [[7, 8, 9], [10, 11, 12]]","import numpy as np

matrix_1 = np.array(matrix_1)
matrix_2 = np.array(matrix_2)

result = np.add(matrix_1, matrix_2)

## Output: [[ 8 10 12], [14 16 18]]"
Generate a python program to print the ordered combination of the elements of the given list.,"[1, 2, 3]","def ordered_combination(arr):
    result = []

    # Generate all permutations using library function 
    permutations = itertools.permutations(arr, len(arr)) 

    # Append each permutation in a list  
    for permutation in permutations: 
        result.append(list(permutation)) 
  
    # Return the list of ordered combinations
    return result"
Generate a Python list comprehension that returns all even numbers in a given range.,"start_num = 2
end_num = 10","even_nums = [num for num in range(start_num, end_num + 1) if num % 2 == 0]"
Create a Python program which takes a list of strings as input and outputs a dictionary containing the count of each string.,"A list of strings including:
['Python', 'Java', 'C', 'Python', 'JavaScript']","string_list = ['Python', 'Java', 'C', 'Python', 'JavaScript']

string_dict = {}
for string in string_list:
 if string in string_dict:
 string_dict[string] += 1
 else:
 string_dict[string] = 1

print(string_dict) # Output: {'Python': 2, 'Java': 2, 'C': 1, 'JavaScript': 1}"
"Using Python, create a function to convert HTML to plain text.","Input HTML:
```
<p>Hello world!</p>
<div>
    <p>This is a test.</p>
</div>
```","import lxml.html as lh

def html_to_text(html):
    tree = lh.fromstring(html)
    return tree.text_content()

html = ""<p>Hello world!</p><div><p>This is a test.</p></div>""

print(html_to_text(html))"
What is the output of this python program?,"x = 5
y = 8
print(x + y)",13
Transform string of format ‘YYYY-MM-DD’ to date type in Python,"date_str = ""2020-04-30""","import datetime

def date_string_to_datetime(date_str):
  return datetime.datetime.strptime(date_str, ""%Y-%m-%d"").date()"
Create a variable in Python to store the length of a list.,"example_list = [1, 2, 3, 4]",list_length = len(example_list)
Create a Python algorithm to check if a given word exists in a dictionary.,"dictionary: {""hello"": ""greeting"", ""car"": ""vehicle""}
word: ""hello""","# Function to test if a word exists in a dictionary 
def wordExists(dictionary, word):
    for key, value in dictionary.items():
        if key == word:
            return True
    
    return False

# Main function
dictionary = {""hello"": ""greeting"", ""car"": ""vehicle""}
word = ""hello""
print(wordExists(dictionary, word))"
Design a code snippet in Python to find the factorial of a given number.,5,"def factorial(num): 
    if num == 0:
        return 1
    else:
        return num * factorial(num-1)

num = 5
fact = factorial(num)
print(""Factorial of"", num,"" is"", fact)"
Create a Python function which returns the greatest common divisor of two integers.,"18, 48","def greatest_common_divisor(a, b):
    # Ensure that a is greater than b
    if a < b:
        a, b = b, a

    # Calculate the GCD of a and b
    while b != 0:
        # Get the remainder
        rem = a % b
        # Set a to b
        a = b
        # Set b to the remainder
        b = rem

    # Return the greatest common divisor
    return a

print(greatest_common_divisor(18, 48))"
Write a python program to return the average value of numbers in the given list.,"numbers = [2, 4, 6, 8]","def avg_list(numbers): 
    total = 0
    for x in numbers: 
        total += x 
    return total / len(numbers)"
Optimize a given Python code to improve the performance.,"""""""
    def find_common_elements(lst1, lst2):
       result = []
       for elem1 in lst1:
           for elem2 in lst2:
               if elem1 == elem2:
                   result.append(elem1)
       return result 
""""""","def find_common_elements(lst1, lst2):
    result = []
    set_2 = set(lst2)
    for elem1 in lst1:
        if elem1 in set_2:
            result.append(elem1)
    return result"
Generate a python program that prints the cube of a given number.,3,"def print_cube(num):
    print(num**3)
    
num = 3
print_cube(num)"
Create a python program to rotate a list of numbers by a given number.,"[1,2,3,4,5]","def rotate_list(nums, n):
  return nums[n:] + nums[:n]"
Write a Python program that croscorrelates two given arrays.,"Array 1: [2, 3, 5, 7], Array 2: [1, 4, 6, 8]","import numpy as np
 
#input arrays
arr1 = np.array([2, 3, 5, 7])
arr2 = np.array([1, 4, 6, 8])

#calculating correlation
correlation = np.corrcoef(arr1, arr2)

#printing correlation
print(""Correlation: "", correlation[0][1])"
Generate a correct python program for solving the following problem,"Given a list of values, find the indices of all pairs whose sum is equal to a given target","def find_pairs_with_sum(values, target):
    indices_list = []
    for i in range(len(values)):
        x = target - values[i]
        if x in values[i+1:]:
            indices_list.extend([i, values.index(x)])
    return indices_list"
Develop a Python program that calculates the mean of list of numbers.,"[1, 5, 2, 4, 9]","def calculate_mean(nums):
    total = 0
    for n in nums:
        total += n
    mean = total / len(nums)
    return mean

mean = calculate_mean([1, 5, 2, 4, 9])"
Optimize the following python program and reduce its runtime.,"def find_min(lst):
    return min(lst)

list = [2, 3, 8, 4, 5]","def find_min(lst):
    min_val = lst[0]
    for value in lst[1:]:
        if value < min_val:
            min_val = value
    return min_val

list = [2, 3, 8, 4, 5]"
Write a Python program to remove the vowels from a given sentence.,A beautiful sun rises in the morning.,"def removeVowels(my_string): 
    vowels = 'aeiouAEIOU'
    no_vowels = """"
    for char in my_string:
        if char not in vowels:
            no_vowels += char
    return no_vowels

sentence = ""A beautiful sun rises in the morning.""
print(removeVowels(sentence))

Output:
A btfll sn rs s n th mrnn."
Design a Python solution to find the position of a given element in a list.,"List: ['a', 'b', 'c', 'd']
Element: 'd'","def find_index(arr, element):
    for index, value in enumerate(arr): 
        if value == element: 
            return index
    return -1
  
arr = ['a', 'b', 'c', 'd']
element = 'd'
print(find_index(arr, element)) # Output: 3"
"Given an array of integers, write a function in Python to search for a given number in the array.","array = [1, 5, 8, 9], number = 5","def search_in_array(array, number):
    for element in array:
        if element == number:
            return True
    return False

array = [1, 5, 8, 9]
number = 5
result = search_in_array(array, number)
if result:
    print(""Number found"")
else:
    print(""Number not found"")"
Create a program in Python to split a string into a list by given character,string = 'This is a sample string',"def split_string(string, delimiter): 
    return string.split(delimiter) 

print(split_string('This is a sample string', ' '))"
Write a Python program to impute the NaN values in the given dataset with the mean of the corresponding column.,"import numpy as np

data = np.array([[1, np.nan, 3], [4, 5, np.nan], [np.nan, 7, 8]])","def impute_nan(dataset, strategy=""mean""):
  for row in range(dataset.shape[0]):
    for col in range(dataset.shape[1]):
      if np.isnan(dataset[row, col]):
        if strategy == ""mean"":
          dataset[row, col] = dataset[:, col].mean()
  return dataset"
"Given a Python dictionary and a value, write a program to remove key from the dictionary having the given value.","dict_inp = {'a':1, 'b':2, 'c':3, 'd':2}
value = 2","def remove_key_by_value(dictionary, value):
    keys_to_remove = []
    for key, val in dictionary.items():
        if val == value:
            keys_to_remove.append(key)

    for key in keys_to_remove:
        del dictionary[key]
    return dictionary"
Write code in Python to find the frequency of words in a given string.,"String: ""The apple is red and the banana is yellow.""","str = ""The apple is red and the banana is yellow.""
wordfreq = {}
 
for rawword in str.lower().split():
    word = rawword.replace(""."","""")
    if word not in wordfreq:
        wordfreq[word] = 0
    wordfreq[word] += 1
    
print(""Frequency of the words:"")
for key, value in wordfreq.items():
  print(key, value)"
Rewrite a python function from a set of instructions using list comprehension.,Define a function that takes a list of numbers and returns a list containing only the odd numbers from the given list.,"def odd_numbers(numbers):
 return [n for n in numbers if n % 2 != 0]"
Develop a python program to calculate the maximum product of two numbers greater than 0 in a given numerical array.,"array = [6, -3, -10, 0, 2]","def maxProduct(arr): 
    n = len(arr) 
    max_prod = 0
    for i in range(0, n): 
        for j in range(i + 1, n): 
            if arr[i] > 0 and arr[j] > 0: 
                max_prod = max(max_prod, arr[i] * arr[j]) 
  
    return max_prod 

# Input
array = [6, -3, -10, 0, 2]

# Output
result = maxProduct(array)
print(result)"
Create a Python script that will automatically detect the largest number in a given list.,"[7, 2, -4, 5, 8, 1]","def find_largest_number(list):
 largest = list[0]
 for number in list:
 if number > largest:
 largest = number
 return largest

list = [7, 2, -4, 5, 8, 1]
print(find_largest_number(list))
# Output: 8"
Generate a Python program to unpack a given list of tuples,"[(1, ""a""), (2, ""b""), (3, ""c"")]","list_of_tuples = [(1, ""a""), (2, ""b""), (3, ""c"")]

list_1, list_2 = zip(*list_of_tuples)

print(list_1)
print(list_2)"
Design a python program that returns the index of the first occurrence of an item in a given list,"item = 7
list = [1, 4, 8, 7, 5, 9, 7]","def index_first_occurrence(item, list):
    for i in range(len(list)):
        if list[i] == item:
            return i
    return -1"
Modify this Python program to sort a given list of numbers.,"numbers = [2, 3, 4, 5, 1]","numbers.sort()
print(numbers) # prints [1, 2, 3, 4, 5]"
Create a Python program to read in a list of items and print them out in reverse order.,"[""Apple"", ""Pear"", ""Banana"", ""Orange""]","my_list = [""Apple"", ""Pear"", ""Banana"", ""Orange""]

for item in reversed(my_list):
 print(item)"
Create a Python Program to print the Fibonacci sequence up to n terms,Print the Fibonacci sequence up to the 5th term,"def Fibonacci(n):
      
    # First and second number in the sequence 
    Fib_list = [0, 1]
    
    # Generate the Fibonacci sequence up to n terms
    for i in range(2,n): 
        Fib_list.append(Fib_list[i-2] + Fib_list[i-1])
    return Fib_list

# Driver code 
n = 5
print(Fibonacci(n))"
Create a Python script to scrape content from a website.,Website URL: 'https://example.com',"import requests
from bs4 import BeautifulSoup 
 
url = 'https://example.com'
page = requests.get(url)
soup = BeautifulSoup(page.content, 'html.parser')
 
for content in soup.find_all('div', class_='content'):
 print(content.text)"
"Write a Python program to combine two dictionaries of similar structure together, such that the entries in the two dictionaries are merged into a single dictionary.","dict_a = {'a':1, 'b':2, 'c':3}
dict_b = {'d':4, 'e':5, 'f':6}","def merge_dict(dict_a, dict_b):
    merged_dict = {**dict_a, **dict_b}
    return merged_dict"
"Create a Python program to print out the sum of all even numbers between the given range, inclusive.","start = 2
end = 10","def sum_even_numbers(start, end):
 result = 0
 for n in range(start, end+1):
 if n % 2 == 0:
 result += n
 return result

print(sum_even_numbers(2, 10))"
"Using the input, create a Python program which generates a random array of length n filled with binary values.",n = 10,"import random

def random_binary_array(n):
    """"""Return a random array of length n with binary values.""""""
    array = []
    for i in range(n):
        array.append(random.choice([0, 1]))
    return array"
Optimize the following Python function. The function calculates the sum of squares of two given numbers.,"def SumOfSquares(x,y):
    result = x**2 + y**2
    return result","def SumOfSquares(x, y):
 return x * (x + y) + y * y"
Create a Python script to combine two dictionaries into one.,"dict1 = {'Name': 'John', 'Age': 30, 'Country': 'Mexico'}
dict2 = {'Animal': 'Pig', 'Color': 'Pink'}","def combine_dict(dict1, dict2):
    combined_dict = dict1.copy()
    combined_dict.update(dict2)
    return combined_dict"
Tackle the task of optimizing a given Python program for faster execution.,"# Program to find the sum of two numbers
def add_numbers(a, b):
    return a + b","# Program to find the sum of two numbers
def add_numbers(a, b):
    # Use bitwise operators instead of normal arithmetic operations
    # as they are much faster and more efficient 
    return a ^ b if a <= b else b ^ a if b <= a else a ^ b"
Optimize this Python code to reduce run time complexity,"def function(n):
    result = 0
    for i in range(n):
        for j in range(n):
            result += i * j
    return result","def function(n):
    result = 0
    for i in range(n):
        result += (n * (i * (i+1)) // 2)
    return result"
Create a Python program that prints out the pyramid pattern as described in the input.,height = 5,"def print_pyramid(height):
    """"""Print the pyramid pattern as described in the input""""""
    for i in range(1, height+1):
        spaces = "" "" * (height - i)
        symbols = (2 * i - 1) * ""*""
        print(spaces + symbols + spaces)"
"Given a dictionary, create a program to find the longest word in Python.","{""hello"": 5, ""world"": 5, ""welcome"": 7, ""to"": 2, ""programming"": 11}","def longest_word(dictionary): 
    longest = """"
    for word in dictionary: 
        if len(word) > len(longest): 
            longest = word 
    return longest"
"Refactor a Python program by identifying code unnecessarily repeated, converting it into a function, and using the function wherever necessary.","def my_function():
  for i in range(0, 5):
    print('loop 1:', i)

  for i in range(0, 5):
    print('loop 2:', i)","def my_function():
  print_loop(0, 5, 'loop 1')
  print_loop(0, 5, 'loop 2')

def print_loop(start, end, tag):
  for i in range(start, end):
    print(tag + ':', i)"
Create a Python function for predicting the label for a given set of features.,"[10, 20, 30]","def predict_label(features):
    # write your code here
    label = None
    
    if features[0] > 10 and features[1] > 20:
        label = ""A""
    elif features[0] > 10 and features[1] < 20:
        label = ""B""
    else:
        label = ""C""
        
    return label

features = [10, 20, 30]
label = predict_label(features)
print(label)"
Generate a python program for searching for a value in an array.,"Array: [0, 1, 2, 3, 4, 5]
Value: 3","def search_value(arr, target):
    for i in range(len(arr)):
        if arr[i] == target:
            return i
    return -1"
Write a Python program to clean up a data set containing temperature readings. Write a function that takes the raw temperature data and returns a list of cleaned up readings as integers.,"raw_readings = [""  24.8"",""31 "",""   15.6    "", ""21.9  ""]","def clean_temps(raw_readings):
 cleaned_data = []
 for reading in raw_readings:
 cleaned_data.append(int(reading.strip()))
 return cleaned_data
 
print(clean_temps(raw_readings)) 
# Output: [24, 31, 15, 21]"
Create a Python function that takes two strings as input. The function should return a boolean value that indicates whether the two strings are anagrams of each other.,"eat, tea","def is_anagram(s1, s2):
 s1 = s1.replace(' ', '').lower()
 s2 = s2.replace(' ', '').lower()

 if len(s1) == len(s2):
 return sorted(s1) == sorted(s2)
 else:
 return False"
Compile a Python program that takes a given list and returns a dictionary with the list elements as keys and their frequencies as values.,"[apple, orange, banana, apple, apple]","def get_frequencies(arr):
  frequency_dict = {}
  for item in arr:
    if item in frequency_dict:
      frequency_dict[item] += 1
    else:
      frequency_dict[item] = 1
  
  return frequency_dict"
Create a Python function to identify if a number is divisible by 7.,42,"def is_divisible_by_7(number):
    return number % 7 == 0

result = is_divisible_by_7(42)
print(result) # True"
Design an algorithm to analyze text data and identify patterns.,Text data to be analyzed.,"A Python implementation of the algorithm that takes the text data as input, identifies patterns in the data, and produces meaningful results."
Compute the sum of the fibonacci sequence up to n using a recursive Python function.,5,"def fib_sum(n):
  if n <= 1:
    return n
  else:
    return fib_sum(n-1) + fib_sum(n-2) + n

print(fib_sum(5))"
Generate a python function that takes a dataframe as its input and returns the sum of all values in the dataframe.,"import pandas as pd

df = pd.DataFrame([[3, 4, 5], [1, 2, 3], [4, 5, 6]], 
                   columns = ['A', 'B', 'C'])","def sum_dataframe(df):
 total = 0
 for col in df.columns:
 total += df[col].sum()

 return total
 
# Example usage
print(sum_dataframe(df)) # prints 18"
Create a script in Python that checks a provided URL for a specific keyword within its content and outputs either a pass or fail result.,"URL: http://www.example.com
Keyword: success","import requests

url = 'http://www.example.com'
keyword = 'success'

r = requests.get(url)
if keyword in r.text:
 print('Pass')
else:
 print('Fail')"
Create a python function that prints out the numbers from 1 to n,n = 5,"def printNumbers(n): 
  for i in range(1,n+1): 
    print(i, end ="" "") 

printNumbers(5)"
"Given two strings s and t, write a Python program to check if t is a substring of s.","s = ""abcabc""
t = ""abc""","def is_substring(s, t):
    if t in s:
        return True
    else:
        return False"
Create a Python program that prints a welcome message to the user based on their input.,"""Welcome to my program!""","name = input(""Enter your name:"") 
 
print(""Welcome to my program "" + name + ""!"")"
Create a python program that categorizes a given list of numbers into odd and even numbers.,"list N = [1, 2, 3, 4, 5, 6]","even = []
odd = []

for num in N:
    if num % 2 == 0:
        even.append(num)
    else:
        odd.append(num)"
Construct a code in Python to reverse a given list.,"[""Apple"", ""Banana"", ""Cherry""]","myList = [""Apple"", ""Banana"", ""Cherry""]

def reverse(myList):
    myList.reverse()
    return myList

print(reverse(myList))  # [""Cherry"", ""Banana"", ""Apple""]"
Create a Python for loop that prints out each element in a given list.,"[10, 20, 30, 40]","for element in [10,20,30,40]:
    print(element)"
Generate a Python program which will take as input a string and output the corresponding hexadecimal representation of the string.,"""Hello world""","import binascii

def stringToHex(s):
 output = ''
 for c in s:
 output += '%02x' % ord(c)

return output

inputString = input('Input a string:')
hexString = stringToHex(inputString)
print(""The hexadecimal representation of the string is: {}"".format(hexString))"
Create a python program to remove all the values in a list that are greater than a given value.,"list = [10, 15, 20, 25, 30], remove values greater than 15","# Defining a function to remove all the values in a list that are greater than a given value
def remove_greater(list, n):
  return [val for val in list if val <= n]

# Testing the remove_greater() function
list = [10, 15, 20, 25, 30]
print(remove_greater(list, 15)) # [10, 15]"
Generate a python program to generate a random list of N elements.,N = 5,"import random

def generate_random_list(n):
    res = []
    for _ in range(n):
        res.append(random.randint(1, 100))
    return res"
Create a function using Python that reverses the order of the words in a given string.,Please reverse the order of the words.,"def reverse_words(string): 
    words = string.split(' ') 
    reverse = words[::-1] 
    return ' '.join(reverse)"
Create an AI model in Python that predicts whether a person is a relative of the speaker.,No input,"def relative_prediction_model():
    # Variables
    features = [""age"", ""gender"", ""race"", ""income"", ""location"", ""origin"", ""religion"", ""political views"", ""marital status"", ""education level"", ""occupation""]
    target = ""relation""
    # Defining model, training and predicting
    model = MLPClassifier()
    model.fit(features, target)
    return model"
Write a Python program to parse a string containing HTML tags and extract the text not contained in the HTML tags.,"<p>This is a <a href=""https://example.com"">link</a>.</p>","import re

html = '<p>This is a <a href=""https://example.com"">link</a>.'
text = re.sub(r'<[^>]+>', '', html)
print(text)

# Output: This is a link."
"Create a function in Python which takes in a number n and returns ""Fizz"" if the number is divisible by 3, ""Buzz"" if the number is divisible by 5, and ""FizzBuzz"" if the number is divisible by both 3 and 5.",Number: 15,"def fizzbuzz(n):
 if n % 3 == 0 and n % 5 == 0:
  return 'FizzBuzz'
 elif n % 3 == 0:
  return 'Fizz'
 elif n % 5 == 0:
  return 'Buzz'
 else:
  return n"
Produce code to print out the multiplication table of a given number in Python.,Number: 5,"# Program to print the multiplication table
num = 5

# Iterate from 1 to 10
for i in range(1,11):
 print(f'{num} X {i} = {num * i}')"
Create an algorithm to detect a palindrome string in Python.,"String str = ""madam"";","def isPalindrome(str):
  left, right = 0, len(str) - 1
  while right >= left:
    if not str[left] == str[right]:
      return False
    left += 1
    right -= 1
  return True"
Write a Python program to read in a list of words separated by spaces and reverse them in-place.,"word_list = [""Birds"", ""fly"", ""in"", ""the"", ""sky""]",word_list.reverse()
Write a function in Python which takes a number and multiplies it by 3.,number = 4,"def multiplyByThree(number):
  return number*3

multiplied_value = multiplyByThree(4)
print(multiplied_value)"
"Create a Python function that takes two lists as parameters, and returns the first list with each element doubled.","list1: [1, 2, 3] 
list2: [4, 5, 6]","def double_list(list1,list2):
  for i in range(len(list1)):
    list1[i] *= 2
  return list1

list1 = [1, 2, 3] 
list2 = [4, 5, 6]

print(double_list(list1,list2))"
"Given a sentence, write a Python program to capitalise the first letter of each word.",Sentence: hello world,"words = ""hello world""
words = words.split()

new_words = [word.capitalize() for word in words]
modified_string = "" "".join(new_words)

print(modified_string)"
Create a Python function that processes a string and returns the string in lowercase.,"String to be modified: ""MyString""","def process_string(string):
    return string.lower()

process_string(""MyString"") # returns ""mystring"""
Write a Python program to intersect two given arrays without using any in-built functions.,"a = [1, 7, 11, 58, 80]
b = [11, 13, 7, 32, 80]","def intersect(a, b):
  intersection = [] 
  for i in a:
    for j in b:
      if i == j and i not in intersection:
        intersection.append(i)
  return intersection

print(intersect([1, 7, 11, 58, 80], [11, 13, 7, 32, 80]))"
Generate a list of all possible subsets of a list of size n in Python,"list = [1,2,3]","def all_subsets(lst):
    
    res = [[]]
    
    for elem in lst:
        res += [subset + [elem] for subset in res]
        
    return res
all_subsets([1,2,3])"
Write a Python program to sort a given list of numbers using QuickSort.,"[3, 8, 6, 10, 11, 4]","def quickSort(arr): 
	if len(arr) <= 1:
	return arr 
	else: 
		pivot = arr[0] 
		lessThanPivot = [number for number in arr[1:] if number <= pivot] 
		moreThanPivot = [number for number in arr[1:] if number > pivot] 
		return quickSort(lessThanPivot) + [pivot] + quickSort(moreThanPivot)

arr = [3, 8, 6, 10, 11, 4] 
print(quickSort(arr))"
"Write a function in Python that takes in two parameters, an array of integers and a target, and returns the indices of the two numbers in the array that add up to the target.","arr = [3, 5, 7, 9, 10]
target = 12","def two_sum(arr, target):
 for i in range(len(arr)):
 for j in range(i+1, len(arr)):
 if arr[i] + arr[j] == target:
 return (i, j)

# Usage
arr = [3, 5, 7, 9, 10]
target = 12

print(two_sum(arr, target))
# Output: (0, 4)"
Write a function in Python to convert a list of strings to an array of integers.,"list = ['12','14','17','25','99','168']","def convert_list_integers(str_list):
    return list(map(int, str_list))

list = ['12','14','17','25','99','168']
arr = convert_list_integers(list)
print(arr) # [12, 14, 17, 25, 99, 168]"
Write a Python program to determine and-or operations,x = False and False,"x = False and False

# Output
print(x)
# False"
Optimize a code snippet to port the code from Python to R.,"// Python code snippet
def add_numbers(a, b):
    return a + b","# R code snippet
add_numbers <- function(a, b) {
  a + b
}"
Write a Python function to convert an array of strings to a dictionary.,"[""John"", ""James"", ""Bubby"", ""Mary""]","def string_to_dict(strings):
    return {string: len(string) for string in strings}"
Implement a function in Python to generate a password of size n,6,"import string
import random

def generate_password(n):
    password = ''
    for i in range(n):
        password += random.choice(string.ascii_letters + 
        string.digits + string.punctuation)
    return password"
Generate a Python program to convert a list of strings to a list of integers.,"['1', '3', '2', '6']","def str_to_int(lst):
  int_lst = []
  for i in lst:
    int_lst.append(int(i))
  return int_lst"
Design an efficient data-structure using Python for,storing a list of strings that can be efficiently searched.,"class StringList:
    def __init__(self): 
        self.storage = []
 
    def add(self, item): 
        self.storage.append(item)
 
    def search(self, query): 
        if query in self.storage:
            return True 
        else: 
            return False"
Transform the following nested for loop into a list comprehension statement in Python.,"for i in range(2, 5): 
    for j in range(3): 
        print(i, j)","[(i,j)  for i in range(2,5) for j in range(3)]"
Write a Python program to identify the count of the largest contiguous subarray of numbers in a given array.,"arr=[-2, -3, 4, -1, -2, 1, 5, -3]","def max_contiguous_subarray(arr):
 max_end = 0
 max_so_far = 0

 for i in range(len(arr)):
 max_end = max(max_end + arr[i], 0)
 max_so_far = max(max_end, max_so_far)

 if max_so_far > 0:
 return len(arr) - max_so_far
 else:
 return 0"
Construct an algorithm in Python to convert a string to uppercase.,hello world,"def stringToUpper(str):
    return str.upper()

inputStr = ""hello world""

outputStr = stringToUpper(inputStr)

print(outputStr)"
Create a Ruby program to implement lexicographical sorting.,"[""ruby"", ""go"", ""java"", ""python""]","def lexicographical_sort(arr)
  arr.sort_by { |word| word.downcase }
end

sorted_arr = lexicographical_sort([""ruby"", ""go"", ""java"", ""python""])

puts sorted_arr"
Write a Python code snippet to check if a list contains duplicated elements.,"[3, 6, 8, 9, 10, 3]","""""""
Python code snippet to check if a list contains duplicated elements
""""""

def has_duplicates(arr):
    seen_elements = set()
    for elem in arr:
        if elem in seen_elements:
            return True
        seen_elements.add(elem)
    return False

if __name__ == '__main__':
    arr = [3, 6, 8, 9, 10, 3]
    print(has_duplicates(arr)) # True"
Fill in the blanks to create a Python program to calculate the total number of words in a list.,"words = [""Hello"", ""World"", ""!""]","words = [""Hello"", ""World"", ""!""]

total_words = 0
for word in words:
____ total_words = total_words + ____

print(total_words)

# Output: 3

total_words = 0
for word in words:
    length = len(word)
    total_words = total_words + length

print(total_words)

# Output: 3"
Write a Python program to sort a dictionary by its keys.,"d = {""name"": ""John"", ""age"": 24, ""class"": ""Engineering""}","d = {""name"": ""John"", ""age"": 24, ""class"": ""Engineering""}

sorted_d = sorted(d.items(), key=lambda x: x[0]) 

print(sorted_d)"
Automate the following task using Python,You are given a spreadsheat which contains a list of customer names and their respective purchase amounts. Calculate the total purchase made by each customer.,"import pandas as pd

# load spreadsheet
df = pd.read_csv('customer_purchase.csv')

# calculate total purchase for each customer
total_purchase = df.groupby('Customer Name')['Purchase Amount'].sum().reset_index()

# print total purchase for each customer
print(total_purchase)"
Create a searching algorithm in Python to find a target element in a list of integers.,"target = 7
elements = [1, 2, 3, 4, 5, 6, 7, 8]","def search(target, elements):
  start = 0 
  end = len(elements) - 1

  while start <= end:
    mid = (start + end) // 2 
      
    if target == elements[mid]: 
      return True 
  
    elif target < elements[mid]: 
      end = mid - 1

    else: 
      start = mid + 1
    
  return False"
Implement a Python method to encrypt a given string.,"text = ""Hello, World!""","def encrypt(text): 
    result = """" 
    for i in range(len(text)): 
        char = text[i] 
        if (char.isupper()): 
            result += chr((ord(char) + 7)) 
        else: 
            result += chr((ord(char) + 3)) 
    return result 

text = ""Hello, World!""
print(encrypt(text))"
Create a python program to calculate the grade based on a given score.,80,"score = 80
if score >= 90:
    grade = 'A'
elif score >= 80:
    grade = 'B'
elif score >= 70:
    grade = 'C'
elif score >= 60:
    grade = 'D'
else:
    grade = 'F'

print(grade)"
Write a python program to check whether two sequences are equal or not.,"seq_1: [1, 2, 3, 4]
seq_2: [1, 4, 3, 2]","def is_equal(seq_1, seq_2):
  return sorted(seq_1) == sorted(seq_2)"
Build a function in Python for computing the Hamming Distance between two strings of equal length.,"String 1: python
String 2: perl","def hammingDistance(s1, s2): 

    # initialize with 0
    distance = 0
  
    # Calculate the length of the string 
    length_str1 = len(s1) 
    # Compare adjacent characters and increment the count 
    # if characters are not same 
    for i in range(length_str1): 
        if s1[i] != s2[i]: 
            distance += 1
  
    return distance"
Generate a code to remove a given element from a dictionary in Python,"dictionary = {“a”:1, “b”:2, “c”:3}
key = “b”","def remove_dict_element(dictionary, key):
    # Check if the key is present in the dictionary
    if key in dictionary:
        # If yes, remove the key
        del dictionary[key]
    # Return the updated dictionary     
    return dictionary"
Refactor the following Python function to use list comprehensions.,"def square_numbers(nums):
  result = []
  for num in nums:
    result.append(num ** 2)
  return result","def square_numbers(nums):
  return [num ** 2 for num in nums]"
Generate a Dockerfile for the following server configuration.,"Python 3.8.5
MySQL 5.7
Nginx 1.18.0","FROM python:3.8.5-slim

RUN apt-get update
RUN apt-get install -y mysql-server-5.7 nginx

RUN service mysql start && \
	mysql -e ""CREATE DATABASE new_database;""
	
EXPOSE 80

CMD [""nginx"", ""-g"", ""daemon off;""]"
Create a Python class that takes a list as input and returns a sorted list as output.,"[5, 2, 7, 3]","class SortList:
    def __init__(self, lst):
        self.lst = lst
        
    def sort_list(self):
        self.lst.sort()
        return self.lst"
Generate a new Python list that contains only the even values from a given list.,"list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","def get_even_list(list):
    even_list = []
    for num in list:
        if num % 2 == 0:
            even_list.append(num)
    return even_list

list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(get_even_list(list))"
Write a Python program to group a list of numbers based on their modulo with a given number.,"list_numbers = [2, 6, 8, 10, 3, 7] 
num = 3","def group_modulo(list_numbers, num):
    result = {i:[] for i in range(num)}
    for number in list_numbers:
        result[number % num].append(number)
    
    return result
    
result = group_modulo(list_numbers, num)
print(result)"
Write a Python program that prints out items that appear in both listA and listB,"listA = [1, 2, 3, 4]
listB = [2, 4, 5, 6]","listA = [1, 2, 3, 4]
listB = [2, 4, 5, 6]

for i in listA:
    if i in listB:
        print(i)

# Output
2
4"
Construct a Python function that takes as input a string and returns the length of the longest word in the string.,"""This is an example string.""","def longest_word_length(input_string):
    longest_word_length = 0
    words = input_string.split()
    for word in words:
        if len(word) > longest_word_length:
            longest_word_length = len(word)
    return longest_word_length"
Write a Python script that takes a dictionary and prints out the keys and their respective lengths.,"dictionary = {
 ""one"": 1,
 ""two"": 2,
 ""three"": 3,
 ""four"": 4
}","for key, value in dictionary.items():
 print(f'The length of {key} is {len(key)}')"
Write a function in Python to sort the given list of strings based on the length of the words in ascending order.,"[""apple"", ""mango"", ""banana"", ""cherry""]","def sort_by_word_length(word_list):
	""""""
	Function to sort a given list of strings 
	based on the length of the words in ascending order.
	@param word_list: list
	@return: list
	""""""
    return sorted(word_list, key=lambda x: len(x))"
Create a program in Python that reads a string from standard input and prints the frequency of each letter in the input.,"""Hello World!""","from collections import Counter

def frequency(string):
    count = Counter()
    for letter in string:
        count[letter] += 1
    return count

if __name__ == ""__main__"":
    input_string = input(""Enter the string: "")
    count = frequency(input_string)
    print(count)"
Create a Python program that reads an input list and replaces all occurrences of 0 with -1.,"[1, 0, 2, 4, 0, 5]","def replace_zeros(lst):
  for i in range(len(lst)):
    if lst[i] == 0:
      lst[i] = -1
  return lst

# Main
input_list = [1, 0, 2, 4, 0, 5]
new_list = replace_zeros(input_list)

print('List after replacement:', new_list)"
Write a python code snippet to identify a word is a palindrome or not.,word: radar,"# Python code to identify word is palindrome or not 
  
word = 'radar'
  
# Reversing a word 
rev_word = word[::-1] 
  
# checking if the word is equal to its reverse 
if (word == rev_word): 
    print(""The word is a palindrome."") 
else: 
    print(""The word is not a palindrome."")"
"Write a Python code that finds the maximum value of a list, given a list of numbers as input.","[1, 4, 8, 2, 6]","max_value = max([1, 4, 8, 2, 6])
print(max_value)"
Create a Python script that finds the most frequent words in a passage.,"passage = ""This is a passage about cats.""","from collections import Counter

def most_frequent_words(passage):
    word_list = passage.split() 
    word_freq = Counter(word_list) 
  
    most_freq_word = word_freq.most_common(1) 
    return most_freq_word"
"Build a program in Python using the Pandas library to calculate the mean, median, and mode of a given series.","[1, 2, 2, 3, 3, 3, 4, 5]","import pandas as pd

# Create Series
data = [1, 2, 2, 3, 3, 3, 4, 5]
series = pd.Series(data)

# Calculate mean
mean = series.mean()

# Calculate median
median = series.median()

# Calculate mode
mode = series.mode()

# Print results
print(""Mean:"", mean)
print(""Median:"", median)
print(""Mode:"", mode)"
Write a Python function that takes a list of names as an input and generates a dictionary of people’s names as keys and their scores as values.,"names = [""John"", ""Mary"", ""Jack"", ""Sarah""]","def names_scores(names):
    scores = {}
    for name in names:
        scores[name] = random.randint(1, 10)
    return scores"
Write a Python program to remove a specified item from a dictionary.,"sample_dict = {'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5}","def remove_from_dict(d, key):
    if key in d:
        del d[key]
    return d

result = remove_from_dict(sample_dict, 'three')
print(result)"
Refactor this Python program to optimize the performance,"def calculate_sum(numbers):
    total = 0
    for n in numbers:
        total += n
    return total","def calculate_sum(numbers):
    return sum(numbers)"
Write a Python algorithm to convert the following text into a list of integers.,"""3, 17, 2, 9, 11""","# convert a string to list of numbers
def convert_to_list(s):
    numbers = s.split(',')
    return [int(num) for num in numbers]

text = ""3, 17, 2, 9, 11""
int_list = convert_to_list(text)
print(int_list)"
Write a function in Python to perform standard normalization of a given data.,"Data:
[35,45,55,65,75]","def normalize(data):
    """"""Performs standard normalization of a given data""""""
    mean = sum(data)/len(data)
    std_dev = (sum([(x-mean)**2 for x in data])/len(data)) ** 0.5
    return [(x-mean)/std_dev for x in data]

data = [35,45,55,65,75]

print(normalize(data)) # output: [-1.0, -0.5, 0.0, 0.5, 1.0]"
Produce a Python code to sort a two dimensional array in row-wise manner.,"arr = [[12, 17, 11], [17, 11, 13], [14, 18 22]]","def row_wise_sorting(arr):
    for row in arr:
        row.sort()

arr = [[12, 17, 11], [17, 11, 13], [14, 18, 22]]
row_wise_sorting(arr)

print(arr)"
Optimize a Python function that returns the value at the index of an array (list) of size n.,"[20, 30, 50, 70, 90]","def getValueAtIndex(arr, index):
    return arr[index] if index >= 0 and index < len(arr) else 0

print(getValueAtIndex([20, 30, 50, 70, 90], 3)) # 70"
"Using Python, edit the following dataset to discard outliers.","Dataset: [12, 34, 37, 10, 89, 67, 99, 101]","import numpy as np

dataset = [12, 34, 37, 10, 89, 67, 99, 101]
dataset_without_outliers = [x for x in dataset if abs(x-np.mean(dataset)) < 3*np.std(dataset)]

print(dataset_without_outliers) # prints [12, 34, 37, 10, 89, 67, 99]"
Develop a Python 3 program that takes a list of integers as an argument and returns the mean of the list.,"[1,2,3,4,5]","def mean(list):
 total = 0
 for num in list:
 total+=num
 return total/len(list)

list = [1,2,3,4,5]
mean = mean(list)
print(mean) # prints 3.0"
Create a program in Python to normalize a given input string.,"input_string = ""david_Xq3r5""","import re 

def normalize_string(input_string): 
  ## convert to lowercase 
  normalized_string = input_string.lower() 
  
  ## remove special characters 
  normalized_string = re.sub(""[^a-z0-9]"", """", normalized_string) 
  
  ## return the normalized string
  return normalized_string

normalized_string = normalize_string(input_string) 
print(normalized_string) # davidxq35"
"Create a function in Python to apply a discount rate to a given price. This should accept two parameters, a float for the discount rate between 0 and 1 and the price. The function should return the discounted price.","discountRate = 0.9
price = 200","def applyDiscount(discountRate, price):
    discountedPrice = discountRate * price
    return discountedPrice

print(applyDiscount(discountRate, price)) # 180"
Create a Python code snippet to return the index of a given item from a list.,"list_of_numbers = [3, 6, 8, 4, 9, 2]
item = 6","item_index = list_of_numbers.index(item)
print(item_index) # Prints 1"
Create a function in Python to return the largest number in a list.,"[50, 30, 65, 80]","""""""
Return the largest number in a list
""""""

def largest_num(nums):
    largest = nums[0]
    for num in nums:
        if num > largest:
            largest = num
    return largest

if __name__ == '__main__':
    nums = [50, 30, 65, 80]
    print(largest_num(nums))"
Generate a Python program that implements Linear Search with a list of integers as input.,"sampleList = [5, 2, 3, 8, 0]","def linearSearch(sampleList, x):
 for i in range(len(sampleList)):
 if sampleList[i] == x:
 return i 

return -1

# Driver code
x = 5
result = linearSearch(sampleList, x)

if result == -1:
 print(""Element not found"")
else:
 print(""Element found at index"", result)"
Write a Python function to calculate the probability of an event occurring.,p = 0.8,"def probability(p): 
    return p 
  
print(f""The probability of the event occurring is {probability(p)}"")"
Develop a Python script to find the element that appears most often in a given list.,"mylist = [2, 3, 4, 5, 2, 3, 2, 5, 6, 7]","from collections import Counter

mylist = [2, 3, 4, 5, 2, 3, 2, 5, 6, 7]
freq = Counter(mylist)
most_common_element = freq.most_common(1)[0][0]
print(""The most common element is %d"" %most_common_element)"
Write a Python program to compute the sum of two given integers.,"a = 5
b = 7","sum = a + b
print(sum) # 12"
Write a Python program to compute the sum of three given numbers.,"5, 10, 15","def sum_numbers(num1, num2, num3):
    return num1 + num2 + num3
    
if __name__ == ""__main__"":
    print(sum_numbers(5, 10, 15))"
Create a Python program that takes a list and replaces all negative numbers in the list with zeros.,"[-1, 2, -3, 4, -5]","def replace_negative_with_zero(numbers):
    new_list = []

    for num in numbers:
        if num < 0:
            new_list.append(0)
        else:
            new_list.append(num)
    return new_list"
"Write a python code to find all numbers in a given string, and print them out.","""There are 45.8 apples and 12.3 oranges.""","import re

string = ""There are 45.8 apples and 12.3 oranges.""
numbers = re.findall(r""[-+]?\d*\.\d+|\d+"", string)
print(numbers)

# Output: ['45.8', '12.3']"
Generate a program in python that searches for an element in the given list and returns its index.,"mylist = [1, 4, 5, 8, 9]
element = 5","def search_list(mylist, element):
  
  for i in range(len(mylist)):
    if mylist[i] == element:
      return i
  
  return -1

mylist = [1, 4, 5, 8, 9]
element = 5

index = search_list(mylist, element)

if index == -1:
  print(""Element not found."")
else:
  print(""Element found at index:"", index)"
Write a Python script which iterates over a list of numbers and prints them out in reverse order.,"[1, 2, 3, 4]","numbers = [1, 2, 3, 4]
 
for i in range(len(numbers)-1, -1, -1):
    print(numbers[i])"
Re-write the following SQL query in Python.,SELECT * FROM Movies WHERE category = 'horror';,"import sqlite3

conn = sqlite3.connect('movies.db') 
cursor = conn.cursor()

cursor.execute(""SELECT * FROM Movies WHERE category = 'horror'"")

result = cursor.fetchall()
for row in result:
    print(row)

conn.close()"
"Generate a python dictionary for storing student information as { Student ID: (name, email, phone number) }","Alice: (123456, alice@example.com, 123-456-789)
Bob: (789456, bob@example.com, 456-789-012)","student_dict = {
    123456: (""Alice"", ""alice@example.com"", ""123-456-789""),
    789456: (""Bob"", ""bob@example.com"", ""456-789-012"")
}"
Write a Python program to create a new list that contains the common elements of two other lists.,"[1, 2, 3, 4], [2, 4, 6, 8]","def common_elements(list1, list2):
    common_list = []
    for element in list1:
        if element in list2:
            common_list.append(element)
    return common_list

list1 = [1, 2, 3, 4]
list2 = [2, 4, 6, 8]
print(common_elements(list1, list2))"
Develop a Python program to generate a Ruby code to format a given text.,"""This is a test text.""","def format_text(input_text):
    formatted_str = """"
    for i in input_text:
        if i.isupper():
            formatted_str += ""'#{i}'""
        else:
            formatted_str += i
    return formatted_str"
Write a Python program to sort the values of a dictionary by its keys in alphabetical order.,"dictionary = {""c"": 3, ""a"": 1, ""b"": 2}","def sort_dictionary_by_keys(dictionary):
    result = {}
    for key in sorted(dictionary.keys()):
        result[key] = dictionary[key]
    return result

dictionary = {""c"": 3, ""a"": 1, ""b"": 2}
sorted_dictionary = sort_dictionary_by_keys(dictionary)

print(sorted_dictionary)"
Create a program in Python which can calculate the median of an array of integers.,"[3, 5, 7, 4, 8, 1, 9]","def median(arr):
    arr.sort()

    if len(arr) % 2 != 0:
        return arr[len(arr)//2]
    else: 
        return (arr[len(arr)//2 - 1] + arr[len(arr)//2]) / 2

arr = [3, 5, 7, 4, 8, 1, 9]

med = median(arr)
print('Median of the given array is:', med)"
Optimize the Python program below for making the code more efficient.,"def sum_list(list):
    result = 0
    for i in list:
        result += i
    return result","def sum_list(list):
    return sum(list)"
Create a function in Python that takes two strings as arguments and returns a concatenated string.,"String1: ""Hello ""
String2: ""World""","def concat_strings(first_str, second_str):
 return first_str + second_str

print(concat_strings(""Hello "", ""World"")) # prints ""Hello World"""
Create a Python function that takes a string as an argument and reverses it.,testing,"def reverse_string(str_input):
    reversed_string = ''
    index = len(str_input)
    while index > 0: 
        reversed_string += str_input[ index - 1 ]
        index = index - 1
    return reversed_string

print(reverse_string(""testing""))"
Create a Python script that prints the number of unique characters in a given string and their frequency.,Hello World,"inputString = ""Hello World"" 
freq = {}
  
for ch in inputString:
    if ch in freq:
        freq[ch] += 1
    else:
        freq[ch] = 1

for key, value in freq.items():
    print (key + "" has a frequency of "" + str(value))"
Create a web-crawler in Python to extract links from a web page.,Web page URL: http://www.example.com,"import urllib.request 
from bs4 import BeautifulSoup

#Providing the url as an argument to urlopen() 
url = ""http://www.example.com""
html = urllib.request.urlopen(url).read() 
soup = BeautifulSoup(html, features = 'html.parser') 

# extracting links from the web page 
links = [] 
for link in soup.findAll('a'): 
    links.append(link.get('href')) 

print(links)"
Create a function in Python to find the prime numbers up to a given integer n.,8,"def primes_up_to(n):
 primes = []
 for i in range(2, n + 1):
 for j in range(2, i):
 if i % j == 0:
 break
 else:
 primes.append(i)
 break
 return primes

print(primes_up_to(8)) # [2, 3, 5, 7]"
Create an algorithm in Python that takes an array of strings and sorts them in alphabetical order.,"['Jan', 'June', 'Raju', 'April']","def alphabeticalSort(arr):
    arr.sort()
    return arr

result = alphabeticalSort(['Jan', 'June', 'Raju', 'April'])
print(result)"
Create a command line application in Python which takes a list of numbers and returns whether the list is sorted.,"[1, 4, 5, 6, 7, 9]","import sys

def is_sorted(nums):
 for i in range(len(nums) - 1):
  if nums[i] > nums[i + 1]:
   return False
 return True

nums = [int(x) for x in sys.argv[1:]]

if is_sorted(nums):
 print('The list is sorted')
else:
 print('The list is not sorted')"
Use the BeautifulSoup library in Python to parse HTML from a website.,Example website: https://www.example.com,"import requests
from bs4 import BeautifulSoup

#make a GET request
response = requests.get('https://www.example.com')

#parse HTML
soup = BeautifulSoup(response.text, 'html.parser')"
Write a script in Python to retrieve data from a web API.,The web API is available at http://api.example.com/v1/zipcodes and requires the parameter `zipcode` to execute.,"import requests

zipcode = '12345'
url = 'http://api.example.com/v1/zipcodes'

params = {'zipcode': zipcode}
response = requests.get(url, params=params)

if response.status_code == 200:
 data = response.json()
 print(data)
else:
 print('Error: ', response.status_code)"
Write a Python program to sort a list of integers in ascending order.,"list=[4,2,3,5,1]","list = [4, 2, 3, 5, 1]
list.sort()
print(list)"
"Design a REST API endpoint in Python Flask to return a list of users, sorted by last name.",No input,"@app.route(""/users"", methods=[""GET""])
def get_users():
    users = User.query.order_by(User.last_name).all()
    return jsonify([user.serialize() for user in users]), 200"
"Given a list of strings, write a Python program to sort the strings in alphabetical order.","strings = ['Python', 'Java', 'C++', 'C#']","def sort_strings(strings):
	return sorted(strings)

if __name__ == '__main__':
	strings = ['Python', 'Java', 'C++', 'C#']
	sorted_strings = sort_strings(strings)
	print(sorted_strings)"
Translate this Python program into a JavaScript program.,"# Python code
def hello_name(name):
   return ""Hello "" + name + ""!""","function hello_name(name) {
   return ""Hello "" + name + ""!"";
}"
Write a Python program to count the number of characters in a string.,"String = ""Hello World""","String = ""Hello World""

def count_characters(str):
  return len(str)

print(""Number of characters in the string:"", count_characters(String))"
Write a Python script to convert a given string to datetime format.,Input Date: 10/07/2020,"import datetime

def convert_to_date(input_date):
    date_obj = datetime.datetime.strptime(input_date,""%d/%m/%Y"")
    return date_obj"
Construct a neural network model in Python to predict the sale numbers of a product.,"Product: A
Historical data of sales: [3, 4, 2, 6, 5, 10]","model = Sequential()
model.add(Dense(8, activation='relu', input_shape=[6]))
model.add(Dense(1, activation='linear'))
model.compile(optimizer='adam', loss='mean_squared_error', metrics=['mae'])
model.fit(x_train, y_train, epochs=500, verbose=False)"
"Create a Python program that takes a list of numbers, sorts them in descending order, calculates the average of the numbers, and prints the result.","[3, 7, 9, 4, 5]","# Calculating average of [3, 7, 9, 4, 5]
sorted_nums = sorted([3, 7, 9, 4, 5], reverse=True)
sum_nums = sum(sorted_nums)

# Calculating average
average = sum_nums/len(sorted_nums)

# Printing the average
print('The average of the list is: ', average)"
Generate a Python program that takes a number as input and calculates its sum of digits.,Number: 123,"n = 123
sum_of_digits = 0

while n > 0:
    digit = n % 10
    sum_of_digits += digit
    n //= 10

print(""Sum of digits in 123 is:"", sum_of_digits)"
Write a Python program that takes a list as input and returns the longest consecutive string of characters.,"['a', 'bb', 'ccc', 'dd', 'eee']","def longest_consecutive(lst):
    longest = """"
    for word in lst:
        if len(word) > len(longest):
            longest = word
    return longest

lst = ['a', 'bb', 'ccc', 'dd', 'eee']

print(longest_consecutive(lst))

# Output should be ""ccc"""
Write a function in Python that takes two lists of integers and returns a single merged list with unique elements sorted in ascending order.,"list1 = [1, 2, 3, 4] 
list2 = [2, 4, 5, 6]","def merge_unique_sorted_lists(list1, list2):
	merged_list = list1+list2
	unique_list = list(set(merged_list))
	unique_list.sort()
	return unique_list"
Design a function in Python for swapping the values of two given integers.,"x = 3, y = 5","def swap_values(x, y):
    temp = x
    x = y
    y = temp
    return x, y

x, y = swap_values(3,5)
print(x, y)"
Write a Python function to find the maximum from 3 numbers.,"10, 7, 4","def find_max(a, b, c):
    max = a
    if b > max:
        max = b
    if c > max:
        max = c
    return max

max_number = find_max(10, 7, 4)
print('Maximum number is', max_number)"
"Given the following input, write a Python program to output the characteristics of the longest word.","laptop,computer,keyboard","def longest_word(list_words):
    longest_word = max(list_words, key=len)
    print(""Length of longest word: "" + str(len(longest_word)))
    print(""Longest Word: "" + longest_word)

list_words = [""laptop"", ""computer"", ""keyboard""]
longest_word(list_words)"
Generate a Python program that calculates the factorial of a given number.,5,"def factorial(n): 
    if n == 0:
        return 1
    else: 
        return n * factorial(n-1) 

# Test
num = 5
fac = factorial(num)
print(""Factorial of"", num, ""is"", fac)"
Create a function in Python which takes a string as an input and adds the number 1 to each character in the string.,"mystring = ""Hello""","def add_one_to_each_char(mystring):
    new_str = """"
    for c in mystring:
        new_str += chr(ord(c) + 1)
    return new_str"
Rewrite a given Java class using Python syntax.,"Java class MyClass with fields ""x"" and ""y"":

public class MyClass {
 int x;
 int y;

 public MyClass(int x, int y) {
  this.x = x;
  this.y = y;
 }
}","class MyClass:
 def __init__(self, x, y):
  self.x = x
  self.y = y"
Create a program to filter a list of numbers using the built-in Python filter() function.,"[25, 35, 8, 2, 10]","def even_number_filter(number):
  return number % 2 == 0

numbers = [25, 35, 8, 2, 10]
filtered_list = list(filter(even_number_filter, numbers))
print(filtered_list)"
"Read an uncommented Python program, comment all the lines, and print the commented version.","def func_name(param1, param2):
    a = param1 + param2
    b = param1 * param2
    return a, b","def func_name(param1, param2):
    # Add two parameters
    a = param1 + param2
    
    # Multiply two parameters
    b = param1 * param2
    
    # Return a and b
    return a, b"
Create a Python program which takes two lists as input and outputs all the elements which appear in both lists.,"list1 = [1, 2, 3] 
list2 = [3, 4, 5]","def list_intersection(list1, list2):
  return [item for item in list1 if item in list2]

list1 = [1, 2, 3] 
list2 = [3, 4, 5]

intersectedList = list_intersection(list1, list2)

print(intersectedList)

# Output: [3]"
Edit the Python 3 code below so that it returns the sum of the two integers a and b.,"a = 3
b = 5","def add_numbers(a, b):
    return a + b

if __name__ == '__main__':
    a = 3
    b = 5
    result = add_numbers(a, b)
    print(result)"
Create a program in Python to perform web scraping using the BeautifulSoup module.,URL: https://en.wikipedia.org/wiki/Python_(programming_language),"import requests 
from bs4 import BeautifulSoup 

# Get the webpage
url = 'https://en.wikipedia.org/wiki/Python_(programming_language)'
response = requests.get(url) 

# Create the soup
soup = BeautifulSoup(response.text, 'html.parser') 

# Extract the text
text = soup.get_text() 

# Output the text
print(text)"
Implement a program in Python that encodes a given string of text.,"encoding_string = ""Hello World""","def encode_string(encoding_string):
    encoded_string = """"
    for char in encoding_string : 
        encoded_string += str(ord(char)) + "" ""
    return encoded_string"
Create a command line utility in Python that takes two arguments. The utility should compare the two arguments and output the result as either “equal” or “not equal”.,"Arg1: hello
Arg2: world","import sys

arg1 = sys.argv[1]
arg2 = sys.argv[2]

if arg1 == arg2:
 print('equal')
else:
 print('not equal')"
Edit the given Python code to add a feature which will print the squares of given numbers.,"def printNumbers(a, b): 
    for i in range(a, b + 1): 
        print(i, end = "" "")","def printNumbers(a, b): 
    for i in range(a, b + 1): 
        print(i, end = "" "") 
    print(""\n"")
    for i in range(a, b + 1):
        print(i*i, end = "" "")"
Write a Python program to find the largest and smallest number from a given list of numbers.,"[7, 4, 2, 9, 0, 5]","def find_num(input_list):
    """"""Finds the largest and smallest number from a given list of numbers.""""""
    max_num = max(input_list)
    min_num = min(input_list)
    return max_num, min_num

largest, smallest = find_num([7, 4, 2, 9, 0, 5])
print('The largest number is', largest)
print('The smallest number is', smallest)"
Edit the existing Python program so that it rounds a number to the nearest whole number.,"# Program to round off a number 
num = 89.15","# Program to round off a number 
num = 89.15

rounded_num = round(num)
print(""The rounded number is: "", rounded_num)"
"Create a Python Pandas DataFrame for a real-world dataset of your choice, and display information about it.",A dataset containing the prices of fruits in a market.,"import pandas as pd

# load the dataset
data = pd.read_csv('data.csv')

# display information about the dataset
data.info()

# observe the first five rows
data.head()

# list all columns
data.columns 

# display summary statistics
data.describe()"
Write a Python program to sort a list of lists of integers by the first element of the sublists. The list should be sorted in ascending order.,"[[2, 4, 6], [1, 9, 8], [3, 7, 5]]","def sortList(lst): 
    lst.sort(key = lambda x: x[0]) 
    return lst 
  
result = sortList([[2, 4, 6], [1, 9, 8], [3, 7, 5]]) 
print(result)"
Generate a Python script to identify which words in a given list appear more than 3 times and print them out.,"words = ['blue', 'red', 'green', 'red', 'yellow', 'blue', 'blue', 'orange']","words = ['blue', 'red', 'green', 'red', 'yellow', 'blue', 'blue', 'orange']
from collections import Counter
word_counts = Counter(words)
words_appearing_more_than_3_times = [word for word, count in word_counts.items() if count > 3]
print(words_appearing_more_than_3_times)"
Create a Pythonically optimized version of the following code.,"def add_nums(nums):
    total = 0
    for i in range(len(nums)):
        total += nums[i] 
    return total","def add_nums(nums):
    return sum(nums)"
Write a Python program to add two numbers in base-10.,"num1 = 6, num2 = 8","def add_base10(num1, num2): 
    return num1 + num2"
Generate a Python script for a query to fetch data from a given MySQL table.,"Table Name: Products
Columns: product_id, name, price","import mysql.connector

db = mysql.connector.connect(
 host=""localhost"",
 user=""root"",
 passwd=""password"",
 database=""dbname""
)

mycursor = db.cursor()

sql = ""SELECT product_id, name, price FROM Products""

mycursor.execute(sql)

myresult = mycursor.fetchall()

for row in myresult:
  print(row)"
Generate a Python dictionary that contains the count of the characters in a given string.,"""Hello World""","def count_chars(string):
    count_dict = {}

    for char in string:
        if char in count_dict:
            count_dict[char] += 1
        else:
            count_dict[char] = 1

    return count_dict

print(count_chars(""Hello World""))

# Output: {'H': 1, 'e': 1, 'l': 3, 'o': 2, ' ': 1, 'W': 1, 'r': 1, 'd': 1}"
Create a recursive function in Python to print the sum of the natural numbers up to the given number.,limit = 5,"def sum_natural_numbers(limit):
    if limit < 2:
        return limit
    else:
        return limit + sum_natural_numbers(limit-1)

#print the sum 
print(sum_natural_numbers(limit))"
Implement a function in Python to remove all instances of an item from a list.,"[1, 2, 1, 3, 4, 1], 1","def remove_item(list, item):
    while item in list:
        list.remove(item)
    return list

result = remove_item([1, 2, 1, 3, 4, 1], 1)
print(result)"
"Unify the style of a code snippet in Python. Make sure to keep the original structure, including indentation, comments, and whitespace.","Example code snippet:
  """"""
     #This function takes
     two arguments
         and adds them
     """"""
  def add (x, y):
  return x + y","""""""This function takes two arguments and adds them""""""
def add(x, y):
    return x + y"
"Given a string of text, write a function in Python that prints out every word in the string.",The quick brown fox,"def printWords(text):
 words = text.split()
 for word in words:
 print(word)

printWords(""The quick brown fox"")"
Generate a correct python program to accomplish the next objective,Implement a function which takes two arrays and finds the element which is common to both of them.,"def find_common_element(arr1, arr2):
    common_elements = []
    for element1 in arr1:
        for element2 in arr2:
            if element1 == element2 and element1 not in common_elements:
                common_elements.append(element1)
    return common_elements"
"Utilizing the list comprehension, create a python program that removes all multiples of 3 from the input list.","[3,4,6,8,9,12]","res = [x for x in [3,4,6,8,9,12] if x % 3 != 0] 
print(res)"
Create a React component for displaying a list of strings.,"[ ""javascript"",""java"",""python""]","const List = ({ items }) => { 
  return ( 
    <ul> 
      {items.map(item => ( 
        <li> 
          {item} 
        </li> 
      ))} 
    </ul> 
  ) 
};

ReactDOM.render( 
  <List items={[ ""javascript"",""java"",""python""]} />, 
  document.getElementById('root') 
);"
Edit the following Python program so that it prints out the square root of a given number.,number = 8,"import math

number = 8

# compute the square root of the given number
square_root = math.sqrt(number)

# print the square root
print(f""The square root of {number} is {square_root}"")"
Create a search algorithm in Python to find a target element in a given array.,"[1, 4, 6, 8, 10], target = 8","def search(arr, target): 
  for idx, num in enumerate(arr): 
    if num == target:
      return idx
  return -1

idx = search([1, 4, 6, 8, 10], 8)
print(idx)"
Write a Python program that takes an integer and prints a set of stairs with that many levels.,Number of levels: 5,"def staircase(n):
    for i in range(1, n+1):
        for j in range(1, n+1):
            if j <= n-i:
                print(' ', end='')
            else:
                print('#', end='')
        print('')

n = 5
staircase(n)"
Generate all permutations of a given list of numbers with Python.,"[1, 2, 3]","import itertools

list_nums = [1, 2, 3]

perms = itertools.permutations(list_nums)
for perm in perms:
  print(perm)"
Work out a solution to the Towers of Hanoi game using Python.,The game consists of 3 rods and 4 disks.,"def TowersOfHanoi(n, fromRod, toRod, auxRod): 
    if n == 1: 
        print(""Move disk 1 from rod"",fromRod,""to rod"",toRod) 
        return
    TowersOfHanoi(n-1, fromRod, auxRod, toRod) 
    print(""Move disk"", n, ""from rod"", fromRod, ""to rod"", toRod) 
    TowersOfHanoi(n-1, auxRod, toRod, fromRod) 

n = 4
TowersOfHanoi(n, 'A', 'C', 'B')"
Implement a function in Python that takes two arguments: a list and a string. The function should return the indices where the string appears in the list.,"list = ['apple', 'banana', 'pear', 'banana']
string = 'banana'","def find_indices(list, string):
    indices = []
    for i,item in enumerate(list):
        if item == string:
            indices.append(i)

    return indices"
Write a function in Python that takes a string as input and returns the length of the longest word.,"string = ""the quick brown fox jumps over the lazy dog""","def length_longest_word(s):
    longest_word = """"
    longest_len = 0
  
    words = s.split()
    for word in words:
        if len(word) > longest_len:
            longest_len = len(word)
            longest_word = word
  
    return len(longest_word)
  
result = length_longest_word(string)
print(result)"
Design a method in Python to deduplicate a given list of elements.,"[4, 5, 1, 9, 5, 4, 3]","# store the given list
my_list = [4, 5, 1, 9, 5, 4, 3]

# remove the duplicates
deduplicated_list = list(set(my_list))

# print the result
print(""Deduplicated list:"", deduplicated_list)"
Create a Python program that classifies articles based on sentiment.,This article is bad,"import nltk
from nltk.sentiment.vader import SentimentIntensityAnalyzer

sentences = [""This article is bad""]

sid = SentimentIntensityAnalyzer()
for sentence in sentences:
  print(sentence)
  ss = sid.polarity_scores(sentence)
  print(ss)
  if ss['compound'] >= 0.05:
    print(""Positive"")
  elif -0.05 < ss['compound'] < 0.05:
    print(""Neutral"")
  else:
    print(""Negative"")"
Modify the below Python function to make it efficient.,"def min_product(a, b):
 return a * b * (a - b)","def min_product(a, b):
    if a > b:
        return a * b
    else:
        return a * b * (a - b)"
Output a program in Python to find the most frequent occurring item in an array,"arr = [1,3,3,3,4,4,4,4,5,5]","from collections import Counter

arr = [1,3,3,3,4,4,4,4,5,5]
data = Counter(arr)
get_mode = dict(data)
mode = [k for k, v in get_mode.items() if v == max(list(data.values()))]

print(f""Mode of the given list is {mode}"")"
Write Python code to parse this JSON data.,"{
  ""title"": ""The Adventures of Tom Sawyer"",
  ""author"": ""Mark Twain"",
  ""year"": 1876
}","import json

data = {
  ""title"": ""The Adventures of Tom Sawyer"",
  ""author"": ""Mark Twain"",
  ""year"": 1876
}

parsed_data = json.loads(data)

title = parsed_data['title']
author = parsed_data['author']
year = parsed_data['year']"
Write a Python program to optimize a given array of integers such that each element is greater than or equal to the previous element in the array.,"[7, 2, 5, 8, 4, 0]","def optimize_array(array):
    optimized_array = []
    prev = -float(""inf"")
    for n in array:
        if(n>=prev):
            optimized_array.append(n)
            prev = n
    return optimized_array

array = [7, 2, 5, 8, 4, 0]
print(optimize_array(array))
# Output: [7, 5, 8, 4]"
"Create a Python program that merges two lists, removing any duplicates.","list_a = [1, 2, 3, 4, 5]
list_b = [2, 3, 4, 6]","def merge_lists(list_a, list_b): 
    merged_list = []
    for ele in list_a:
        if ele not in merged_list:
            merged_list.append(ele)
    for ele in list_b:
        if ele not in merged_list:
            merged_list.append(ele)
    return merged_list"
Create a Python class with the given attributes and functions.,"Attributes: name (string), age (integer), email address (string)
Function: toString() - return a string with the formatted attributes","class Person:
    
    def __init__(self, name, age, email):
        self.name = name
        self.age = age
        self.email = email
    
    def toString(self):
        return f""Name: {self.name}, Age: {self.age}, Email: {self.email}"""
"Using the input, generate a Python program that prints out the frequency of each item in the list.","[""apple"", ""banana"", ""apple"", ""banana"", ""orange""]","def item_freq(list_input):
    freq = {} 
  
    for item in list_input: 
        if (item in freq): 
            freq[item] += 1
        else: 
            freq[item] = 1
  
    for key, value in freq.items(): 
        print (""% s : % d""%(key, value))"
Prepare a python program that displays a decoded message given in a list.,"code = [1,2,3,2,2,3,1,3]","code = [1,2,3,2,2,3,1,3]

message = """"
for d in code:
    if d == 1:
        message += ""A""
    elif d == 2:
        message += ""B""
    elif d == 3:
        message += ""C""
print(message)"
"Write a Python program to convert seconds to day, hour, minutes and seconds.",3600,"def convertSeconds(seconds):
    day = seconds//(24*3600)
    seconds = seconds%(24*3600)
    hour = seconds//3600
    seconds %= 3600
    minutes = seconds // 60
    seconds %= 60
    return day, hour, minutes, seconds

day, hour, minute, second = convertSeconds(3600)

print(""Day: {}, Hour: {}, Minute: {}, Second: {}"".format(day, hour, minute, second))"
"Write a Python program to clean a text corpus, transforming it into a bag of words.",The cat in the hat.,"corpus = ""the cat in the hat""

words = corpus.lower().split()
bag_of_words = set(words)

print(bag_of_words)
# Output: {'the', 'in', 'cat', 'hat'}"
Write a python program to check if a given string contains all alphabetic characters.,"String: ""Hello World!""","def is_alpha(word): 
    if word.isalpha(): 
        return True 
    else: 
        return False"
Develop a Python program to show the product of all odd number components in an array.,"[3,4,5,6,7]","""""""
Python program to show the product of all odd numbers in an array
""""""

def product_of_odds(arr):
    product = 1
    for num in arr:
        if num % 2 != 0:
            product *= num
    return product

if __name__ == '__main__':
    arr = [3, 4, 5, 6, 7]
    print(product_of_odds(arr)) # 105"
Write a valid Python program that takes a list and outputs the sum of the elements.,"[1, 2, 3]","def sumListElements(arr):
    sum = 0
    for num in arr:
        sum += num
    return sum

result = sumListElements([1,2,3]) 
print(result)"
Create a web crawler in Python that takes a given URL and prints out a list of links.,https://www.example.com,"from bs4 import BeautifulSoup
import requests

url = 'https://www.example.com'
response = requests.get(url)

soup = BeautifulSoup(response.text, 'lxml')
for link in soup.find_all('a'):
    print(link.get('href'))"
Convert this code from Java to Python.,"public static void main(String[] args) {
    int i;
    for (i = 0; i < 5; i++) {
        System.out.println(""Hello world!"");
    }
}","for i in range(5):
    print(""Hello world!"")"
Write a Python program to find the list of words that are longer than given length,"word_list = [""Red"", ""Green"", ""Blue"", ""Yellow"", ""Orange""]
length = 5","# Create a list to store the result
long_words_list = []

# Iterate the list to find words longer than the given length
for word in word_list:
    if len(word) > length:
        long_words_list.append(word)

# Print the result
print(long_words_list)"
Write a Python program to extract the last two digits of the given array of integers.,"arr = [30, 2993, 10056]","res = []
for num in arr:
    res.append(num%100)
print(res) # [30, 93, 56]"
Write a Python statement to check if a given number is within a given range,"Number: 3, Range: 0-10","if 0 <= 3 <= 10:
 print('Number is within the range')
else:
 print('Number is not within the range')"
Configure the following python code to work the mathematical expression.,"def calculate(x, y, operator):","def calculate(x, y, operator):
    if operator == '+':
        return x + y
    elif operator == '-':
        return x - y
    elif operator == '*':
        return x * y
    elif operator == '/':
        return x / y"
Generate a program in Python that takes in a string and returns the reverse of the string.,"""Hello World""","def reverse_string(str):
    """""" Reverses a given string """"""

    rev_str = """"

    for c in str:
        rev_str = c + rev_str

    return rev_str

str = ""Hello World""
rev_str = reverse_string(str)

print(rev_str)"
Create a Python function called add_marks which takes two parameters: marks(a list) and mark(an integer). The function should add the mark to each value in the marks list.,"marks = [87, 56, 99, 54]
mark = 4","def add_marks(marks, mark):
 return [m + mark for m in marks]"
Convert the following code from C++ to Python.,"int main()
{
  int val1 = 25;
  int val2 = 6;
  int sum = val1 + val2;
  cout << sum;
  return 0;
}","def main():
  val1 = 25
  val2 = 6
  sum = val1 + val2
  print(sum)
  return 0"
Generate a Python dictionary that tracks the frequency of letters in a given string.,"test_string = ""This is a test string!""","frequency_dict = {}

for letter in test_string:
    if letter not in frequency_dict:
        frequency_dict[letter] = 0
    frequency_dict[letter] += 1"
"Write an API endpoint for a basic user authentication system in Python. It should accept a username and password, validate them, and return a token if the user is valid.","username: john
password: pass123","import jwt
 
@app.route('/auth', methods=['POST'])
def auth():
 username = request.form.get('username')
 password = request.form.get('password')
 
 # authenticate the user here
 
 token = jwt.encode({'username': username}, app.config['SECRET_KEY'])
 
 return token"
Create a Python script to partition a list into sub-lists of equal size.,"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","def partition(lst, n):
 return [lst[i:i+n] for i in range(0, len(lst), n)]
 
list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
partitions = partition(list, 3)
 
for p in partitions:
 print(p)

# Output
# [1, 2, 3]
# [4, 5, 6]
# [7, 8, 9]
# [10]"
Design a for loop in Python which iterates over two given lists and prints their items in a orderly manner.,"list1 = [1, 2, 3]
list2 = [""Apple"", ""Banana"", ""Cherry""]","for item1, item2 in zip(list1, list2):
    print(f""{item1}: {item2}"")"
Analyze a given python code and debug it.,"def calculate_sum(numbers : Arrar[int]):
sum = 0
for i in numbers:
sum = i
return sum

nums = [3, 7, 10]
print(""The sum is"", calculate_sum(nums))","def calculate_sum(numbers: Array[int]):
    sum = 0
    for i in numbers:
        sum += i
    return sum

nums = [3, 7, 10]
print(""The sum is"", calculate_sum(nums))"
Develop Python code to reverse an array.,"arr = [1, 2, 3, 4, 5]","def reverse_array(arr): 
    start = 0
    end = len(arr) - 1
      
    while start < end: 
        arr[start], arr[end] = arr[end], arr[start] 
        start += 1
        end -= 1
    return arr 
  
# Driver code 
arr = [1, 2, 3, 4, 5] 
print(reverse_array(arr))"
Design an algorithm in Python that prints out all the prime numbers up to a certain number.,n = 15,"def is_prime(n):
  if n == 1:
    return False

  for i in range(2, int(n ** 0.5) + 1):
    if n % i == 0:
      return False
   
  return True

def get_prime_numbers(n):
  result = []
  for num in range(2, n+1):
    if is_prime(num):
      result.append(num)
  return result

prime_numbers = get_prime_numbers(15)
print(prime_numbers)"
Write a python program to split a list into two halves,"data = [1, 2, 3, 4, 5]","def split_list(data):
    # Calculate the length of data
    length = len(data)
    # calculate the midpoint of the list 
    midpoint = length//2
    
    # split the data into two halves 
    first_half = data[:midpoint]
    second_half = data[midpoint:]
    
    return first_half, second_half
    
split_list([1, 2, 3, 4, 5]) # Returns ([1, 2], [3, 4, 5])"
Write a Python code to get the third largest element in a given row.,"[12, 13, 13, 45, 22, 99]","def third_largest(lst):
    if len(lst) < 3:
        return
    distinct = []
    for i in lst:
        if i not in distinct:
            distinct.append(i)
    distinct.sort(reverse=True)
    return distinct[2]"
Create a Python program to search for a particular pattern in a string of text and return all matching substrings.,"let text = ""hey this is a string to match for a pattern"";","import re

text = ""hey this is a string to match for a pattern""
pattern = ""match""

# Find all matches
matches = re.findall(pattern, text)

# Print the matches
print(matches)
# Output: ['match']"
Create a program in Python which will compute the sum of all the numbers in a range.,Range: 10-20,"def sum_of_range(start, end): 
    sum = 0
    for i in range(start, end+1): 
        sum += i
    return sum 
  
# Driver Code 
print(sum_of_range(10, 20))"
"Rewrite the following Javascript code as a Python code that solves the same problem.

Given an array of numbers, find the square root of each number and print it.","[2, 3, 4, 5]","import math

numbers = [2, 3, 4, 5]

for number in numbers:
 print(math.sqrt(number))

# Output
# 1.414
# 1.732
# 2.000
# 2.236"
Design a Python script to calculate the count of words in a given sentence.,"sentence = ""Hello World!""","def word_count(sentence):
    words = sentence.split(' ')
    return len(words)"
Write a function in Python that finds all possible substrings of a string and prints them.,"String =  ""Hello World""","def printSubstrings(s): 
    n = len(s) 
      
    for i in range(n):
        for j in range(i+1, n+1):
            print(s[i:j])
  
# Driver code 
s = ""Hello World""
printSubstrings(s)"
Write a python program to calculate the mean of a list of numbers and display the mean using print statement.,"[2, 6, 9, 8, 4, 5]","list = [2, 6, 9, 8, 4, 5]
sum = 0 
for num in list:
 sum += num 

# calculate mean
mean = sum / len(list)

# print mean
print(""Mean:"", mean)

# Output
Mean: 5.8"
"Write a Python program to sum the list of integers in ""input_list"".","input_list = [1, 2, 3, 4, 5]","def sum_list(input_list):
    total = 0
    for item in input_list:
        total += item
    return total"
Create a python code to convert a string of comma-separated numbers into list.,"numbers = '1,2,3,4,5,6'","numbers = '1,2,3,4,5,6'

numbers_list = [int(x) for x in numbers.split(',')]

print(numbers_list) # [1, 2, 3, 4, 5, 6]"
Modify the given function to sort a list of tuples based on the second index of each tuple in Python.,"def sort_list_of_tuples(input_list):
    pass","def sort_list_of_tuples(input_list):
    sorted_list = sorted(input_list, key=lambda tup: tup[1])
    return sorted_list"
Create a program that can find the top five most common words in the input.,Python is a powerful general-purpose programming language.,"import collections
import re

# clean and preprocess text
words = re.sub('\W+', ' ', input_text).split()

# find most common words
word_counter = collections.Counter(words)

# print top five most common words
print(word_counter.most_common(5))

# Output:
[('a', 1), ('Python', 1), ('is', 1), ('powerful', 1), ('general', 1)]"
Develop a Python script to perform sentiment analysis on a given text.,"""I'm feeling really great today""","import nltk
from nltk.sentiment.vader import SentimentIntensityAnalyzer

text = ""I'm feeling really great today""

sid = SentimentIntensityAnalyzer()
ss = sid.polarity_scores(text)

print(ss['compound']) # Prints 0.6249, which is positive sentiment."
Write a code snippet in Python for sorting a given array of numbers in ascending order.,"[3, 7, 1, 5]","def sort_array(arr): 
    arr.sort() 
    return arr 

sort = sort_array([3, 7, 1, 5])

print(sort)"
Create a Python program to edit a given string and insert a given word into the middle of the string.,"String = 'I am a programmer';
Word = 'software'","def insert_word(string, word):
  mid_index = len(string)//2
  start_string = string[:mid_index]
  end_string = string[mid_index:]
  new_string = start_string+word+end_string
  return new_string

string = 'I am a programmer'
word = 'software'

print(insert_word(string, word))"
Edit the given Python function to include an exception handling code block.,"def convert_to_integer(x):
    return int(x)","def convert_to_integer(x):
    try:
        return int(x)
    except Exception:
        print('Unable to convert to integer.')
        return x"
"Given a Python dictionary, write a program to remove all the keys whose value is greater than a specified number.","dictionary = {'a': 1, 'b': 2, 'c': 3, 'd':4}, threshold = 2","dictionary = {'a': 1, 'b': 2, 'c': 3, 'd':4}
threshold = 2

def remove_keys(dict, threshold):
    to_remove = [k for k, v in dict.items() if v > threshold]
    for k in to_remove:
        del dict[k]
    return dict

print(remove_keys(dictionary, threshold))
# Output: {'a': 1, 'b':2}"
Create a python function that takes in a string and reverse any words that contain a certain character.,"String: ""Hello World!-Abc""
Character: ""-""","def string_reverse(string, character):
    new_string = []
    for word in string.split(' '):
        if character in word:
            new_string.append(word[::-1])
        else:
            new_string.append(word)
    return ' '.join(new_string)

string_reverse(""Hello World!-Abc"", ""-"") # Output: ""Hello dlroW!-cbA"""
Create a program in Python that takes 5 numbers input from the user and prints out their median.,"3, 4, 7, 6, 8","nums = []
ans = 0

for _ in range(5):
 nums.append(int(input()))
 
nums.sort()

if len(nums) % 2 == 0:
 ans = (nums[len(nums)//2] + nums[len(nums)//2-1]) / 2
else:
 ans = nums[len(nums) // 2]
 
print(""Median of the given numbers is: "" + str(ans))"
Design a function in Python to generate Fibonacci numbers from 1 to a given range.,10,"def fibonacci(x):
 fib_numbers = [1,1]
 for i in range(2,x):
  fib_numbers.append(fib_numbers[i-1] + fib_numbers[i-2])
 return fib_numbers"
Sort a list in descending order using a lambda function in Python.,"Input list : [1, 5, -9, 8, 21]","list = [1, 5, -9, 8, 21]
sorted_list = sorted(list, reverse=True, key= lambda x:x)
print(sorted_list)"
Create a program to calculate the number of ways to arrange five numbers in a sequence.,"5 numbers: 1, 2, 3, 4, 5","# Python
numbers = [1, 2, 3, 4, 5]

count = 0

for i in range(5):
 for j in range(5):
 if j != i:
 for k in range(5):
 if k != i and k != j:
  for l in range(5):
  if l != i and l != j and l != k: 
   for m in range(5):
   if m != i and m != j and m != k and m != l:
   count += 1

print(count)
# 120"
Write a Python program to find the maximum and minimum value in a given dictionary.,"dict_a = {""a"": 1, ""b"": 2, ""c"": 3}","def max_min_dict(dict_a):
 max_val = -float('inf')
 min_val = float('inf')
 for key in dict_a:
 max_val = max(max_val, dict_a[key])
 min_val = min(min_val, dict_a[key])
 
 return max_val, min_val
 
max_min_dict(dict_a)"
"Given a duration in seconds, write a Python code to convert it into a string showing hours, minutes and seconds.",32400,"def to_time_string(duration):
    hours, remainder = divmod(duration, 3600)
    minutes, seconds = divmod(remainder, 60)
    return ""%02d:%02d:%02d"" % (hours, minutes, seconds)

print(to_time_string(32400))"
Create a machine learning algorithm in Python that takes a set of data points and classifies them into two distinct classes.,"Examples [[1,2], [-2,3], [-1,-4], [0,0]]","import numpy as np
from sklearn.svm import LinearSVC

X = np.array([[1, 2], [-2, 3], [-1, -4], [0, 0]])
# y = [1, -1, -1, 0]
y = np.array([1, -1, -1, 0])

clf = LinearSVC()
clf.fit(X, y)

# Predict the class of the points [[3, -1], [-2, 0]]
predictions = clf.predict([[3, -1], [-2, 0]])
# Output -> [1, -1]"
Write a Python function to get the GCD (Greatest Common Divisor) of two positive integers.,"46, 24","def gcd(a,b): 
      
    if b == 0: 
        
        return a 
      
    return gcd(b, a % b)"
Generate a Python function which takes an array and a value and returns the index at which this value is present in the array.,"arr = [2, 5, 9, 15], x = 5","def find_index(arr, x):
    for i in range(len(arr)):
        if arr[i] == x:
            return i
    return -1

print(find_index(arr, x))"
Create a Python program to remove all white-space from a given string.,"""Hello World   ""","string = ""Hello World   ""

no_space_string = string.replace(' ', '')

print(no_space_string)"
Create a Python script to parse a JSON string and return the value of the given field.,"{""name"": ""John"", ""age"": 30}","def get_value(json_string, field):
    json_dict = json.loads(json_string)
    return json_dict[field]"
Construct a python function that sorts a list of tuples containing the names of the keys and values of a dictionary.,"dictionary = {'a': 4, 'b': 2, 'c': 3, 'd': 1}","def sort_dictionary(dictionary):
    return sorted(dictionary.items(), key=lambda x: x[1])"
Generate a class in Python that can store the following data,"Month, Calories, Exercise Minutes","class HealthData:
    def __init__(self, month, calories, minutes):
        self.month = month
        self.calories = calories
        self.minutes = minutes"
Develop a code in Python to print the nth Fibonacci number.,6,"def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    # First Fibonacci number is 0 
    elif n==1: 
        return 0
    # Second Fibonacci number is 1 
    elif n==2: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2) 

print(Fibonacci(6))"
Write a Python program to arrange the following list in descending order,"[4,7,1,10,3]","arr = [4,7,1,10,3]

arr.sort(reverse=True)

print(arr)
# Output: [10, 7, 4, 3, 1]"
Design a recursive function in Python that calculates the Fibonacci sequence to the nth number.,n = 10,"def fib(n):
 if n == 0:
  return 0
 elif n == 1:
  return 1
 else:
  return fib(n-1) + fib(n-2)

num = 10
print(""The Fibonacci sequence to the "" + str(num) +""th number is:"")
for i in range(num):
 print(fib(i))"
Create a function in Python that takes a list of strings as an argument and sorts the strings in alphabetical order.,"[""Hello"", ""World"", ""Foo"", ""Bar""]","def sort_strings(strings):
    strings.sort()
    return strings"
"Given a set of data, develop a Python program to classify the data into two categories: low and high.","[8, 5, 9, 1, 3, 10]","# Define the threshold
threshold = 5

def classify(data):
  result = []
  for item in data:
    if item <= threshold:
      result.append('low')
    else:
      result.append('high')
  return result

print(classify([8, 5, 9, 1, 3, 10]))
# Output: ['high', 'low', 'high', 'low', 'low', 'high']"
Create a scalable program in Python using functions to add two numbers.,"7, 9","def add(x, y): 
    return x + y
 
# Driver code 
num1 = 7
num2 = 9
print(""Sum of {0} and {1} is {2}"" 
        .format(num1, num2, add(num1, num2)))"
Write a Python program that takes a list of integers and returns a list of their squares.,"[1, 2, 3, 4]","def square_list(l):
 return [i**2 for i in l]

print(square_list([1, 2, 3, 4]))
# Output: [1, 4, 9, 16]"
Write a Python script for creating a type-safe data model based on a given JSON object.,"{""name"": ""Bob"", ""age"": 42, ""likes"": [""Sports"", ""Coding""]}","class DataModel:
 def __init__(self, name: str, age: int, likes: List[str]):
  self.name = name
  self.age = age
  self.likes = likes

data = DataModel(name=""Bob"", age=42, likes=[""Sports"", ""Coding""])"
Write a Python program to get a slice of elements from a list.,"mylist = [1,2,3,4,5,6]","def get_slice(mylist, start, end):
    return mylist[start:end]

result = get_slice([1,2,3,4,5,6], 2, 5)
print(result)"
"Write a function in Python that takes a list of numbers as an input, and returns the largest of them.","[1, 2, 3, 4, 5]","def largest(list):
 largest = 0
 for number in list:
 if number > largest:
 largest = number
 return largest

print(largest([1, 2, 3, 4, 5]))
# Outputs 5"
Create a data analysis solution using Python and Pandas.,"The CSV file has three columns:
Country, Population, and Area","import pandas as pd

# Read in the CSV file
df = pd.read_csv(""data.csv"")

# Calculate population density
df['Density'] = df['Population'] / df['Area']

# Print the density of the first 5 countries
print(df.head()['Density'])"
"Create an algorithm in Python to calculate the tax payable, given yearly income and tax rates.","Yearly income: 70000
Tax rates: 0.2","def calculatetax(yearly_income, rate):
    tax = yearly_income * rate
    return tax

income = 70000
rate = 0.2
tax_payable = calculatetax(income, rate)

print(""Tax payable: "" + str(tax_payable))"
Create a dictionary in Python with key-value pairs,"Key: ""FirstName""
value: ""John""","my_dict = {
    ""FirstName"": ""John""
}"
Develop an algorithm in Python that takes an array of integers and finds two numbers whose sum is the given target.,"The array : [1, 3, 5, 7, 9]
The target : 12","def two_sum(arr, target):
 for num1 in arr:
 for num2 in arr:
 if num1 + num2 == target:
 return (num1, num2)

result = two_sum([1, 3, 5, 7, 9], 12)
print(result)
# Output -> (5, 7)"
Create a list in Python from a given list of numbers.,"[1, 2, 4, 8, 16]","myList = [1, 2, 4, 8, 16]"
Create a Python function to classify a given string as either a palindrome or not.,"string=""kayak""","def is_palindrome(string):
    string_temp = string.lower()
    reverse_string = string_temp[::-1]
    if string_temp == reverse_string:
        print(""yes, this is a palindrome"")
    else:
        print(""no, this is not a palindrome"")

is_palindrome(string)"
Write a Python program that sorts a list of integers in ascending order without using the built-in sort() method.,"[4, 5, 13, 2, 9, 7]","def selection_sort(arr):
 n = len(arr)
 for i in range(n):
 min_idx = i
 for j in range(i+1, n):
 if arr[min_idx] > arr[j]:
 min_idx = j
 arr[i], arr[min_idx] = arr[min_idx], arr[i]

arr = [4, 5, 13, 2, 9, 7]
selection_sort(arr)
print(arr)
# Output: [2, 4, 5, 7, 9, 13]"
"Write a Python function that takes a string as input and returns true if the string starts with the letter ""a"".",String: awesome,"def starts_with_a(string):
    if string[0] == 'a':
        return True
    else:
        return False

result = starts_with_a('awesome')
print(result)"
Please provide Python code to print out all the prime numbers in a list of numbers.,"list_of_numbers = [2, 3, 4, 5, 6, 7, 8, 9, 11]","def is_prime(num):
  for i in range(2, num):
    if num % i == 0:
      return False
  return True

list_of_numbers = [2, 3, 4, 5, 6, 7, 8, 9, 11] 
for i in list_of_numbers:
  if is_prime(i):
    print(i)"
Optimize the following Python function to merge two lists.,"a = [1,3,5]
b = [2,4,6]","def merge_lists(a, b):
  merged_list = []
  a_pos = 0
  b_pos = 0
  
  while a_pos < len(a) and b_pos < len(b):
    if a[a_pos] < b[b_pos]:
      merged_list.append(a[a_pos])
      a_pos += 1
    else:
      merged_list.append(b[b_pos])
      b_pos += 1

  return merged_list + a[a_pos:] + b[b_pos:]

a = [1,3,5]
b = [2,4,6]
print(merge_lists(a,b))"
Write a python program to search through a list of integers and find the smallest number.,"int_list = [25, 64, 11, 43, 7]","def find_smallest(int_list):
    # set the minimum value to the first item in the list initially
    min_val = int_list[0]
    # loop over the list and compare each item to the minimum value
    for num in int_list:
        if num < min_val:
            min_val = num
    # return the minimum value
    return min_val"
"Write a Python program to edit this list of lists and remove any empty lists from the beginning, middle and end of the list.","[[], [2, 3], [], [4, 5], [], [6]]","def remove_empty_lists(lst):
  new_lst = []
  for li in lst:
    if li:
      new_lst.append(li)
  return new_lst

# call the function  
modified_list = remove_empty_lists([[], [2, 3], [], [4, 5], [], [6]])

print(modified_list)  
# Output: [[2, 3], [4, 5], [6]]"
Write Python code to normalize the values of a list of numbers by subtracting each number from the maximum value in the list and dividing it by the maximum value.,"[7, 8, 10],","def normalize(lst): 
    max_num = max(lst)
    normalized_lst = [(num-max_num)/max_num for num in lst]
    return normalized_lst

lst = [7,8,10]
normalized_values = normalize(lst)
print(normalized_values)"
Write a Python program that takes an integer as input and check if the number is prime or not.,45,"def is_prime(n):
    if n < 2: 
        return False

    for i in range(2, int(n**0.5) + 1):  
        if n % i == 0: 
            return False

    return True"
Write a python program that prints a greeting for each name in the given list,"names = ['John', 'Mary', 'James']","for name in names:
    print('Hello ' + name + '!')"
Build a python program to convert any currency to a different currency given its exchange rate,"Input Currency = USD
Output Currency = EUR
Exchange Rate = 0.83","def currency_converter(input_currency, output_currency, exchange_rate):
amount = float(input('Enter the amount to convert: '))
total_amount = amount * exchange_rate

print('{} {} = {} {}'.format(amount, input_currency, total_amount, output_currency))"
Write a Python program which prints out the Fibonacci series up to the N-th term.,15,"def print_fibonacci_series(n): 
    a = 0
    b = 1
    c = 0

    while c < n:
        print(a,end="" "")
        c = c+1
        temp = a+b
        a = b 
        b = temp 
		
print_fibonacci_series(15)"
Generate a function in Python using the input argument side-effect free function to calculate the square root of a number.,25,"def get_sqrt(x):
    return x**0.5"
Write a Python program to combine two lists of dictionaries into one list.,"list1: [{'a','b', 'c'}, {'d' : 'e', 'f': 'g'}]
list2: [{'h' : 'i', 'j': 'k'}, {'l': 'm'}]","combined = [{'a': 'b', 'c'}, {'d': 'e', 'f': 'g'}, {'h': 'i', 'j' : 'k'}, {'l': 'm'}]"
Create a sorting algorithm in Python for evaluating and sorting a list of tuples with two elements.,"Input List: [('a', 3), ('b', 2), ('c', 1)]","def sort_list_tuples(tuples):
  # sort by the second element in each tuple
  return sorted(tuples, key=lambda x: x[1])

# test code
tuples = [('a', 3), ('b', 2), ('c', 1)] 
print(sort_list_tuples(tuples))"
Write a function in Python that takes a list of names as the parameter and returns the longest name in the list.,"Names = ['John', 'Michael', 'Scott', 'Steve']","def longest_name(names):
 longest_name = ''

 for name in names:
  if len(name) > len(longest_name):
   longest_name = name
 
 return longest_name

Names = ['John', 'Michael', 'Scott', 'Steve']

longest = longest_name(Names)

print(longest) # Michael"
Combine two Python dictionaries and return a new dictionary,"dict1: {'a':1, 'b':2}
dict2: {'b':3, 'c':4}","def combine_dict(dict1, dict2):
    combined_dict = {}
    for key, value in dict1.items():
        combined_dict[key] = value
    for key, value in dict2.items():
        combined_dict[key] = value
    return combined_dict

dict1 = {'a':1, 'b':2}
dict2 = {'b':3, 'c':4}
combined_dict = combine_dict(dict1, dict2)
print(combined_dict)"
Create a Python program to sort the list of colors in alphabetical order.,"[""red"", ""green"", ""blue""]","colors = [""red"", ""green"", ""blue""]

#sorting in ascending order
desc_colors = sorted(colors)

print(""Colors in alphabetical order:"", desc_colors)"
Predict the output of the following Python program.,"my_list = [1,2,3,4,5]
x = 0

for i in my_list:
    x += i

print(x)",15
Write a Python program to find the missing number in a list of integers.,"[1,2,4,5,6,7,8]","def find_missing_num(lst):
 expected_num = sum(range(lst[0],lst[-1]+1))
 actual_sum = sum(lst)
 return expected_num - actual_sum

lst = [1,2,4,5,6,7,8]
missing_num = find_missing_num(lst)
print(""The missing number is"", missing_num)"
Create a python program to print all two dimensional subarrays in a given two-dimensional array,"two_dimensional_array = [[1, 2, 3],
                        [4, 5, 6],
                        [7, 8, 9]]","for i in range(len(two_dimensional_array)): 
    for j in range(i+1): 
        for k in range(len(two_dimensional_array[i])): 
            print(two_dimensional_array[j][k], end="" "") 
        print()"
Write a function in Python that takes a list of objects and returns a list of those objects sorted by one of their attributes.,"[{""name"": ""Alice"", ""age"": 20}, {""name"": ""Bob"", ""age"": 21}]","def sort_by_attr(objects, attr):
 return sorted(objects, key=lambda item: item[attr])
 
sort_by_attr([{""name"": ""Alice"", ""age"": 20}, {""name"": ""Bob"", ""age"": 21}], ""age"")"
Develop a RESTful web service in Python which returns the data provided in the given URL.,URL: https://example.com/dataset.json,"import flask
from flask import Flask
import requests

app = Flask(__name__)

@app.route('/data', methods=[""GET""])
def data():
    r = requests.get('https://example.com/dataset.json')
    return flask.jsonify(r.json())

if __name__ == '__main__':
    app.run()"
Construct a Python program to round the number up to the nearest integer,num = 5.6,"def round_up(num): 
    if num == int(num): 
        return int(num) 
    return int(num + 1) 

num = 5.6
print(round_up(num))"
Improve this Python code so that it prints out an appropriate error when the index is out of bounds.,"def search(list, index):
  return list[index]","def search(lst, index): 
    if index < 0 or index >= len(lst):  
        print(""Index out of bounds"") 
        return None
    else:  
        return lst[index]"
Generate Python code for printing the average of a list of numbers.,"[2, 5, 6, 7]","list = [2, 5, 6, 7]

sum = 0

for num in list:
 sum += num
 
average = sum / len(list)
print(""Average:"", average)"
Write a Python Script to find all pairs of numbers in a list that have a sum equal to the target value.,"list = [2, 4, 6, 8], target = 10","def findPair(lst, target): 
    for i in range(0, len(lst)): 
        for j in range(i + 1, len(lst)): 
            if lst[i] + lst[j] == target: 
               return print(lst[i],"","", lst[j]) 
    
list = [2, 4, 6, 8] 
target = 10
findPair(list, target)"
Create a Python function to generate a URL endpoint mapping based on a given URL string.,"URL string: ""/posts/<title>/<action>""","from flask import Flask

app = Flask(__name__)

@app.route(""/posts/<title>/<action>"")
def process_url(title: str, action: str):
	print(f'URL endpoint mapping for title: {title} and action: {action}')

if __name__ == '__main__':
	app.run()"
Create a method in Python which takes a string and an integer as arguments and returns an integer representing the number of times that character appears.,"s = ""hello world"", c = 'l'","def findCount(s, c):
    count = 0
    for char in s:
        if char == c:
            count += 1
    return count 

print(findCount(s, c))"
Write a Python program to check if a given number is divisible by 3 and 5 or not.,10,"def check_divisible_3and5(num):
    if (num % 3 == 0 and num % 5 == 0):
        return True
    else:
        return False

# test given number
num = 10
if check_divisible_3and5(num):
    print(""%d is divisible by 3 and 5"" %num)
else:
    print(""%d is not divisible by 3 and 5"" %num)"
Write a Python script to find the area of a triangle when three sides are given.,"a = 3
b = 4
c = 5","# calculate the semi-perimeter
s = ( a + b + c ) / 2
  
# calculate the area
area = (s*(s-a)*(s-b)*(s-c)) ** 0.5
  
print('The area of the triangle is %0.2f' %area)
// Output: The area of the triangle is 6.00"
Create a Python function that takes inputs in the form of two words and returns the start index of the second word in the first word.,"Word1 = ""Mountain"" ,Word2 = ""tain""","def index_of_word(w1, w2):
    pos = 0
    for i in w1:
        if w1.find(w2,pos) > -1:
            return w1.find(w2,pos)
        pos +=1
    return -1"
Write a Python program to filter a list of words by their length.,"word_list = [""apple"", ""banana"", ""pear"", ""grape"", ""mango""]","def filter_by_length(word_list, length):
    filtered_list = []
    for word in word_list:
        if len(word) == length:
            filtered_list.append(word)
    return filtered_list

result = filter_by_length(word_list, 5)
print(result)"
Write a Python code to normalize a list of numbers.,"list_numbers = [1, 4, 4, 5, 7]","""""""
Normalize a list of numbers using Python
""""""

def normalize_list(list_numbers):
  max_val = max(list_numbers)
  normalized = [n/max_val for n in list_numbers]
  return normalized

if __name__ == '__main__':
  list_numbers = [1, 4, 4, 5, 7]
  print(normalize_list(list_numbers))"
"Write a python function to compare two strings and return 1 if the strings are anagrams, 0 if not.","""bob"", ""bob""","def is_anagram(string1, string2):
    string1 = sorted(string1.replace("" "", """").lower())
    string2 = sorted(string2.replace("" "", """").lower())
    
    if string1 == string2:
        return 1
    else:
        return 0"
Create a Python program that randomly shuffles the values in an array,"my_arr = [1,2,3,4,5]","import random

def shuffle(my_arr):
    shuffled_arr = my_arr[:]
    random.shuffle(shuffled_arr)
    return shuffled_arr

shuffled_arr = shuffle(my_arr)
print(shuffled_arr)"
Implement a program in Python that takes a string as an input and prints out the length of the longest word in the string.,"string = ""The quick brown fox jumps over the lazy dog""","def longest_word(string):
    words = string.split("" "")
    max_length = 0
    longest_word = """"
    for word in words:
        if(len(word) > max_length):
            max_length = len(word)
            longest_word = word
    print(""Longest word is {} with length {}"".format(longest_word,max_length))"
Create a line chart representing the given data in Python.,"x = [1, 2, 3, 4, 5]
y = [2, 4, 6, 8, 10]","import matplotlib.pyplot as plt 

x = [1, 2, 3, 4, 5]
y = [2, 4, 6, 8, 10]

plt.plot(x, y)
plt.title('Line Chart') 
plt.xlabel('X-Axis') 
plt.ylabel('Y-Axis') 
plt.show()"
Create an algorithm in Python to remove duplicates from an array of integers while preserving the order of the elements.,"[1, 8, 10, 4, 1, 8, 8]","def remove_duplicates(arr):
  seen = set()
  result = []

  for item in arr:
    if item not in seen:
      seen.add(item)
      result.append(item)

  return result

arr = [1, 8, 10, 4, 1, 8, 8]

print(remove_duplicates(arr)) # Output: [1, 8, 10, 4]"
Create a Python program that uses a given list of words to construct a poem.,"""Sleep"", ""Dream"", ""Reality"", ""Beauty"", ""Life""","def create_poem(words):
    poem = """"
    for word in words:
        poem += word + ""\n""

    poem += ""\nSleep, dream and beauty\nReality shatters in life\nWhere dreams forevermore dwell""
    return poem

print(create_poem([""Sleep"", ""Dream"", ""Reality"", ""Beauty"", ""Life""]))"
"Given a list of numbers, write a program in Python to select only the elements divisible by 5.","[23, 12, 64, 39, 52]","def divisible_five(nums):
    result = []
    for num in nums:
        if num % 5 == 0:
            result.append(num)
    return result"
Generate Python code to add 1 to every element of an array.,"[5, 6, 8, 9, 10]","def add_one(arr): 
    for i in range(len(arr)): 
        arr[i] += 1 
    return arr"
Create a Python program to group elements of a list based on their length.,"['cat', 'dog', 'apple']","def groupByLength(arr):
    result = {}
    for word in arr:
        if len(word) in result:
            result[len(word)].append(word)
        else:
            result[len(word)] = [word]
    return result

groupedByLength = groupByLength(['cat', 'dog', 'apple'])
print(groupedByLength)"
Create a Python function to find the maximum number in an array. The function should accept a single argument and return the maximum value in the array.,"array = [5, 8, 0, 1, 3, 9]","def find_maximum(arr):
  max_val = arr[0]
  for value in arr:
    if value > max_val:
      max_val = value
  return max_val

# Usage
max_num = find_maximum([5, 8, 0, 1, 3, 9])
print(max_num)
# prints 9"
Generate code to remove any duplicates from a list of integers in Python.,"[1, 1, 2, 3, 4, 4, 5]","def remove_duplicates(lst): 
    final_list = [] 
    for num in lst: 
        if num not in final_list: 
            final_list.append(num) 
    return final_list 
    
lst = [1, 1, 2, 3, 4, 4, 5] 
print(remove_duplicates(lst))"
Create a loop in Python that prints each item of the following list with a message:,"my_list = ['A', 'B', 'C', 'D']","my_list = ['A', 'B', 'C', 'D']

for item in my_list:
    print(""The item is: {}"".format(item))"
"Generate a Python code snippet to convert a string to a list, where each word is an item in the list.","String: ""This is a test string.""","string = ""This is a test string""

list = string.split("" "")

print(list) # Output: ['This', 'is', 'a', 'test', 'string']"
Create a Python program to fetch data from an HTTPS resource.,"url = ""https://example.com/data""","import requests

url = ""https://example.com/data""

# Send a GET request to the URL
r =  requests.get(url)

# Check the status of the request
if r.status_code == 200:
 data = r.json()
 # Process the fetched data
else:
 print('Error: status code {}'.format(r.status_code))"
Generate a Python script to find common elements in two lists.,"list1 = [1, 2, 3, 4]
list2 = [3, 4, 5, 6]","def find_common_elements(list1, list2):
    result = []
    for val in list1:
        if val in list2:
            result.append(val)
    return result

list1 = [1, 2, 3, 4]
list2 = [3, 4, 5, 6]

result = find_common_elements(list1, list2)
print(result)"
Create a program in Python that takes a sentence as an input and prints out the sentence in reverse.,Hello world!,"def reverse_sentence(sentence): 
    words = sentence.split() 
    newWords = [word[::-1] for word in words] 
    newSentence = "" "".join(newWords) 
    return newSentence

print(reverse_sentence(""Hello world!""))"
Write a Python program to generate random passwords from a list of strings.,"strings = [""random"",""password"",""security"",""codes"",""aaa"",""bbb"",""ccc"", ""ddd""]","import random

strings = [""random"",""password"",""security"",""codes"",""aaa"",""bbb"",""ccc"", ""ddd""]
password = """"

for i in range(len(strings)):
 randomIndex = random.randint(0,len(strings) -1)
 password += strings[randomIndex]

print(""Generated Password:"", password)"
Classify the performance complexity of the following code snippet written in Python.,"def factorial(n):
   if n == 0:
       return 1
   else:
       return n * factorial(n-1)",The performance complexity of the code snippet is O(n).
Can you create a Python script to print out the two smallest elements from an array of numbers?,"[45, 24, 2, 17, 78]","def smallest_two_elements(nums):
    min1 = min(nums)
    nums.remove(min1)
    min2 = min(nums)
    
    print(min1, min2)

smallest_two_elements([45, 24, 2, 17, 78])"
Write a Python program to generate a square matrix with random values from 0 to 9.,4 (Size of matrix),"import random

def matrix(size):
  matrix = [[0 for i in range(size)] for j in range(size)]
  for i in range(size):
    for j in range(size):
      matrix[i][j] = random.randint(0, 9)
  return matrix

result = matrix(4)
for row in result:
  print(row)"
Create a Python program to format a given amount of money with a given currency symbol.,"Money: 95.50
Currency Symbol: €","def format_money(amount, symbol):
    return f""{symbol}{amount:.2f}""

format_money(95.50, '€') # returns €95.50"
Debug the provided Python code to make it run without errors.,"num_list = [1, 2, 3, 4, 5]

for num in num_list
 print(""Square of"", num ""is"", num*num)","num_list = [1, 2, 3, 4, 5]

for num in num_list:
 print(""Square of"", num, ""is"", num*num)"
Edit the following Python program to fix the syntax error,"def fx(x):
if(x=0)
	x=x++;
	return x","def fx(x):
    if x == 0:
        x += 1
    return x"
Convert a Javascript function to Python.,"function add(a, b) {
  return a + b;
}","def add(a, b):
    return a + b"
Optimize a Python program to count occurrences of each letter in a given string.,"""This is a sample string""","from collections import Counter

def count_letters(string):
    return Counter(string)

print(count_letters(""This is a sample string""))"
Construct a Python function to calculate the sum of all elements of a given array.,"[3,2,1,6,5,7,4]","def array_sum(arr):
    s = 0
    for i in arr:
        s += i
    return s

print(array_sum([3,2,1,6,5,7,4]))"
Develop an algorithm in Python to create a Fibonacci sequence up to the nth number.,n=10,"def fibonacci(n):
  if n<0:
    print(""Incorrect input"")
  elif n==1:
    return 0
  elif n==2:
    return 1
  else:
    return fibonacci(n-1)+fibonacci(n-2)
print(""Fibonacci series up to"",n,"":"")
for i in range(1,n+1):
  print(fibonacci(i))"
Implement a sorting algorithm in Python that sorts a given array of numbers in descending order.,"[2, 5, 7, 3, 1, 8]","def sort_descending(list):
    sorted_list = sorted(list, reverse=True)
    return sorted_list"
Can you provide a code snippet in Python that takes a list of strings as input and sorts them based on their length?,"[""Hello"",""World!"",""Good"",""Morning""]","words = [""Hello"",""World!"",""Good"",""Morning""]

words.sort(key=len)

print(words)"
Construct a function in Python that will take a list as an argument and prompt the user to delete elements from that list.,"my_list = [1, 2, 3, 4, 5]","def delete_element(list): 
    print(""Original list: "" + str(list)) 
    element = int(input(""Please enter the element which you want to delete: ""))
    list.remove(element) 
    print(""List after deletion of element: "" + str(list))"
Write a Python function to compare two strings and check if they are equal.,Compare 'Hello' and 'World',"def str_compare(str1, str2):
return str1 == str2

str_compare('Hello', 'World')"
Transform the following code from Python to JavaScript.,"for i in range(10):
    print(i)","for (let i = 0; i < 10; i++) {
  console.log(i);
}"
Suggest a Python program to compute the sum of pairs of elements in a given array,"[2, 4, 5, 10]","def sum_pairs(input_list):
    output_list = []
    for i in range(len(input_list)-1):
        sum = input_list[i] + input_list[i+1]
        output_list.append(sum)
    return output_list

input_list = [2, 4, 5, 10]
result = sum_pairs(input_list)
print(result)"
Write an algorithm in Python to find the maximum element of a given array.,"[2, 7, 1, 6, 5]","def find_max_element(arr):
  
  max = arr[0]
  
  for i in range(1, len(arr)):
    # compare current max with the next array element
    if arr[i] > max:
      max = arr[i]
  
  return max

arr = [2, 7, 1, 6, 5]
max_element = find_max_element(arr)
print(""Max element in the array:"", max_element)"
Implement an algorithm in Python to classify a given dataset into different target classes.,dataset.csv,"import pandas as pd
from sklearn.neighbors import KNeighborsClassifier
import numpy as np
 
# Load dataset
data = pd.read_csv('dataset.csv')
X = data.iloc[:, :-1]
y = data.iloc[:, -1]
 
# Create and fit classifier
classifier = KNeighborsClassifier(n_neighbors=5)
classifier.fit(X, y)
 
# Make predictions
predictions = classifier.predict(X)
print(np.mean(predictions == y))"
Create a program in Python to merge two dictionaries into a new one.,"Dictionary 1
`{'name': 'John', 'age': 25}`

Dictionary 2
`{'company': 'Google', 'city': 'New York'}`","# Dictionaries
dict1 = {'name': 'John', 'age': 25}
dict2 = {'company': 'Google', 'city': 'New York'}

# Merge two dictionaries
dict3 = {**dict1, **dict2}

# Print the merged dictionary
print(dict3)

# Output:
# {'name': 'John', 'age': 25, 'company': 'Google', 'city': 'New York'}"
Write a function in Python that takes an array of integer values and reverses the order of the values.,"[1, 2, 3, 4, 5]","def reverse_array(arr):
  return arr[::-1]  # Returns a slice of the list in reverse order"
Create a program to generate a frequency table from a given list,a list of elements,"# Python3 program to find frequency table 
from collections import Counter 
def freq_table(arr):
    return dict(Counter(arr))"
Design an algorithm in Python to calculate the Euclidean distance between two points,"Input: ([2, 4], [4, 8])","import math 
    
def euclidean_distance(point1, point2):
    dist = math.sqrt( (point1[0]-point2[0])**2 + (point1[1]-point2[1])**2 )
    return dist 

print(euclidean_distance([2,4], [4,8]))"
Write a Python program that takes a string as input and edits the string to remove all punctuation marks.,"string = ""This string contains , a comma, and a % symbol.""","import string

def remove_puncutuation(string):
    translator = str.maketrans('', '', string.punctuation)
    return string.translate(translator)

string = ""This string contains , a comma, and a % symbol.""

print(remove_puncutuation(string))"
Write a Python function that takes a list of strings as input and returns a new list containing all the strings that start with 'A',"List = [""Apple"", ""Banana"", ""Ant"", ""Dog"", ""Aardvark""]","def startWithA(list): 
	new_list = [] 
	for el in list: 
		if el[0] == 'A': 
			new_list.append(el) 
	return new_list"
Write a Python code to sort the given array.,"array : [ 2, 4, 1, 3, 7, 5]","# Bubble sort algorithm
def sort_array(array):
    for i in range(len(array)):
        for j in range(len(array)-i-1):
            if array[j] > array[j+1]:
               array[j], array[j+1] = array[j+1], array[j]
    return array

# Sample array
array = [2, 4, 1, 3, 7, 5]

# Function call
sorted_array = sort_array(array)

# Print sorted output
print(sorted_array)"
Optimize this Python code to reduce its run-time complexity.,"def foo(l1, l2):
    result = []
    for i in l1:
        for j in l2:
            result.append(i + j)
    return result","def foo(l1, l2):
    result = [i + j for i in l1 for j in l2]
    return result"
Construct a Python program to check whether a given number is prime or not.,13,"def check_prime(num):
    if num == 1:
        return False
    for i in range(2,num):
        if not num % i:
            return False
    return True

result = check_prime(13)
print(result)"
Write a Python program to find the maximum of two numbers provided by the user.,x = 5; y = 8;,"x = int(input(""Enter the first number: ""))
y = int(input(""Enter the second number: ""))

maximum = x if x > y else y

print(""The maximum of two numbers is"", maximum)"
Write a Python script to generate a random password of a given length.,length = 8,"import string
import random

def random_password_generator(length):
 chars = string.ascii_letters + string.digits + string.punctuation
 return ''.join((random.choice(chars) for i in range(length)))

print(random_password_generator(length))"
Create a Python function that takes two numbers and returns the Greatest Common Divisor (GCD) of the two numbers.,"14, 18","def gcd(x, y):
    while y != 0:
        x, y = y, x % y
    return x"
Create a Python script that calculates the area of a triangle by taking the base and height as user input.,"base = 10, height = 14","base = float(input('Enter the base:'))
height = float(input('Enter the height:'))

def areaOfTriangle(base, height):
 return 0.5 * base * height

print(areaOfTriangle(base, height))"
Create a Python script to generate a calendar representation of a given month.,Month : April; Year : 2020,"import calendar

year = 2020
month = 4

# create a calendar of the given month and year
cal = calendar.month(year, month)

# print it
print(cal)

# Output
     April 2020
Mo Tu We Th Fr Sa Su
       1  2  3  4  5
 6  7  8  9 10 11 12
13 14 15 16 17 18 19"
Write a Python program to check if two strings are a rotation of each other.,"Strings:”geeksforgeeks”, “forgeeksgeeks”","if len(string1) == len(string2) and string1 in string2*2:
    print(""The strings are a rotation of each other"")
else:
    print(""The strings are not a rotation of each other"")"
Generate a function in Python that takes a number as input and prints out the n-th Fibonacci number.,6,"def nthFibonacciNumber(n): 
    if n==0: 
        return 0
    elif n==1: 
        return 1
    else: 
        return nthFibonacciNumber(n-1)+nthFibonacciNumber(n-2)

result = nthFibonacciNumber(6)
print(result)"
Create a program in Python which takes a string and prints out all the words present in the string in alphabetical order.,"string = ""This is a test string""","def sortString(string):
    words = string.split("" "")
    words.sort()
    return words
    
print(sortString(string))"
Design an algorithm in Python to count all unique elements in a list.,"[1, 1, 2, 3, 3, 4, 5, 6]","def count_unique(lst):
    unique_count = 0
    seen = set()
    for element in lst:
        if element not in seen:
            unique_count += 1
            seen.add(element)
    return unique_count"
Analyze a given Python code and write a function that checks if a given number is prime.,def primeCheck(num):,"def primeCheck(num):
 if num > 1:
 for i in range(2, num):
  if (num % i) == 0:
   return False
 else:
  return False
 return True"
Generate a Python function that checks to see if a given string is a palindrome.,Input: madam,"def is_palindrome(str):
    reversed_str = """"
    for i in range(len(str) - 1, -1, -1): 
        reversed_str += str[i]

    if str == reversed_str: 
        return True
    else: 
        return False

string = ""madam""
result = is_palindrome(string)
print(result)"
Optimize an existing python program to improve its processing speed.,"def my_func(x):
    for i in range(1000000):
    x += x + 1
return x","def my_func(x): 
    x += x << 1  # 2x faster than adding 1
    for i in range(1000000 // 2):  # divide loop by 2
        x += x << 2 
    return x  # no extra operation needed on return value as it is already doubled twice already."
Build a Python script to compare two strings and determine which string is the longest.,"""Hello\nWorld""","def longest(str1, str2):
    if len(str1) > len(str2):
        return str1
    elif len(str2) > len(str1):
        return str2
    else:
        return 'Strings are equal length.'

str1 = 'Hello'
str2 = 'World'

print(longest(str1, str2))
# Output: World"
Provide a Python program that sorts a list of strings based on the length of the strings.,"[""banana"", ""apple"", ""watermelon""]","my_list = [""banana"", ""apple"", ""watermelon""]
my_list.sort(key=len)

# my_list is now [""apple"", ""banana"", ""watermelon""]"
Generate a Python program to give an output as true if the given string contains at least two distinct characters,"""AbcdABC""","def containsTwoDistinctChars(string):
    distinctChars = set()
    for char in string:
        distinctChars.add(char)
    
    return len(distinctChars) >= 2

print(containsTwoDistinctChars(""AbcdABC""))"
Create an algorithm in Python to separate numbers below 10 and above 5.,"array = [4, 7, 10, 8, 12, 6]","below_ten = [] # Separated numbers
above_five = [] # Separated numbers

# Iterate over array
for n in array:
    if n > 5:
        above_five.append(n)
    else:
        below_ten.append(n)

# Print results
print(""Below 10: "", below_ten)
print(""Above 5: "", above_five)"
Develop a Python code to find the longest palindromic substring,BANANAB,"def find_longest_palindrome(word):
    max_length = 0
    max_start = 0
    for i in range(len(word)):
        for j in range(0, i):
            sub = word[j:i+1]
            if sub == sub[::-1] and len(sub) > max_length:
                max_start = j
                max_length = len(sub)
    print(word[max_start:max_start + max_length])"
Write a Python program to create a histogram of the data in the given array.,"Array: [2, 3, 5, 6, 8, 4, 2, 4, 6, 9]","import matplotlib.pyplot as plt

data = [2, 3, 5, 6, 8, 4, 2, 4, 6, 9]

plt.hist(data)
plt.title(""Histogram of Data"")
plt.xlabel(""Data Values"")
plt.ylabel(""Frequency"")
plt.show()"
Develop a python program for predicting a movie's rating based on its reviews.,"reviews = ['This movie was great', 'This movie was terrible']","#Code
num_reviews = len(reviews)
num_positive_reviews = 0

for review in reviews:
    if 'great' in review:
        num_positive_reviews +=1

rating = num_positive_reviews / num_reviews #Rating  
print(rating) #Prints the rating"
Write a python program to transform input set of numbers into a list of tuples.,"1, 2, 3, 4, 5","[(1, 2), (3, 4), (5, None)]"
Generate a python function to calculate the total cost of a purchase given prices and quantities.,"prices = [10, 20, 10]
quantities = [1, 2, 3]","def calculate_total_cost(prices, quantities):
 total = 0
 for price, quantity in zip(prices, quantities):
 total += price * quantity
 return total"
Produce a Python code section to calculate the average value for all elements of a given array.,"[2, 7, 5, 4]","array = [2, 7, 5, 4]

total = 0
for num in array:
 total += num
average = total/len(array)

print(""The average of the array is:"", average)"
Normalize the following text using Python.,the     Cat    in  the  hat,"text = ""the Cat in the hat""
text = text.replace('  ', ' ').strip()
print(text)"
Design a Python program for finding the median of a given list of numbers.,"[7, 4, 5, 2, 10]","def find_median(lst):
    lst.sort()
    if len(lst)%2 == 0:
        median1 = lst[len(lst)//2]
        median2 = lst[len(lst)//2 - 1]
        median = float(median1 + median2) / 2
    else:
        median = lst[len(lst)//2]
    return median

result = find_median([7, 4, 5, 2, 10])
print(result)"
Modify the given Python code to optimize efficiency.,"def calculate_sum(nums):
    total = 0
    for n in nums:
        total += n
    return total","def calculate_sum(nums):
    return sum(nums)"
Translate the following code from JavaScript to Python:,"function addTwo(num) {
    return num + 2;
}","def add_two(num):
    return num + 2"
Write a Python program to check if a given array contains a pair of elements whose sum is equal to a given number.,"[2, 4, 6, 5], 8","def check_pair(arr, sum):
    s = set()
    for item in arr:
        target = sum - item
        if(target in s):
            return True
        s.add(item)
    return False

print(check_pair([2, 4, 6, 5], 8))"
Create an algorithm in Python to fill every element in a matrix with its own column number.,"[[1, 2, 3], 
 [4, 5, 6], 
 [7, 8, 9]]","matrix = [[1, 2, 3], 
          [4, 5, 6], 
          [7, 8, 9]]

for row_index, row in enumerate(matrix):
    for col_index, _ in enumerate(row):
        matrix[row_index][col_index] = col_index + 1

print(matrix)"
"Create a Python program that takes in a string and counts how many vowels are in it, regardless of case.",amazing,"def count_vowels(word):
  answer = 0
  for letter in word:
    if letter.lower() in 'aeiou':
      answer += 1
  return answer

print(count_vowels('amazing'))"
Generate a python program to parse and extract information from the following input,"input = [{'animals': ['dog', 'cat', 'horse'], 'instruments': ['violin', 'guitar']},
{'food': ['banana', 'apple', 'celery'], 'objects': ['chair', 'table']}]","def parse(input):
    output = []
    for d in input:
        for key, value in d.items():
            output.append({key: value})
    return output"
Modify the following Python code to remove any duplicate elements in an array.,"myList = [1, 2, 3, 2, 1]",myList = list(set(myList))
Write a Python program to calculate the hypotenuse of a right-angled triangle.,"a = 5, b = 12","import math

# calculate the hypotenuse
def calc_hypotenuse(a, b):
    hyp = math.sqrt(a**2 + b**2)
    print(""The length of the hypotenuse is"", hyp)

# input lengths of triangle sides
a = 5
b = 12

# call the function
calc_hypotenuse(a, b)"
Create a Python 3 program that filters a list of numbers. The program should filter out any numbers greater than 10.,"[20, 5, 2, 15, 7, 10]","numbers = [20, 5, 2, 15, 7, 10]
numbers = [x for x in numbers if x <= 10]
print(numbers)"
Create a Python program for calculating the area of a given triangle.,"float a = 5
float b = 10
float c = 8","def triangleArea(a, b, c): 

    # calculate the semi-perimeter 
    s = (a + b + c) / 2

    # calculate the area 
    area = (s * (s - a) * (s - b) * (s - c)) ** 0.5

    return area"
Modify the existing python program to fulfill the following purpose,"Given a list of strings, find and print the most frequent string in the list.","def most_frequent(lst):
    max = 0
    frequent = lst[0]
    for item in lst:
        freq = lst.count(item)
        if freq > max:
            max = freq
            frequent = item
    return frequent"
Construct a python program that randomly swaps two elements within a list of numbers.,"[1, 2, 3, 4, 5]","import random

# input list
data_list = [1, 2, 3, 4, 5]

# choose two random indices
i, j = random.sample(range(len(data_list)), 2)

# store the values before swapping
a = data_list[i]
b = data_list[j]

# swap two elements in a list
data_list[i] = b
data_list[j] = a

# print the list after swapping
print(data_list)"
Create a Python program that takes a list of integers as an input and returns a dictionary with keys being the numbers and values being the frequency of those numbers in the list.,"[1, 3, 5, 6, 1, 2, 5, 3]","def counting(nums):
    result={}
    for num in nums:
        if num in result:
            result[num]+=1
        else:
            result[num]=1
    return result

nums=[1, 3, 5, 6, 1, 2, 5, 3]
result=counting(nums)
print(result)
# Output: {1: 2, 3: 2, 5: 2, 6: 1, 2: 1}"
"In Python, write a program to calculate the area of a triangle when the base and height are given.","Base: 10, Height: 5","def triangle_area(base, height):
 return (base * height) / 2

triangle_area(10, 5)  # 25.0"
Write a code optimization code that reduces the number of lines of code in a given Python script.,"def count_words(string):
    counts = { }
    for w in string.split():
        if w in counts:
            counts[w] += 1
        else:
            counts[w] = 1
    return counts","def count_words(string):
    counts = { }
    for w in string.split():
        counts[w] = counts.get(w, 0) + 1
    return counts"
Create a web scraper with Python and Beautiful Soup to scrape data from a single webpage.,URL: http://example.com/page,"import requests
from bs4 import BeautifulSoup

url = 'http://example.com/page'

response = requests.get(url)

soup = BeautifulSoup(response.text, 'html.parser')

results = soup.find_all('div', {'class': 'result'})

for result in results:
 title = result.find('h2').text
 description = result.find('p').text 
 print(title, description)"
"Given some code, identify the type of the code written.","def foo():
    x = 0
    y = 1
    z = 2
    if x == y:
        z += 1",The code written is a combination of Python and logic control. It is a conditional statement which checks whether x is equal to y and adds one to z if this is true.
Generate Python code to calculate the sum of the elements in a given list.,"[1, 4, 8, 10]","list = [1,4,8,10]

def calculate_sum(list):
 sum = 0
 for number in list:
 sum += number
 return sum

sum = calculate_sum(list)
print(sum) # Output: 23"
Create an automated program that converts a given number of dollars to Canadian currency using Python.,The given number is $100.,"# define the currency ratio
usd_to_cad = 1.33

# get user input
usd_amount = float(input('Enter the amount in USD: '))

# convert USD to CAD
cad_amount = usd_amount * usd_to_cad

# print the amount in CAD
print('The amount in CAD is', cad_amount)"
"Write a Python program to split a list into two parts, where the size of the first part is determined by the user.","[1, 2, 3, 4, 5, 6, 7]","def split_list(lst, size):
    part1 = lst[:size]
    part2 = lst[size:]
    return part1, part2

# example
my_list = [1, 2, 3, 4, 5, 6, 7]
part1, part2 = split_list(my_list, 3)
print(part1) # [1, 2, 3]
print(part2) # [4, 5, 6, 7]"
Read the following pseudocode and generate a Python program to complete the given task.,"Given a list of numbers, print the numbers in reverse order","numbers = [1, 2, 3, 4, 5]
 
numbers.reverse()
 
for num in numbers:
    print(num)"
Write a Python program that determines whether the given string is a palindrome.,"String: ""racecar""","def is_palindrome(string):
  if len(string) <= 1:
    return True
  else:
    letter_1 = string[0]
    letter_2 = string[-1]
    if letter_1 != letter_2:
      return False
    else:
      new_word = string[1:-1]
      return is_palindrome(new_word)"
Construct a Python dictionary based on the following data,"keys = [""car"", ""bike""]
values = [""Ford"", ""Honda""]","dict = {
    ""car"" : ""Ford"", 
    ""bike"" : ""Honda""
}"
Divide two numbers without using the divide operator in Python.,09-Mar,"def divide_without_operator(a, b):
    return a // b + (a % b != 0)

print(divide_without_operator(9, 3))"
Parse the following JSON string into a Python dictionary.,"{""name"":""John"",""age"":30,""city"":""New York""}","import json

data = '{""name"":""John"",""age"":30,""city"":""New York""}'

parsed_data = json.loads(data)
print(parsed_data) # {'name': 'John', 'age': 30, 'city': 'New York'}"
Create a Python script to print the first n even numbers.,n = 10,"n = 10

for i in range(1, n+1):
 if i % 2 == 0:
 print(i)"
Create a program in Python for ASCII conversion.,String: “Hello World”,"def ascii_conversion(string):
 return ''.join([f'{ord(c):08b}' for c in string])

print(ascii_conversion(""Hello World""))"
Create a Python function that takes a string as input and returns a dictionary that counts the frequency of every character.,hello,"def char_freq(s):
    freq = dict()
    for i in s:
        if i in freq:
            freq[i] += 1
        else:
            freq[i] = 1
    return freq

string = 'hello'
result = char_freq(string)

print(result) # {'h': 1, 'e': 1, 'l': 2, 'o': 1}"
Create a shell script that runs a Python program and prints out the results.,"python program.py ""example input""","#!/bin/bash

python program.py ""example input""
output=$(python program.py ""example input"")

echo $output"
Replace a string in the following python program.,"string = ""Hello, world!""
substring = ""world""
substitution = ""Python""","string = ""Hello, world!""
substring = ""world""
substitution = ""Python""

print(string.replace(substring, substitution))"
Construct a Python script that uses regular expressions to find phone numbers in a text.,"The following numbers belong to us: 888-555-0000, +1-217-543-1000.","import re

text = 'The following numbers belong to us: 888-555-0000, +1-217-543-1000.'

# Find all phone numbers
numbers = re.findall(r'\+?\d[\d -]{8,12}\d', text)

# Output
print(numbers)"
Write a python program that selects five random elements from a list and prints them.,"my_list = [1, 3, 5, 8, 7, 2, 10, 4, 6, 9]","import random

my_list = [1, 3, 5, 8, 7, 2, 10, 4, 6, 9]
random.shuffle(my_list)

for i in range(5):
    print(my_list[i])"
Generate a python program that removes all whitespace from a string.,"""This    is    a   string    with    whitespace""","def remove_whitespace(x):
   return x.replace("" "", """")"
"Develop an API in Python that takes in two strings and returns true if they are anagrams, and false otherwise.","listen, silent","# anagram checker

def check_anagrams(str1, str2):
    if sorted(str1) == sorted(str2):
        return True 
    else: 
        return False 
  
# Driver code 
str1 = ""listen""
str2 = ""silent""

if(check_anagrams(str1, str2)): 
    print(""The strings are anagrams."")  
else: 
    print(""The strings aren't anagrams."")"
Create a program in Python to find the number of occurrences of an element x in a list y.,"[3, 5, 2, 7, 4, 3, 2], x = 2","def count_x(x, y):
    count = 0
    for i in y:
        if i == x:
            count += 1
    return count"
Improve the following function by using Python built-in functions:,"def sum_array(array):
    '''A function that takes in an array of numbers and returns the sum of all the numbers'''
    total = 0
    for num in array:
        total = total + num
    return total","def sum_array(array):
    '''A function that takes in an array of numbers and returns the sum of all the numbers'''
    return sum(array)"
Create a Python program to find the sum of all the values in a dictionary,"d = {'a': 10, 'b': 20, 'c':30}","def sum_values(d):
    sum = 0
    for value in d.values():
        sum += value
    return sum

total = sum_values(d)
print(total) # 60"
Create a Python program which returns the difference between the two largest numbers in a given list,"[3, 8, 9, 6, 4, 10]","def maxDifference(arr): 
    n = len(arr) 
    max_diff = arr[1] - arr[0] 
  
    for i in range(0, n): 
        for j in range(i + 1, n): 
            if (arr[j] - arr[i] > max_diff): 
                max_diff = arr[j] - arr[i] 
    return max_diff 
  
arr = [3, 8, 9, 6, 4, 10] 
print( maxDifference(arr))"
"Using the given Python code, update its style using pep 8 conventions.","def factorial (x):
 if x <= 1:
 return 1
 return x * factorial (x-1)","def factorial(x):
    if x <= 1:
        return 1
    return x * factorial(x - 1)"
Write a Python program to classify a given array of numbers into even number and odd number arrays.,"my_array = [1, 2, 3, 4, 5, 6, 7, 8, 9]","# Create empty lists to store odd and even elements
odd_elements = []
even_elements = []

# Iterate through the array
for element in my_array:
    # Check if the element is even or odd
    if element % 2 == 0:
        even_elements.append(element)
    else:
        odd_elements.append(element)

print(odd_elements)
print(even_elements)"
Generate a program in Python that counts the number of words in a string.,"String: ""This is a sentence""","def count_words(string):
    words = 0
    for x in string.split():
        words += 1
    return words"
Develop a Python function that takes a list of numbers and returns the minimum value.,"[10, 5, 20, -20, 30]","def findMinValue(numlist): 

    minVal = numlist[0] 
  
    for i in numlist: 
        if i < minVal: 
            minVal = i 
  
    return minVal 

numlist = [10, 5, 20, -20, 30] 
print(findMinValue(numlist))"
Create a Python program that prints a multiplication table of the given number.,number = 5,"def multiplication_table(number): 
    for i in range(1, 11): 
        print(number, 'x', i, '=', number*i) 

multiplication_table(number)"
Create a Python program to extract the first three characters of a string.,"string = ""programming""","result = string[:3]
print(result) #pro"
Write a Python function to flatten a nested list of lists into a single list containing all elements.,"nested_list = [[1, 2], [3, 4], [5, 6]]","def flatten_list(nested_list):
    return [item for sublist in nested_list for item in sublist]"
Implement a linear search algorithm in Python to search for an element in an array.,"arr = [2, 3, 4, 10, 40]
x = 10","def linear_search(arr, x): 
    for i in range(len(arr)): 
        if arr[i] == x: 
            return i 
    return -1
  
arr = [2, 3, 4, 10, 40] 
x = 10

result = linear_search(arr, x) 
if result == -1: 
    print(""Element is not present in array"") 
else: 
    print(""Element is present at index"", result)"
Write a Python script that normalizes given input strings.,"""Hello,  world    !  How are you?""","import re
s = ""Hello,  world    !  How are you?""
s = re.sub(' +', ' ', s)
print(s)

# Output
# 'Hello, world! How are you?'"
Create a function in Python that takes an array of numbers and prints out its maximum value.,"[1, 4, 8, 9, 10]","def print_max(arr):
 max_val = max(arr)
 print(max_val)
 
print_max([1, 4, 8, 9, 10])"
Write a Python code to check if the given number is prime.,Number = 23,"def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, n//2 + 1):
        if n % i == 0:
            return False
    return True

if is_prime(23):
    print('The given number is prime')
else:
    print('The given number is not prime')"
"Given a Python dictionary, print out the keys and values that are duplicated.","my_dict = {'a': 'apple', 'b': 'banana', 'c': 'apple'}","for key, value in my_dict.items():
    if my_dict.values().count(value) > 1:
        print(key, value)"
Compose a python script to create a bar chart.,"[4,6,3,7,2]","import matplotlib.pyplot as plt
 
# x-axis values 
x = [4, 6, 3, 7, 2] 

# Y-axis values 
y = [0, 2, 3, 4, 5] 

# Function to plot the bar
plt.bar(x, y)

# Naming the x-axis 
plt.xlabel('x - axis')
# Naming the y-axis 
plt.ylabel('y - axis')
# Writing a title to the graph
plt.title('Bar Chart') 
# Show the plot
plt.show()"
Find the frequency of elements in a given list in Python.,"List: [1, 1, 2, 3, 3, 3, 4, 4, 5]","from collections import Counter

given_list = [1, 1, 2, 3, 3, 3, 4, 4, 5]

my_dict = Counter(given_list)

print(my_dict) # output: Counter({3: 3, 4: 2, 1: 2, 2: 1, 5: 1})"
Develop a function in Python to find the largest two numbers in a given array.,"input_array = [1, 9, 5, 2, 4, 7]","def find_largest_two(input_array):
    largest1, largest2 = -float(""inf""), -float(""inf"")
    if len(input_array)<2:
        return
    for el in input_array:
        if el > largest1:
            largest2 = largest1
            largest1 = el
        elif el > largest2:
            largest2 = el
    return largest1,largest2"
Write a Python program using NumPy to calculate the dot product of two vectors.,"x = [3, 4, 5]

y = [2, 6, 4]","import numpy as np

x = np.array([3, 4, 5])
y = np.array([2, 6, 4])

dot_product = np.dot(x, y)

print(dot_product) # 46"
Can you design a function in Python which takes two string arguments and checks that two strings are anagrams or not?,"s1 = ""restful""
s2 = ""fluster""","def is_anagram(str1, str2):
    if (len(str1) != len(str2)):
        return False
    
    list1 = sorted(list(str1)) 
    list2 = sorted(list(str2)) 
  
    for i in range(0, len(str1)): 
        if (list1[i] != list2[i]): 
            return False
  
    return True"
Write a Python program for finding the maximum of 3 numbers.,"4, 7, 6","def max_of_three(a, b, c):
  if (a > b) and (a > c):
    greatest = a
  elif (b > a) and (b > c):
    greatest = b
  else:
    greatest = c
  return greatest

print(""Max is: "", max_of_three(4, 7, 6))"
Create a python code to check if an integer is a power of two,16,"def isPowerOfTwo(number):
    return (number > 0) and ((number & (number - 1)) == 0)

print(isPowerOfTwo(16))"
Create a dictionary in python from a comma-separated value string.,"s = ""name,age,city,country""","def csv_to_dict(s):
    data_dict = {}
    # split the string into list of elements
    elements = s.split(',')
    
    # iterate through the list
    for i in range(0, len(elements), 2):
        # add each element as a key to the dictionary
        data_dict[elements[i]] = elements[i+1]
    
    # return the dictionary
    return data_dict"
Rewrite the given code to use dictionaries instead of switch statements in Python.,"def convert_letter_grade(grade):
    switch (grade):
        case 'A':
            return 4.0
        case 'B':
            return 3.0
        case 'C':
            return 2.0
        case 'D':
            return 1.0","def convert_letter_grade(grade):
    grades = {
        'A': 4.0,
        'B': 3.0,
        'C': 2.0,
        'D': 1.0
    }
    return grades[grade]"
Write a Python program to calculate the entropy of a given dataset.,"Dataset: [1,1,1,1,1,1,2,2,2,2,3,3]","def entropy(dataset):
    counts = {}
    entropy = 0
    for i in dataset:
        if i in counts:
            counts[i] += 1
        else:
            counts[i] = 1
    for i in counts:
        p = counts[i]/len(dataset)
        entropy -= p*np.log2(p)
    return entropy

entropy([1,1,1,1,1,1,2,2,2,2,3,3])"
Write a function in Python that returns the maximum element in the given list.,"[1, -2, 3, 4]","def get_max_elem(arr):
    max_elem = arr[0]
    for elem in arr:
        if elem > max_elem:
            max_elem = elem
    return max_elem
 
arr = [1, -2, 3, 4]
max_elem = get_max_elem(arr)
print(max_elem) # Output: 4"
Create a python program to delete all items from a dictionary.,"d = {'a':1, 'b':2, 'c':3}","d = {'a':1, 'b':2, 'c':3}

# Using the clear() method
d.clear()

print(d) # Prints an empty dictionary"
Create a function in Python to sort strings in alphabetical order.,"['abc', 'bac', 'bca', 'axy', 'axz']","def sort_strings(strings):
    strings.sort()
    return strings

strings = ['abc', 'bac', 'bca', 'axy', 'axz']

print(sort_strings(strings))"
Can you write a Python function to determine if a supplied number is prime?,num=20,"def is_prime(num):
    """"""Check if the given number is prime.

    Args:
        num (int): A number to check

    Returns:
        bool: True if num is prime, False otherwise.
    """"""

    if num < 2: 
        return False

    for i in range(2, num):
        if (num % i) == 0:
            return False
    return True

num = 20
result = is_prime(num)
print(f""Is {num} prime? {result}"")"
Create a Python Flask application for solving a linear equation. The application should have an endpoint that receives an equation as input and returns the solution as output.,3x + 2 = 5,"from flask import Flask, request
from sympy import *

app = Flask(name)
x = Symbol('x')

@app.route('/solve', methods=['POST'])
def solve():
 equation = request.json['equation']
 solution = solve(equation, x)
 return {'solution': str(solution[0])}

if name == 'main':
 app.run(debug=True)"
Create a Python program to generate a random name from two given lists of names.,"first_names = [""Alice"", ""John"", ""Joe"", ""Michael""] 
last_names = [""Smith"", ""Williams"", ""Jackson"", ""Brown""]","import random

def get_random_name(first_names, last_names):
    first_name = random.choice(first_names)
    last_name = random.choice(last_names)
    random_name = first_name + ' ' + last_name
    return random_name"
Generate a function in Python to zip two lists.,"list1 = [""a"", ""b"", ""c""]
list2 = [1, 2, 3]","def zip_two_lists(list1, list2):
    return zip(list1, list2)"
Write a Python program to visualize a given dataset in a 2D scatterplot.,"x_data = {1,2,3,4,5,6,7,8,9,10}
y_data = {3,4,7,8,10,12,14,16,18,19}","import matplotlib.pyplot as plt
def visualize_data(x_data, y_data):
 plt.scatter(x_data, y_data)
 plt.xlabel('x data')
 plt.ylabel('y data')
 plt.title('2D Scatterplot')
 plt.show()"
Design a python program to error correct a given sentence.,The cat ate potatoo chips.,"def error_correct(sentence):
    words = sentence.split()
    correct_words = []
    for word in words:
        if word == 'potatoo':
            correct_words.append('potato') # correction
        else:
            correct_words.append(word)
    return ' '.join(correct_words)"
Write a Python program to scroll a given message on the console.,message = 'Hello World!',"def scrollMessage(message): 
    for char in message: 
        for i in range(100): 
            print (char, end = "" "")
        print("""")


# Input
message = 'Hello World!'

# Output
scrollMessage(message)"
Suggest a way to optimize the following Python code snippet.,"def find_max(arr):
    '''This function returns the maximum element in the given array.'''
    maxval = arr[0]
    for i in range(len(arr)):
        if arr[i] > maxval:
            maxval = arr[i]
    return maxval","def find_max(arr):
    '''This function returns the maximum element in the given array.'''
    maxval = arr[0]
    for num in arr:
        if num > maxval:
            maxval = num
    return maxval"
Create a Python script to generate random numbers with using a certain range.,"Minimum = 5, Maximum = 15","import random

min_n = 5
max_n = 15

def random_number_generator(min_n, max_n):
  return random.randint(min_n, max_n)

for num in range(0, 10):
    print (random_number_generator(min_n, max_n))"
Implement an algorithm in Python to optimize the following cost function,cost(x) = 3x^2 + 4x +2,"def optimization_algorithm(x): 
    cost = 3 * x ** 2 + 4*x + 2
    while cost > 0: 
        cost = cost - (6*x + 4)
        x = x - 0.01
    return x"
Write a function in Python to compare two given strings character-wise and return the position of the first difference.,"String1: String
String2: Strings","def compare_strings_charwise(s1, s2):
    for i in range(min(len(s1), len(s2))):
        if s1[i] != s2[i]:
            return i
    return -1"
Contruct a python program that sorts an array of strings using BubbleSort algorithm.,"[""Hello"", ""World"", ""Boo"", ""Yay""]","def bubbleSort(arr): 
    n = len(arr) 
  
    for i in range(n):      
        for j in range(0, n-i-1): 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j] 
  
    return arr"
We are given the input and output schematic of a neural network. You are required to implement the network in Python code.,"Inputs=[2,1]
Hidden1=[2]
Outputs=[1]","import numpy as np
 
# Inputs
x = np.array([2, 1])
 
# Weights - Initilise to random values
w1 = np.random.rand(2, 2)
w2 = np.random.rand(2, 1)
 
# Hidden layer
h1 = np.matmul(x, w1)
 
# Output layer
y = np.matmul(h1, w2)"
Generate a Python script to print all the prime numbers in a given range.,Range = 2 to 20,"for n in range(2, 21): 
   if n > 1: 
       for i in range(2, n//2 + 2): 
           if (n % i) == 0: 
               break
       else: 
           print(n)"
"Given a list of strings, write a Python snippet to sort the strings in ascending order according to word length.","[ ""Code"", ""Python"", ""JavaScript"", ""Java""]","strings = [""Code"", ""Python"", ""JavaScript"", ""Java""]

# sort the list by word length
strings.sort(key = lambda x: len(x))

print(strings)
# Output: [""Code"", ""Java"", ""Python"", ""JavaScript""]"
Generate an automated unit test in Python for the following function,"def add(a, b):
    return a + b","import unittest

class TestAddition(unittest.TestCase):

    def test_addition(self):
        self.assertEqual(add(1, 1), 2)
        self.assertEqual(add(2, 5), 7)
        self.assertEqual(add(3, 3), 6)
        self.assertEqual(add(-8, 6), -2)
        self.assertEqual(add(-3, -3), -6)

if __name__ == '__main__':
    unittest.main()"
Write a Python program to update a dictionary with the its key's length as the value.,"mydict = {""Model"": ""Tesla"", ""Car"": ""Tesla Roadster""}",mydict = {k: len(k) for k in mydict.keys()}
Create a function in Python that takes a list of words as an argument and returns a new list without duplicates.,"['apple', 'banana', 'apple', 'orange']","def remove_duplicates(words):
  seen = set()
  unique_words = []
  for word in words:
    if word not in seen:
      seen.add(word)
      unique_words.append(word)
  return unique_words

arr = ['apple', 'banana', 'apple', 'orange']
result = remove_duplicates(arr)
print(result)"
"Create a Python program which takes a word as an input, reverses it and prints the output.",hello,"def reverse_word(word):
    return word[::-1]

word = ""hello""
result = reverse_word(word)
print(result)"
Write a Python program to sort the characters in a given string in reverse alphabetical order.,Hello,"def sortReverseString(string):
 char_list = list(string)
 char_list.sort(reverse=True)
 return ''.join(char_list)

# Usage:
string = ""Hello""
sortedString = sortReverseString(string)
print(sortedString) # Output: olleH"
Develop a program in Python to rotate the elements of an array to the right by K times.,"my_list = [1,2,3,4,5]","def rotate_k_times(my_list, k):
    rotated_list = my_list.copy()
    for i in range(k):
        rotated_list = [rotated_list[-1]] + rotated_list[:-1]
    return rotated_list

if __name__ == '__main__':
    print(rotate_k_times(my_list, 3))"
Generate a Python code to sort a list of numbers.,"[100, 50, 30, 10, 7]","list = [100, 50, 30, 10, 7]
list.sort()
print(list) # Output: [7, 10, 30, 50, 100]"
"Make a function in Python which takes a string of any length, reverses it, and then returns the reversed string.",String to be reversed,"def reverse_string(string):
    reversed_string = """"
    for char in string:
        reversed_string = char + reversed_string
    return reversed_string"
Create a Python program that takes two arguments in the form of two lists and calculates the dot product of the two arguments.,"[1,2], [3,4]","def dot_product(list1, list2):
  product = 0
  for i in range(len(list1)):
    product += (list1[i] * list2[i])
  return product
#Example
list1 = [1,2]
list2 = [3,4]

result = dot_product(list1, list2)
print(result)
#Output
11"
Create a function to generate random numbers within a given range in Python.,"start=1, end=10","import random

def generate_random_numbers(start, end):
    return random.randint(start, end)

result = generate_random_numbers(1,10)
print(result)"
Develop a valid Python script which computes the root of a given quadratic equation,"a = 1, b = -7, c =12","import math

def quadratic_equation_roots(a, b, c):
  d = b**2 - 4*a*c

  if d > 0:
    x1 = (-b + math.sqrt(d)) / (2*a)
    x2 = (-b - math.sqrt(d)) / (2*a)
    return x1, x2
  else:
    return ""This equation has no real roots!"""
Generate a main.py python script that will return the maximum of two numbers.,"a = 3;
b = 4","def max(a, b): 
    if a > b: 
        return a 
    else:  
        return b 
  
#Driver Code 
a = 3
b = 4
print(max(a, b))"
Create a Python script to perform sentiment analysis on a given piece of text. Use the TextBlob package to detect the sentiment of the text and print out the sentiment score.,"Text: ""The movie was great! I really enjoyed watching it.""","import textblob

text = ""The movie was great! I really enjoyed watching it.""

blob = textblob.TextBlob(text)
sentiment = blob.sentiment

print(""Sentiment score:"", sentiment.polarity)"
Create a text parser in Python that converts a given string into an integer.,"""47""","def parse_int(string):
 return int(string)

result = parse_int(""47"")
print(result)

# Result: 47"
Generate a python code to build a simple regression model?,"X = [[1, 2, 3], [4, 5, 6]]
Y = [[7], [8]]","import numpy as np

X = np.array(X)
Y = np.array(Y)

b = np.linalg.inv(X.T.dot(X)).dot(X.T).dot(Y)

#Print the parameters
print(""Parameters: "", b)

#Make predictions
x_new = [[1, 2, 3]]
y_pred = np.dot(x_new, b)
print(""Predicted output: "", y_pred)"
Write a Python program to edit the following code in such a way that the output is increased is increased by one.,"def add_two_numbers(a, b):
    c = a + b
    d = a - b
    total = c + d
    print(total)","def add_two_numbers(a, b):
    c = a + b
    d = a - b
    total = c + d + 1
    print(total)"
Edit the following Python code to handle unexpected errors.,"def add_numbers(a,b): 
  return a + b","def add_numbers(a,b): 
    try:
        return a + b
    except TypeError as e:
        print(e)
        return None"
Write a Python script to parse a JSON string and convert it into a dictionary.,"'{""name"": ""GPT"", ""type"": ""AI""}'","import json

json_str = '{""name"": ""GPT"", ""type"": ""AI""}'

dict_x = json.loads(json_str)
print(dict_x)"
Develop a Python program to reverse a list of numbers.,"[1, 2, 3, 4, 5]","def reverse_list(nums):
    """"""Function to reverse a list of numbers.

    Parameters
    ----------
    nums : list
        List of numbers to be reversed.

    Returns
    -------
    reversed_list : list
        Reversed list of numbers.
    """"""

    reversed_list = nums[::-1]

    return reversed_list"
Write a Python program to calculate the Fibonacci number at a particular position.,6,"def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    # First Fibonacci number is 0 
    elif n==1: 
        return 0
    # Second Fibonacci number is 1 
    elif n==2: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2) 

# Driver Program 
if __name__ == ""__main__"": 
    print(Fibonacci(6))"
Optimize the following code written in Python such that its time complexity becomes linear.,"def sum(arr):
 total = 0
 for i in range(len(arr)):
 for j in range(i+1, len(arr)):
 total += arr[i] * arr[j]
 return total","def sum(arr):
 total = 0
 for i in range(len(arr)):
 total += arr[i] * (sum(arr[i+1:]) - arr[i])
 return total"
Create a sorting algorithm in Python to sort a given array in ascending order.,"[9, 8, 7, 6, 5, 4, 3, 2, 1]","def quicksort(arr): 
    if len(arr) <= 1:
        return arr
    pivot = arr[len(arr) // 2]
    left = [x for x in arr if x < pivot]
    middle = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]
    return quicksort(left) + middle + quicksort(right)

print(quicksort([9, 8, 7, 6, 5, 4, 3, 2, 1]))"
Create a Python function to generate a random password of length n,3,"import string
import random

def gen_password(length):
    characters = string.ascii_letters + string.digits + string.punctuation
    password = """"
    for i in range(length):
        password += random.choice(characters)
    return password

result = gen_password(3)
print(result)"
Write code using Python to generate a random password of given length.,Length: 8,"import string
import random

def generate_password(length):
    chars=string.ascii_uppercase + string.ascii_lowercase + string.digits
    return ''.join(random.choice(chars) for i in range(length))

print(generate_password(8))"
"Given a multi-dimensional array, write a python code snippet to find the sum of its elements.","arr = [[1, 4, 7], [2, 6, 3], [3, 5, 9]]","# Use nested list comprehension to calculate the sum 
total_sum = sum([sum(row) for row in arr])"
Develop a python program to add two matrices of the same size.,"X = [[2, 3, 4], 
     [6, 7, 8], 
     [10, 11, 12]]

Y = [[4, 5, 6], 
     [8, 9, 10], 
     [12, 13, 14]]","def add_matrices(X, Y):
    result = [[0 for col in range(len(X[0]))] for row in range(len(X))] # Create a matrix of all 0s
    for i in range(len(X)):
        for j in range(len(X[0])):
            result[i][j] = X[i][j] + Y[i][j]
    return result 

print(add_matrices(X, Y))"
Write a Python program to compute the sum of the absolute difference of all pairs of numbers in a given array.,"[5, 8, 10, 15]","arr = [5, 8, 10, 15]
Sum = 0

for i in range(len(arr)):
    for j in range(len(arr)):
        if(i != j):
            Sum += abs(arr[i] - arr[j])
            
print(Sum)"
Write a python program to calculate the areas of two rectangles and determine which one is larger,"The dimensions of first rectangle are- length=2, width=4
The dimensions of second rectangle are- length=4, width=6","def calculate_area(length, width):
    return length * width

rectangle_1_area = calculate_area(2, 4)
rectangle_2_area = calculate_area(4, 6)

if(rectangle_1_area > rectangle_2_area):
    print(""Rectangle 1 is larger"")
else:
    print(""Rectangle 2 is larger"")"
Output the sum of numbers in a list in Python.,"[1, 2, 3, 4, 5]","def list_sum(inpList):
    sum = 0
    for num in inpList:
        sum += num
    return sum

print(list_sum([1, 2, 3, 4, 5]))"
Classify the following text as valid or invalid python code,"sum = 0
sum = sum + 2",Valid
Write a Python program to find all the numbers divisible by a certain number within a certain range.,"int m=36, int n=74, int divisor=6","def find_numbers_divisible_by(m, n, divisor):
    divisible_numbers = []
    for i in range(m, n+1):
        if i % divisor == 0:
            divisible_numbers.append(i)
    return divisible_numbers"
Code a program in Python to calculate the mean from a dataset,"[0.07, 0.69, 0.29, 0.17, 0.11, 0.51, 0.5]","def calculate_mean(numbers):
    total = 0
    for num in numbers:
        total += num
    return total / len(numbers)
    
dataset = [0.07, 0.69, 0.29, 0.17, 0.11, 0.51, 0.5]
mean = calculate_mean(dataset)
print(mean)  # Output: 0.3542857142857143"
Create an algorithm in Python to identify the missing number in a sequence of integers.,"[1,2,4,5]","def missing_number(arr): 
  n = len(arr) 
  total = (n+1)*(n+2)/2
  for i in range(n): 
    total -= arr[i] 
  return total
  
arr = [1,2,4,5]
print(""The missing number is"",int(missing_number(arr)))"
Can you write a python program to solve a system of linear equations?,"x + y = 5
2x + y = 8","def solve_linear_equations(a, b, c):
    """"""
    This function takes three parameters: a, b and c, which are the coefficients of a system of linear equations, 
    and returns a tuple of the solution of the system.
    """"""
    x = (c - b) / (a - b)
    y = (5 - a*x) / b
    
    return (x, y)"
Create a Python program to edit the following string and make all characters in the string uppercase.,'This is a test string.',"def to_uppercase(input):
    output = """"
    for char in input:
        output += char.upper()
    return output"
Create a Python program to remove any items from a given list that are less than 5.,"[1, 4, 6, 8, 10, 15, 20]","my_list = [1, 4, 6, 8, 10, 15, 20]

filtered_list = [item for item in my_list if item >= 5]

print(filtered_list)  # Output: [6, 8, 10, 15, 20]"
Rewrite the existing code to edit the contents of an existing Python dictionary.,"language_dict = {
    'English': 'Hello', 
    'Spanish': 'Hola', 
    'Japanese': 'Konnichiwa'
    }","language_dict = {
    'English': 'Hi', 
    'Spanish': 'Hola', 
    'Japanese': 'Konnichiwa'
    }
    
def edit_dict(dictionary, key, value):
    dictionary[key] = value"
Optimize a given Python program by reducing the running time.,"def sum_of_numbers(n):
   s = 0
   for i in range(1,n+1):
       s = s + i
   return s","def sum_of_numbers(n):
    return int(n * (n + 1) / 2)"
"Create a function in Python to execute the following rule: given an array of integers, find the pair of adjacent elements that has the largest sum and print the sum.","[5, 0, -1, 7, 20]","def find_largest_sum(lst):
    largest_sum = 0
    for i in range(len(lst) - 1):
        current_sum = lst[i] + lst[i+1]
        if current_sum > largest_sum:
            largest_sum = current_sum
    return largest_sum"
Generate a Python program to compare two given dictionaries and output a dictionary with elements common in both.,"dict1 = {'a': 25, 'b': 14, 'c': 18, 'd': 7}
dict2 = {'b': 17, 'c': 18, 'e': 10, 'f': 11}","def compare_dicts(dict1, dict2):
    common_elements = {}
    for key1, value1 in dict1.items():
        for key2, value2 in dict2.items():
            if key1 == key2:
                common_elements[key1] = value1
    return common_elements"
Build a Python program to take a given list and create a dictionary with the elements and their corresponding indices.,"L=[""a"",""b"",""c""]","def create_dict(L):
    dict = {}
    for i in range(len(L)): 
        dict[L[i]] = i
    return dict

dict_list = dict(create_dict([""a"",""b"",""c""]))
print(dict_list)"
Solve this basic algebra problem in Python.,5x - 4 = 35,x = (35 + 4)/5
Design a function in Python that takes two lists as input and returns the elements in common.,"list1 = [2, 3, 4, 5]
list2 = [1, 2, 4, 5]","list1 = [2, 3, 4, 5]
list2 = [1, 2, 4, 5]

def common_elements(list1, list2):
    result = []
    for item in list1:
        if item in list2:
            result.append(item)
    return result

print(common_elements(list1, list2))"
Optimize the above Python program to calculate the sum of a given array of numbers for better performance.,"[1, 2, 3, 4]","import numpy as np

def sum(arr):
 return np.sum(arr)

sum([1,2,3,4]) # 10"
Edit the given Python code to convert a list of temperatures in Fahrenheit to a list of temperatures in Celsius.,"temperatures_fahrenheit = [32, 64, 78, -10]","temperatures_fahrenheit = [32, 64, 78, -10]

temperatures_celsius = [((temp-32)*5)/9 for temp in temperatures_fahrenheit]
print(temperatures_celsius)"
Create a Python program to compute the sum of all integers from 1 to n.,Provide n: 10,"# compute sum of all numbers from 1 to n
def compute_sum(n):
 sum = 0
 
 for i in range(1, n+1):
 sum += i
 
 return sum
 
print(compute_sum(10))"
Generate a Python implementation for these pseudocode.,"Repeat Steps 1 and 2 until no unscanned barcodes remain. 
  1. Scan a barcode.
  2. Print the name of its product.","def print_product_names():
    unscanned_barcodes = [barcodes] #list of unscanned barcodes

    while len(unscanned_barcodes) > 0:
        barcode = unscanned_barcodes.pop(0)
        product_name = scan_barcode(barcode) #function that returns product name
        print(product_name)"
Design an algorithm in Python that will accept an array of integers and return an array with alternate elements removed starting from the even indices.,"[1, 2, 3, 4, 5, 6]","def alternating_elements(arr):
    new_arr = [arr[i] for i in range(0, len(arr), 2)]
    return new_arr

result = alternating_elements([1, 2, 3, 4, 5, 6])
print(result) #[2, 4, 6]"
Develop a Python script to extract the minimum of two numbers.,Two numbers: 2 and 5,"def min(num1, num2):
    if num1 < num2:
        return num1
    else:
        return num2

print(min(2, 5))"
Output the factorial of a given number in Python.,4,"def factorial(n):
    if n == 0 or n == 1:
        return 1
    else:
        return n * factorial(n-1)

print(factorial(4))"
Create a Python program to find all the common elements between two given lists in a single line of code.,"List1 = [1, 2, 3, 4, 5] 
List2 = [5, 6, 7, 8, 9]",common_list = [element for element in List1 if element in List2]
Create a Python program that takes a list of integers and prints out the total number of times that the number 7 appears in the list.,"[1, 2, 3, 4, 5, 7, 7, 8, 9]","def count_7(nums):
  count = 0
  for num in nums:
    if num == 7:
      count += 1
  return count"
Generate a Python program which converts a given number of hours into minutes,20,"def hours_to_minutes(hours):
    minutes = hours * 60
    return minutes

minutes = hours_to_minutes(20)
print(minutes)"
Generate a Python program to partition a given array into two parts such that every element in first part is less or equal than the elements in the second part.,"[1, 9, 0, 5, 2]","def partition(arr):
  pivot = arr[0]
  i = 0
  j = len(arr) - 1

  while i <= j:
   while arr[i] < pivot:
    i += 1
   while arr[j] > pivot:
    j -= 1

   if i <= j:
    arr[i], arr[j] = arr[j], arr[i] 
    i +=1
    j -= 1

  return arr

print(partition([1, 9, 0, 5, 2]))"
Create a program in Python to print out the elements in a list in reverse order.,"List = [""A"", ""B"", ""C"", ""D""]","list = [""A"", ""B"", ""C"", ""D""]

for i in range(len(list)-1, -1, -1):
    print(list[i])"
"In Python, create a method that can take two integers and return their sum.","3, 8","def sum_ints(int1, int2):
    return int1 + int2"
Write a Python function to remove a specific element from a list.,"list = [10,20,30,40]","def remove_element(list, element):
    for i in range(len(list)):
        if list[i] == element:
            del list[i]
            break
    return list

list = remove_element(list,40)"
Compose a python program to identify the characters in a given alphabet,alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',"alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

def identify_characters(alphabet):
    char_list = []
    for c in alphabet:
        char_list.append(c)
    return char_list"
Classify a list of words into their corresponding part of speech using Python.,"[""happy"", ""run"", ""went"", ""like""]","pos_tags = nltk.pos_tag([""happy"", ""run"", ""went"", ""like""])
for tag in pos_tags:
    print(f'{tag[0]}: {tag[1]}')

# Output 
# happy: JJ
# run: VB
# went: VBD
# like: IN"
Find the Fibonacci sequence of a given number using a Python program.,var n = 10;,"def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"")
    elif n==1: 
        return 0
    elif n==2: 
        return 1
    else:
        return Fibonacci(n-1)+Fibonacci(n-2) 

# Driver Program 
print(Fibonacci(n))"
"Given a language (example: Python), write a function to convert a string (example: ""Hello World!) to a list.",Python,"def str_to_list(string):
    return string.split(' ')"
Write a Python program to generate a two-dimensional array of Boolean values with alternating True and False values.,Size of the 2-D array: 5 x 5,"def generate_alternating_2d_array(n):
 arr = []
 prev_value = False
 for i in range(n):
  row = []
  for j in range(n):
   cur_value = not prev_value
   row.append(cur_value)
   prev_value = cur_value 
  arr.append(row)
 return arr

arr = generate_alternating_2d_array(5)
for row in arr:
 print(row)"
Create a function in Classical Python to extract the hostname from a given URL,"url = ""http://www.example.com/index.html""","def get_hostname(url):
    hostname = url.split(""/"")[2]
    return hostname

hostname  = get_hostname(url)
print(hostname)"
Develop an object orientated program in Python to generate random numbers.,Range: 10-50,"import random

class RandNumGenerator:
    def __init__(self, low, high):
        self.low = low
        self.high = high
    
    def generate_rand_num(self):
        return random.randint(self.low, self.high)

if __name__ == '__main__':
    gen = RandNumGenerator(10, 50)
    print(gen.generate_rand_num())"
"Given a list of strings, write a Python program to find the string which has the maximum length","list1 = ['cat', 'primate', 'monkey']","def max_length(list1): 
	return max(list1, key=len) 

list1 = ['cat', 'primate', 'monkey']
print(""String with maximum length is : "", max_length(list1))"
Create a function in Python that takes two strings as an input and returns their concatenation.,"str1 = ""Hello""
str2 = ""World""","def concat_string(str1, str2):
    return str1 + str2

result = concat_string(str1, str2)
print(result)"
Write a python program to calculate the sum of the divisors of a number,n = 15,"def sum_divisors(n):
    '''Returns the sum of all divisors of the given number.'''
    if n <= 1:
        return 0
    #assume n is a positive integer
    sum_divisors = 1
    for i in range(2, int(n/2)+1):
        if n % i == 0:
            sum_divisors += i
    return sum_divisors"
Create a Python program to print out all the combination of a given set of numbers.,"[1, 2, 3]","def combinations(arr):
    res = []
    for i in range(len(arr)):
        for j in range(i + 1, len(arr)):
            res.append([arr[i], arr[j]])
    return res

print(combinations([1, 2, 3]))"
Create a Python script to encode a given message using the Caesar cipher.,"Message: ""Hello World""
Shift: 5","def caesar_cipher(message, shift):
 encrypted_message = """"
 for char in message:
 charIndex = ord(char)
 encryptedIndex = charIndex + shift
 if encryptedIndex <= 255:
 encrypted_message += chr(encryptedIndex)
 else:
 encrypted_message += chr(encryptedIndex - 255)
 return encrypted_message

print(caesar_cipher(""Hello World"", 5)) # prints Mjqqt Btwqi"
Write a Python program to remove duplicate characters of a given string.,"""bufferoverflow""","def remove_duplicate_characters(string):
    result = """"
    seen = set()
    for char in string:
        if char not in seen:
            seen.add(char)
            result += char
    return result

print(remove_duplicate_characters(""bufferoverflow""))"
Create a binary search algorithm in Python that searches an input array for a certain number.,"A = [1,2,3,4,5,6,7,8,9]","def binarySearch(A, x):
 start = 0
 end = len(A) - 1

 while start <= end:
  mid = (start + end) // 2

  if A[mid] == x:
   return mid
  elif A[mid] > x:
   end = mid - 1
  else:
   start = mid + 1

return -1"
Translate the Python code below into C# code.,"def is_even(n):
 return n % 2 == 0","private bool IsEven(int n)
{
    return n % 2 == 0;
}"
Write a Python program to modify a given dataset for a specific task.,"Dataset:
{
    ""name"": ""John"", 
    ""age"": 20, 
    ""height"": 180
}

Task:
Filter the person's records if they are over the age of 18.","def modify_data(dataset, task):
modified_data = []
 if task == ""filter age >18"":
 for d in dataset:
 if d['age'] > 18:
 modified_data.append(d)
 return modified_data"
Write a Python program to create a dataframe from a given dictionary of lists.,"data = {
    'name': ['John', 'Mark', 'Tom'],
    'age': [21, 18, 20]
}","import pandas as pd

data_df = pd.DataFrame(data)

print(data_df)"
Round an input float to two decimal places in Python.,8.374,"num = 8.374
rounded_num = round(num, 2)
print(rounded_num)"
Create a Python program to zip two lists of same size into one dictionary.,"list1 = [1,2,3]
list2 = [4,5,6]","list1 = [1,2,3]
list2 = [4,5,6]
 
zip_dict = dict(zip(list1, list2))
print(zip_dict) # {1: 4, 2: 5, 3: 6}"
Solve the following problem using python,"Given a list of strings, return a list of string where each string is replaced by its length","def replace_by_length(list_of_strings):
    final_list = []
    for string in list_of_strings:
        final_list.append(len(string))
    return final_list

if __name__ == ""__main__"":
    list_of_strings = [""hello"", ""world"", ""coding""]
    print(replace_by_length(list_of_strings))"
Develop a program in Python to find the second largest element in a given array.,"[10, 11, 8, 9, 20]","def second_largest(arr):
    first = max(arr[0], arr[1])
    second = min(arr[0], arr[1])
 
    for i in range(2, len(arr)):
        if arr[i] > first:
            second = first
            first = arr[i]
        elif arr[i] > second and arr[i] != first:
            second = arr[i]
 
    return second"
Create a class in Python that can represent a 3D point with the given fields.,x y and z coordinates,"class Point3D:
  def __init__(self, x, y, z):
    self.x = x
    self.y = y
    self.z = z

  def __str__(self):
    return 'Point3D is at {x}, {y}, {z}'.format(x = self.x, y = self.y, z = self.z)"
"Create a Python program that takes a list and returns a dictionary with the elements from the list as keys, and their frequency as values.","my_list = [1,1,2,3,4,4,4,4,5,6]","my_dict = {}

for item in my_list:
    if item not in my_dict:
        my_dict[item] = 0
    my_dict[item] += 1

print(my_dict) # {1: 2, 2: 1, 3: 1, 4: 4, 5: 1, 6: 1}"
"Given a list and an integer, write a Python function to return a sublist of the list with the given integer.","[1, 2, 3, 4, 5, 6, 7], 2","def get_sublist(lst, n):
    return [lst[i:i+n] for i in range(0,len(lst),n)]"
Design an algorithm in Python to find the longest substring without repeating characters.,"String = ""codefortesting""","def longestSubstringWithoutRepeatingCharacters(str):
    maxLength = 0
    hashMap = dict()
    start = 0

    for i in range(len(str)):
        if str[i] in hashMap:
            start = max(hashMap[str[i]], start)

        maxLength = max(maxLength, i - start + 1)
        hashMap[str[i]] = i + 1

    return maxLength"
Build a Python function that takes a single list of numbers and performs an insertion sort. The function should return a sorted list.,"[4, 1, 8, 11, 15]","def insertion_sort(arr):  
    for i in range(1, len(arr)): 
    
        key = arr[i] 

        j = i-1
        while j >= 0 and key < arr[j] : 
                arr[j + 1] = arr[j] 
                j -= 1
        arr[j + 1] = key 

    return arr

insertion_sort([4,1,8,11,15])

# Output  [1, 4, 8, 11, 15]"
Write a Python program to calculate the total electricity bill given the rate per kwh for domestic loads.,"rate = 40
consumption (kwh) = 300","def calculate_bill(rate, consumption):
    bill = rate * consumption
    print(""Your total electricity bill is Rs. {}"".format(bill))

calculate_bill(40, 300)"
Create a function in Python to generate a Fibonacci series up to a given number.,50,"def fibonacci(num):
    a = 0
    b = 1
    if num == 1:
        print(a)
    elif num == 2:
        print(a,b)
    else:
        print(a,b, end="" "")
        for i in range(2,num):
            c = a + b
            a = b
            b = c
            print(b, end="" "")

fibonacci(50) # output: 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181"
Edit this Python code to scale the inputs before applying a regression model.,"X = np.array([[1,2],[2,1],[3,4],[6,7]])
y = np.array([1.1,2.2,3.3,4.4])
model = LinearRegression().fit(X, y)","X = preprocessing.scale(np.array([[1,2],[2,1],[3,4],[6,7]]))
y = np.array([1.1,2.2,3.3,4.4])
model = LinearRegression().fit(X, y)"
Write a Python function to find the intersection of two given sets.,"set1 = [1, 2, 3, 4], set2 = [2, 3, 4, 5]","def intersection(set1, set2): 
    return [i for i in set1 if i in set2]"
Create a program in Python to find all pairs of elements in a list with the given difference.,"[9, 4, 7, 5], 4","def find_pair_with_difference(list, difference):
    result = []
    for i in range(len(list)):
        for j in range(i+1, len(list)):
            if list[j] - list[i] == difference:
                result.append((list[i], list[j]))
    return result

list=[9, 4, 7, 5]
difference = 4
result = find_pair_with_difference(list, difference)
print(result)"
Create a Python program to generate random numbers between 1 and 10 of a specified length.,Length = 6,"import random
def generate_random_nums(length):
  lst = []
  for _ in range(length):
    lst.append(random.randint(1, 10))
  return lst"
Generate a program in Python to convert a list of integers into a single integer.,"list = [1, 2, 3, 4]","def list_to_int(list_of_ints):
 number = 0
 for int in list_of_ints:
  number = number*10 + int
 return number"
Perform set theory operations using Python.,"A = {1, 2, 3}
B = {2, 3, 4}","A = {1, 2, 3}
B = {2, 3, 4}

# Union of Sets
C = A.union(B) 
print(C) 

# Intersection of Sets 
C = A.intersection(B) 
print(C) 

# Difference of Sets 
C = A.difference(B) 
print(C)"
Design an API for a Python script that returns the average of any given list of numbers.,"[1, 4, 5, 7, 8]","# Create API endpoint
@app.route('/api/average', methods=['POST'])
def average():
    # Get data from request
    data = request.get_json()

    # Calculate average
    avg = np.mean(data)

    # Return result
    return jsonify({'result': avg})"
Write a Python function to generate the concatenation of two inputs strings.,"string1 = ""Hello ""
string2 = ""World!""","def concatenate_string(string1, string2):
    return string1 + string2

string1 = ""Hello ""
string2 = ""World!""

concatenated_string = concatenate_string(string1, string2)
print(concatenated_string)"
Generate a Python code for finding the sum and difference of two numbers.,"7, 9","# Function to calculate the sum and difference
def sum_difference(num1, num2):
    sum = num1 + num2
    difference = num1 - num2
    return sum, difference

# Calculating the sum and difference 
x,y = sum_difference(7,9)

# Print the results 
print(""Sum:"", x)
print(""Difference:"", y)"
Edit a given Python code to return the maximum number in the given array.,"arr = [7, 8, 2, 4]","def findMax(arr):
    max = arr[0]
    for num in arr:
        if num > max:
            max = num
    return max

print(findMax(arr))"
Generate a script to send an email using Python.,"email: test@example.com
subject: test
content: Hello World","import smtplib

sender = 'test@example.com'
receiver = 'test@example.com'
subject = 'test'
message = 'Hello World'

try:
 smtpObj = smtplib.SMTP('localhost')
 smtpObj.sendmail(sender, receiver,
  ""Subject: "" + subject + ""\n"" + message)
 print(""Successfully sent email"")
except Exception as e:
 print(""Error: unable to send email"")"
Create a graphical representation of a given string using Python.,Hello World!,"import matplotlib.pyplot as plt 

# initializing string
string = ""Hello World!""

# declaring x, yaxis 
X = range(len(string)) 
Y = [ord(i) for i in string] 

# making a graph 
plt.plot(X, Y) 
plt.title('Graphical representation of String : ' + string) 

plt.show()"
Create a function that takes two strings as its inputs and returns true if one of the two strings is a substring of the other.,"""python"", ""java""","def is_substring(string1, string2):
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i] == string2[j]:
                return True
    return False

result = is_substring(""python"", ""java"")
print(result)"
Create a Python generator that generates the odd numbers between 0 and given n.,n = 10,"def oddNumbers(n):
    for i in range(0, n + 1):
        if i % 2 != 0:
            yield i

n = 10
for num in oddNumbers(n):
    print(num)"
Write a Python script to search through a list of strings and find if any of the strings contain a substring.,"list = [""who"", “are”, “you”, “looking”, “for”]
substring = ""you""","def search_for_substring(list, substring):
    for item in list:
        if substring in item:
            return True
    return False

result = search_for_substring(list, substring)
print(result) # True"
Modify the given code such that a python list of strings is created based on the input.,"lst = [1, 2, 3]","lst_strs = []
for i in lst:
    lst_strs.append(str(i))"
Modify a basic Python algorithm to increase the speed of the program.,"list_of_numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","def faster_sum(arr):
 total = 0
 # looping over the array and adding the elements
 # to the variable total
 for i in range(0, len(arr)):
 total += arr[i]
 return total

list_of_numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# using the faster_sum() function
result = faster_sum(list_of_numbers)
print(result)"
Generate a python program that takes input as a string and prints out each word in the string in reverse order.,This is an example.,"# Take input
text = input('Enter a string: ')

# Split string into words
words = text.split(' ') 

# Reverse order
words.reverse() 

# Print
for word in words:
 print(word)"
Construct a Python script to find the average of three numbers.,"10, 20, 30","def find_average(a, b, c):
  return (a + b + c) / 3

result = find_average(10, 20, 30)
print(result) # 20"
Write Python code snippets that will convert comma separated values to a list of dictionaries.,"name,age
Albert,22
Bob,24
Charles,20","csv_data = [
 {'name': 'Albert', 'age': 22},
 {'name': 'Bob', 'age': 24},
 {'name': 'Charles', 'age': 20}
]"
"Given a 2D array of integers, write a Python function that returns the sum of all values in the array.","[[1, 2], [3, 4], [5, 6]]","def sum2dArray(arr):
    two_d_sum = 0
    for sub_arr in arr:
        for elem in sub_arr:
            two_d_sum += elem
    return two_d_sum

arr = [[1,2], [3,4], [5,6]]
result = sum2dArray(arr)
print(result) # 21"
Enhance the following Python code for saving a webpage to a local directory.,"import urllib.request

def save_webpage(url, path):
 urllib.request.urlretrieve(url, path)","import urllib.request
from urllib.parse import urlparse
import os

def save_webpage(url, path):
 parsed_url = urlparse(url)
 path = os.path.join(path, parsed_url.netloc + parsed_url.path)
 if not os.path.exists(os.path.dirname(path)):
 os.makedirs(os.path.dirname(path))
 urllib.request.urlretrieve(url, path)"
Predict the output for the following Python code snippet.,"a = [1, 2, 3, 4]
b = [2, 4, 5, 7]","c = [3, 6, 8, 11]"
Create a class in Python which takes an employee name and salary as parameters and prints them.,"Employee Name: John Smith, Salary: 5000","class Employee:
    def __init__(self, name, salary):
        self.name = name
        self.salary = salary
    
    def print_employee_details(self):
        print('Employee Name: {}, Salary: {}'.format(self.name, self.salary))

employee = Employee('John Smith', 5000)
employee.print_employee_details()"
Implement a method in Python to round off any given number to the nearest integer.,5.66,"def roundNum(num): 
    if (num - int(num)) >= 0.5: 
        return int(num) + 1
    else: 
        return int(num) 
  
num = 5.66
roundedNum = roundNum(num) 
print(roundedNum)"
Transform the following piece of code in C to Python.,"int a = 10;
int b = 13;

int c = a * b;","a = 10
b = 13

c = a * b"
Design a Python script to remove duplicate elements of an array.,"[10, 1, 2, 5, 1, 10, 3]","def remove_duplicates(list):
    result = []
    for value in list:
        if value not in result:
            result.append(value)
    return result

list = [10, 1, 2, 5, 1, 10, 3]
result = remove_duplicates(list) 
print(result) # Output: [10, 1, 2, 5, 3]"
Create a program in python to count the occurences of a given word in a sentence.,"sentence = ""This is a sample sentence for the purpose of the example. ""
keyword = ""example""","#Defining the sentence and keyword
sentence = ""This is a sample sentence for the purpose of the example. ""
keyword = ""example""

#Counting the occurences
count = sentence.count(keyword)

#Printing the result
print(""The keyword appears "" + str(count) + "" time(s) in the sentence."")"
Write a Python function that takes a string as input and counts the number of occurrences of each character in that string.,String: 'python',"def count_characters(string):
    counts = {}
    for s in string:
        counts[s] = counts.get(s, 0) + 1
    return counts

result = count_characters('python')
print(result)"
Generate a code in Python to find the maximum sum subarray of size k.,"arr = [1, 4, 2, 10, 2, 3, 1, 0, 20]
k = 4","def maxSubArraySum(arr, k): 
    n = len(arr) 
    max_sum = 0
  
    for i in range(n - k + 1): 
        window_sum = sum(arr[i : k + i]) 
        max_sum = max(max_sum, window_sum) 
  
    return max_sum
  
  
arr = [1, 4, 2, 10, 2, 3, 1, 0, 20] 
k = 4
print(maxSubArraySum(arr, k))"
Write a Python program to optimize the following code snippet so that it runs faster,"n = 10
arr = []
for i in range(n):
  arr.append(i * i)
print(arr)","def optimizeCode():
  n = 10
  arr = [i * i for i in range(n)]
  print(arr)

optimizeCode()"
Generate a code for creating a new python dictionary with the keys and values specified,"Keys: [""name"", ""age"", ""occupation""]
Values: [""John"", 25, ""Engineer""]","""""""
This code creates a new dictionary with the specified keys and values 
""""""

my_dict = {
    ""name"" : ""John"",
    ""age"" : 25,
    ""occupation"" : ""Engineer""
}"
Take an input string and write a python program to determine if it is a palindrome.,racecar,"def isPalindrome(s):
 left, right = 0, len(s) - 1
 while left < right:
 if s[left] != s[right]:
 return False
 left += 1
 right -= 1
 return True

s = ""racecar""
print(isPalindrome(s))  # True"
Write a Python program to randomly select an item from a list.,"list_of_names = [""John"", ""Anna"", ""Bill"", ""Kim"", ""Claire""]","import random

list_of_names = [""John"", ""Anna"", ""Bill"", ""Kim"", ""Claire""]
random_name = random.choice(list_of_names)

print(f'Randomly selected name from the list: {random_name}')"
Write a Python program to remove all duplicated words from a given input string.,"sentence = ""This is a sentence with some duplicate words in it.""","sentence_words = sentence.split("" "")
 
unique_words = set(sentence_words)
 
print("" "".join(unique_words))"
Create a Python program to retrieve the longest string from an array of strings,"names = ['John', 'Paul', 'George', 'Ringo']","def get_longest_string(names):
    longest_string = ''
    for name in names:
        if len(name) > len(longest_string):
            longest_string = name
    return longest_string"
Design a Python program to find the area and perimeter of a circle.,r = 4,"def area_perimeter_circle(radius):
    """"""Function to return the area and perimeter of a circle""""""
    area = 3.14 * (radius ** 2)
    perimeter = 2 * 3.14 * radius
    return area, perimeter

# Driver code
radius = 4

area, perimeter = area_perimeter_circle(radius)

print(f'Area of the circle is {area} and Perimeter of the circle is {perimeter}')"
"Generate a random number between two given numbers, using Python.","min_range = 30
max_range = 100","""""""
Generate a random number between two given numbers, using Python
""""""

import random

def random_number(min_range, max_range):
    return random.randrange(min_range, max_range)

print(random_number(30, 100))"
Write a Python program to determine the number of elements in a given array before the return value is -1.,"Array = [2, 3, -1, 5, 4, 7]","def countElements(Array): 
    count = 0
    for i in Array: 
        if i != -1: 
            count = count + 1
        else: 
            break
    return count"
"Create a Python program to read in a list of numbers and output a list that contains, for every even number, the list of odd numbers that sum up to it.","inputList = [4, 6, 10, 8]","def sumOfOdds(inputList):
 result = []
 for num in inputList: 
  if (num % 2 == 0): 
   for i in range(1, num): 
    if (i % 2 != 0): 
     if (num == i + (num - i)):
      result.append([i, num - i])
 
 return result
 
# Driver code
inputList = [4, 6, 10, 8]
 
print(sumOfOdds(inputList))"
Suggest a completion for the following python code to count the number of a given character in a string.,"def count_characters(s, c):","def count_characters(s, c):
 count = 0
 for ch in s:
  if ch == c:
   count += 1
 return count"
Write a function in Python to return the indices of all occurrences of a given item in a list.,"list = [1,2,3,4,5,1,2,3,4,5]
item = 3","def find_all_occurrence_indices(list, item):
result = []
for index, number in enumerate(list):
if number == item:
result.append(index)
return result"
Format a numerical table of data into a JSON object in Python.,Numerical table of data.,"Assuming the numerical table of data is stored in a 2D list data, a function to format it into a JSON object can be written as follows:

import json
def formatData2JSON(data):
    json_formatted_data = json.dumps(data)
    return json_formatted_data"
Write a python program that will generate a password containing numbers and letters from an entered string.,Hello,"def generate_password(word):
      # initialize variables 
    password = """"
    letters = """"
    numbers = """"

    # create new password
    for i in range(0, len(word)):
      letters += word[i]
      numbers += str(i)

    password = letters + numbers
    return password

print(generate_password(""Hello""))"
Create a Python program that can convert a list of strings into their corresponding encoded values.,"list of strings = [""hello"",""world"",""how"",""are"",""you""]","def encode_list_of_strings(list_of_strings):
  encoded = []
  for string in list_of_strings:
    encoded.append(string.encode(""utf-8""))
  return encoded

list_of_strings = [""hello"",""world"",""how"",""are"",""you""]
encoded = encode_list_of_strings(list_of_strings)

# Output: [b'hello', b'world', b'how', b'are', b'you']"
Optimize a triple nested Python loop to perform faster.,"for i in range(n): 
    for j in range(n): 
        for k in range(n): 
            ans += A[i][j] * B[j][k]","for i in range(n): 
    for k in range(n): 
        temp = 0
        for j in range(n): 
            temp += A[i][j] * B[j][k] 
        ans += temp"
Create a Python script to analyze a text document. The script should locate all words with three or more characters in a row and count their frequency in the document.,The quick brown fox jumps over the lazy dog. The fox barked at the dog.,"from collections import defaultdict

text = 'The quick brown fox jumps over the lazy dog. The fox barked at the dog.'

words = defaultdict(int)

 for word in text.split():
  if len(word) >= 3:
   words[word] += 1

print(words)"
"Using the comment as the guide, generate a Python program to replace an element at a given index.","arr = [2, 3, 4, 5]
index = 2
# Replace the element at index with 0","arr = [2, 3, 4, 5]
index = 2
# Replace the element at index with 0
arr[index] = 0
print(arr)"
Create a Python script to find the person with the highest grade in a classroom.,"[
 {'name': 'John', 'grade': 85},
 {'name': 'Alice', 'grade': 95},
 {'name': 'Bob', 'grade': 70},
 {'name': 'Sam', 'grade': 80}
]","highest_grade_person = max(students, key=lambda x:x['grade'])
print(""The student with highest grade is {}"".format(highest_grade_person))"
Write a function in Python to calculate the maximum value of two given numbers.,12 and 15,"def max_val(num1, num2):
    # function to find the maximum value of two numbers
    if(num1 > num2):
        return num1
    else:
        return num2

# get the input values from the user
a = int(input(""Enter first number: ""))
b = int(input(""Enter second number: ""))

# call the max_val() function
max_val = max_val(a,b)

print(""The maximum value is:"", max_val)"
Create a Python program to find out if a string contains any characters from another given string.,"String 1: Hello
String 2: eo","def contains_chars(str1, str2):
 if any([c in str1 for c in str2]):
 return True
 return False

string1 = ""Hello""
string2 = ""eo""

print(contains_chars(string1, string2)) // Outputs: True"
Write a Python program to create a FuzzyWuzzy string matching for the given two strings.,"String 1: apple
String 2: applee","from fuzzywuzzy import fuzz 
def fuzzy_match(str1, str2): 
    return fuzz.ratio(str1, str2)"
Create a program in Python that adds a given list of numbers.,"[2, 5, 9]","def add_list(list_of_numbers):
    sum = 0
    for i in list_of_numbers:
        sum += i
    return sum

list = [2, 5, 9]
result = add_list(list)
print(result)"
Design a function in Python to test if the given number is a prime or not.,N = 13,"def is_prime(n):
 if n <= 1:
 return False

 for i in range(2, n):
 if n % i == 0:
 return False

 return True

is_prime(13) # True"
Write an algorithm in Python that takes a list of elements and determines if the list is sorted or not.,"[4, 3, 1, 2, 5]","def is_sorted(lst):
 # base case: if the list is empty then it is sorted
 if not lst:
  return True
 # compare the first two element
 if lst[0] > lst[1]:
  return False
 # recursively call the function with the remaining elements in the list
 return is_sorted(lst[1:])"
Design a Python program to find the position of the maximum element in a list of numbers.,"nums = [1, 5, 8, -3, 0]","def find_max_position(nums):
    max_num = nums[0]
    max_pos = 0

    for i in range(len(nums)):
        if nums[i] > max_num:
            max_num = nums[i]
            max_pos = i

    return max_pos

nums = [1, 5, 8, -3, 0]
max_pos = find_max_position(nums)
print(f""The maximum element is at position {max_pos}"")"
"Design an algorithm in Python that takes two input arrays, and finds an element that is common to both arrays.","arr1 = [1, 2, 3, 4, 5]
arr2 = [2, 3, 6, 7]","def find_common_element(arr1, arr2):
    common = []
    for num1 in arr1:
        for num2 in arr2:
            if num1 == num2:
                common.append(num1)
    return common

find_common_element(arr1, arr2) # return [2, 3]"
"Convert a Python list into a string with each item separated by a comma, with no additional characters or whitespace","my_list = [1, 2, 3]","','.join(str(item) for item in my_list)"
Create a function in Python to find the maximum value in a list.,"List of values: [13, 25, 37, 49, 61]","def find_max(list):
    max_value = list[0]
    for value in list:
        if value > max_value:
            max_value = value
    return max_value"
Develop a Python program to delete the third element of a given list.,"list = [""A"", ""B"", ""C"", ""D"", ""E""]","# Input list
list = [""A"", ""B"", ""C"", ""D"", ""E""]

# Deleting the third element
list.pop(2)

# Printing the list after deletion
print(list)
# Output: ['A', 'B', 'D', 'E']"
Develop a Python program to find all possible words from a set of characters,The set of characters is 'abcd',"def findWords(string):
    results = []
    for i in range(len(string)):
        for j in range(i+1, len(string)+1):
            results.append(string[i:j])
    return results

string = ""abcd""
print(findWords(string))"
Generate a solution for finding all possible subsets of a given set in Python.,"[1, 2, 3]","""""""
Generate a solution for finding all possible subsets of a given set in Python.
""""""

def find_subsets(nums):
  subsets = [[]]

  for current_num in nums:
    for i in range(len(subsets)):
      set_to_add = subsets[i] + [current_num]
      subsets.append(set_to_add)

  return subsets

nums = [1, 2, 3]
print(find_subsets(nums))"
Create a program in Python to sort a given list of numbers in ascending order.,"[9, 5, 7, 4, 1]","def sort_asc(lst):
    return sorted(lst)"
"Write a python program to extract all the words from a given sentence and store them into a dictionary. Calculate the frequency of each word, and store them in the same dictionary keyed with the words.",I love to code,"words_dict = {}
sentence = ""I love to code""
words = sentence.split()

for word in words:
 if word in words_dict:
 words_dict[word] += 1
 else:
 words_dict[word] = 1

print(words_dict)

# Output:
# {'I': 1, 'love': 1, 'to': 1, 'code': 1}"
Generate a Python program to convert a given temperature from Fahrenheit to Celsius.,68,"def fahrenheitToCelsius(fahrenheit):
    celsius = (fahrenheit - 32) * 5 / 9

    return celsius

fahrenheit_value = 68
celsius_value = fahrenheitToCelsius(fahrenheit_value)

print(""{0} Fahrenheit is equal to {1} Celsius"".format(fahrenheit_value, celsius_value))"
Create a Python script to iterate over a list of words and print them out one by one.,"['cat', 'dog', 'bird']","for word in ['cat', 'dog', 'bird']:
    print(word)"
Find and remove the unnecessary code in the following Python code snippet.,"def get_data(url):
    data = [] # create an empty list
    response = requests.get(url)
    if response.status_code == 200:
        for item in response.json():
            data.append(item)# add to the list","def get_data(url):
    data = []
    response = requests.get(url)
    if response.status_code == 200:
        data = response.json()"
Construct a decision tree algorithm in Python to classify credit card transactions.,The dataset consists of 5 numerical features and one categorical target variable.,"from sklearn.tree import DecisionTreeClassifier
import numpy as np 

X = np.array([features])
y = np.array([target])

clf_dt = DecisionTreeClassifier()
clf_dt.fit(X,y)

# Predict class labels
preds = clf_dt.predict(X)"
Give a Python program to extract a given number of random items from a given list.,"list = [1, 2, 3, 4, 5, 6]","import random

def extract_random_items(lst, num):
q = random.sample(lst, num)
return q"
Create a Python program to sort a list of strings by the descending length of the strings and alphabetically in case of ties.,"[""hello"", ""world"", ""from"", ""code""]","unsorted_list = [""hello"", ""world"", ""from"", ""code""]

sorted_list = sorted(unsorted_list, key=lambda s: (-len(s), s))

print(sorted_list)
# Output: [""world"", ""hello"", ""from"", ""code""]"
Create a function that returns multiple values in Python.,No input needed.,"def multiple_values():
    x = 2
    y = 7
    z = ""Hello""
    return x, y, z

x, y, z = multiple_values()

print(x, y, z) # 2 7 Hello"
Design a python program that takes an integer as input and returns the sum of all multiples of 3 and 5 up to (but not including) the given integer.,15,"def calculate_sum(n):
 sum = 0
 for i in range(n):
  if i % 3 == 0 or i % 5 == 0:
   sum += i
 return sum
 
print(calculate_sum(15)) # 42"
Create a python program to Reverse Engineer an API and find its endpoints.,http://example.com/api,"import requests

url = 'http://example.com/api'
response = requests.get(url)

if response.status_code == 200:
    # Find the API endpoints
    data = response.json()
    endpoints = data.get('endpoints')
    print(endpoints)"
"Using Python, write a program that takes a list of strings as input and returns a dictionary where the keys are the strings and the values are the lengths of the strings.","['apple', 'banana', 'orange']","def length_dict(strings):
    length_dict = {}
    for string in strings:
        length_dict[string] = len(string)
    return length_dict

print(length_dict(['apple', 'banana', 'orange'])) # {'apple': 5, 'banana': 6, 'orange': 6}"
Create a Python script to append a list to another list.,"List: [1, 2, 3]","def append_list(list_to_append, list_to_add):
    return list_to_append + list_to_add"
"Given two strings, write a Python program to check if one is an anagram of other.",listen and silent,"def isAnagram(str1, str2):
    str1_sorted = sorted(str1)
    str2_sorted = sorted(str2)
    # Compare sorted strings
    if str1_sorted == str2_sorted:
        return True
    else:
        return False

str1 = ""listen""
str2 = ""silent""

print(isAnagram(str1, str2))"
Create a python function that takes a string as an argument and substitues each letter with its corresponding number in the alphabet.,Input String = “Data Science”,"def letterToNumber(input_string):
    result_string = """"
    for letter in input_string:
        result_string += str(ord(letter)-64)
    return result_string

input_string  = ""Data Science""
substituted_string = letterToNumber(input_string)
print(""Substituted string : "",substituted_string)"
Convert a string into a valid python program that prints the string on the terminal.,Hello World!,print('Hello World!')
Convert a given python data structure into a json string using json package,"data = {
    ""name"": ""John"",
    ""age"": 30,
    ""location"": ""Greece""
}","import json

# convert python data structure to json
data = {
    ""name"": ""John"",
    ""age"": 30,
    ""location"": ""Greece""
}

data_string = json.dumps(data)

print(data_string) # '{""name"": ""John"", ""age"": 30, ""location"": ""Greece""}'"
Write a function in Python to convert a string of text into separate words in a list.,The quick brown fox jumped over the lazy dog.,"def convert_to_list(sentence):
 words = []
 for word in sentence.split():
  words.append(word)
 return words

result = convert_to_list(""The quick brown fox jumped over the lazy dog."")
print(result)
# Output: ['The', 'quick', 'brown', 'fox', 'jumped', 'over', 'the', 'lazy', 'dog.']"
Use a random forest model in Python to predict the sale price of a house.,"Example data: 
Size: 500, Rooms: 4","import pandas as pd
from sklearn.ensemble import RandomForestRegressor

# Create
data = {'Size': [500], 
'Rooms': [4]}

df = pd.DataFrame(data)

# Train
X = df[['Size','Rooms']] 
Y = df['Price'] 

regressor = RandomForestRegressor(n_estimators = 10, random_state = 0) 
regressor.fit(X, Y)

# Predict
regressor.predict([[500,4]]) # Predicted price: 1716.275"
Write a Python script to generate all possible permutations of a set of input strings.,"['a', 'b', 'c']","def permute(input):
 res = []
 for i in range(len(input)):
 for result in permute(input[:i] + input[i + 1:]):
 res.append([input[i]] + result)    
 return res

inputValues = ['a', 'b', 'c']
permutations = permute(inputValues)

for perm in permutations:
 print(perm)"
Design a class in Python that implements a stack,No input,"class Stack:
    def __init__(self):
        self.items = []
    
    def isEmpty(self):
        return self.items == []
    
    def push(self, item):
        self.items.append(item)
    
    def pop(self):
        return self.items.pop()
    
    def peek(self):
        return self.items[len(self.items)-1]
    
    def size(self):
        return len(self.items)"
Create a python script to split a string into its word components.,"String: Hello,World!","def split_words(s): 
    words = s.split("" "") 
    return words  
s = ""Hello,World!""
words = split_words(s) 
print(words)"
Analyze this Python code and suggest any improvements.,"def calc_sum(a, b): 
    return a + b

sum = 0 
for i in range(5): 
    sum += calc_sum(i, i + 1)

print(sum)","def calc_sum(a, b): 
    return a + b

sum = 0 
for i in range(5): 
    sum += calc_sum(i, i + 1)

print(sum) 

# Suggested fix:
sum = 0 
for i in range(0, 5):    # Use the range(start, stop) syntax
    sum += sum + calc_sum(i, i + 1)

print(sum)"
Optimize the following python program to reduce running time.,"def sum_numbers(arr):
    s = 0
    i = 0
    while i < len(arr):
        s += arr[i]
        i += 1
    return s","def sum_numbers(arr):
    s = 0
    for i in range(len(arr)):
        s += arr[i]
    return s"
Create a Python program to count the occurrence of a specific word in a string.,The quick brown fox,"def count_occurences(string, word):
    count = 0
    words = string.split(' ')
    for w in words:
        if w == word:
            count += 1
    return count
 
string = 'The quick brown fox'
word = 'The'
 
occurrences = count_occurences(string, word)
print('""The"" occurs', occurrences , 'times in the string.')"
Create a code to parse a web page and check whether or not a particular keyword appears in the page.,"keyword = ""python""","import requests

def check_if_keyword_exists(url, keyword):
    response = requests.get(url)
    if keyword in response.text:
        return True
    return False

keyword = ""python""
print(check_if_keyword_exists(""https://en.wikipedia.org/wiki/Python_(programming_language)"", keyword)) # Output: True"
"Given a list of phone numbers, extract only the ones that start with 08 using Python.","['0834567', '0945678', '07123456', '08901234', '07890123']","phone_numbers = ['0834567', '0945678', '07123456', '08901234', '07890123']
result = [number for number in phone_numbers if number.startswith('08')]
print(result)"
Create a python function to parse a character-separated string,"Parse a string ""Harry,30,England"" using comma as separator","def parse_str(str, separator):
    strList = str.split(separator) 
    return strList"
"Slice and dice a given list in Python to filter out elements starting with the letter ""a"".","List: [""apple"", ""banana"", ""orange"", ""apricot""]","lst = [""apple"", ""banana"", ""orange"", ""apricot""]
  
filtered_list = [ele for ele in lst if ele[0] == 'a'] 
  
# printing filtered elements 
print(""filtered list: "", filtered_list)"
Can you create a loop in Python to find the highest value in an array?,"arr = [2, 3, 9, 1, 4, 5]","max_val = arr[0]
for num in arr:
    if num > max_val:
        max_val = num
print(max_val)"
Design a Python program to convert the temperature in Celsius to Fahrenheit.,25.2,"# Program to convert the temperature 
# from Celsius to Fahrenheit 

celsius = 25.2
fahrenheit = (celsius * 9/5) + 32
 
print('%.2f degree Celsius is: %0.2f degree Fahrenheit' %(celsius,fahrenheit)) 

# Output: 25.20 degree Celsius is: 77.36 degree Fahrenheit"
Create a Python function for converting a list to a dictionary. The function should take a list of key-value tuples and return a dictionary.,"[('a', 1), ('b', 2), ('c', 3)]","def list_to_dict(input_list):
 result = {}
 for key, value in input_list:
 result[key] = value
 return result

list_to_dict([('a', 1), ('b', 2), ('c', 3)]) 
#{'a': 1, 'b': 2, 'c': 3}"
Write a Python program to find the nearest 3 squares to a given number.,30,"def findNearestSquares(n):
  nearestSquareList = []
  i = 1
  # Find all the nearest squares
  while i * i <= n:
    nearestSquareList.append(i * i)
    i += 1
  
  # Find the nearest 3 squares
  nearest3Squares = nearestSquareList[-3:]
  
  return nearest3Squares

nearest3Squares = findNearestSquares(30)
print(nearest3Squares)

# Output:
# [25, 28, 29]"
Design an algorithm in Python to detect an anagram in a string.,"Input string: ""eat tea""","def isAnagram(string):
    for i in range(len(string)):
        for j in range(i + 1, len(string)):
            if sorted(string[i]) == sorted(string[j]):
                return True
    return False"
Design a Python function to replace all occurrences of ‘x’ in a string with ‘y’.,"str = ""xx123xx456xx"", x = ""x"", y = ""y""","def replaceXWithY(str, x, y):
    while x in str:
        str = str.replace(x, y)
    return str

result = replaceXWithY(""xx123xx456xx"", ""x"", ""y"")
print(result)"
Edit the code to make it in a Python program to check if a number is divisible by 5 and 11.,"def isDivisible(num): 
    if num % 5 == 0: 
        print(""Number is divisible by 5"") 
    if num % 11 == 0:
        print(""Number is divisible by 11"")","def isDivisible(num): 
    if num % 5 == 0 and num % 11 == 0:
        print(""Number is divisible by 5 and 11"") 
    else:
        print(""Number is not divisible by 5 and 11"")"
Create a program in Python to capitalize the first letter of a given string.,hello world,"def capitalize_first_letter(text):
  return text[0].upper() + text[1:]

print(capitalize_first_letter(""hello world"")) # Output: Hello world"
Create a Python program to generate a list of prime numbers up to a certain number.,The program should generate primes up to the number 100,"primes = []

for num in range(2,101):
 for i in range(2,num):
 if (num % i) == 0:
 break
 else:
 primes.append(num)

print(primes)"
Write a Python program to concatenate two strings and print the combined string.,"The two strings are - ""I love"", ""Programming"".","string1 = 'I love'
string2 = 'Programming'

output = string1 + string2

print(output)

# Output
I love Programming"
Translate the following pseudocode into Python,"""For each element in the array, if it is an even number, add one to a counter""","def count_even(arr): 
    count = 0
    for x in arr: 
        if x % 2 == 0: 
            count += 1
    return count"
Create a Python function that takes in a string and an integer and returns a string with the input string repeated the number of times indicated by the input integer.,"string = ‘Hello’

int = 3","def repeat_string(s, n):
    return s*n

print(repeat_string('Hello', 3))
# Output: 'HelloHelloHello'"
Create a Python program to automatically delete any repeated words from a given text.,The cat was was running running in the park,"text = ""The cat was running in the park""

words = text.split(' ')
unique_words = []

for word in words:
 if word not in unique_words: 
  unique_words.append(word)

print(' '.join(unique_words))"
Create an API endpoint in Python that takes a text string as input and outputs a JSON response with the text reversed.,Hello world,"from flask import Flask, request, jsonify

app = Flask(__name__)

@app.route('/reverse', methods=['POST'])
def reverse():
 data = request.get_json()
 text = data['text']
 reversed_text = text[::-1]

 return jsonify({'reversed_text': reversed_text})

if __name__ == '__main__':
 app.run()"
Write a Python code snippet to obtain the average of the elements in a given list.,"list = [2, 3, 5, 4]","def average(list):
 total = 0
 for num in list:
 total += num
 return total / len(list)

print(average([2, 3, 5, 4]))"
Replace the element 'apple' in a given array with 'pear' using python code.,"Array: A = ['apple', 'banana', 'orange', 'grape']","A = ['apple', 'banana', 'orange', 'grape']
A[0] = 'pear'
print(A) # Output:  ['pear', 'banana', 'orange', 'grape']"
Create a function in Python that removes duplicates from a list of items.,"[1, 2, 3, 2, 4, 1]","def remove_duplicates(items):
  no_duplicates = []
  for item in items:
    if item not in no_duplicates:
      no_duplicates.append(item)
  return no_duplicates

items = [1, 2, 3, 2, 4, 1]

result = remove_duplicates(items)

print(result) # [1, 2, 3, 4]"
Create a Python script to remove the item 'Apple' from the given array.,"[""Banana"", ""Orange"", ""Apple""]","def remove(arr):
    result = []
    for item in arr:
        if item != ""Apple"":
            result.append(item)
    return result

print(remove([""Banana"", ""Orange"", ""Apple""])) # Output: [""Banana"", ""Orange""]"
"Write a Python program to print all the numbers from 1 to n (inclusive), where n is a given number.",n = 20,"for i in range(1, n+1): 
 print(i)"
Write a Python program to classify a given set of integers depending on the parity of the remainder when they are divided by 2.,"[1, 8, 4, 120]","def classifyIntegersByOddEven(arr):
    evens = []
    odds = []
    
    for num in arr:
        if num % 2 == 0:
            evens.append(num)
        else:
            odds.append(num)
    
    return evens, odds

evens, odds = classifyIntegersByOddEven([1, 8, 4, 120])
print('Evens: ', evens)
print('Odds: ', odds)"
Construct a Python program that reverses an array.,"[1, 5, 3, 10, 4, 8]","def reverse_array(arr): 
    low = 0
    high = len(arr) - 1
    
    while low < high: 
        arr[low], arr[high] = arr[high], arr[low] 
        low += 1
        high -= 1
  
    return arr"
Develop a Python program that reads in a string and reverses the words in it maintaining their order.,This is a sample string,"def reverseWords(str): 
    words = str.split("" "") 
  
    newWords = [word[::-1] for word in words] 
  
    newString = "" "".join(newWords) 
  
    return newString 
      
print(reverseWords(""This is a sample string"")) 
# Result: sihT si a elpmas gnirts"
Write a Python program to predict the future stock price of a company.,Predict the stock price of Apple in 2021.,"import pandas as pd

# Read the data
data = pd.read_csv(""apple stock data.csv"")

# Extract the data points
X = data[['open', 'high', 'low', 'volume']]
y = data['close']

# Fit the model
model.fit(X, y)

# Predict the stock price of Apple in 2021 
predict = model.predict([[Apple_open, Apple_high, Apple_low, Apple_volume]])
print(predict)"
Generate a Python program that takes in a list of strings and outputs a new list containing only those that are between 3 and 7 characters long.,"['apple', 'banana', 'strawberry', 'orange']","def filterList(lst):
  result = []

  for s in lst:
    if 3 <= len(s) <= 7:
      result.append(s)
  
  return result

print(filterList(['apple', 'banana', 'strawberry', 'orange'])) # ['apple', 'banana', 'orange']"
Write a Python program to detect duplicate numbers in a given array.,"arr = [10,20,15,20,30,10]","duplicate_numbers = []
for i in range(len(arr)):
  for j in range(i + 1, len(arr)):
    if arr[i] == arr[j]:
      duplicate_numbers.append(arr[i])

print(duplicate_numbers) # Output: [10, 20]"
Write a Python program to extract odd elements from a list.,"mylist = [2, 3, 4, 5, 6, 7, 8]","mylist = [2, 3, 4, 5, 6, 7, 8]

odd_list = []
for num in mylist:
    if num % 2 != 0:
        odd_list.append(num)

print(odd_list) #[3, 5, 7]"
Write a Python program to separate the given string into a list of words.,"string=""This is a test string""","# Split the string into words 
words = string.split(' ') 

# Print the list of words 
print(words) # Output: ['This', 'is', 'a', 'test', 'string']"
"Write and edit a Python function to filter a list of strings, removing any string at least 4 characters in length that contains the letter 'k'.","my_list = [""cat"", ""dog"", ""monkey"", ""kite""]","def filter_list(list):
    return [item for item in list if len(item) < 4 or 'k' not in item]

my_list = filter_list(my_list)
print(my_list)

# Output:
# ['cat', 'dog']"
Write a Python script to generate a dictionary with counts of unique characters in a given string.,"String = ""Hello World!""","def char_count(string):
    char_dict = {}
    for char in string:
        if char in char_dict:
            char_dict[char] += 1
        else:
            char_dict[char] = 1
    return char_dict

string = ""Hello World!""
result = char_count(string)
print(result)

# Outputs: {'H': 1, 'e': 1, 'l': 3, 'o': 2, ' ': 1, 'W': 1, 'r': 1, 'd': 1, '!': 1}"
"Given a JSON record of a customer, write a Python program to extract the customer's name.","{
    ""name"": ""John Smith"",
    ""age"": 35
}","import json

data = json.loads('{
    ""name"": ""John Smith"",
    ""age"": 35
}')

customer_name = data[""name""]
print(customer_name)"
Write a Python program to generate documentation in HTML format for a given Python solution.,"Solution:
def add_item(item_list, new_item):
 item_list.append(new_item)
 return","def generate_html_doc(solution):
 html = ""<html>\n<head>\n<title>Python Documentation</title>\n</head>\n<body>\n\n<h1>Solution</h1>\n\
<pre>\n""
 html += solution + ""\n</pre>\n\n</body>\n</html>""
 return html"
Calculate the number of possible permutations of a string using the following Python function.,"word = ""helloworld""","def factorial(string): 
   len_string = len(string) 
   permutations = 1
   for i in range(1, len_string + 1): 
      permutations *= i 
   return permutations 

result = factorial(word) 
print(result)"
Create a function to calculate the sum of a sequence of integers.,"[1, 2, 3, 4, 5]","# Python code
def sum_sequence(sequence):
  sum = 0
  for num in sequence:
    sum += num
  return sum"
Write a function in Python that takes 2 numbers and returns their GCD.,"48, 18","def findGCD(a,b): 
    if (a == 0) 
        return b 
    if (b == 0) 
        return a 
    
    if (a == b): 
        return a 
          
    # If a is greater 
    if (a > b): 
        return findGCD(a-b, b) 
    return findGCD(a, b-a) 

if __name__ == '__main__': 
      a = 48 
      b = 18 
      print(""GCD of"", a , b, ""is:"", findGCD(a, b))"
"Given the following code snippet, create a function in Python that takes two strings and returns true if one string is a substring of the other.","s1 = 'Hello World'
s2 = 'World'","def is_substring(s1, s2):
 # check for empty strings 
 if s1 == '' or s2 == '':
 return False
 
 # check if s2 is a substring of s1
 if s1.find(s2) > -1:
 return True
 
 return False"
Design a software that reverse orders of string words.,Python programming is fun,"def reverse_string_words(string): 
    words = string.split("" "") 
    words.reverse()
    return ' '.join(words)  
  
string = ""Python programming is fun""
print(reverse_string_words(string))"
Compute the area of a given circle using its radius in Python.,radius = 5,"import math

def calculateCircleArea(radius):
    area = math.pi * radius * radius
    return area

radius = 5

print(""Area of a circle with radius 5 is: "", calculateCircleArea(radius))"
Create a Python script to fill empty cells in a Pandas DataFrame with the median value for that column.,A sample Pandas DataFrame,"import pandas as pd

# Replace empty cells with the median value of the column
df = df.fillna(df.median())

# Check if the null values have been replaced
print(df.isnull().sum())"
Generate a lambda function in Python to find the average of all the elements in a list.,"[1, 2, 3, 4, 5]","list_nums = [1, 2, 3, 4, 5]

average = lambda list_nums: sum(list_nums) / len(list_nums)

print(average(list_nums))"
Provide a Python program to find the average number of elements in the nested list.,"[[1, 2, 3], [4, 5], [6, 7, 8, 9]]","def avg_elements(list_of_lists):
    total_elements = 0
    for sublist in list_of_lists:
        total_elements += len(sublist)
    return total_elements / len(list_of_lists)"
Module a Python program that takes two numbers and computes the sum of their squares.,"3, 4","def squared_sum(a, b):
    """"""
    Computes the sum of the squares of two given numbers
    """"""
    return a**2 + b**2

if __name__ == '__main__':
    a = 3
    b = 4
    result = squared_sum(a, b)
    print('The sum of {} and {} squares is: {}'.format(a, b, result))"
Categorize the following Github repositories:,"Repo A: Languages: Python, JavaScript, HTML.
Repo B: Languages: Java, JavaScript, CSS.","Repo A: Python, JavaScript, HTML
Repo B: Java, JavaScript, CSS"
Generate a Python code that takes in two sets of coordinates and prints the distance between them,"(2,3), (4,5)","def calculate_distance(p1, p2):
  x1, y1 = p1
  x2, y2 = p2
  return ((x2 - x1)**2 + (y2 - y1)**2)**0.5"
Create a function to filter out strings that are longer than 10 characters.,"[""Hello"", ""World"", ""Python"", ""Programming""]","def filter_long_strings(arr):
  result = []
  for word in arr:
    if len(word) <= 10:
      result.append(word)
  return result

myArr = [""Hello"", ""World"", ""Python"", ""Programming""]
print(filter_long_strings(myArr))

# Output: [""Hello"", ""World"", ""Python""]"
Create a Python program to search a given list of strings to find any matches to a given substring.,"list_of_strings = ['Tesla', 'Apple', 'Microsoft', 'Google', 'Amazon']
substring = 'go'","matches = []

for string in list_of_strings:
 if substring.lower() in string.lower():
 matches.append(string)

print(""Matches: "", matches)
# Output: Matches: ['Google', 'Amazon']"
Create a program in Python to compute the host BMI given a user’s height and weight.,"Height: 172 cm
Weight: 85 kg","def compute_bmi(height, weight):
    bmi = weight / (height * height)
    return bmi

bmi = compute_bmi(172, 85)
print(""Your BMI is {:.2f}"".format(bmi))"
Create a Python program for finding all combinations of numbers that equal a given target number.,target = 10,"def find_combos(target):
 combos = []
 
 for i in range(int(target/2)+1):
 # increments of two to avoid duplicate results
 for j in range(i, int(target/2)+1, 2):
 if i+j == target:
 combos.append((i,j))
 
 return combos

combos = find_combos(10)
print(combos)"
Create a heap data structure in Python using the heapq library.,No input,"import heapq

def create_heap(items):
 heapq.heapify(items)

def add_item(items, item):
 heapq.heappush(items, item)

def pop_item(items):
 return heapq.heappop(items)

items = [4, 5, 2, 33, 1]
create_heap(items)
add_item(items, 6)
pop_item(items)"
Detect the data type of a given string in Python.,"String: ""Hello World!""",str type
Create a mathematical expression solver function in Python.,"""2 + 2""","def expression_solver(expression):
    '''This function solves a given mathematical expression'''

    return eval(expression)

expression = ""2 + 2""

result = expression_solver(expression)

print(result) # 4"
Create a Python program to print the even numbers from a given list.,"[1, 2, 3, 4, 5, 6, 7, 8, 9]","[2, 4, 6, 8]"
Create a function in Python that takes in an integer and returns an array containing its prime factors.,38,"def prime_factors(num):
    res = []
    while num%2 == 0:
        num = num/2
        res.append(2)
    for i in range(3, int(num**0.5)+1,2):
        while num%i == 0:
            num = num//i
            res.append(i)
    if num > 2 :
        res.append(int(num))
    return res

print(prime_factors(38))"
Create an algorithm in Python to calculate the area of a triangle.,"A = 5, B = 10, C = 13","def calculate_area(a,b,c): 
    # calculate the semi-perimeter 
    s = (a + b + c) / 2
    # calculate the area 
    area = (s*(s-a)*(s-b)*(s-c)) ** 0.5
    return area 
  
# Driver code 
a = 5
b = 10
c = 13
area = calculate_area(a,b,c) 
  
print(""The area of the triangle is {} cm"".format(area))"
Write a Python program to print an empty square based on size,Size = 8,"def print_square(size): 

    # loop to print size number of lines 
    for _ in range(size): 

        # print stars on each line 
        print(""*"" * size) 

if __name__ == '__main__':
    size = 8
    print_square(size)"
Create a Python script to merge two dictionaries.,"dict1 = {'a': 1, 'b': 2}
dict2 = {'c': 3, 'd': 4}","def merge_dicts(dict1, dict2):
    res = {**dict1, **dict2}
    return res

dict1 = {'a': 1, 'b': 2}
dict2 = {'c': 3, 'd': 4}

merged_dicts = merge_dicts(dict1, dict2)

print(merged_dicts)"
Write a Python program to create a histogram representing the frequency distribution of a set of data.,"[1, 2, 3, 4, 5, 5]","import matplotlib.pyplot as plt 

data = [1, 2, 3, 4, 5, 5]

plt.hist(data, bins=5) 
plt.title(""Frequency Distribution"")
plt.show()"
Devise a python code which will generate a new list with each element of the list squared.,"data = [2, 3, 5, 6, 20, 9]","def square_list(arr):
    result = [num**2 for num in arr]
    return result"
Create a python program which appends a new item to a given list.,"list_data = [1, 3, 5]
new_item = 7","def append_to_list (list_data, new_item):
    list_data.append(new_item)
    return list_data"
Generate a python program to alphabetically sort the following list.,"[""Paul"", ""John"", ""George"", ""Ringo""]","my_list = [""Paul"", ""John"", ""George"", ""Ringo""]
my_list.sort() 
print(my_list)"
"Implement a function in Python that given an array of integers, returns the largest number in the array.","[1, 2, -4, 8, 3, 7]","def get_largest_number(arr):
  max_val = arr[0]
  for n in arr:
    if n > max_val:
      max_val = n
  return max_val

arr = [1, 2, -4, 8, 3, 7]
ans = get_largest_number(arr)
print(ans) # Output 8"
Write a python script to compute the mean of a list of integers.,"X = [2,4,6,8,10]","def find_mean(X):
    # Compute the sum of all the elements in the list
    sum_x = 0
    for x in X:
        sum_x += x
    
    # Compute the mean
    mean = sum_x / len(X)
    
    return mean

if __name__ == '__main__':
    X = [2,4,6,8,10]
    print(find_mean(X))"
Create a Python program to determine the missing elements from a given list.,"[2, 4, 6, 8, 10]","def find_missing_elements(list):
    missing_elements = []
    for i in range(min(list), max(list)):
        if i not in list:
            missing_elements.append(i)
    return missing_elements"
Design a Python script to output all values in a given list that are factors of a given integer.,"list = [1, 2, 3, 4, 5, 6] 
integer = 6","def factors(list,integer):
    factors_list = []
    for num in list:
        if integer % num == 0:
            factors_list.append(num)
    return factors_list

print(factors([1,2,3,4,5,6], 6))  # [1, 2, 3, 6]"
Create a function in Python that takes in a string and returns the frequency of each character in the string in form of a dictionary.,'hello world',"def frequency(string): 
    freq = {} 
    for i in string: 
        if i in freq: 
            freq[i] += 1
        else: 
            freq[i] = 1
    return freq

print(frequency('hello world'))"
Write a Python script that takes in two lists of length n and outputs a set of combinations of the two lists such that the resulting list is of length n^2.,"list1 = [1,2,3]
list2 = [4,5,6]","combinations = []

for i in range(len(list1)):
for j in range(len(list2)):
combinations.append((list1[i], list2[j]))

print(combinations)
# Output: [(1,4), (1,5), (1,6), (2,4), (2,5), (2,6), (3,4), (3,5), (3,6)]"
Write a Python program to find the elements that are present in both lists.,"<list1:[1, 2, 3, 4]><list2:[3, 4, 5, 6]>","list1 = [1, 2, 3, 4]
list2 = [3, 4, 5, 6]

common_elements = []
for i in range(len(list1)):
 for j in range(len(list2)):
  if list1[i] == list2[j]:
   common_elements.append(list1[i])

print(common_elements) # [3, 4]"
Write an algorithm in Python that searches for a given keyword in a list of strings.,"string_list = [""hello"", ""goodbye"", ""apple"", ""world""]
keyword = ""apple""","def keyword_search(string_list, keyword):
  found = False
  for string in string_list:
    if keyword in string:
      found = True
      break
  return found

result = keyword_search(string_list, keyword)

if result:
  print(""The keyword was found"")
else:
  print(""The keyword was not found"")"
Write a Python program to do the following:,Create a function that takes two numbers as arguments and returns their product.,"def product(x, y):
    return x * y"
Generate a Python code to print all the animal types entered in a list,"[""dog"", ""cat"", ""mouse"", ""snake""]","animal_list = [""dog"", ""cat"", ""mouse"", ""snake""] 

for animal in animal_list:
    print(animal)"
Develop a Python program that can convert a given amount in American Dollar (USD) to British Pound Sterling (GBP).,500 USD,"# Python code:
def convert_usd_to_gbp(usd):
  gbp = usd / 1.3
  return gbp

usd = 500
gbp = convert_usd_to_gbp(usd)

print(f""{usd} USD = {gbp:.2f} GBP"")"
Improve the Python method provided so that it checks whether the given array is a palindrome or not.,"arr = [1, 2, 3, 2, 1]","def is_palindrome(arr):
    mid = len(arr) // 2
    for i in range(mid):
        if arr[i] != arr[len(arr) - 1 - i]:
            return False
    return True

arr = [1, 2, 3, 2, 1]
print(is_palindrome(arr))"
Generate code in python to automate the following task,"Given a list of numbers, find and return the first number that is greater than 10.","def find_number_greater_than_10(arr):
    for num in arr:
        if num > 10:
            return num

# Example
data_set = [1, 2, 11, 20, 6, 7]
print(find_number_greater_than_10(data_set))  # Output: 11"
Create a Python function to create a dictionary from a given list of tuples with the first elements of each tuple as the key.,"tuples = [(""a"", ""b""), (""c"", ""d""), (""e"", ""f"")]","def create_dict(tuples): 
  dictionary = {} 
  
  for item in tuples: 
    dictionary[item[0]] = item[1]
  
  return dictionary 
  
tuples = [(""a"", ""b""), (""c"", ""d""), (""e"", ""f"")]
print(create_dict(tuples)) 

# Output
{'a': 'b', 'c': 'd', 'e': 'f'}"
Create a Python 3 function to calculate the length of a string.,"string = 'hello, world!'","def get_str_length(string):
  return len(string)

print(get_str_length(string)) # outputs 13"
Write a Python program that will count the words in a sentence or piece of text.,"""Hello World. This is a sentence.""","sentence = ""Hello World. This is a sentence.""
words = sentence.split()
word_count = len(words)

print(f""The sentence has {word_count} words."")"
Write an algorithm in Python to calculate the sum of the numbers of a list and store the result in a dictionary.,"list = [1, 4, 8, 10]","sum_dict = {}

def sum_list(list):
 total = 0
 for num in list:
 total += num
 sum_dict[""sum""] = total
 return sum_dict

sum_dict = sum_list(list)"
Generate a function in Python that takes a natural number as argument and returns the product of all numbers up to it.,n = 4,"def getProduct(n):
  result = 1
  for i in range(n):
    result *= i+1
    
  return result"
Create a Python function that takes a string and rotates the characters in the string by a specified integer.,"""Hello"", 3","def rotateString(s, n):
    output = """"
    for char in s:
        output += chr(ord(char) + n)
    return output

result = rotateString(""Hello"", 3)
print(result)"
Implement a Python function to search for an item in an array.,"arr = [15, 20, 25, 30, 35]
item = 25","def search(arr, item):
    for i in range(len(arr)):
        if item == arr[i]:
            return i
    return -1

arr = [15, 20, 25, 30, 35]
item = 25
index = search(arr, item)
if index == -1:
    print(""Element not found"")
else:
    print(""Element found at index"", index)

# Output:
# Element found at index 2"
Write a python script that does the following:,Download the content of a website,"import requests

url = ""https://example.com"" 
r = requests.get(url)
data = r.content

with open(""example_website.html"", ""wb"") as file:
    file.write(data)

print(""File downloaded successfully."")"
Write a python code to create a histogram,Input is an array of integers,"import matplotlib.pyplot as plt

def create_histogram(data):
    plt.hist(data, bins=20)
    plt.title('Histogram of Input Data')
    plt.show()

# Example data
data = [1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1]

create_histogram(data)"
Design a sorting algorithm in Python that is capable of sorting very large lists.,"[25, 6, 7, 3, 12, 89, 74, 55]","def sort(array):
    for i in range(len(array)):
        low = i
        for j in range(i+1, len(array)):
            if array[low] > array[j]:
                low = j
        array[i], array[low] = array[low], array[i]
    return array
 
example = [25, 6, 7, 3, 12, 89, 74, 55]
sorted_array = sort(example)
print(sorted_array)"
Implement a Python program to generate randon uniform numbers. The program should have two input parameters a lower bound and an upper bound.,"Lower bound: 10, Upper bound: 20","import random

# generates a random number between lower and upper
def generateRandomNumber(lower, upper):
 r = random.uniform(lower, upper)
 return r

# driver program
if __name__ == ""__main__"":
 lower = 10
 upper = 20
 print(generateRandomNumber(lower, upper))"
Do you know how to write a recursive Python program to delete a given element from a list?,"[1, 2, 3, 4], 3","def delete_from_list(my_list, element):
    if element in my_list:
        my_list.remove(element)
    else:
        return
      
    delete_from_list(my_list, element)"
Rewrite the following code using classes in Python.,"def square_number(number):
 return number * number","class Square: 
    def __init__(self, number): 
        self.number = number 

    def square_number(self): 
        return self.number * self.number 

number_obj = Square(10) 
print(number_obj.square_number())"
Write an algorithm in Python that takes as input an array of numbers and returns the maximum element.,"[15, 25, 7, 1]","def maxElement(arr): 
    maxElement = arr[0]; 
  
    for i in range(1, len(arr)): 
        if maxElement < arr[i]: 
            maxElement = arr[i]; 
  
    return maxElement; 
  
arr = [15, 25, 7, 1];
maxElement = maxElement(arr); 
print (""Maximum element in the array is:"", maxElement);"
Create a Python program that reads an integer and prints whether it is even or odd.,7,"# Read the integer
num = int(input())

# Print whether the number is even or odd
if num % 2 == 0:
 print(""The number is even."")
else:
 print(""The number is odd."")"
Generate a program in Python to count the number of times a substring appears in a string?,"str=""The quick brown fox jumps over the lazy dog."", substr=""the""","def countSubstrings(str, subStr):
    lengthSubStr = len(subStr)
    count = 0
   
    for i in range(len(str)):
        if str[i:i+lengthSubStr] == subStr:
            count += 1
         
    return count

str = ""The quick brown fox jumps over the lazy dog.""
substr = ""the""
print(countSubstrings(str, substr))"
Modify the code to output a float in python instead of integer.,"def multiply(a, b): 
    return a * b","def multiply(a, b): 
    return float(a * b)"
Optimize the following application in Python to reduce startup time.,"import time

def func():
    start=time.time()
    i=0
    while(i<100000000):
        i+=1
    end=time.time()
    print(end-start)

func()","import time

def func():
    start=time.time()
    # Optimized code using range instead of while loop
    lst = range(100000000)
    end=time.time()
    print(end-start)

func()"
Write a python program to tokenize a given text,"Text='Python is an interpreted, high-level, general-purpose programming language.'","import nltk 
from nltk.tokenize import word_tokenize 
  
# input text  
text = 'Python is an interpreted, high-level, general-purpose programming language.'
  
# converting the text into tokens 
token = word_tokenize(text) 
  
print(token)"
Create a Python program that combines two lists and returns a single list that contains a combination of elements from both.,"list1 = [1, 2, 3]
list2 = [4, 5, 6]","def combine_lists(list1, list2):
 return list1 + list2

list1 = [1, 2, 3]
list2 = [4, 5, 6]
print(combine_lists(list1, list2)) # [1, 2, 3, 4, 5, 6]"
Write a Python program to decode the given encoded text using ROT-13 algorithm.,Gur pynff vf snpgbevnag,The code is obfuscated
How would you design a Python program that checks if a number is divisible by three?,45,"def is_divisible(n):
    if n % 3 == 0:
        return True
    else:
        return False

num = 45
check_divisible = is_divisible(num)

if check_divisible:
    print(""Number is divisible by three."")
else:
    print(""Number is not divisible by three."")"
"Using the provided input, write a Python program to calculate the sum of the digits of a given number.",number = 123,"def sum_of_digits(number):
    result = 0
    while number > 0:
        result += number % 10
        number = number // 10
    return result
    
if __name__ == '__main__':
    number = 123
    print(sum_of_digits(number))"
Create a Machine Learning model in Python to classify the following dataset.,The dataset contains 100 samples with 10 features each.,"from sklearn.neighbors import KNeighborsClassifier

# Create the KNN classifier
knn = KNeighborsClassifier(n_neighbors = 3)

# Fit the classifier to the data
knn.fit(X, y)

# Predict the labels for the test set
y_pred = knn.predict(X_test)"
Write a function in Python that normalizes a list of numbers by subtracting their average and dividing by the standard deviation.,"[4,2,7,8,2]","def normalize(numbers):
 avg = sum(numbers) / len(numbers)
 variance = sum((x - avg) ** 2 for x in numbers) / len(numbers)
 stdev = variance ** 0.5
 return [(x - avg) / stdev for x in numbers]"
Generate Python code that will update the values of a list,"A list of integers lst = [5, 10, 10, 15, 25]. Update all values that are larger than 10 by subtracting 5.",lst = [x if x <= 10 else x - 5 for x in lst]
Generate a Python program to remove all elements of given list present in other list.,"list1 = [1, 2, 3, 4, 5, 6], list2 = [2, 4, 6]","def remove_from_list(list1, list2):
    for i in list2: 
        list1.remove(i) 
        
    return list1

list1 = [1, 2, 3, 4, 5, 6]
list2 = [2, 4, 6]
       
print(remove_from_list(list1, list2))"
Write a generator function in Python to generate unique integer numbers in a given range.,"min value = 10, max value = 20","def unique_integers_generator(start, end):
    i = start
    used = set()
    while i <= end:
        if i not in used:
            used.add(i)
            yield i
        i += 1

for i in unique_integers_generator(10, 20):
    print(i)"
Build an algorithm in Python that creates output based on the given input.,"Input: [1, 2, 5, 8, 11]","def algorithm(input_list):
    output_list = []
    for i in input_list: 
        if i % 2 == 0:
            output_list.append(str(i) + ' is an even number')
        else:
            output_list.append(str(i) + ' is an odd number')
    return output_list"
Fix the errors in the following python program to return the correct output.,"def foo(a, b):
return a + b

x = foo(2, 3)
print(x)","def foo(a, b):
    return a + b

x = foo(2, 3)
print(x)  # output is 5"
"Develop a Python program that takes in a single-dimensional array as a parameter, and returns the number of subsets with size 3 or greater.","arr = [1, 2, 3, 4, 5]","def find_subsets(arr):
    count = 0
    for i in range(len(arr)):
        for j in range(i+1, len(arr)):
            for k in range(j+1, len(arr)):
                count += 1
    return count"
Create a Python program that can calculate the Volume of a pyramid based on the provided side length and height.,"side_length = 4;
height = 6;","def volume_pyramid(side_length, height):
    # Calculate base area
    base = (side_length**2) * 4
    
    # Calculate the volume
    volume = (base * height) / 3
    return volume

# driver code 
side_length = 4
height = 6
result = volume_pyramid(side_length, height)
print(result)"
Identify the data type of each variable in the given Python snippet.,"x = 5
name = ""John""
y = [1, 2, 3]","x is an integer, name is a string, and y is a list."
Write a function in Python to remove duplicates in a list and return the modified list,"list := [1, 2, 2, 3]","def remove_duplicates(items):
  unique = []
  for item in items:
    if item not in unique:
      unique.append(item)
  return unique

list = [1, 2, 2, 3]
result = remove_duplicates(list)
print(result) # Output: [1, 2, 3]"
Write a web scraper in Python to collect web data from a website.,Website: https://example.com,"import requests
from bs4 import BeautifulSoup

url = ""https://example.com""

try: 
    page = requests.get(url)
    soup = BeautifulSoup(page.content, 'html.parser')
    # your web scraping code here

except Exception as e:
    print('Error:', e)"
Generate a Python program to add new elements to an existing tuple.,"oldTuple = (1, 2, 3) 
newElements = (4, 5, 6)","# create a new tuple adding the elements from the old tuple and the new elements
newTuple = oldTuple + newElements"
Write a Python program to sort a list in ascending order with respect to a particular key.,"lst = [{‘name’:’joe’, ‘score’:90}, {‘name’:’bob’, ‘score’:50}, {‘name’:’alice’, ‘score’:80}]
key = 'score'","sorted_lst = sorted(lst, key=lambda x: x[key])"
Generate a python program which prints a formatted list containing the elements from two input lists.,"list_1 = [1, 2, 3] 
list_2 = [4, 5, 6]","def print_list(list_1, list_2): 
    formatted_list = [list_1 + list_2 for i in range(len(list_1))] 
    for x in formatted_list: 
        for y in x: 
            print(y) 
    
list_1 = [1, 2, 3] 
list_2 = [4, 5, 6]
print_list(list_1, list_2)

# Output:
# 1
# 2
# 3
# 4
# 5
# 6"
Implement a depth first search algorithm in Python to find a given node in a tree.,<Example tree structure>,"def depth_first_search(tree, node):
    if tree == None:
        return False
    elif tree.data == node:
        return True
    else:
        left_search = depth_first_search(tree.left, node)
        if left_search == True:
            return True
        right_search = depth_first_search(tree.right, node)
        return right_search"
"Given two lists, write a Python program to return a list that contains the elements from both the lists, except for the elements that are duplicated.","List1: [1,2,3,4,5] 
List2: [4,5,6,7,8]","new_list = [1,2,3,6,7,8]"
Create an optimization algorithm written in Python which takes a list of tuples as input and returns the pair with the smallest value.,"[(2, 3), (4, 1), (6, 4), (5, 8)]","def smallest_pair(lst): 
  return min(lst, key = lambda x: x[1]) 

lst = [(2, 3), (4, 1), (6, 4), (5, 8)] 
  
print(smallest_pair(lst)) 

# Output: (4, 1)"
Rewrite the following code using reduce() method in Python,"def sum(x, y):
 return x + y

list = [1, 2, 3, 4]","from functools import reduce

result = reduce(lambda x,y: x+y, list)
print(result) # 10"
Build a Python program that sorts a list of numbers from highest to lowest.,"[28, 5, 17, 10, 43]","def sort_numbers(numbers):
    numbers.sort(reverse=True)
    return numbers

numbers = [28, 5, 17, 10, 43]

sorted_numbers = sort_numbers(numbers)
print(sorted_numbers)"
Create an algorithm in Python to sort a given list of integers from smallest to largest.,"[10, 7, 3, 5, 8]","def sort_list(numbers):
    numbers.sort()
    return numbers"
Write a Python function that takes three numbers as arguments and returns the maximum value.,"2, 5, 3","def max_val(a, b, c):
    if (a > b and a > c): 
        return a
    elif (b > a and b > c):
        return b
    else: 
        return c

result = max_val(2, 5, 3)
print(result)"
Refactor a Python program to improve its readability and maintainability.,"The program is given below.

def main():
    result = []
    for item in range(10):
        if item % 3 == 0:
            result.append(item * item)
    return result","def main():
    result = [item * item for item in range(10) if item % 3 == 0]
    return result"
"Come up with a python program to join two strings x and y, and then print the resulting combined string.","x = ""Hello""; y = ""World""","x = ""Hello""
y = ""World""

result = x + y
print(result)"
Write a Python script that takes a list as an argument and prints each element of the list in a new line.,"[1, 2, 3, 4]","for item in [1, 2, 3, 4]:
    print(item)"
Optimize this Python code to count the number of occurrences of an element in an array.,"[2, 3, 3, 10, 12]","def countOccurrences(arr, x): 
  
    count = 0
    n = len(arr) 
    for i in range(0, n): 
        if (x == arr[i]): 
            count = count + 1
  
    return count 
  
# Driver code 
arr = [2, 3, 3, 10, 12] 
x = 3
assert countOccurrences(arr, x) == 2"
"Provided a number and a text, write a program in Python that adds the number to each of the words in the text.","number = 5
text = ""Today is Monday""","def add_num(num, text):
    words = text.split()
    result = [str(int(w) + num) for w in words]
    return ' '.join(result)

print(add_num(5, ""Today is Monday"")) # Output: 10 Today is 10 Monday"
"Optimize the following python code to speed up execution time:

arr = [2, 5, 3, 1]
for i in range(len(arr)):
  for j in range(i + 1, len(arr)):
    if arr[i] > arr[j]:
       arr[i], arr[j] = arr[j], arr[i]","[2, 5, 3, 1]","arr = [2, 5, 3, 1]

# using Python's built in `sorted` function
arr = sorted(arr)

# using the Bubble Sort algorithm
for i in range(len(arr) - 1):
 for j in range(len(arr) - 1 - i):
  if arr[j] > arr[j + 1]:
   arr[j], arr[j + 1] = arr[j + 1], arr[j]"
Create a function in Python to calculate the number of hours a worker worked in a week given the number of hours worked in a day.,Number of hours worked per day: 7,"def hours_worked_week(hours_per_day):
    hours_worked_week = hours_per_day * 7
    return hours_worked_week"
"Write a Python function to remove elements from a given list of integers, if the integer is a multiple of 3","list = [3, 6, 9, 11, 12, 15]","def remove_multiple_of_three(list):
  new_list = []
  for item in list:
    if item % 3 != 0:
      new_list.append(item)
  return new_list"
Assemble a Python program to find a pattern,"Find all the numbers in the array [1, 2, 3, 5, 7, 8] which are divisible by 3.","def find_pattern(arr):
    div_by_3 = []

    for num in arr:
        if num % 3 == 0:
            div_by_3.append(num)
    
    return div_by_3"
Create a python script to read a JSON object and print out its values.,"{
 ""name"": ""Adam"",
 ""age"": 24,
 ""city"": ""New York""
}","import json

data = json.loads('{ ""name"": ""Adam"", ""age"": 24, ""city"": ""New York"" }')

print(""Name: "", data['name']) 
print(""Age: "", data['age']) 
print(""City: "", data['city'])"
"Create a program in Python that takes a string as an argument and tokenizes it, removing any punctuation.","'This sentence has commas, periods, and colons.'","import string

def tokenize(string):
    tokens = string.split()
    tokens = [token.strip(string.punctuation) for token in tokens]
    return tokens

tokenized_str = tokenize('This sentence has commas, periods, and colons.')
print(tokenized_str)
# Output: ['This', 'sentence', 'has', 'commas', 'periods', 'and', 'colons']"
Create a Python class with a constructor and a `to_string` method that takes two integers and returns a formatted string.,The two integers are 7 and 5.,"class MyClass:
 def __init__(self, x, y):
 self.x = x
 self.y = y

def to_string(self):
 return f'The numbers are {self.x} and {self.y}.'

c = MyClass(7,5)
print(c.to_string())"
Generate a Python code that calculates the mean of a data set given as a list of integers.,"[1, 2, 3, 4, 5, 6]","def calculate_mean(data): 
    # Initialize the sum and length of data 
    sum = 0 
    length = len(data) 
  
    # Calculating the sum  
    for x in data: 
        sum += x   
    # Calculating the mean  
    mean = sum / length 
  
    return mean 
  
# Test the function 
data = [1, 2, 3, 4, 5, 6] 
print('Mean of data is:', calculate_mean(data))"
"In Python, write a program that reads in an unsorted array of integers and returns it in sorted order.","A = [5, 2, 9, 1, 8]","def sort_array(A):
    for i in range(len(A) - 1):
        min = A[i]
        min_index = i
        for j in range(i + 1, len(A)):
            if A[j] < min:
                min = A[j]
                min_index = j
        if min_index != i:
            A[i], A[min_index] = A[min_index], A[i]
    return A"
Use a Python print function to write a statement that takes an input message and prints the message in all uppercase letters.,"""Hello world!""","message = 'Hello world!'

print(message.upper()) // HELLO WORLD!"
Create a function in Python to extract all words from a sentence that are greater than 3 chars in length.,This is a sample sentence,"def extract_long_words(s):
 words = s.split()
 filtered = [w for w in words if len(w) > 3]
 return filtered"
Optimize a Python function for computing Fibonacci numbers.,"def fib(n):
    if n == 0 or n == 1:
        return n
    else:
        return fib(n-1) + fib(n-2)","def fibonacci(n): 
    if n <= 1: 
        return n 
    else:
        fibonacci_num=[0,1] #creating a fibonacci list
        i=2
        while i<=n:
            fibonacci_num.append(fibonacci_num[i-1]+fibonacci_num[i-2])
            i+=1
        return fibonacci_num[n]"
Implement a function in Python that takes a number n and generates a random list of integers between 0 and n.,n = 10,"import random

def randomList(n):
 list = []
 
 for i in range(n):
 list.append(random.randint(0, n))
 
 return list

print(randomList(10))"
Can you write a Python program to take a list and create a new list with unique elements of the first list?,"list=[1,2,2,3,3,3]","def unique_list(list):
    unique_list = []
    for element in list:
        if element not in unique_list:
            unique_list.append(element)
    return unique_list

unique_elements = unique_list([1,2,2,3,3,3])
print(unique_elements)"
Write a Python function to create a Fibonacci sequence up to n-th number.,n=10,"def FibonacciGenerator(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"") 
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
        return b 
  
 
# Driver Program 
print(FibonacciGenerator(10))"
Create a Python program to convert imperial length units to metric length units.,5 inches,"""""""
Imperial to Metric conversion program.
""""""

def inches_to_cm(inches):
    return inches * 2.54

if __name__ == '__main__':
    print(inches_to_cm(5))"
You have a list of temperature values. Write a python program to find the day which has the highest temperature.,"[58, 59, 61, 63, 66, 68, 71, 72, 75]","def highest_temp(temp_list):
    highest_temp_day = 0 
    highest_temp_val = temp_list[0]

    for i in range(1, len(temp_list)):
        if temp_list[i] > highest_temp_val:
            highest_temp_day = i
            highest_temp_val = temp_list[i]
            
    return highest_temp_day"
Generate a program which accepts a sentence as an input and returns the total number of characters in it?,"""<noinput>""","# Python program to find number of characters in a sentence 
  
# Function to calculate number of characters 
def find_char(s): 
    return(len(s)) 
  
# Taking the sentence from the user 
str = input(""Enter a sentence: "") 
  
# Calling the function 
count = find_char(str) 
  
# Printing the result 
print(""Number of characters:"", count)"
Create a Python function which takes in two lists and returns a list that contains the elements from both lists.,"list1 = [1, 2, 3] 
list2 = [4, 5, 6]","def combine_lists(list1, list2):
    return list1 + list2"
Design a Python code to Print the length of the string entered by user.,"stringInput = ""Hello World!""","stringLength = len(stringInput)

print(""The length of the string is: "", stringLength)"
Create a Python program to calculate the square root of a user-defined positive number.,n = 100,"import math

n = 100

#Calculate the square root of a number
square_root = math.sqrt(n)

print(f'Square root of {n} is {square_root}')"
Create a Python function to remove all non-alphanumeric characters from a string.,"""Hello, $World!""","def clean_string(string):
    cleanedString = """"
    for c in string:
        if c.isalnum():   
            cleanedString += c 
  
    return cleanedString"
Write a simple Python function that takes a list of integers and returns the sum of all elements divisible by 3.,"li = [4, 6, 17, 24, 5, 9]","def divisibleBy3(li):
 total = 0
 for num in li:
  if num % 3 == 0:
   total += num
 return total
# Output: 24"
Construct an algorithm in Python that takes an array of numbers and removes all duplicates while maintaining the original order of the array.,"[1, 3, 2, 1, 5, 4, 8, 6, 7, 5]","def remove_duplicates(arr):
    seen = set()
    seen_add = seen.add
    return [x for x in arr if not (x in seen or seen_add(x))]

arr = [1, 3, 2, 1, 5, 4, 8, 6, 7, 5]
result = remove_duplicates(arr)

print(result)
# Output: [1, 3, 2, 5, 4, 8, 6, 7]"
Create a python script to download a complete web page and cache it for faster offline access.,URL: https://www.example.com/page1,"import requests
import os

url = 'https://www.example.com/page1'

if not os.path.exists('cache'):
 os.makedirs('cache')

r = requests.get(url)

filename = url.rsplit('/', 1)[-1]
file_path = os.path.join('cache', filename)

with open(file_path, 'wb') as f:
 f.write(r.content)"
Develop a Python script to output the result of the following boolean expression:,(not A or B) and (C or D),"def booleanExpression(A, B, C, D):
    return (not A or B) and (C or D)"
Develop a program in python to realize the following task:,Calculate the average of all the elements of an array.,"def avg(arr):
    tot_sum = 0
    for num in arr:
        tot_sum += num
    
    return tot_sum/len(arr)"
Write a function in Python to return the square root of a number.,A number: 49,"import math

def square_root(num):
    return math.sqrt(num)

num = 49
print(""Square root of "", num, "" is: "", square_root(num))"
Create a Python program to find the number of days between two dates.,"date1 = ""2020-10-01""
date2 = ""2020-10-31""","from datetime import datetime

def get_days_diff(date1, date2):
 d1 = datetime.strptime(date1, ""%Y-%m-%d"")
 d2 = datetime.strptime(date2, ""%Y-%m-%d"")
 return abs((d2 - d1).days)"
Implement a program in Python to detect the occurrence of a string in a given sentence.,"sentence: ""This is an example sentence""
string: ""example""","def detectString(sentence, string):
  if string in sentence:
    return ""String '{}' detected in the sentence"".format(string)
  else:
    return ""String '{}' not detected in the sentence"".format(string)

sentence = ""This is an example sentence""
string = ""example""

print(detectString(sentence, string))"
Create a web application in Python to display current weather information for a given city.,"Paris, France","# import libraries
import requests, json 
  
# api-endpoint 
url = ""http://api.openweathermap.org/data/2.5/weather?q={city}&units=metric&APPID="
Create a sorting algorithm in Python to sort strings by their length.,"[""cat"", ""dog"", ""apple"", ""banana""]","def sort_by_length(strings):
    for i in range(len(strings) - 1):
        for j in range(i + 1, len(strings)):
            if len(strings[i]) > len(strings[j]):
                strings[i], strings[j] = strings[j], strings[i]
    return strings

unsorted_list = [""cat"", ""dog"", ""apple"", ""banana""]

sorted_list = sort_by_length(unsorted_list)

print(sorted_list)"
Write an efficient Python program to remove all the duplicate items from a list.,"[1,1,2,2,3,4,5,5]","def removeDuplicates(arr):
  output = []
  for ele in arr:
    if ele not in output:
      output.append(ele)
  return output
  
output = removeDuplicates([1,1,2,2,3,4,5,5]);
print(output) // outputs: [1, 2, 3, 4, 5]"
Create a program in Python to remove duplicates from a list and return the new list.,"arr = [1, 2, 3, 1, 4]","def remove_duplicates(arr):
    new_list = []
    for item in arr:
        if item not in new_list:
            new_list.append(item)
    return new_list"
Generate an algorithm in Python that returns the kth smallest number in a given array.,"Input Array: [3, 2, 4, 1, 5]
Input k: 3","def kthSmallest(arr, k):
 # sort the array
 arr.sort()
 
 # return the kth element
 return arr[k-1]
 
# Driver Code
arr = [3,2,4,1,5]
k = 3

print(kthSmallest(arr, k)) # 3"
Optimize the following Python code to remove any redundant operations.,"x = 0
for i in range(100):
    for j in range(100):
        x += i
        x += j","x = 0
for i in range(100):
    x += i * 100
    for j in range(100):
        x += j"
Develop a python program for the following task,Write a function to calculate the sum of the first n natural numbers.,"def sum_n(n):
    result = (n * (n+1)) / 2
    return result

n = 10

sum = sum_n(n)
print(sum)"
"In Python, create a function to check if a given number is prime, and then print out all prime numbers between 0 and that number.",Number : 25,"def is_prime(number):
    if number <= 1:
        return False
    for i in range(2, number):
        if number % i == 0:
            return False
    return True

def print_primes(upper_limit):
    for i in range(2, upper_limit+1):
        if is_prime(i):
            print(i)

print_primes(25)"
Write a Python script that takes in a Python list and returns every other element as a sublist.,"[1,2,3,4,5]","def every_other_sublist(input_list):
 sublist = []
 for i in range(len(input_list)):
 if i % 2 == 0:
 sublist.append(input_list[i])
 return sublist"
Write a Python program that takes in a sentence and returns the words within the given sentence in reverse order.,"sentence = ""Hello world!""","def reverse_words(sentence):
    words = sentence.split("" "")
    reversed_words = words[::-1]
    return "" "".join(reversed_words)

print(reverse_words(""Hello world!""))
# Output: world! Hello"
"Write a Python program to edit a given string and remove all occurances of ""the"".","string = ""the quick brown fox jumped over the lazy dog""","def remove_the(string):
  edited_string = string.replace(""the"", """")
  return edited_string

result = remove_the(""the quick brown fox jumped over the lazy dog"")
print(result)"
Write a Python function to convert a list of multiple integers into a single integer.,"my_list = [1, 2, 3, 4]","def convert_list_to_integer(my_list):
    result = 0
    multiplier = 1
 
    for i in range(len(my_list)-1, -1, -1):
        result += my_list[i]*multiplier
        multiplier *= 10
 
    return result
 
print(convert_list_to_integer(my_list))"
Create a python program to create a dictionary with key-value pairs using two lists,"keys = [""a"", ""b"", ""c""]
values = [1, 2, 3]","keys = [""a"", ""b"", ""c""]
values = [1, 2, 3]

d = dict(zip(keys, values))
print(d) # output: {'a': 1, 'b': 2, 'c': 3}"
Generate a Python loop with a number of iterations equal to the number of given numbers.,"numbers = [1, 2, 3]","for i in range(len(numbers)):
  print(numbers[i])"
Develop a python program to add two arrays of the same size.,"a = [2, 3, 4]
b = [5, 6, 7]","def add_arrays(a, b):
    c = []
    n = len(a)
    for i in range(n):
        c.append(a[i] + b[i])
    return c

a = [2, 3, 4]
b = [5, 6, 7]
result = add_arrays(a, b)
print(result) # prints [7, 9, 11]"
Write a Python program to reformat a string using a given dictionary.,"""Hello {name}, it's {time} to go"",{'name':'John', 'time':'2pm'}","def reformat_string(string, mapping):
    for k, v in mapping.items():
        string = string.replace('{' + k + '}', v)
    return string

if __name__ == ""__main__"":
    string = ""Hello {name}, it's {time} to go""
    mapping = {""name"": ""John"", ""time"": ""2pm""}
    print(reformat_string(string, mapping)) # Output: Hello John, it's 2pm to go"
Modify the following Python code such that a thread is started from within the function.,"def doSomething():
    # Do something","import threading

def doSomething():
	#Do something
    t = threading.Thread(target=functionName)
    t.start()"
Write a Python program to implement an algebraic equation.,Equation: 3x2 + 7x -4,"def evaluate_eq(x):
    return 3*x*x + 7*x - 4"
"Given two positive numbers x and y, write a Python program to multiply them.",15 and 10,"def multiply_numbers(x, y):
    return x * y

result = multiply_numbers(15, 10)
print(result)"
Create a Python program that computes the total time taken by two runners in a race.,"Time of Runner 1: 3 minutes
Time of Runner 2: 4 minutes","def race_time_total(time1,time2):
 total = time1 + time2
 return total"
Write a Python program to convert kilometers to miles.,Kilometers: 10,"kilometers = 10

miles = kilometers * 0.621371

print(""{} kilometers is equal to {} miles"".format(kilometers, miles))"
Create a program in Python that converts binary to decimal representation.,101010,"def BinaryToDecimal(binary): 
    binary1 = binary 
    decimal, i, n = 0, 0, 0
    while(binary != 0): 
        dec = binary % 10
        decimal = decimal + dec * pow(2, i) 
        binary = binary//10
        i += 1
    return decimal 
  
# Driver code 
binary = 101010
print(BinaryToDecimal(binary))"
Create a program to find the frequency of characters in a given string in Python.,"Example string: ""abbccccdddde""","def find_character_frequency(string):
    freq = {} 
    for i in string: 
        if i in freq: 
            freq[i] += 1
        else: 
            freq[i] = 1
    return freq
 
# example
string = ""abbccccdddde""
print(find_character_frequency(string))
# Output: {'a': 1, 'b': 2, 'c': 4, 'd': 4, 'e': 1}"
Create a program in Python that takes an array of integers and returns a new array with each element multiplied by its index.,"[6, 3, 10, 4]","def multiply_by_index(numbers):
    for i in range(len(numbers)):
        numbers[i] *= i
    return numbers"
Write an algorithm for linear search in Python.,"List: [1, 3, 8, 10, 15, 20, 25]
Number to search: 15","def linear_search(list, n):
  i = 0
  while i < len(list):
    if list[i] == n:
      return i
    i = i+1
  return -1

list = [1, 3, 8, 10, 15, 20, 25]
n = 15
index = linear_search(list, n)
print(""Number found at index:"", index)"
Write a query in Python to count the total number of times a value appears in a specific column of a table.,"Table: ""mytable""
Column: ""mycolumn""
Value: ""myvalue""","SELECT COUNT(mycolumn)
    FROM mytable
    WHERE mycolumn = 'myvalue'"
Create an algorithm in Python to find the longest continuous sequence of zeros in a binary string.,"Example binary string: ""1101011000""","def longestZeroSeq(inputStr):
    maxLength = 0 
   
    currentLength = 0
   
    for c in inputStr:
        if c == '0':
            currentLength += 1
        else:
            maxLength = max(maxLength, currentLength) 
            currentLength = 0
   
    maxLength = max(maxLength, currentLength)
   
    return maxLength"
Create a Python function to extract the largest prime factor from a given number.,number = 35,"def largest_prime_factor(number):
 largest_factor = 1
 for i in range(2, number+1):
 while number % i == 0:
 largest_factor = i
 number //= i
 return largest_factor

largest_prime_factor(35) # Output: 5"
Can you write Python code to replace all the vowels with '*' in a string?,"""Hello, World!""","def replaceVowels(string):
    vowels = [""a"",""e"",""i"",""o"",""u"", ""A"", ""E"", ""I"", ""O"", ""U""]
    newstr = """"
    for char in string:
        if char in vowels:
            newstr += ""*""
        else:
            newstr += char
    return newstr

print(replaceVowels(""Hello, World!""))  # H*ll*, W*rld!"
Create a Python function to sort a list of strings alphabetically.,"my_list = [""apple"", ""orange"", ""banana""]","def sort_list(list):
    list.sort()
    return list
    
sort_list(my_list)"
Design a Python program to replace all e with @ in an array of strings,"['abc', 'xyz', '111']","def replace_e(arr): 
    return [i.replace('e','@') for i in arr] 
  
arr = ['abc','xyz','111']
print(replace_e(arr))"
Write a Python program to flatten a list of lists into a single list.,"List of lists: [[1,2], [3], [4,5,6]]","import itertools

# flatten a list of lists
list_of_lists = [[1,2], [3], [4,5,6]]
flattened_list = list(itertools.chain.from_iterable(list_of_lists))

# print the flattened list
print(flattened_list)  # Output: [1, 2, 3, 4, 5, 6]"
Write an algorithm in Python to find the sum of the digits in a number.,123,"def findSum(n): 
	Sum = 0 
	n = str(n)
	for i in n: 
		Sum = Sum + int(i) 
	return Sum

# Driver code  
n = 123
print(findSum(n))"
Create a script in Python that automatically generates an emial address for a given name.,Name: John Doe,"import random

def generate_email(name):
 name_words = name.split()
 first_name = name_words[0]
 last_name = name_words[1]
 random_numbers = str(random.randint(1,99))
 
 email = first_name + last_name + random_numbers + ""@example.com""
 return email
 
 print(generate_email(""John Doe""))"
Generate a Python program that takes two lists as input and returns a new list containing only the common elements.,"[1, 2, 3, 4, 8], [2, 6, 8, 10]","def common_elements(list1, list2): 
    common_list=[]
    for element in list1: 
        if element in list2: 
            common_list.append(element) 
    return common_list
  
list1 = [1, 2, 3, 4, 8] 
list2 = [2, 6, 8, 10]

common_list = common_elements(list1, list2) 

print(common_list)"
Write a Python program to convert a given string to list of words,Hello world,"def convert_to_list(s):
    return s.split()

string = 'Hello world'
result = convert_to_list(string)
print(result)"
Generate a Python function that takes in a number as a parameter and finds its Fibonacci number.,5,"def fibonacci(n):
    a, b = 0, 1
    for i in range(n):
        a, b = b, a + b
    
    return a

fibonacci_number = fibonacci(5)
print(fibonacci_number)"
Write a Python program to sort a list of tuples by the second item in each tuple.,"[(3, 4), (5, 6), (1, 2)]","def sort_list(tuples):
    return sorted(tuples, key = lambda x: x[1])
 
tuples = [(3, 4), (5, 6), (1, 2)]
 
print(sort_list(tuples))"
Create a Python function for calculating the mode (most frequently occuring item) in a list of numbers.,"List of numbers: [1, 2, 3, 2, 4, 2]","import collections

def mode(numbers):
 counts = collections.Counter(numbers)
 max_count = max(counts.values())
 return [item for item, count in counts.items() if count == max_count]

numbers = [1, 2, 3, 2, 4, 2]
mode = mode(numbers)
print(mode)
# Output: [2]"
Write a Python program that can detect emails within a given text.,Hello! My name is John and my email is john@example.com.,"import re

text = 'Hello! My name is John and my email is john@example.com.'

# Find all occurrences of an email using regex
email_regex = r""[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}""
result = re.findall(email_regex, text)

# Print emails found
print(""Emails found: \n"")
for email in result:
 print(email)"
Construct a algorithm in Python to find the solution of linear equation.,"2x + 3y = 5 
5x - 4y = 7","# import necessary modules 
import numpy as np 
  
# define coefficient and constants 
a = np.array([[2, 3], [5, -4]]) 
b = np.array([5, 7]) 
  
# solve linear equations 
ans = np.linalg.solve(a, b) 
  
# print the solutions 
print(ans[0], ans[1])"
Can you create a Python program that returns the largest number in a list of numbers?,"[4, 8, 2, 6, 9]","def largestNumber(list): 
    maximum = list[0] 
      
    for num in list: 
        if num > maximum: 
            maximum = num 
    return maximum 
  
list = [4, 8, 2, 6, 9] 
largestNumber = largestNumber(list) 
  
print(""Largest number in the given list is:"", largestNumber)"
Generate a Python code snippet to sum all numbers from a list of integers.,"[2, 7, 8, 4, 5]","sum = 0
for num in [2, 7, 8, 4, 5]:
    sum += num
print(sum)"
"Create a function in Python which takes 3 arrays as input, and returns the arrays merged together into a single array.","[1, 2, 3], [4, 5, 6], [7, 8, 9]","def merge_arrays(arr1, arr2, arr3):
    combined_arr = arr1 + arr2 + arr3
    return combined_arr

result = merge_arrays([1, 2, 3], [4, 5, 6], [7, 8, 9])
print(result)"
Generate a Python script to print the elements of a list in reverse order.,"[1, 2, 3, 4, 5]","my_list = [1, 2, 3, 4, 5]

for i in reversed(my_list):
    print(i)"
Fix the bug in this Python code.,"def swap(a, b):
  a, b = b, a

x = 10
y = 20

swap(x, y)

print(x, y)","def swap(a, b):
  temp = a
  a = b
  b = temp

x = 10
y = 20

swap(x, y)

print(x, y)"
"Create a Python program that calculates the average of 3 grades and returns a grade level using the following scale:

90-100: A
80-89: B
70-79: C
60-69: D
Below 60: F","87, 61, 95","def get_grade_level(grades):
  average = sum(grades) / len(grades)
  if average >= 90:
    grade_level = 'A'
  elif average >= 80:
    grade_level = 'B'
  elif average >= 70:
    grade_level = 'C'
  elif average >= 60:
    grade_level = 'D'
  else:
    grade_level = 'F'

  return grade_level"
Design a program in Python to reverse the words of a given string.,"String s = ""This is an example sentence.""","def reverseWords(s): 
	# split the string 
	words = s.split(' ') 
	
	# reverse the words 
	words = words[::-1] 
	
	# join the words 
	reverseString = ' '.join(words)
	
	return reverseString 

s = ""This is an example sentence.""
print(reverseWords(s)) 
# Output: sentence. example an is This"
"Write a Python program to search through a list of dictionaries for a specific key-value pair, and return the corresponding value.","L = [{'id': 1, 'name': 'John'}, {'id': 2, 'name': 'Alice'}, {'id': 3, 'name': 'Bob'}]","def search(lst, key, value):
 for dict in lst:
  if dict[key] == value:
   return dict[value]
return None

#search for name with id 2
search(L, 'id', 2)
#outputs 'Alice'"
"Create a basic Python script that takes a user input, filters out any characters that are not letters or numbers, and prints the input after filtering.","This input contains "" special characters!","import re

input_string = ""This input contains \"" special characters!""
filtered_string = re.sub(r'[^a-zA-Z0-9]', '', input_string)

print(filtered_string) # Output: Thisinputcontainsspecialcharacters"
Find the most frequent element in an array in Python.,"[1, 3, 3, 3, 5, 4, 4, 6]","from collections import Counter 

def most_frequent(arr): 
 c = Counter(arr) 
 return c.most_common(1)[0][0]

arr = [1, 3, 3, 3, 5, 4, 4, 6] 
print(most_frequent(arr)) 
# Output: 3"
Convert a Python program that uses for-loops to one that uses only while-loops.,"for i in range(0, 3):
    print(i)","i = 0 
while i < 3: 
    print(i) 
    i += 1"
Write a Python program that takes an integer number as an input and calculates the sum of the even factors of that number.,50,"def get_sum_even_factors(n):
    sum = 0
    for i in range(2, n+1):
        if (n % i == 0) and (i % 2 == 0):
            sum = sum + i
    return sum

# Test 
input_num = 50
print(get_sum_even_factors(input_num)) # returns 196"
"Given a JSON object, write a Python program to convert it into a dictionary.","JSON object: { ""name"": ""John"", ""age"": 30, ""City"": ""New York"" }","import json

json_object = { ""name"": ""John"", ""age"": 30, ""City"": ""New York"" }

dict = json.loads(json.dumps(json_object))

print(dict)"
Modify the following Python code to print the sum of the elements in a given list (without using the sum() function).,"my_list = [1, 5, 4, -3, 10]","my_list = [1, 5, 4, -3, 10]

total = 0

for num in my_list:
 total += num

print(total) # prints 17"
Write a python function to format a string according to provided parameters.,"Input string: ""Hello World""
Upper-Case Letters: True
Lower-Case Letters: False","def formatString(s, upperCaseLetters, lowerCaseLetters):
    newStr = """"
    if upperCaseLetters: 
        newStr = s.upper()
    elif lowerCaseLetters: 
        newStr = s.lower()
    return newStr

print(formatString(""Hello World"", True, False)) # Output: ""HELLO WORLD"""
Optimize the performance of a function in Python that calculates the total of a list of numbers.,"nums = [1, 2, 3, 4, 5]","def sum_list(nums):
 total = 0
 for num in nums:
 total += num
 return total

def sum_list_optimized(nums):
 total = 0
 length = len(nums)
 while length > 0:
 total += nums[length - 1]
 length -= 1
 return total

nums = [1, 2, 3, 4, 5]
print(sum_list_optimized(nums))  # Output: 15"
Write a Python program to sort a list of words in ascending order based on their length.,"words = [""I"", ""am"", ""all"", ""ears""]","words = [""I"", ""am"", ""all"", ""ears""]

#sort the words by length
words.sort(key = len)

#print the sorted words
for word in words:
 print(word)

# Output
I
am
all
ears"
Create a python program that finds the number of elements between two given indices in a given list.,"list = [0, 4, 5, 8, 9]
start = 2
end = 4","def count_elements(list, start, end):
    elements_count = 0
    start_index = list.index(start)
    end_index = list.index(end)
    for i in range(start_index + 1, end_index):
        elements_count += 1
    return elements_count"
Rewrite the following Python code using vectorization techniques to reduce the computation time.,"squares = []
for x in range(100):
 squares.append(x * x)","squares = [x * x for x in range(100)] # vectorized code equivalent to the for loop, which will be faster"
Write a Python program that reads a list of strings and sorts them by the number of characters in each string.,"['foo', 'bar', 'baz', 'foobar', 'beer', 'wine']","list_of_strings = ['foo', 'bar', 'baz', 'foobar', 'beer', 'wine']

# sort strings by length
list_of_strings.sort(key=len)

# print sorted list
print(list_of_strings)"
Create a loop structure in python code to perform the following task,Calculate the total number of words in a given paragraph.,"words = para.split(' ')
total = 0
for word in words:
    total += 1
print(total)"
"Write a Python code snippet to search and print all items in the list that starts with substring ""java"".","arr = [""python"", ""c++"", ""java"", ""java-script""]","arr = [""python"", ""c++"", ""java"", ""java-script""]

result = []
for item in arr:
    if item.startswith(""java""):
        result.append(item)
print(result)"
Create a Python program to download a website from the Internet and save it locally.,"Website to download: ""https://www.example.com""","import urllib.request

url = 'https://www.example.com'

try:
 response = urllib.request.urlopen(url)
 content = response.read()
 filename = url.split('/')[-1]
 with open(filename, 'w') as file:
 file.write(content)
except Exception as e:
 print(e)"
Generate a code snippet in Python to handle HTTP requests from a given URL.,URL = 'https://example.com/test',"import requests

url = 'https://example.com/test'
 
# Make the request
response = requests.get(url)
 
# Check the response
if response.status_code == 200:
  # Success
  content = response.text
else:
  # Failure
  print(f'Request failed with status code: {response.status_code}')"
Design a Python function that outputs the sum of all multiples of 4 and 7 between 1 and a given number n.,100,"def sum_multiples_4_7(n): 
      
    sum = 0
    # iterate from 1 to n 
    for i in range(1, n+1): 
          
        # Sum only if it's a
        # multiple of 4 or 7 
        if(i % 4 == 0 or i % 7 == 0): 
            sum += i 
    return sum

result = sum_multiples_4_7(100)
print(result)"
Design a solution in Python for determining the frequency of characters in a given string.,"""A quick brown fox jumps over the lazy dog.""","text = ""A quick brown fox jumps over the lazy dog.""

count = {} 
for character in text: 
    if character in count: 
            count[character] += 1
    else: 
            count[character] = 1
  
for key in count: 
    print('%s appears %d times' % (key, count[key]))"
Write a short Python script to compute the average temperature of a given set of temperatures.,"temperatures = [71,77,82,81,75,72,78]","def average(temperatures):
    total = 0
    for temp in temperatures:
        total += temp
    return total/len(temperatures)

print(average(temperatures))"
Write a Python program to create a program to compare two lists of numbers.,"list_a = [1, 2, 3]
list_b = [2, 3, 4]","def compare_lists(list_a, list_b):
    a_not_in_b = []
    b_not_in_a = []
    
    for a in list_a:
        if a not in list_b:
            a_not_in_b.append(a)
            
    for b in list_b:
        if b not in list_a:
            b_not_in_a.append(b)
            
    return a_not_in_b, b_not_in_a"
Generate a classifier in Python using the Random Forest algorithm.,"Features: Weight, Size
Label: Type","from sklearn.ensemble import RandomForestClassifier

X = [[Weight, Size]]
y = [Type]

model = RandomForestClassifier(random_state=0)
model.fit(X, y)"
Create a python dictionary using the given lists.,"list1 = [1, 2, 3]
list2 = [4, 5, 6]","{1: 4, 2: 5, 3: 6}"
Change the following python code so that the loop only iterates through the even numbers in the list.,"for num in range(16):
    print(num)","for num in range(16):
    if num % 2 == 0:
        print(num)"
Create a Python dictionary of students' names and their corresponding grades in a course.,"John - 98;
Jennifer - 95;
Noah - 87;
Frank - 92;","students_dict = {
 ""John"": 98,
 ""Jennifer"": 95,
 ""Noah"": 87,
 ""Frank"": 92
}"
Create a python program to test if a given string is a palindrome,"str = ""level""","def is_palindrome(str):
    for i in range(len(str) // 2):
        if str[i] != str[-i - 1]:
            return False
    return True

# Test
result = is_palindrome(""level"")
print(result) # Output: True"
Create a Python code to organize a given dictionary and sort its keys alphabetically.,"myDict = {'a': 1, 'c': 2, 'b': 3}","sortedDict = dict(sorted(myDict.items()))

print(sortedDict)"
Write a Python script to generate a random username using letter and numbers.,[No input],"import string
from random import *

def generate_username():
    letters = string.ascii_letters
    numbers = string.digits
    username = """"
    for _ in range(10):
        username += choice(letters) + choice(numbers)
    return username

print(generate_username())"
Design an algorithm in Python to get the largest number in a list.,"[2, 5, 3, 7]","def getMax(list):
    max = 0
    for num in list:
        if num > max:
            max = num
    return max

list = [2, 5, 3, 7]
print(getMax(list))"
Can you provide a Python code to print the largest item in a given list?,"[9, 2, 6, 10, 4]","# Find the largest element in a list

def find_largest(lst):
    max_val = float('-inf')
    for val in lst:
        if val > max_val:
            max_val = val
    return max_val

# Test
lst = [9, 2, 6, 10, 4]
print(find_largest(lst)) # 10"
Gadgetize the following Python function to accept any number of inputs,"def sum_two(input1, input2):
 return input1 + input2","def sum(*args):
   total = 0
   for arg in args:
       total += arg
   return total"
Create a Python program to calculate the GC content of a DNA sequence.,ACTGCTAGCTACTAGC,"dna_sequence = 'ACTGCTAGCTACTAGC'
gc_count = 0
for base in dna_sequence:
 if base == 'G' or base == 'C':
  gc_count += 1
gc_percentage = gc_count / len(dna_sequence) * 100
print(gc_percentage)"
Create an algorithm in Python to find the largest rectangular area in a histogram.,"heights = [2, 7, 9, 4, 1]","def maxArea(heights):
  max_area = 0
  left = 0
  right = len(heights) - 1

  while left < right:
    h = min(heights[left], heights[right])
    max_area = max(max_area, h * (right - left))
    if heights[left] < heights[right]:
      left += 1
    else: 
      right -= 1

  return max_area

print(maxArea(heights)) # 8"
"Write a Python program to remove the words containing the letter ""a"" from a sentence.",Sentence: I am a strong girl,"sentence = ""I am a strong girl""

without_a = ' '.join([word for word in sentence.split() if 'a' not in word])

print(without_a)
# Output: I strong girl"
Write a function that takes a string and prints out the string in reverse.,Python,"def reverse_string(s):
  return s[::-1]
  
print(reverse_string('Python'))  # nohtyP"
Create a code that checks whether the given date is valid or not in Python.,"Year: 2020
Month: 11
Day: 40","def validate_date(year, month, day):
    try:
        datetime.datetime(year, month, day)
        return True
    except ValueError:
        return False

validate_date(2020, 11, 40) # Output: False"
Can you create a program Python to find the top ten most frequent words in a text?,"text=""Python is a great language to learn. It is very powerful and easy to learn.""","import collections

#Splitting the text into words
words=text.split()

#Creating a frequency table
word_freq = collections.Counter(words)

#Printing the top 10 most frequent words
for word, frequency in word_freq.most_common(10):
    print(word, frequency)"
Write a function in Python to extract the domain name from an email address.,test@example.com,"def get_domain_name_from_email(email):
    return email.split('@')[-1]"
Generate Python code to connect to a SQL database.,"hostname: test.com,
username: admin,
password: pwd123","import mysql.connector

connection = mysql.connector.connect(  
    host = ""test.com"",
    user = ""admin"",
    password = ""pwd123"",
    database = ""testdb""
)"
Propose a solution that optimizes the following python program.,"for i in range(1000):
    for j in range(1000):
        arr[i][j] += 5","import numpy as np

arr = np.array(arr)  # Convert to a numpy array

arr += 5  # add 5 to the array"
Write a Python function that takes an integer n and n numbers and returns an array containing the largest n numbers.,"3, 8, 5, 7, 2, 10","def largest_n_numbers(n, *nums):
    nums_sorted = sorted(nums, reverse=True)
    return nums_sorted[:n]

result = largest_n_numbers(3, 8, 5, 7, 2, 10)
print(result)"
Generate a Python program to delete a given key from a dictionary.,"dictionary = {'foo': 1, 'bar': 2, 'baz': 3}
key = 'baz'","dictionary = {'foo': 1, 'bar': 2, 'baz': 3}
key = 'baz'

def delete_key(dic, k):
  if k in dic:
    del dic[k]

delete_key(dictionary, key)

print(dictionary)"
Create a Python function that takes two strings as arguments and returns their concatenation with a single dash in between.,"first_str = ""Hello""
second_str = ""World""","def concatenate_strings(first_str, second_str):
    return first_str + '-' + second_str

first_str = ""Hello""
second_str = ""World""
result = concatenate_strings(first_str, second_str)
print(result)"
Refactor this piece of Python code to increase its readability.,"def maximum_sum(arr, n): 

msum = 0

for i in range(n): 
    for j in range(i, n): 
        tsum = 0
        for k in range(i, j+1): 
            tsum += arr[k]","def maximum_sum(arr, n):
    msum = 0
    for i in range(n):
        for j in range(i, n):
            cur_sum = 0
            for k in range(i, j + 1):
                cur_sum += arr[k]
            msum = max(msum, cur_sum)
    return msum"
Write a Python program to solve a linear equation system of the form: ax + by = c.,"a, b, c = 2, 1, 4","def solve_linear_equation_system(a, b, c):
 x = (c - b) / a
 y = (c - a*x) / b
 return x, y

x, y = solve_linear_equation_system(a, b, c)
print(""x = {}, y = {}"".format(x, y)) # x = 2.0, y = 2.0"
"Given a string, convert it to a list of words.","String: ""Hello there, how are you?""","# Python code to convert a string 
# to a list of words 

# Split a string by a delimiter 
def string_split(string): 
    # Split the string into words 
    words = string.split(' ') 
  
    return words 
      
# Driver code 
string = ""Hello there, how are you?""
print(string_split(string))"
Can you create a python program that returns the index of an item in a given array of numbers?,"arr = [1,2,3,4,5,6]
item = 5","def getIndex(arr, item):
    for i in range(len(arr)):
        if arr[i] == item:
            return i
    return -1

arr = [1,2,3,4,5,6]
item = 5
index = getIndex(arr, item)
print('Index of', item, 'is', index) # index is 4"
Create a Python program to get the least common multiple (LCM) of two numbers.,"num1 = 9
num2 = 17","def lcm(num1, num2):
  if num1 > num2:
    greater = num1
  else:
    greater = num2

  while(True):
    if((greater % num1 == 0) and (greater % num2 == 0)):
      lcm = greater
      break 
    greater += 1

  return lcm"
Code a Python program that prints out the longest word in a given sentence.,This is an example sentence with some words.,"sentence_string = 'This is an example sentence with some words.'
word_list = sentence_string.split(' ')

longest_word = sorted(word_list, key=len)[-1]

print(longest_word)

# Output
sentence"
Generate a method in Python that takes an array of strings and selects strings that contain more than 6 characters.,"[""apple"", ""banana"", ""grape"", ""strawberry"", ""mango""]","def filter_long_words(words):
    return [word for word in words if len(word) > 6]"
Generate a valid Python program to create an alphabetically sorted list of all the words in a sentence.,"""This is a great day""","def sortSentence(sentence):
    words = sentence.split("" "")
    words.sort()
    return words

result = sortSentence(""This is a great day"")
print(result)"
Edit the existing code to use a python approach to convert the temperature from celsius to fahrenheit.,Temperature in Celsius: 24,"def celsius_to_fahrenheit(celsius):
    return (celsius * 9 / 5 + 32)

temperature_in_fahrenheit = celsius_to_fahrenheit(24)
print(temperature_in_fahrenheit)"
Create a program in Python to extract the first and last names from a string of full names.,Elizabeth W. Jennings,"names = input().split()

first_name = names[0]
last_name = names[-1]

print('First Name:', first_name)
print('Last Name:', last_name)"
Optimize a Python program that counts the number of words in a given sentence.,'This is a test sentence.',"def count_words(sentence):
    # split the sentence on whitespace
    words = sentence.split()
    
    # return the length of the resulting list
    return len(words)
    
sentence = 'This is a test sentence.'

# count the number of words
num_words = count_words(sentence)

print('Number of words:', num_words)"
Produce an actionable item for the following task.,Create a web application,"Create a web application using HTML, CSS, and JavaScript. Design the interface and develop the functionality of the application. Implement backend features using a server-side language such as Python or Node.js."
Generate a Python program to read a list of integers and print its elements in reversed order.,"The input should include a sample list of integers for testing the program, for example: [1, 3, 6, 8, 10]","list_of_ints = [1, 3, 6, 8, 10]

list_of_ints.reverse()

print(list_of_ints) # [10, 8, 6, 3, 1]"
Develop a Python script to convert Numbers to binary,Number = 7,"def toBinary(num):
    if num > 1:
        toBinary(num // 2)
    print(num % 2, end = '')

toBinary(7)"
Write a Python program that parses a single URL from a given string.,"""https://www.example.com/index.php?p=1&q=2""","import re

def parse_url(url):
    regex = r""^(https?://[^/]+)(.*)$""
    match = re.search(regex, url)
    return match.group(1), match.group(2)

url, query = parse_url(""https://www.example.com/index.php?p=1&q=2"")
print(""URL:"", url)
print(""Query:"", query)"
Convert the following python code into a Java program (15 lines or less).,"def fact(n):
    if n < 0:
        return 0
    if n == 0:
        return 1
    return n * fact(n - 1)","public class Factorial {
    public static int fact(int n) {
        if (n < 0) {
            return 0;
        }

        if (n == 0) {
            return 1;
        }

        return n * fact(n - 1);
    }
}"
Design a logic in Python to check if two numbers are divisible by each other.,"15, 30","def isDivisible(a, b):
    return a % b == 0"
Create an algorithm in Python to detect duplicate numbers in a given array.,"[3, 7, 4, 3, 6, 7]","def find_duplicates(numbers):
    seen = set()
    duplicates = set()

    for number in numbers:
        if number in seen:
            duplicates.add(number)
        else:
            seen.add(number)
    
    return duplicates"
Develop an algorithm in Python to reverse a given string.,"""Hello World!""","def reverse_string(string):
    reversed_string = """"
    for char in string:
        reversed_string = char + reversed_string
    return reversed_string

result = reverse_string(""Hello World!"")
print(result)"
Write a python program to extract the title of a given website,https://www.wikipedia.org,"import requests
from bs4 import BeautifulSoup

url = 'https://www.wikipedia.org' 
page = requests.get(url)
soup = BeautifulSoup(page.content, 'html.parser')
title = soup.find('title').text
print(title)
# Output: Wikipedia"
Create a Python script to generate 10 random numbers and print their sum.,<noinput>.,"import random

nums = random.sample(range(100), 10)
total = 0

for num in nums:
    total += num

print(total)"
Write a Python script to change all letter cases in a given string.,This Is A Test String,"def change_case(txt):
    result = """"
    for ch in txt:
        if ch.isupper():
            result += ch.lower()
        elif ch.islower():
            result += ch.upper()
    return result

txt = ""This Is A Test String""
result = change_case(txt)
print(result)"
Generate a python program to scramble a sequence of characters.,'Hello World!',"import random 

# Initialize the string  
string = 'Hello World!'

# Convert the string to a list
char_list = list(string) 

# Shuffle the list
random.shuffle(char_list) 

# Convert back the list to a string
random_string = ''.join(char_list)

# Print the scrambled string
print(random_string)"
Write a Python program to generate recurrence equation for a given sequence and initial condition.,"[2, 4, 6, 8], 2","def generate_recurrence(sequence, initial_condition): 
 if len(sequence) <= 1: 
 return initial_condition 
 
 a_i = sequence[-1] 
 a_i_1 = sequence[-2] 
 recurrence = a_i + initial_condition - a_i_1 
 return recurrence

result = generate_recurrence([2, 4, 6, 8], 2)
print(result)"
Rewrite this Python code block to use the reduce function.,"lst = [4, 1, 3, 2, 6, 5]
result = []
for i in range(len(lst)):
    result.append(lst[i] * 2)","from functools import reduce

lst = [4, 1, 3, 2, 6, 5]

result = reduce(lambda a, b: a + [b * 2], lst, [])"
Generate a Python program to visualize multiple dimensions of data with matplotlib.,.,"import matplotlib.pyplot as plt

x = [0, 1, 2, 3, 4, 5, 6, 7]
y = [0, 1, 4, 9, 16, 25, 36, 49]

plt.plot(x, y)
plt.xlabel('X Axis')
plt.ylabel('Y Axis')
plt.title('Plot of X and Y')
plt.show()"
Write a Python function to check if a given string is an anagram or not.,"str1 = ""listen"", str2 = ""silent""","def is_anagram(str1, str2): 
    if len(str1) != len(str2): 
        return False 
    str1 = sorted(str1.lower()) 
    str2 = sorted(str2.lower()) 
    return str1 == str2"
Give an algorithm and implement it in Python to sort the following array,"[9, 8, 2, 4, 5, 7, 0]","def sortArray(arr):
    n = len(arr)
    for i in range(n):
        min_idx = i
        for j in range(i+1, n):
            if arr[min_idx] > arr[j]:
                min_idx = j
        arr[i], arr[min_idx] = arr[min_idx], arr[i]
    return arr 
   
sortArray([9, 8, 2, 4, 5, 7, 0])"
"Write a Python program to replace a particular word in a sentence with ""XXX"".","Sentence: It's a beautiful day
Word to be replaced: beautiful","sentence = ""It's a beautiful day""

word = ""beautiful""

result = sentence.replace (word, ""XXX"")

print(result)"
Write a Python program to merge two given dictionaries.,"dict1 = {'a': 10, 'b': 20, 'c': 30}
dict2 = {'d': 40, 'e': 50, 'f': 60}","def merge_dicts(dict1, dict2):
    new_dict = dict1.copy()
    new_dict.update(dict2)
    return new_dict

dict1 = {'a': 10, 'b': 20, 'c': 30}
dict2 = {'d': 40, 'e': 50, 'f': 60}

print(merge_dicts(dict1, dict2))"
Create a Python function for reversing a string.,"string = ""hello world!""","def reverse_string(string):
    string = string[::-1]
    return string

result = reverse_string(string)
print(result) # output -> ""!dlrow olleh"""
Write a Python program to sort a given array in ascending order.,"array = [3, 1, 5, 4, 2]","def sort_ascending(array):
    n = len(array)
    for i in range(n):
        for j in range(0, n-i-1):
            if array[j] > array[j+1]:
                array[j], array[j+1] = array[j+1], array[j]
    return array

array = [3, 1, 5, 4, 2]
print(sort_ascending(array))"
Write a Python program to find the maximum number in an unsorted array without using linear search.,"arr = [5, 6, 4, 9, 1, 8, 2, 7, 3]","def find_max_unsorted(arr):
    max_value = arr[0]
    for i in range(1, len(arr)):
        if arr[i] > max_value:
            max_value = arr[i]
    return max_value"
Convert this Python code to JavaScript code.,"arr = [3, 4, 5 ,2 ,6, 8, 1]","let arr = [3, 4, 5, 2, 6, 8, 1];

function bubbleSort(arr) {
  let swapped;
  do {
    swapped = false;
    for (let i = 0; i < arr.length; i++) {
      if (arr[i] && arr[i + 1] && arr[i] > arr[i + 1]) {
        let temp = arr[i];
        arr[i] = arr[i + 1];
        arr[i + 1] = temp;
        swapped = true;
      }
    }
  } while (swapped);
  return arr;
}"
Write a python script to generate an array of random numbers between two specified values.,"min = 0
max = 50","import random

# Generate an array of random numbers between two specified values
def generate_array(min, max):
 array = []
 
 for i in range(min, max):
  array.append(random.randint(min, max))
 
 return array
 
min = 0
max = 50
print(generate_array(min, max))"
Create a Python script to generate a given number of random numbers within a particular range,A range of 0 to 100 and 5 numbers,"# Import library
import random

# Generate random numbers
random_nums = []

for i in range(5):
    random_nums.append(random.randint(0,100))

# Print random numbers
print(random_nums)"
Design an algorithm in Python for sorting a given array of numbers in descending order.,"An array of integers [3, 5, 7, 2, 4, 1]","def bubble_sort(arr):
 length = len(arr)
 
 for i in range(length - 1, 0, -1):
 for j in range(0, i):
 if arr[j] < arr[j + 1]:
 arr[j], arr[j + 1] = arr[j + 1], arr[j]
 
 return arr
 
a = [3, 5, 7, 2, 4, 1]
print(bubble_sort(a)) # [7, 5, 4, 3, 2, 1]"
"Write a Python function which, when given a string of text and a n number, returns a list of all n-grams within that string.","string = 'this is a simple string'
n = 3","def n_grams(string, n):
  tokens = string.split()
  n_grams = []
  for i in range(len(tokens)-n+1):
    n_grams.append(tokens[i:i+n])
  return n_grams"
Write a Python program to format a given string with a coefficient of over 66%.,"s = ""Hello World""","def format_string(s):
 return s.upper() if (s.count("" "")+1) / len(s) > 0.66 else s

s = ""Hello World""
print(format_string(s))
# Output: HELLO WORLD"
Write a code in Python to evaluate the expression 3x + 5 for any given x,x = 7,"def expression(x):
    return 3 * x + 5

print(expression(7))"
Generate a program in Python to compute the maximum of two given numbers.,"Number 1: 8
Number 2: 4","num1 = 8
num2 = 4
 
if (num1 > num2):
    print(""The maximum of the given numbers is: ""+str(num1))
else:
    print(""The maximum of the given numbers is: ""+str(num2))"
Create a Python function that takes in a list of numbers and returns the first occurrence of a prime number.,"[2, 4, 6, 8]","def findPrime(nums):
 for num in nums:
 if isPrime(num):
 return num

def isPrime(num):
 if num <= 1:
 return False
 for i in range(2, num):
 if (num % i == 0):
 return False
 return True"
Create a function in python that takes two integers as inputs and outputs the greatest common divisor.,"105, 45","def gcd(x, y): 
  
   while(y): 
       x, y = y, x % y 
  
   return x 
  
 # driver code  
x = 105
y = 45 
print(""The gcd of"", x,  
                        ""and"", y, ""is"", gcd(x, y))"
Create a method in Python to find the sum of all even numbers between two integers including the first and last number.,"Low: 10
High: 20","def even_sum(low, high):
    sum = 0
    for i in range(low, high+1):
        if i % 2 == 0:
            sum += i
    return sum

result = even_sum(10, 20)
print(result)"
Implement a Python function that takes an array of strings as the input and returns a list of distinct strings sorted lexicographically.,"['hello', 'world', 'hello', 'again']","def distinct_strings_sort(arr):
 result = []
 
 for s in arr:
 if s not in result:
 result.append(s)
 
 return sorted(result)

# Example:
arr = ['hello', 'world', 'hello', 'again']
distinct_sorted = distinct_strings_sort(arr)
print(distinct_sorted)  # Prints: ['again', 'hello', 'world']"
Write a Python code to calculate the sum of prime numbers between 1 and n.,n = 20,"n = 20

def calculate_sum_of_primes(n):
    result = 0
    if n >= 2:
        primes = [2]
        for i in range(3, n + 1, 2):
            for j in primes:
                if i % j == 0:
                    break
            else:
                primes.append(i)
        result = sum(primes)
    return result

print(calculate_sum_of_primes(n))"
Generate a python script to convert a string to a list of single-character strings in the same order.,'GPT',"def string_to_list(s):
    l = []
    for c in s:
        l.append(c)
    return l

l = string_to_list('GPT')
print(l)"
Write a function in Python to implement a search algorithm.,"List = [0, 1, 4, 3, 2, 5]","def search(list, query): 
    found_indices = [] 
    for i in range(len(list)): 
        if list[i] == query: 
            found_indices.append(i) 
    return found_indices"
Create a python program that checks if a given array is sorted in ascending order,"array = [1, 5, 3, 9, 4]","def check_sorted(array):
    return all(array[i] <= array[i+1] for i in range(len(array)-1))"
"Write code in Python to create a dictionary with two keys, ""x"" and ""y"", and their values of 7 and 8 respectively.",<no input>,"dictionary = {
    ""x"" : 7,
    ""y"" : 8
}"
Analyze the following data and build a linear regression model in Python.,"x = [1, 2, 3, 4, 5, 6, 7] 
y = [2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5]","import numpy as np

x = np.array([1,2,3,4,5,6,7])
y = np.array([2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5])

m = ((np.mean(x)*np.mean(y)) - np.mean(x*y))/((np.mean(x)**2) - np.mean(x**2))
c = np.mean(y) - (m*np.mean(x))

print(""slope ="", m)
print(""intercept ="", c)"
Write a python program that takes a list of strings and returns a sorted copy of the list.,"l1 = ['cat', 'dog', 'bird', 'elephant'","def sort_list(l):
    l.sort()
    return l

sorted_list = sort_list(['cat', 'dog', 'bird', 'elephant'])

print(sorted_list) # Output: ['bird', 'cat', 'dog', 'elephant']"
Design a function in Python that takes in a number n and prints the first n rows of the Pascal's Triangle.,10,"def print_pascal_triangle(n):
  prev_line = [1]
  print(prev_line)

  for i in range(1, n):
    line = [1]
    for j in range(1, i):
      line.append(prev_line[j-1] + prev_line[j])
    line.append(1)
    prev_line = line
    print(line)

print_pascal_triangle(10)"
Write an algorithm in Python for finding the minimum element in an array.,"[3, 4, 12, 19, 5, 17]","def findMin(arr): 
    min = arr[0] 
    for i in range(1, len(arr)): 
        if arr[i] < min: 
            min = arr[i] 
    return min

arr = [3, 4, 12, 19, 5, 17]
print(findMin(arr))"
Create a function in Python that takes an input string and returns whether it is a palindrome.,"txt = ""madam""","def isPalindrome(txt):
    i = 0
    j = len(txt) - 1
    
    while i < j:
        if txt[i] != txt[j]:
            return False
        i += 1
        j -= 1
    
    return True

print(isPalindrome(txt)) // True"
Create a web scraper using Python that collects the title and content from the homepage of a given website.,https://www.example.com as the target website.,"import requests
import bs4

url = 'https://www.example.com'
r = requests.get(url)
html = bs4.BeautifulSoup(r.text,""html.parser"")

# Find title
title = html.find('title')
print(title.text)

# Find content
content = html.find('div', {'class': 'content'})
print(content.text)"
Create a Python program to compute the frequency of each element in a given array.,"[1, 2, 3, 2, 1, 3]","def compute_frequency(arr):
    frequency_map = {}
    
    for num in arr:
        if num not in frequency_map:
            frequency_map[num] = 1
        else:
            frequency_map[num] += 1
            
    return frequency_map

result = compute_frequency([1, 2, 3, 2, 1, 3])
print(result)"
Write a function in Python to query the database and return the row value.,"Table Name: People
Columns: Name, Age, Gender","def query_database(table_name, columns):
    conn = sqlite3.connect('test.db') 
    cur = conn.cursor() 

    cur.execute(f""SELECT {columns} FROM {table_name}"") 

    rows = cur.fetchall()

    conn.close()
    return rows"
Write a Python program to sort data from the largest to the smallest.,"[44, 23, 11, 33, 5]","unsorted_list = [44, 23, 11, 33, 5]
sorted_list = sorted(unsorted_list, reverse=True)

print(sorted_list)"
Write a Python program to format a specified string to limit the number of characters to 6.,String: Hello World,"def limit_chars(string):
    # Limit the number of character to 6
    limited_string = string[:6]
    return limited_string

string = ""Hello World""
result = limit_chars(string)
print(result)"
Generate an algorithm in Python that finds the smallest positive number not present in an array.,"[1, 10, 5, 3, 8]","def findSmallestMissingPositiveInteger(arr): 
	positiveIntegers = set(i for i in range(1, len(arr) + 2)) 
	arrSet = set(arr) 
	res = positiveIntegers - arrSet 
	return res.pop() 
  
arr = [1, 10, 5, 3, 8] 
print(findSmallestMissingPositiveInteger(arr))"
Create a basic web-scrapper program in Python that downloads the entire HTML of a given website.,https://example.com,"import requests
response = requests.get(""https://example.com"")
html = response.text"
Write a Python program to randomly split a list into two parts.,"[1, 2, 3, 4, 5, 6, 7, 8]","import random

def split_list(input_list):
    index = random.randint(0, len(input_list)-1)
    part1 = input_list[:index]
    part2 = input_list[index:]
    return part1, part2

input_list = [1, 2, 3, 4, 5, 6, 7, 8]
print(""Original list :"", input_list)
result1, result2 = split_list(input_list)
print(""\nPart 1 :"", result1)
print(""Part 2 :"", result2)"
Create a Python script to print out the most common words in the text.,The quick brown fox jumps over the lazy dog.,"from collections import Counter

text = ""The quick brown fox jumps over the lazy dog.""
words = text.split()

word_counts = Counter(words)
most_common_words = word_counts.most_common()

for word, count in most_common_words:
    print(word, count)
# Output:
# the 2
# quick 1
# brown 1
# fox 1
# jumps 1
# over 1
# lazy 1
# dog 1"
Develop a function in python to find the index of an element in a list.,"a = [2, 3, 4, 5, 2]
x = 2","def find_index(a, x):
    indices = []
    if x not in a:
        return -1
    else:
        for i in range(len(a)):
            if a[i] == x:
                indices.append(i)
    return indices

indices = find_index(a, x)
print(""The index of element 2 in the list is"", indices)"
Write a Python program to take a list of numbers and ensure that each element in the list is either the minimum or maximum value in the list.,"[5, 4, 3, 4, 8, 6, 7]","def normalize(nums):
  min_num = min(nums)
  max_num = max(nums)

  for i, n in enumerate(nums):
    if n > min_num and n < max_num:
      if n - min_num > max_num - n:
        nums[i] = max_num
      else:
        nums[i] = min_num

  return nums

print(normalize([5, 4, 3, 4, 8, 6, 7]))
# [5, 4, 3, 5, 8, 6, 7]"
Create a Python program to check if a number is an Armstrong number.,number = 153,"def isArmstrong(number): 
	
	num = number 
	length = len(str(number)) 
	sum_of_the_power_of_digits = 0 

	while num > 0:
		rem = num % 10 
		sum_of_the_power_of_digits = sum_of_the_power_of_digits +  np.power(rem, length)
		num //= 10
		
	if (sum_of_the_power_of_digits == number) : 
		return True 
	else : 
		return False"
Create a Python program to remove all duplicate numbers from a list.,"[1, 2, 3, 2, 4, 3, 5]","def remove_duplicates(nums):
    new_list = []
    for num in nums:
        if num not in new_list:
            new_list.append(num)
    return new_list

if __name__ == '__main__':
	nums = [1,2,3,2,4,3,5]
	new_list = remove_duplicates(nums)
	print(new_list)"
Split the following string into words in Python,string = 'this_is_a_string_in_python',"# Split the string by '_' separator
words = string.split('_')

# Print each word separately
for word in words:
    print(word)"
"Write a Python program to convert a given string to a list, using a specified delimiter.","""red, blue, green"", delimiter = "",""","def string_to_list(string, delimiter):
 list = string.split(delimiter)
 return list

string = ""red, blue, green""
delimiter = "",""
print(string_to_list(string, delimiter))"
Generate a python script to calculate the standard deviation of a given data set.,"data_set = [2,4,4,4,5,5,7,9]","import statistics

data_set = [2,4,4,4,5,5,7,9]
print(round(statistics.stdev(data_set),2))"
Create a program in Python to determine all possible combinations of words from an array.,"words = [""cat"", ""dog"", ""pizza"", ""coffee""]","import itertools

words = [""cat"", ""dog"", ""pizza"", ""coffee""]
combinations = list(itertools.combinations(words, 2))

for i in range(len(combinations)):
    print(combinations[i])"
Reorder the elements of an array in ascending order using Python.,"[5, 3, 6, 1, 7]","def sort_ascending(arr):
    for i in range(len(arr)):
        for j in range(i+1, len(arr)):
            if arr[i] > arr[j]:
                arr[i], arr[j] = arr[j], arr[i]
    return arr

arr = [5, 3, 6, 1, 7]
arr = sort_ascending(arr)
print(arr)"
Create a python script to reverse a given InputString.,"InputString = ""My string""","def reverseString(InputString):
    return InputString[::-1]"
Implement a function to merge and sort two given sorted lists in Python.,"list_1 = [1, 3, 5, 6, 7]
list_2 = [4, 8, 9, 10]","def merge_sort(list_1, list_2):
    merged_list = list_1 + list_2
    merged_list.sort()
    return merged_list

if __name__ == '__main__':
    list_1 = [1, 3, 5, 6, 7]
    list_2 = [4, 8, 9, 10]
    print(merge_sort(list_1, list_2))"
Write a Python function to randomize a given list of integers.,"[1, 2, 3, 4, 5]","import random

def randomize(arr):
  random.shuffle(arr)
  return arr"
Transform the following data frame in Python.,"df = [
    {'name': 'Bob', 'age': 25},
    {'name': 'Mary', 'age': 18},
    {'name': 'John', 'age': 32},
]","import pandas as pd

df = pd.DataFrame(df)

#Transform the dataframe
df['age_group'] = [ ""under 20"" if a < 20
   else ""20-35"" if a < 35
   else ""over 35""
   for a in df['age']]"
"Given an input string, write a Python program to count the occurrence of each character in the string.","""Hello, World!""","def char_occurrences(a_string):
 char_count = {}
 for char in a_string:
 if char in char_count:
 char_count[char] += 1
 else:
 char_count[char] = 1
 return char_count

string = ""Hello, World!""
print(char_occurrences(string))

# Output
# {'H': 1, 'e': 1, 'l': 3, 'o': 2, ', ': 1, 'W': 1, 'r': 1, 'd': 1, '!': 1}"
Design a Python script that converts Miles/hour to Kilometers/hour.,Speed in Miles/hour: 60,"def mph_to_kph(speed):
 kph = speed * 1.609
 return kph"
Create a Python program to sort a list of strings according to the length of the strings in ascending order.,"['Python', 'JS', 'C++', 'Java', 'PHP']","# Function to sort the list according to string length
def sort_string_list(string_list):
    return sorted(string_list, key=len)

if __name__ == '__main__':
    string_list = ['Python', 'JS', 'C++', 'Java', 'PHP']
    sorted_string_list = sort_string_list(string_list)
    print(sorted_string_list)"
Edit the following python code to run in Python 3,"print ""Hello World!""","print(""Hello World!"")"
Construct a Python program to perform sentiment analysis on an input string and output the sentiment score.,Example sentence: I had a great day yesterday,"import nltk

sentence = ""I had a great day yesterday""

words = nltk.word_tokenize(sentence)

text = nltk.Text(words)

polarity_score = text.polarity_scores()

print(polarity_score)"
Update the given Python program to print the result in reverse order.,"numbers = [1, 2, 3, 4, 5, 6]","numbers = [1, 2, 3, 4, 5, 6]

for x in reversed(numbers):
    print(x)"
Build a REST API endpoint in Python that takes a user's name and returns a personalized greeting message.,"name = ""John""","from flask import Flask

app = Flask(__name__)

@app.route('/greeting', methods=['GET'])
def get_greeting(name):
 return 'Hello, ' + name + '!'

if __name__ == '__main__':
 app.run()"
Modify the Python code below to create a function for finding the sum of a list of numbers.,"list=[1,2,3,4,5]","def sum_list(nums):
    total = 0
    for num in nums:
        total += num
    return total
    
my_list = [1,2,3,4,5]

print(sum_list(my_list))"
Write a python program to get all possible subset combinations of a given set.,"[1,2,3]","def subset_combinations(arr):
    result = [[]]
    for ele in arr:
        for i in range(len(result)):
            tmp = list(result[i])
            tmp.append(ele)
            result.append(tmp)

    return result

if __name__ == '__main__':
    arr = [1,2,3]
    print(""All possible combinations:"", subset_combinations(arr))"
Design a Python program that prints a sentence every 10 seconds.,"""Hello World""","import time

sentence = ""Hello World""

while True:
    print(sentence)
    time.sleep(10)"
Generate a Python program to merge two dictionaries.,"dict1 = {'a':1, 'b':2, 'c':3}
dict2 = {'d':4, 'e':5, 'f':6}","dict1 = {'a':1, 'b':2, 'c':3}
dict2 = {'d':4, 'e':5, 'f':6}

dict3 = {**dict1, **dict2}
print(dict3)

# Output: {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6}"
Create a Python program to find the most frequent item in a list.,"[1, 3, 1, 3, 2, 1]","def most_frequent(list): 
    counter = 0
    num = list[0] 
    
    for i in list: 
        curr_frequency = list.count(i) 
        if(curr_frequency> counter): 
            counter = curr_frequency 
            num = i 
  
    return num 
  
list = [1, 3, 1, 3, 2, 1]
print(most_frequent(list))"
Generate a Python program to initialize a third matrix given two existing matrices c and d.,"c = [[7, 8], [6, 3]]
d = [[6, 7], [1, 5]]","def initialize_matrix(c, d):
    rows = len(c)
    cols = len(c[0])
    matrix = []
    for i in range(rows):
        row = []
        for j in range(cols):
            row.append(c[i][j] + d[i][j])
        matrix.append(row)
    return matrix"
Optimize the given Python code to reduce execution time,"def calculate_sum(numbers):
    result = 0
    for number in numbers:
        result += number
    return result

numbers = [1, 2, 3, 4, 5]
calculate_sum(numbers)","def calculate_sum(numbers):
    return sum(numbers)

numbers = [1, 2, 3, 4, 5]
calculate_sum(numbers)"
Create a Python program to capture the data from a web page.,https://www.example.com/,"import requests
import lxml.html as lh

url = 'https://www.example.com/'
page = requests.get(url)
doc = lh.fromstring(page.content)

# parse and extract data from webpage
data = doc.xpath('//p/text()')"
Create a Python program to sort a list of tuples in ascending order by their second element.,"[(4, 2), (3, 7), (2, 3)]","def sort_tuples(tup): 
  
    # reverse = None (Sorts in Ascending order) 
    # key is set to sort using second element of  
    # sublist lambda has been used 
    tup.sort(key = lambda x: x[1])  
    return tup  
  
# Driver Code 
tuple1 = [(4, 2), (3, 7), (2, 3)]  
print(sort_tuples(tuple1))"
Create a Python program that extracts the minimum value from a dictionary.,"{""key1"": 3, ""key2"": 5, ""key3"": 1}","def get_min_value(dct):
    min_value = float('inf')
    for key, val in dct.items():
        if val < min_value:
            min_value = val
    return min_value

dct = {""key1"": 3, ""key2"": 5, ""key3"": 1}
print(get_min_value(dct))"
"Given an array of strings, write a Python function to remove all duplicates and return the resulting array.","Example array: ['a', 'b', 'a', 'c', 'c', 'd']","def removeDuplicates(arr):
 result = [] 
  
 # traverse for all elements 
 for i in arr: 
  
  # check if exists in result 
  if i not in result: 
   result.append(i) 
  
 # return result 
 return result"
Create a Python program that takes in a 2D array and returns the sum of all the elements.,"[[1, 2, 3],
 [4, 5, 6],
 [7, 8, 9]]","def sum_2D_array(arr):
    """"""Return the sum of all the elements in a 2D array.""""""
    sum_arr = 0
    for row in arr:
        for elem in row:
            sum_arr += elem
    return sum_arr"
Write Python code to get the difference between two lists.,"[1, 2, 3, 4]
[1, 2, 5, 6]","def difference(list1, list2):
    difference_list = []
    for num1 in list1:
        if num1 not in list2:
            difference_list.append(num1)
    for num2 in list2:
        if num2 not in list1:
            difference_list.append(num2)
    return difference_list"
Write a Python program that takes a list of strings as an input and returns a dictionary containing the count of each string in the list.,"['a', 'b', 'c', 'a', 'b']","def count_strings(lst):
    result = {}
    for item in lst:
        if item in result:
            result[item] += 1
        else:
            result[item] = 1
    return result

list_of_strings = ['a', 'b', 'c', 'a', 'b']
result = count_strings(list_of_strings)
print(result)"
Write a Python script that takes two numbers as input and raises the first number to the power of the second number.,"2, 5","def power_function(a, b):
    return a**b

a = int(input(""Enter the first number: ""))
b = int(input(""Enter the second number: ""))

result = power_function(a, b)
print(""The result is:"", result)"
Write a Python script to calculate the factorial of an integer.,6,"def factorial(n):
 if n == 0:
  return 1
 return n * factorial(n-1)

num = 6
print(""Factorial of"", num, ""is"", factorial(num))"
Generate a Python program which takes two lists and returns a list which contain only the items which are shared between the two lists,"[1, 2, 3], [3, 4, 5]","def find_intersection(list1, list2):
    intersection = []
    for item1 in list1:
        for item2 in list2:
            if item1 == item2:
                intersection.append(item1)
    return intersection

list1 = [1, 2, 3]
list2 = [3, 4, 5]
result = find_intersection(list1, list2)
print(result)"
Rewrite the following Python code using for loop instead of list comprehensions.,"list_of_nums = [1, 2, 3, 4, 5] 
list_of_squares = [num**2 for num in list_of_nums]","list_of_nums = [1, 2, 3, 4, 5] 
list_of_squares = []

for num in list_of_nums: 
 list_of_squares.append(num**2)"
Simplify a fraction using a provided Python code.,"def gcd(a, b):
    if b == 0:
        return a
    return gcd(b, a % b)","def simplify(numerator, denominator):
    
    # find the gcd (greatest common divisor)
    gcd = gcd(numerator, denominator)

    # divide both numerator and denominator by the gcd
    simplified_numerator = int(numerator/gcd)
    simplified_denominator = int(denominator/gcd)

    return simplified_numerator, simplified_denominator"
Generate a Python algorithm to multiply two number.,"x = 8
y = 3","def mul_numbers(x, y):
    return x*y"
Write a function in Python to convert a Celsius temperature to Fahrenheit degree.,Temperature in Celsius: 20,"def celsius_to_fahrenheit(cel):
  return cel * 1.8 + 32

temp_in_fahrenheit = celsius_to_fahrenheit(20)
print(""Temperature in Fahrenheit:"", temp_in_fahrenheit)"
Write a python script,to generate a square matrix 4x4 filled with values from 1 to 4.,"matrix = [[1,2,3,4],
          [1,2,3,4],
          [1,2,3,4],
          [1,2,3,4]]"
Write a Python script to write another program that performs the given task.,Write a program that calculates the factorial of a number.,"def create_factorial_program():
    program = 'def factorial(n):\n'
    program += '    if n < 0:\n'
    program += '        return None\n'
    program += '    elif n == 0:\n'
    program += '        return 1\n'
    program += '    else:\n'
    program += '        return n * factorial(n - 1)'
    return program"
Can you provide a Python program that prints the largest element in the given list?,"[1, 3, 4, 5, 19, 13, 7]","def get_largest(nums):
    max_num = nums[0]
    for num in nums:
        if num > max_num:
            max_num = num
    return max_num

print(get_largest([1, 3, 4, 5, 19, 13, 7]))"
Develop a Python generator to yield a Fibonacci sequence,No input,"def fibonacci(n):
    a, b = 0, 1
    for _ in range(n):
        yield a
        a, b = b, a + b

for x in fibonacci(20):
    print(x)"
Generate an algorithm in Python which takes a matrix of integers as input and returns the position of the largest element in the matrix.,"matrix = [[2, 8, 7], [3, 11, 5], [1, 9, 4]]","def max_pos(mat):
 max_v = -float('inf')
 max_i = -1
 max_j = -1
 
 for i in range(len(mat)):
  for j in range(len(mat[i])):
   if mat[i][j] > max_v:
    max_i = i
    max_j = j
 
 return (max_i, max_j)
 
matrix = [[2, 8, 7], [3, 11, 5], [1, 9, 4]]
pos = max_pos(matrix)
print(pos) # (1, 1)"
Design a python class to store fruit and its quantity in a grocery store.,"Banana - 200
Orange - 300
Grapes - 500","class FruitGrocery:
    def __init__(self):
        self.items = {
            'Banana': 200,
            'Orange': 300,
            'Grapes': 500
        }

    def get_item_quantity(self, item):
        return self.items.get(item)"
Let's write a loop in Python to take the average of two numbers,"Numbers: [45, 65]","x = [45, 65]
total = 0
for i in range(len(x)):
  total += x[i]
  average = total / len(x)

print(""Average of the numbers is:"", average)"
Create a Python script that detects a cycle in a linked list.,head -> 1 -> 2 -> 3 -> 4 -> 5 -> 6 -> 3,"def detect_cycle(head):
 # Use two pointers, one slow and one fast, to detect a cycle
 slow = fast = head # Init with head
 while slow and fast and fast.next:
 slow = slow.next  # Move slow one node ahead
 fast = fast.next.next  # Move fast two node ahead
 if slow == fast:  # Detect cycle
 return True
 return False"
Edit a given Python program to make it bug-free.,"def foo():
   i = 0
   for x in range(10):
      i = i + x
      
   print(i)

foo()","def foo():
   i = 0
   for x in range(10):
      i = i + x
   return i

print(foo())"
Generate Python code to print the sum of two user-defined variables.,"var1 = 3 
var2 = 7","var1 = 3
var2 = 7

sum = var1 + var2
print('The sum of var1 and var2 is ' + str(sum)) # prints 'The sum of var1 and var2 is 10'"
Optimize the following Python program to increase its performance by three times.,"def slow_operation(n):
    result = 0
    for i in range(n):
        result += i
    return result","def fast_operation(n):
    result = (n * (n + 1)) // 2
    return result"
Write a Python program that counts the occurrence of each string in a dictionary.,"data = {""foo"": 1, ""bar"": 2, ""baz"": 3, ""foo"": 4, ""bar"": 5}","data = {""foo"": 1, ""bar"": 2, ""baz"": 3, ""foo"": 4, ""bar"": 5}

counts = {}
for key, value in data.items():
    if key in counts:
        counts[key] += 1
    else:
        counts[key] = 1

print(counts)"
Edit the given Python program to return the absolute value of a given number,"def absolute_value(x):
    if x < 0:
        return -x","def absolute_value(x):
    if x < 0:
        return -x
    else:
        return x"
Develop a Python script to print all possible words with a given set of letters.,"letters = ('a', 'c', 'd', 'e', 'm')","import itertools 

letters = ('a', 'c', 'd', 'e', 'm') 

for words in itertools.permutations(letters): 
    print(''.join(words))"
Write a Python program to filter out all the even numbers from a list.,"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","def filter_even(numbers):
    return [n for n in numbers if n %2 == 0]"
Design an algorithm in Python to check if an integer is even or odd.,n = 5,"def check_number(n):
    if n%2==0:
        return ""Even""
    else:
        return ""Odd""

check_number(5) 
# Output: Odd"
Design an algorithm using Python to select the kth largest element from a list.,"[5, 10, 15, 20, 25]","def getKthLargest(arr, k): 
    arr.sort() 
  
    # Return the k'th largest element
    return arr[len(arr)-k]"
Write a function in Python that takes a string as input and converts it to title case.,"s = ""this is a test string""","def convertToTitleCase(s):
    return ' '.join(word[0].upper() + word[1:] for word in s.split())
 
print(convertToTitleCase(""this is a test string""))  # Output: This Is A Test String"
Write a Python program to convert a given list of numbers into their corresponding binary representation.,"[3,8,6]","def list_to_binary(nums):
    binary = []
    for num in nums:
        binary.append(bin(num))
    return binary

result = list_to_binary([3, 8, 6])
print(result)"
Create an application in Python that takes user input for an year and prints the day of the week for January 1st of that year.,Year: 2018,"import datetime

def day_of_week(year): 
 date = datetime.datetime(year, 1, 1)
 return date.strftime(""%A"")

print(day_of_week(2018)) # Output: Monday"
Create a Python program that generates an HTML page that shows a bar chart for the given data.,"data = {'red': 10, 'orange': 12, 'yellow': 8}","import matplotlib.pyplot as plt

data = {'red': 10, 'orange': 12, 'yellow': 8}

fig, ax = plt.subplots()
ax.bar(list(data.keys()), list(data.values()))

plt.savefig('bar_chart.png')

print(f""""""
<!DOCTYPE html>
<html>
<head>
 <title>Bar Chart</title>
</head>
<body>
 <h1>Bar Chart</h1>
 <img src='bar_chart.png' />
</body>
</html>
"""""")"
Convert the following C code that takes a list and adds each number to the list to Python.,"int arr[] = {1, 2, 3, 4};
int result = 0;

for (int i = 0; i < sizeof(arr) / sizeof(arr[0]); i++){
  result += arr[i];
}","arr = [1, 2, 3, 4]
result = 0

for i in range(len(arr)):
  result += arr[i]"
Write a python code to extract the phone number and email address from a provided string,"txt =""John Smith-555-1234, john.s@example.com""","import re

txt =""John Smith-555-1234, john.s@example.com""

# Phone Number
phone = re.findall(r'\d{3}-\d{4}', txt)[0]
print(""Phone Number ="", phone) 

# Email Address
email = re.findall(r'\S+@\S+', txt)[0]
print(""Email Address ="", email)"
Write a Python program to parse the following JSON and print out the values of the type and message keys.,"{
  ""type"": ""error"",
  ""message"": ""An error occurred""
}","import json

data = '{""type"": ""error"", ""message"": ""An error occurred""}'

json_data = json.loads(data)
print(json_data[""type""]) # prints ""error""
print(json_data[""message""]) # prints ""An error occurred"""
Write a Python program to find the most frequent item in a given list of data.,"data = [0,0,1,1,2,3,3,3,3,3,0,0]","max_count = 0
max_element = None
for element in data:
  count = data.count(element)
  if count > max_count:
    max_element = element
    max_count = count
print(max_element)"
"Generate a function in Python using the input argument that takes in a string, removes all the vowels from it, and returns a new string without any vowels.",the quick brown fox jumps over the lazy dog,"def remove_vowels(text):
    no_vowels = """"
    for character in text:
        if character not in ""aeiouAEIOU"":
            no_vowels += character
    return no_vowels"
Optimize the python code that finds the sum of the elements in a given array.,"def sum(arr): 
    s = 0
    for i in range(len(arr)): 
        s += arr[i] 
    return s","def sum(arr): 
    s = 0
    for number in arr: 
        s += number 
    return s"
Develop an algorithm in Python for deletion of an element from an array.,"[1, 2, 3, 4], 3","def deleteElement(arr, element):
    index = -1
    for i in range(len(arr)):
        if arr[i] == element:
            index = i
            break
    if index != -1:
        arr.pop(index)
        return arr
    else:
        return -1

arr = [1, 2, 3, 4]
element = 3
new_arr = deleteElement(arr, element)
print(new_arr)"
Write a Python function to extract the last digits of a given integer.,n = 12345,"def extract_last_digits(n):
  return int(str(n)[-2:])

result = extract_last_digits(12345)
print(result)"
Design a Python algorithm that takes a list of numbers and returns a list of all the pairs of numbers whose sum is equal to a specified number.,"[1, 2, 3, 4, 5], 4","def find_pairs_with_sum(nums, target):
    result = []
    seen = set()
    
    for num in nums:
        if (target - num) in seen:
            result.append([num, target-num])
        seen.add(num)

    return result

nums = [1,2,3,4,5]
target = 4

result = find_pairs_with_sum(nums, target)
print(result)"
Examine a given Python program and modify it to only print out characters which are palindromes.,"my_string = ""I like mangoes""","my_string = ""I like mangoes""

for char in my_string:
	if char == char[::-1]:
		print(char)"
Write a Python program to filter a list of strings and only return the strings which follow a certain pattern.,"strings = [""hello"", ""hell"", ""world"", ""word"", ""hello_world""]","filtered_strings = [string for string in strings if re.match(r""^hello.*world$"", string)] 
# filtered_strings = [""hello_world""]"
Write a Python script to reduce an array of integers by their GCD.,"[30, 20, 45]","def gcd(a, b):
   while a != 0:
       a, b = b % a, a
   return b

def reduce_by_gcd(arr):
    gcd_val = arr[0]
    for i in range(len(arr)):
        gcd_val = gcd(gcd_val, arr[i])
    return [a // gcd_val for a in arr]

reduced_arr = reduce_by_gcd([30, 20, 45])
print(reduced_arr) # [2, 3, 5]"
Implement a Python function that will take two strings and return true if the first string contains the second.,"query = ""catering""
word = ""cat""","def check_contains(query, word): 
    if query.find(word) != -1:
        return True
    return False

result = check_contains(query, word)"
Create a function in Python that will sort a list of tuples based on the second elements in the tuples.,"[(2, 1), (3, 7), (6, 5)]","def sort_by_second_element(tuples):
    return sorted(tuples, key=lambda element: element[1])

// testing
tuples_list = [(2, 1), (3, 7), (6, 5)]
print(""Original list of tuples:"")
print(tuples_list)
print(""Sorted list of tuples based on the second element of tuples:"")
print(sort_by_second_element(tuples_list))"
Create a function in Python that takes an integer route x as input and returns all possible subsequences of length x.,x = 2,"def subsequences(x):
 subs = []
 for i in range(1<<x):
 sub = []
 for j in range(x):
 if (i & (1 << j)) > 0:
 sub.append(j)
 subs.append(sub)
 return subs"
Develop a python program to remove punctuations from an input text,This is a great world - let's start coding!,"import string 
  
# Remove punctuations from string 
def remove_punctuations(s): 
    s = ''.join([i for i in s if i not in frozenset(string.punctuation)]) 
    return s 
  
# Driver Code 
if __name__ == ""__main__"" : 
  
    text = ""This is a great world - let's start coding!""
    print(remove_punctuations(text))"
Write a python code to detect the palindrome words in a  given sentence.,"Sentence: ""Was it a car or a cat I saw?""","def detect_palindrome(sentence):
 words = sentence.split()
 palindromes = []
 for word in words:
  if word == word[::-1]:
   palindromes.append(word)
 return palindromes

print(detect_palindrome(""Was it a car or a cat I saw?""))
# Output: ['Was', 'a', 'or', 'a', 'I']"
Create a loop in Python to print every permutation of a list of strings.,"[""Hello"", ""World"", ""Foo"", ""Bar""]","import itertools 
  
# list of strings 
list_of_strings = [""Hello"", ""World"", ""Foo"", ""Bar""] 
  
# using itertools 
# to get the permutations 
permutations = itertools.permutations(list_of_strings) 
  
# printing permutations 
for i in list(permutations): 
    print(i)"
Make a Python program to create a rolling average over a list. Rolling average means return the average of the last 3 items of the list.,"mylist = [10, 20, 30, 40, 50]","def rolling_average(arr):
    last_three = arr[-3:]
    return sum(last_three) / len(last_three)

mylist = [10, 20, 30, 40, 50]
rolling_avg = rolling_average(mylist)
print(""Rolling average:"", rolling_avg)

# Output:
# Rolling average: 33.333333333333336"
Produce a Python program which parses a given html string and extracts all text from it.,"HTML String: ""<p>This is a <strong>html</strong> string.</p>""","def get_text_from_html(html_str):
    soup = BeautifulSoup(html_str, 'html.parser')
    all_text = soup.find_all(text=True)
    return ' '.join(all_text)"
Create a web scraper in Python to extract all data from a page with the URL: http://example.com,http://example.com,"import requests 
from bs4 import BeautifulSoup

r = requests.get(""http://example.com"") 
data = r.text 
soup = BeautifulSoup(data, 'html.parser') 

for item in soup.find_all(""div""): 
 print(item.text)"
Create a Python program for simulating a bouncing ball with a bouncing height of 10 meters. The program should print out the time at which the ball reaches the ground.,The initial velocity of the ball is 20 m/s.,"import math

# initial velocity
v0 = 20
# height
h = 10
# time to reach ground
t = (v0 * 2) / 9.81

print(""The ball will reach the ground in {:.2f} seconds"".format(t))"
Write a function to find all the possible subset sums of a given array.,"arr = [1,2,3]","# Python program to find all possible subset sums

def find_subset_sums(arr):
    sums = set()
    for i in range(2**len(arr)):
        csum = 0
        for j in range(len(arr)):
            if i & (1<<j):
                csum += arr[j]
        sums.add(csum)
    return sums"
Edit the following code snippet in Python to remove the duplicates from a list.,"my_list = [1,2,2,3,4,5,5,5]",my_list = list(dict.fromkeys(my_list))
Create a python function that randomly selects three numbers from a given list and sort them in descending order.,"[4, 7, 9, 11, 33, 2]","import random

def sort_numbers(lst):
    nums = random.sample(lst, 3)
    nums.sort(reverse=True)

    return nums

nums = [4, 7, 9, 11, 33, 2]
sorted_nums = sort_numbers(nums)

print(sorted_nums) # [33, 11, 9]"
Write an algorithm in Python that can detect the number of times a given keyword appears in a given text.,"Text: Every morning I start my day with a cup of coffee.
Keyword: cup","def count_keyword(text, keyword):
 count = 0
 words = text.lower().split()

 for word in words:
 if word == keyword.lower():
 count += 1

 return count

text = 'Every morning I start my day with a cup of coffee.'
print(count_keyword(text, 'cup'))
# Output: 1"
Create an object from a class in Python.,"class Employee: def __init__ (self, name, age): self.name = name self.age = age","john = Employee(""John"", 25)"
Develop a Python program to determine the average length of words in a sentence.,"""This is a sample sentence with 8 words.""","def average_length(sentence):
    words = sentence.split()
    char_count = 0
    
    for word in words:
        char_count += len(word)
    
    average_length = char_count / len(words)
    return average_length

average_length(""This is a sample sentence with 8 words."") # output: 3.5"
Create a Python program to extract the domain name from a given url.,"url = ""https://www.google.com""","def extract_domain_name(url):
  split_url = url.split('//')
  if len(split_url) == 2:
      domain_name = split_url[1]
  else: 
      domain_name = split_url[0]
  
  split_domain_name = domain_name.split('/')
  return split_domain_name[0]

domain_name = extract_domain_name(url)
print(domain_name)"
Create a python program to display a histogram of the list items.,"[1, 2, 3, 3, 3, 4, 4, 4, 4, 5, 6, 7, 8, 9]","import matplotlib.pyplot as plt

list_data = [1, 2, 3, 3, 3, 4, 4, 4, 4, 5, 6, 7, 8, 9] 
plt.hist(list_data, bins=6) 
plt.title(""Histogram"") 
plt.show()"
Create a function in Python to return the maximum value in a given array.,"The given array is [4, 5, 9, 1, 0, 5, 7]","def findMaxValue(arr):
    max_value = None
    for element in arr:
        if max_value == None or element > max_value:
            max_value = element
    return max_value"
"Write a Python program to get a single string from two given strings, separated by a space and swap the first two characters of each string.","String1: 'abc'
String2: 'xyz'","def strings_swap(s1, s2): 
	new_s1 = s2[:2] + s1[2:] 
	new_s2 = s1[:2] + s2[2:] 
	return new_s1 + ' ' + new_s2 
	
strings_swap('abc', 'xyz') # 'xyc abz'"
Write a Python code to find the smallest prime number greater than a given number.,10,"def smallest_prime_number_greater_than(n):
    for i in range(n+1, n+100):
        if is_prime(i):
            return i

def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            return False
    return True

print(smallest_prime_number_greater_than(10))"
Write a Python program to create a list containing all the possible combinations of two or more lists.,"list1 = [1, 2, 3]
list2 = ['a', 'b', 'c']
list3 = [7, 8]","combined_list = [[1, 'a', 7], [1, 'a', 8], [1, 'b', 7], [1, 'b', 8], [1, 'c', 7], [1, 'c', 8], [2, 'a', 7], [2, 'a', 8], [2, 'b', 7], [2, 'b', 8], [2, 'c', 7], [2, 'c', 8], [3, 'a', 7], [3, 'a', 8], [3, 'b', 7], [3, 'b', 8], [3, 'c', 7], [3, 'c', 8]]

combined_list = list(itertools.product(list1, list2, list3))"
Generate a Python object initialization routine for the following object.,"Object: InventoryItem
Attributes: name, cost, quantity","class InventoryItem:
  def __init__(self, name, cost, quantity):
    self.name = name
    self.cost = cost
    self.quantity = quantity"
Create a Python program to take a list of numbers and set any negative numbers to 0.,"[2, 5, -8, 0, 1, -6]","def set_negative_to_zero(arr):
    new_arr = []
    for num in arr:
        if num < 0:
            new_arr.append(0)
        else:
            new_arr.append(num)
    return new_arr

result = set_negative_to_zero([2, 5, -8, 0, 1, -6])
print(result)"
Evaluate the following Python program and determine its output.,"arr = [20, 35, 10, 47]","[20, 35, 10, 47]"
Generate a program in Python to classify a series of numbers into even or odd.,"[4, 7, 9, 11, 12]","def classify_numbers(nums):
    for num in nums:
        if (num % 2) == 0:
            print(str(num) + "" is even"")
        else:
            print(str(num) + "" is odd"")

nums = [4, 7, 9, 11, 12]
classify_numbers(nums)

# Output:
# 4 is even
# 7 is odd
# 9 is odd
# 11 is odd
# 12 is even"
Optimize the Python code below so that it takes less resources and runs faster.,"n = 50000
obj = []
  for i in range(n):
    obj.append(i)","n = 50000
obj = list(range(n))"
Formulate a python expression to determine the average of a given list of numbers.,"[1,2,3,4]",sum(lst)/len(lst) # This is equivalent to (1+2+3+4)/4 = 2.5
"Write a Python script to generate a basic HTML page with a title, header, body, and footer sections.",The page title: Sample Page,"<html>
 <head>
 <title>Sample Page</title>
 </head>
 <body>
 <h1>Sample Page</h1>

 <p>This page has a header, a body, and a footer.</p>

 <footer>
 <p>This is the footer.</p>
 </footer>
 </body>
</html>"
Create a Python data structure to store customer details in a dictionary,"{
  ""id"": 1,
  ""name"": ""John"",
  ""email"": ""john@example.com""
}","customers = { 
  1: {
    ""name"": ""John"",
    ""email"": ""john@example.com""
  }
}"
Create a python for loop to print the elements of a given list l.,"l = [1, 2, 3, 4, 5, 6]","for element in l:
    print(element)"
Compose an algorithm in Python that accepts a phone number and formats it in the (xxx) xxx-xxxx format.,1234567890,"def format_phone_number(phone_num):
    return f""({phone_num[:3]}) {phone_num[3:6]}-{phone_num[6:]}""

number = ""1234567890""
formatted_number = format_phone_number(number)
print(formatted_number)"
Create a python program to compute the volume of a cube given its edge length as an input.,3,"length = int(input(""Enter the edge length of the cube: ""))

volume = length * length * length

print(""The volume of the cube is"", volume)"
Create a function in Python to group data by a column and apply aggregate functions on each group.,"df = pd.DataFrame({""A"": [""foo"", ""foo"", ""foo"", ""foo"", ""foo"",""bar"", ""bar"", ""bar"", ""bar""],
                   ""B"": [""one"", ""one"", ""one"", ""two"", ""two"",""one"", ""one"", ""two"", ""two""],
                   ""C"": [1, 2, 3, 4, 5, 6, 7, 8, 9],
                   ""D"": [2, 3, 4, 5, 6, 7, 6, 8, 9]})","group_by_column = df.groupby(""B"").agg({'C': 'sum', 'D': 'mean'})"
Create a python program to convert a given number into its binary form.,Number: 7,"def convert_num_to_bin(num):
    '''This function will convert a given number into its binary form.'''
    bin_arr = []
    while num > 0:
        bin_arr.append(num%2)
        num //= 2
    bin_arr.reverse()
    return bin_arr"
Create a Python function to return the maximum number of valid parentheses in a given expression.,"expression = ""((()))()""","def max_valid_parenthesis(expression):
    max_value = 0
    # Keep a count of left parentheses
    count = 0
    for char in expression:
        if char == '(':
            count += 1
            max_value = max(max_value, count)
        else:
            count -= 1

    return max_value"
Write a Python script that takes a list of words as input and calculates the average length of the words.,"[""Hello"",""World"",""Beautiful"",""Day""]","words = [""Hello"",""World"",""Beautiful"",""Day""]

lengths = [len(word) for word in words]
avg_length = sum(lengths) / len(lengths)

print(""Average word length is {:.2f}"".format(avg_length))"
What is the best way to sort an array of integers in descending order using Python?,"[99, 65, 43, 87, 21]","def sortDesc(arr):
    arr.sort(reverse=True)
    return arr

arr = [99, 65, 43, 87, 21]
print(sortDesc(arr)) // Output: [99, 87, 65, 43, 21]"
Compose a Python script to find the longest word in a given string.,"Str = ""Hello World!""","def longest_word(str):
    words = str.split() 
    longest_word = """"
    max_length = 0
  
    for word in words: 
        if len(word) > max_length: 
            max_length = len(word) 
            longest_word = word 
  
    return longest_word
  
str = ""Hello World!""
print(longest_word(str))"
Convert the following statement into a function in Python.,"If a given number is divisible by 4 and greater than 1000, print ""TRUE""","def count_divisible_by_four(num):
    """"""Prints ""True"" if the given number is divisible by 4 and greater than 1000""""""
    if num >= 1000 and num % 4 == 0:
        print(""TRUE"")"
Optimize the following function in Python to make it run faster,"def gcd(x, y): 
    while(y): 
        x, y = y, x % y 
    return x","def gcd(x, y): 
    if x == 0: 
        return y 
    if y == 0: 
        return x 
    if x == y: 
        return x 
    if x > y: 
        small = y 
    else: 
        small = x 
    for i in range(1, small+1): 
        if((x % i == 0) and (y % i == 0)): 
            gcd = i 
    return gcd"
Create a function in Python that takes two arrays as arguments and returns a new array that contains the elements of both arguments.,"arr_1 = [1, 2, 3];
arr_2 = [4, 5, 6];","def merge_arrays(arr_1, arr_2):
  return arr_1 + arr_2
  
result = merge_arrays(arr_1, arr_2)
print(result) #[1, 2, 3, 4, 5, 6]"
Write a Python script to implement a linear search algorithm.,"lst = [1, 2, 3, 4, 5, 6]
target = 4","def linearSearch(lst, target):
 for i in range(len(lst)):
 if lst[i] == target:
 return i
 return -1

lst = [1, 2, 3, 4, 5, 6]
target = 4
result = linearSearch(lst, target)

if result == -1:
 print(""Element is not present in the list"")
else:
 print(""Element is present at index"", result)"
Create a Python program which takes two parameters and outputs the difference between them.,"21, 49","def diff(a, b): 
   return abs(a - b) 
  
a = 21
b = 49
  
print(diff(a, b)) # Output 28"
Rewrite this C++ program into a Python program,"#include<iostream>
using namespace std;
int main(){
   int a = 10;
   int b = 20;
   cout<<""sum is ""<< a+b;
   return 0;
}","a = 10
b = 20

print(""sum is"", a+b)"
Write a Python program to print all unique values in a dictionary.,"sample_dict = {'key1': 1, 'key2': 2, 'key3': 3, 'key4': 1}","def printUniqueValues(dictionary):
    unique_values = set()

    for key in dictionary:
        if dictionary[key] not in unique_values:
            unique_values.add(dictionary[key])

    print(unique_values)

printUniqueValues(sample_dict)"
Write a Python program to generate the Fibonacci sequence up to a given number and store it in a list.,int num = 10,"def generateFibonacciSequence(num):
    a = 0
    b = 1
    fib = []
    for i in range(num):
        fib.append(a)
        c = a + b
        a = b
        b = c
    return fib

num = 10
print(generateFibonacciSequence(num))"
Calculate the number of days between two dates in Python.,"date1 = '2020-08-18'
date2 = '2020-09-01'","from datetime import date 
  
# Function to calculate number of days between two dates 
def getNumberOfDays(date1, date2): 
    return (date2 - date1).days 
  
# Driver program 
date1 = date(2020, 8, 18) 
date2 = date(2020, 9, 1) 
print(getNumberOfDays(date1, date2))"
Generate a Python program to print all odd numbers from an array of integers.,"[3, 5, 7, 10, 15]","def printOddNumbers(array):
  for number in array:
    if number % 2 != 0:
      print(number)

array = [3, 5, 7, 10, 15]
printOddNumbers(array)"
Create a function in Python to improve the readability of a text by converting it into title case.,"""This is My Sample Text for Testing""","def to_title_case(text):
    words = text.split()
    title_case_words = [word.capitalize() for word in words]

    return "" "".join(title_case_words)"
Compute the sum of squares of all the numbers in a given range using a loop in Python.,"2, 8","def sum_squares_in_range(start, end):
    sum = 0
    for i in range(start, end+1):
        sum += i*i
    return sum

result = sum_squares_in_range(2, 8)
print(result)"
Write a Python script to print the Fibonacci series from 0 to n.,10,"def Fibonacci(n): 
   a = 0
   b = 1
   if n < 0: 
      print(""Incorrect input"") 
   elif n == 0: 
      return a 
   elif n == 1: 
      return b 
   else: 
      for i in range(2,n+1): 
          c = a + b 
          a = b 
          b = c 
      return b 
  
print(Fibonacci(10))"
Edit the following python code such that it can take a list of elements and return the distinct elements in the list,"def unique_elements(lst): 
    elements = []  
    for num in lst: 
        if num not in elements: 
            elements.append(num) 
    return elements","def unique_elements(lst): 
    elements = []  
    for num in lst: 
        if num not in elements: 
            elements.append(num) 
    return list(set(elements))"
Write a Python program to sort a dictionary by values.,"d = {1: 2, 3: 4, 4: 3, 2: 1, 0: 0}","sorted_d = dict(sorted(d.items(), key=lambda x: x[1]))
print(sorted_d)

    # Output: {0: 0, 2: 1, 1: 2, 4: 3, 3: 4}"
Write a python program to submit the following operation,Calculate the maximum sum of a contiguous subarray in the given array.,"def max_contiguous_sum(arr):
    max_sum = 0
    current_sum = 0
    for i in range(len(arr)):
        current_sum += arr[i]
        if current_sum > max_sum:
            max_sum = current_sum
        if current_sum < 0:
            current_sum = 0
    return max_sum"
Create a Python script that transforms a customer's address from one format to another.,"Input format: ""Street address, City, State, Zip code""
Output format: ""City, State Zip code""
Input: ""123 Main Street, Orlando, FL, 32801""","inputString = ""123 Main Street, Orlando, FL, 32801""

words = inputString.split("","")
if len(words) > 3:
    outputString = words[1] + "", "" + words[2] + "" "" + words[3]
    print(outputString)"
Edit the following Python program to make it more efficient and concise.,"def calculate_sum(lst):
 total = 0
 for num in lst:
  total = total + num
 return total","def calculate_sum(lst): 
 return sum(lst)"
Create an algorithm in Python that takes in a string and returns the number of words in the string.,"""Hello world""","def word_count(s):
	words = s.split()
	return len(words)

s = ""Hello world""

print(word_count(s)) # 2"
"Rewrite the following Python code that takes a list of strings and capitalizes each word, in the same Python syntax but more optimized code.","words = ['these', 'are', 'some', 'words']","words = ['these', 'are', 'some', 'words']
words = [word.capitalize() for word in words]"
Write an algorithm in Python that takes an input of positive integers and for each element in the list multiplies it by 2 if it is even and divide it by 3 if it is odd.,"[2, 3, 4, 6, 8, 10]","def multiplyOddDivideEven(lst):
  new_list = []
  for element in lst:
    if element % 2 == 0:
      new_list.append(element / 3)
    else:
      new_list.append(element * 2)
  return new_list

print(multiplyOddDivideEven([2, 3, 4, 6, 8, 10])) # prints [1.0, 6, 2.0, 4.0, 4.0, 5.0]"
"Given an array and a number, write a Python function that will determine if the number is present in the array.","arr=[1,2,3]
number = 4","def is_present(arr, number):
    for i in range(len(arr)):
        if arr[i] == number:
            return True
    return False"
Create a Python function to label the data correctly,"dataset = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","def label_data(dataset):
    labeled_data = []
    for data in dataset:
        label = ''
        for value in data:
            if value % 2 == 0:
                label += 'E'
            else:
                label += 'O'
        labeled_data.append(label)
    return labeled_data"
Edit the following python code such that the functions provide the stated output,"def func1(a):
    return a**2

def func2(a):
    return a+1","def func1(a):
    return a**2

def func2(a):
    return a**2 + 1"
Design an automated system in Python to remove all even numbers from a list.,"list = [3, 8, 10, 11, 12, 15]","def remove_even(list):
    return [i for i in list if i%2 != 0]"
Write a Python program to process a dataset of words and count how many times each unique word appears.,"words = ['apple', 'apple', 'banana', 'apple', 'orange', 'banana', 'pear', 'orange', 'orange']","from collections import Counter

words = ['apple', 'apple', 'banana', 'apple', 'orange', 'banana', 'pear', 'orange', 'orange']

word_counts = Counter(words)

for word, count in word_counts.items():
    print(f'{word}: {count}')"
Write a Python script to calculate the sum of two numbers.,"num1 = 5
num2 = 10","num1 = 5
num2 = 10
total = num1 + num2

print(total)"
Write a Python program to sort the list using the bubble sort algorithm,"unsorted_list = [5, 4, 3, 2, 1]","def bubble_sort(arr):
    n = len(arr)
    for i in range(n - 1):
        for j in range(0, n - i - 1):
            if arr[j] > arr[j + 1]: 
                arr[j], arr[j + 1] = arr[j + 1], arr[j]

# Driver code to test above
numbers = [5, 4, 3, 2, 1]
bubble_sort(numbers)"
Write an algorithm in Python to calculate the sum of even numbers in an array between a given range.,"arr = [2, 4, 6, 8, 10, 11, 12, 15, 18]","def sumEvensInRange(arr, lower, upper):
    evens_sum = 0
    for num in arr:
        if num >= lower and num <= upper and num % 2 == 0:
            evens_sum += num
    return evens_sum"
Write a Python program to remove all duplicates from a given list.,"[2, 3, 4, 5, 2, 3, 6]","def remove_duplicates(lst):
    seen = set()
    result = []
    for item in lst:
        if item not in seen:
            seen.add(item)
            result.append(item)
    return result"
Create a Python function to calculate the cost of a pizza. The function should take in the size of the pizza in inches and return the total cost.,Size (in inches): 14,"def pizzaCost(size):
 cost = 0
 
 if size == 14:
 cost = 10.00
 elif size == 16:
 cost = 12.50
 elif size == 18:
 cost = 15.00
 else:
 cost = ""Unknown size""
 
 return cost

print(pizzaCost(14))

// Output: 10.00"
Develop a Python program which takes an English sentence as input and prints its length.,"""Hello, World!""","def sentenceLength(sentence):
    return len(sentence)

sentence = 'Hello, World!'
print(sentenceLength(sentence))"
Suggest a completion for the following python code to randomly select an element from a given list.,"import random

def random_element(lst):","import random

def random_element(lst):
 return random.choice(lst)"
Create a Python program that calculates the total cost of a shopping cart with the given items and quantity.,"Item 1, quantity: 2, price: $3.00
Item 2, quantity: 5, price: $1.50","# Input values
items = [
 ['Item 1', 2, 3.00],
 ['Item 2', 5, 1.50]
]

# Calculate total cost
total_cost = 0
for item in items:
 cost = item[1] * item[2]
 total_cost += cost

# Print cost
print('Total cost: $' + str(total_cost))"
Create a Python script to convert JSON data to CSV format.,"{
    “name”: “John”,
    “age”: 30,
    “city”: “New York”
}","import csv
import json

data = {
    “name”: “John”,
    “age”: 30,
    “city”: “New York”
}

with open('data.csv', 'w') as csvfile:
 writer = csv.writer(csvfile)
 writer.writerow([""Name"", ""Age"", ""City""])
 writer.writerow([data[""name""], data[""age""], data[""city""]])"
"Build a student grade calculator using Python, given the following grades and weights: Exam 1: 95%, Exam 2: 80%, Homework: 100%, weighting: Exam 1: 0.5, Exam 2: 0.3, Homework: 0.2","Exam 1: 95%, Exam 2: 80%, Homework: 100%, weighting: Exam 1: 0.5, Exam 2: 0.3, Homework: 0.2","def grade_calculator(exam1, exam2, hw):
    grade = (exam1 * 0.5) + (exam2 * 0.3) + (hw * 0.2)
    return grade

grade = grade_calculator(95, 80, 100)
print(grade) # 91.0"
Write a Python program to modify a given list such that each element is equal to the square of the original element minus 2.,"sample_list = [3, 5, 7, 9]","modified_list = [7, 15, 23, 31]

# Python code
sample_list = [3, 5, 7, 9]

modified_list = [x**2 - 2 for x in sample_list]"
Write a Python program that extracts the domain name from a given URL.,https://www.google.com,"def get_domain(url):
  from urllib.parse import urlparse
  parsed_uri = urlparse(url)
  domain = '{uri.netloc}'.format(uri=parsed_uri)
  return domain

domain = get_domain(""https://www.google.com"")
print(domain)"
Generate a Python program that extracts all the words in a sentence and sorts it in descending order by length.,"""This is a test sentence""","def sort_words_by_length(sentence):
    words = sentence.split()
    words.sort(key=len, reverse=True)
    return words

sentence = ""This is a test sentence""
result = sort_words_by_length(sentence)
print(result)"
Generate a python code for an algorithmic solution for the following problem:,"Given a list A and a number X, determine whether or not there exist two elements in A whose sum is exactly X.","def is_sum_possible(A, X): 
    n = len(A) 
    # create an empty hash set
    s = set() 
  
    for i in range(n): 
        temp = X - A[i]  
        if temp >= 0 and temp in s: 
            return True 
        s.add(A[i])  
  
    return False"
Create a web service in Python which accepts a URL as input and prints the HTML of the page.,"url = ""www.example.com""","import requests

def get_html(url):
    response = requests.get(url)   
    if response.status_code == 200:
        return response.text
    else:
        return None

html = get_html(""www.example.com"")
if html:
    print(html)"
Implement a Python program that takes a positive integer as its input and returns its factorial.,3,"def factorial(n):
    if n < 0:
        raise ValueError(""Input must be a positive integer"")
    if n == 0:
        return 1
    res = 1
    for i in range(2,n+1):
        res *= i
    return res"
Construct a Python program to find the difference between the maximum and minimum values in a given array of integers.,"[1, 8, 4, 5, 9]","def diffMaxMin(arr):
    maxVal = arr[0]
    minVal = arr[0]
    
    for num in arr:
        if num > maxVal:
            maxVal = num
        elif num < minVal:
            minVal = num
            
    return maxVal - minVal

arr = [1, 8, 4, 5, 9]
result = diffMaxMin(arr)
print(result)"
Create a Python program to generate N random numbers between 0 and 1,N = 5,"import random

def gen_random_numbers(n):
    rand_nums = []    
    for i in range(n):
        rand_nums.append(random.uniform(0.0, 1.0))
    return rand_nums

rand_nums = gen_random_numbers(N)
print(rand_nums)"
Write a Python function to generate an array of numbers from 1 to n in random order.,7,"import random

def generate_random_array(n):
    array = [i for i in range(1, n + 1)]
    random.shuffle(array)
    return array

result = generate_random_array(7)
print(result)"
Create a relational mapping between two arrays using python.,"arr1 = [1, 2, 3]
arr2 = [a, b, c]","# Create a relational mapping between two arrays using python

arr1 = [1, 2, 3] 
arr2 = ['a', 'b', 'c'] 
  
# Create a final dictionary 
result = dict(zip(arr1,arr2)) 
  
# Print the created mapping  
print(result)"
Create a Python program to open the user's default web browser with the given URL as an argument.,www.example.com,"import webbrowser

url = 'www.example.com'
webbrowser.open_new(url)"
Write a Python program that implements a search algorithm on a given list of numbers.,"numbers = [2, 8, 9, 5, 15, 12, 4]
key = 12","def linearSearch(numbers, key):
    for i in range(len(numbers)):
        if numbers[i] == key: 
            return i
    return -1

numbers = [2, 8, 9, 5, 15, 12, 4]
key = 12
index = linearSearch(numbers, key)
if index == -1:
    print(""Element not found"")
else:
    print(""Element found at index"", index) # output: Element found at index 5"
"Write a Python program to generate a random list of length n containing integers within range (0, n-1).",n = 6,"import random 
  
def random_list(n): 
    # Generating a random list of length n
    random_list = [] 
    for i in range(n): 
        random_list.append(random.randint(0,n-1)) 
      
    return random_list 
  
# Driver Code 
n = 6
print(random_list(n))"
Create a Python function to print the Fibonacci series up to a given range.,range: 10,"def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    # First Fibonacci number is 0 
    elif n==1: 
        return 0
    # Second Fibonacci number is 1 
    elif n==2: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2) 
   
# Driver Program 
result = []
for i in range(1,10): 
    result.append(Fibonacci(i))
    
print(result)"
Generate a Python note to query a database and display 5 records.,"Database table name: ""users""","import sqlite3

conn = sqlite3.connect('database.db')
c = conn.cursor()

# query the database
c.execute('SELECT * FROM users LIMIT 5')

# fetch all records
records = c.fetchall()

# print all records
for record in records:
  print(record)

# close the connection
conn.close()"
Construct a python program which will receive a string and output the same string in reverse.,"string = ""Hello World!""","def reverse_string(string):
    return string[::-1]"
"Given a list of integers, write a Python program to calculate the average of all the numbers.","[2, 4, 6, 8, 10]","def average(lst):
 sum = 0
 for num in lst:
  sum += num

 return sum/len(lst)

nums = [2, 4, 6, 8, 10]
result = average(nums)
print(result) # 6.0"
Generate a valid python program according to the input:,Reverse the elements of a list.,"def reverse_list(list):
    for i in range(int(len(list) / 2)):
        temp = list[i]
        list[i] = list[len(list) - i - 1]
        list[len(list) - i - 1] = temp
    return list"
Develop a code generator that can generate a specified code given a language and a set of instructions.,"Language: Python
Instructions: print a ""Hello World!""","def code_generator(language, instructions): 
    if language == 'Python': 
        code_string = 'print(""Hello World!"")' 
    elif language == 'Java': 
        code_string = 'System.out.println(""Hello World!"");' 
 
    return code_string"
Write a Python program to print out a histogram for a list of numbers.,"numbers = [1,2,3,4,5,3,2,1,3,2,5,6,7,5,4]","numbers = [1, 2, 3, 4, 5, 3, 2, 1, 3, 2, 5, 6, 7, 5, 4]

for i in numbers:
    print('*' * i)

# Output should be
# *
# **
# ***
# ****
# *****
# ***
# **
# *
# ***
# **
# *****
# ******
# *******
# *****
# ****"
Debug a piece of code written in Python.,"def say_hello(name):
    message = ""Hello %s!"" % name
    print(message)

say_hello('John')","def say_hello(name):
    message = ""Hello %s!"" % name
    print(message)

# checking for input
if name != '':
    say_hello(name)
else:
    print('Error: No name provided')"
Write a Python script to find the unique elements of a given list.,"List: [1, 1, 2, 3, 4, 5, 5]","list_x = [1, 1, 2, 3, 4, 5, 5]
unique_elements = set(list_x)
print(unique_elements) #output: {1, 2, 3, 4, 5}"
Generate a program using Python to calculate the factorial of a positive number.,Number = 4,"#Calculate the Factorial of a Positive Number

#Get input
factNum = 4

#Calculate and print result
factNum = factNum*(factNum - 1)
factNum = factNum*(factNum - 1)
factNum = factNum*(factNum - 1)

print(""The factorial of 4 is:"", factNum)"
Construct an algorithm in Python that sorts an array using quick sort.,"myList = [3, 8, 10, 2, 4]","def quick_sort(input_list):
    if len(input_list) <= 1:
        return input_list
    pivot = input_list[0]
    left = [x for x in input_list[1:] if x < pivot]
    right = [x for x in input_list[1:] if x >= pivot]
    return quick_sort(left) + [pivot] + quick_sort(right)

myList = [3, 8, 10, 2, 4]

sortedList = quick_sort(myList)
print(sortedList)"
Create a distance calculator program in Python that takes in two coordinates and returns the distance between them.,"coordinates1 = (5, 3)
coordinates2 = (2, 7)","import math

def distance_calc(coord1, coord2):
    """"""Returns the distance between two coordinates.""""""
    x1, y1 = coord1
    x2, y2 = coord2
    dist = math.sqrt((x2-x1)**2 + (y2-y1)**2)
    return dist

print(distance_calc(coordinates1, coordinates2))"
Develop an algorithm in Python to classify an animal based on its weight and size.,"weight = 5, size = 40","def classify_animal(weight, size):
    if weight < 10 and size < 50:
        return 'small'
    elif weight >= 10 and size >= 50:
        return 'large'
    else:
        return 'medium'

classify_animal(5, 40)"
Write a Python function to find the maximum product of three integers from a given list.,"[-10, 6, 7, 8, 2]","def max_product_three(numbers):
 numbers.sort()
 return max(
  numbers[0] * numbers[1] * numbers[-1], 
  numbers[-1] * numbers[-2] * numbers[-3]
 )"
Develop a program in Python that sums up all the numbers of a list.,"[1, 2, 3, 4, 5]","# define the list
my_list = [1, 2, 3, 4, 5]

# compute the total
total = 0
for num in my_list:
 total += num

# print the result
print(""The sum of all numbers in the list is: "" + str(total))"
Create a function in Python to create a wordcount of a given text.,"""The lines of text that you're about to write will be filled with wonder and excitement""","def wordcount(text):
    counts = dict()
    words = text.split()

    for word in words:
        if word in counts:
            counts[word] += 1
        else:
            counts[word] = 1

    return counts

print(wordcount(text))"
"Create a function in Python that takes in a number, n, and prints out the nth term of the Fibonacci sequence.",n = 10,"def fibonacci(n):
  a = 0
  b = 1
  if n < 0:
    print(""Incorrect input"")
  elif n == 0:
    return a
  elif n == 1:
    return b
  else:
    for i in range(2,n):
      c = a + b
      a = b
      b = c
    return b
  
print(fibonacci(10))"
Write a function in Python to remove all numbers from an array.,"[3, 1, 4, 5, 6, 2]","def remove_numbers(arr):
  new_arr = []
  for el in arr:
    if not isinstance(el, int):
      new_arr.append(el)
  return new_arr

a = [3, 1, 4, 5, 6, 2]

print(remove_numbers(a))"
Create an algorithm in Python that computes a Fibonacci sequence up to a given index.,Index: 7,"def fibonacci_seq(n):
    if n < 0:
        raise ValueError(""Index must be a positive integer."")
    elif n == 0:
        return 0
    elif n == 1:
        return 1
    else:
        a = 0
        b = 1
        for i in range(2, n + 1):
            c = a + b
            a = b
            b = c
        return c

fib_7 = fibonacci_seq(7)
print(fib_7)"
Create a python program to sort list elements in ascending order using the selection sort method.,"unsortedList = [4,3,2,1]","unsortedList = [4,3,2,1]
 
for i in range(len(unsortedList)): 
    min_idx = i
    for j in range(i+1, len(unsortedList)):
        if unsortedList[min_idx] > unsortedList[j]: 
            min_idx = j 
    unsortedList[i], unsortedList[min_idx] = unsortedList[min_idx], unsortedList[i]
    
print(""Sorted list:"", unsortedList)"
Create a Python function to encrypt data using the Caesar cipher algorithm.,"message = ""hello world""
key  = 2","def encrypt_caesar_cipher(message, key):
    encrypted_message = """"
    for text in message:
        if text.isupper():
            encrypted_message += chr((ord(text) + key - 65) % 26 + 65) 
        elif text.islower():
            encrypted_message += chr((ord(text) + key - 97) % 26 + 97) 
    return encrypted_message"
"Given a string containing words separated by spaces, write a Python function to remove any duplicates.","""I have to go go shopping shopping""","def remove_duplicates(string):
words = string.split("" "")
unique_words = set(words)
return "" "".join(unique_words)

remove_duplicates(""I have to go go shopping shopping"") # ""I have to go shopping"""
Construct a code in Python to count the number of alphabets in an user-entered string.,"String: ""Hello World""","def countAlpha(str): 
	count = 0
	for char in str:
		if char.isalpha():
			count += 1
	return count 

str = ""Hello World""
result = countAlpha(str)
print(""Number of alphabets:"", result)"
Modify the following Python program to replace each number with its square.,"my_list = [1, 4, 9, 16, 25]","my_list = [1, 16, 81, 256, 625]"
Execute the following SQL query in a Python environment and return the result.,"SELECT * FROM Orders
WHERE OrderDate > '2018-12-31'","import sqlite3 
conn = sqlite3.connect('Order.db')
c = conn.cursor()
c.execute(""SELECT * FROM Orders WHERE OrderDate > '2018-12-31'"")
result = c.fetchall()
print(result)"
Write a Python program to calculate the roots of a quadratic equation with given coefficients.,"Coefficients: a = 2, b = 5, c = -3","def calculate_roots(a, b, c): 
  # calculate the discriminant
  d = (b**2) - (4*a*c)

  # find two solutions
  sol1 = (-b-cmath.sqrt(d))/(2*a)
  sol2 = (-b+cmath.sqrt(d))/(2*a)

  return sol1, sol2"
Write a Python code snippet to convert a string to a dictionary.,'student=John&grade=A',"my_dict = dict(item.split(""="") for item in s.split(""&""))

print(my_dict) # prints {'student': 'John', 'grade': 'A'}"
Write a Python script to calculate the distance between two points.,"Point1 = (x1, y1)
Point2 = (x2, y2)","import math

def calculate_distance(x1, y1, x2, y2):
  x_diff = x2 - x1
  y_diff = y2 - y1
  distance = math.sqrt(x_diff**2 + y_diff**2)
  return distance

result = calculate_distance(x1, y1, x2, y2)
print(result)"
Create a python program to combine two lists into a dictionary,"The two lists are [key1, key2, key3] and [value1, value2, value3]","def combine_lists_to_dict(keys, values):
    my_dict = dict(zip(keys, values))
    return my_dict"
Complete the following python code to make it comply with the given logic,"def largest_element(list1): 
    max = list1[0] 
    for item in list1: 
        if max","def largest_element(list1): 
    max = list1[0] 
    for item in list1: 
        if item > max: 
            max = item
    return max"
Write an algorithm in Python that finds the minimal number in an array.,"arr = [1, 5, 4, 12, 8]","def find_min(arr):
    min_num = arr[0]
    for num in arr:
        if num < min_num:
            min_num = num
    return min_num

min_num = find_min(arr)
print(min_num)"
Propose a Pythonic solution to the following code,"# List of non-empty strings
items = ['apple', 'banana', 'cat', 'dog', 'elephant']
for i in range(len(items)):
    print('item ' + str(i) + ' is ' + items[i])","# List of non-empty strings
items = ['apple', 'banana', 'cat', 'dog', 'elephant']
for i, item in enumerate(items):
    print('item ' + str(i) + ' is ' + item)"
Develop a Python program to print the second-largest element of an array.,"arr = [10, 3, 5, 22, 4]","def second_largest(arr):
    largest = float(""-inf"")
    second_largest = float(""-inf"") 
    for i in arr:
        if i > largest:
            second_largest = largest
            largest = i
        elif i > second_largest and i != largest:
            second_largest = i
    return second_largest

arr = [10, 3, 5, 22, 4]
print(second_largest(arr))"
Design a function in Python to search for a given number in a list.,"List: [1, 2, 3, 4, 5]
Number: 4","def search_list(lst, num):
    for i in range(len(lst)):
        if lst[i] == num:
            return i
    return -1"
Write a Python function to return the greatest common divisor among two numbers.,"num1 = 30, num2 = 45","def gcd(num1, num2): 
    if(num2 == 0): 
        return num1 
    return gcd(num2, num1%num2)"
Create a python module to edit a dataframe,"The DataFrame is composed of two columns, 'id' and 'value'.","import pandas as pd

def edit_dataframe(df):

    # Adding the column 'new_value'
    df['new_value'] = df['value'] + 1

    # Replacing values in the 'id' column
    df['new_id'] = df['id'].map(lambda x: 'id_' + str(x))

    # Updating the value in the 'value' column
    df.value = df.value * 2

    return df"
Write a Python code to sort a dictionary by a specific key.,"numbers = {
 '1': 50,
 '2': 60,
 '3': 20,
 '4': 70
}","numbers = {
 '1': 50,
 '2': 60,
 '3': 20,
 '4': 70
}

sorted_dictionary = sorted(numbers.items(), key=lambda x: x[1])
print(sorted_dictionary)"
Write a Python function that takes in a 2D array of integers and return the sum of all elements in the array.,"[[1, 2, 3], [4, 5, 6], [7, 8, 9]]","def sumArray(arr):
  sum = 0
  for i in range(len(arr)):
    for j in range(len(arr[i])):
      sum += arr[i][j]
      
  return sum

sumArray([[1, 2, 3], [4, 5, 6], [7, 8, 9]]) # returns 45"
Write a Python program to search for a specific value in a list.,"my_list = [2, 4, 6, 8, 10]","def search_list(search_term, my_list):
 for item in my_list:
 if item == search_term:
 return True
return False

my_list = [2, 4, 6, 8, 10]
search_term = 8

if search_list(search_term, my_list):
 print(""Value found"")
else:
 print(""Value not found"")"
Optimize a Python algorithm to find the greatest 2 numbers from a 10000 integers list.,"myList = [1, 5, 3, 7, 4, 7, 8, 9, 2, 10, 6, 8]","def get_greatest_2(items):
 max1 = max2 = float('-inf')
 for item in items:
 if item > max1:
 max1, max2 = item, max1
 elif item > max2:
 max2 = item
 return max1, max2

myList = [1, 5, 3, 7, 4, 7, 8, 9, 2, 10, 6, 8]
print('The greatest 2 numbers from the array:', get_greatest_2(myList))

Output:
The greatest 2 numbers from the array: (9, 8)"
Build a Python program to sort a list of strings by the length of the string in descending order.,"[""cat"", ""dog"", ""elephant"", ""tiger""]","def sort_list(list):
    return sorted(list, key=lambda x: len(x), reverse=True)

list = [""cat"", ""dog"", ""elephant"", ""tiger""]
print(sort_list(list))

# Output: [""elephant"", ""tiger"", ""dog"", ""cat""]"
Design an algorithm in Python which takes an array as an input and sorts them in ascending order using selection sort.,"[76, 25, 16, 15, 88]","def selection_sort(arr): 
	for i in range(len(arr)):   
		min_idx = i 
		for j in range(i+1, len(arr)): 
			if arr[min_idx] > arr[j]: 
				min_idx = j 
		arr[i], arr[min_idx] = arr[min_idx], arr[i]

arr = [76, 25, 16, 15, 88]
selection_sort(arr)
print(""Sorted array:"", arr) # [15, 16, 25, 76, 88]"
Edit an existing Python script to search for and delete duplicated words in a string.,my_string = 'this this string contains contains duplicate duplicate words words',"my_string = 'this string contains duplicate words' 

my_string = my_string.split() 
res = [] 
for i in my_string: 
    if i not in res: 
        res.append(i) 

my_string = ' '.join(res) 
print(my_string)"
Edit the following Python program to compute the square root of a given number.,"def square_root(number):
    return number * number","def square_root(number):
    return number ** 0.5"
Build a Python generator that yields the next power of 2 for a given number.,4,"def nextPowerOf2Generator(n): 
    power = 1
    while True: 
        pow_val = power * 2
        yield pow_val 
        power = pow_val 
  
n = 4

for i in nextPowerOf2Generator(n):
    if i > n:
        print(i)
        break"
Use Python to generate a script to calculate the sum of natural n numbers,n = 6,"n = 6
sum = 0

for i in range(1, n+1):
   sum = sum + i
print(""The sum is"", sum)"
"Create a Python 3 program that takes as input a list of numbers (num1, num2,...,numN) and transforms it into the string “num1 + num2 + ... + numN = sum”, where sum is the sum of the numbers.","[5, 3, 2, 6, 8]","nums = [5, 3, 2, 6, 8]
sum = 0
out_string = """"

for num in nums:
 sum += num
 out_string += str(num)
 
 if num != nums[-1]:
  out_string += "" + ""
 else:
  out_string += "" = ""
  
out_string += str(sum)

print(out_string)"
"Generate a simple Python script to compute basic statistics (mean, median and mode) for a given list of numbers.","[7, 10, 16, 1, 18]","def compute_statistics(nums):
 mean = sum(nums)/len(nums)
 median = sorted(nums)[len(nums)//2]
 mode = max([(nums.count(i), i) for i in set(nums)], key=lambda x:x[0])[1]
 print('Mean:', mean)
 print('Median:', median)
 print('Mode:', mode)

compute_statistics([7, 10, 16, 1, 18])"
Develop a Python program to generate all possible strings of length 'n' using characters from a given array.,"characters = [""A"", ""B"", ""C""]
length = 3","def generate_strings(characters, length):
    if length == 0:
        return [""""]

    result = []
    for char in characters:
        for string in generate_strings(characters, length-1):
            result.append(char + string)

    return result

strings = generate_strings([""A"", ""B"", ""C""], 3)
print(""Strings:"", strings)"
Create a function to find the mean of a given array in Python.,"[2, 4, 5, 7]","def mean(arr): 
  return sum(arr)/len(arr)

arr = [2, 4, 5, 7]
mean_val = mean(arr)
print(""Mean of the array is"", mean_val)
# Output: Mean of the array is 4.5"
Provide a Python function that takes a phrase as input and converts all words in the phrase to title case.,"""a sample phrase""","def title_case(phrase):
    words = phrase.split()
    result = []
    for word in words:
        result.append(word[0].upper() + word[1:].lower())
    
    return ' '.join(result)"
"Given a Python list of numbers (max 10 elements) transform the list to a dictionary with the following rules: if the element is even, the key is 'even' and the value is the list of even numbers; if the element is odd, the key is 'odd' and the value is the list of odd numbers.","[4, 8, 3, 12, 15, 7]","{
 'even': [4, 8, 12],
 'odd': [3, 15, 7]    
}"
Write a Python program to convert the input array of strings into a dictionary with keys as the string and the values as the index of the string in the array.,"['foo', 'bar', 'baz', 'qux']","my_dict = dict(zip(['foo', 'bar', 'baz', 'qux'], 
                  range(len(['foo', 'bar', 'baz', 'qux']))))

print(my_dict) # {'foo': 0, 'bar': 1, 'baz': 2, 'qux': 3}"
Create a Python script which uses the BeautifulSoup library to parse the data of a given webpage.,Webpage link = http://www.example.com,"import requests
from bs4 import BeautifulSoup

page = requests.get(url)
soup = BeautifulSoup(page.content, 'html.parser')"
Create a Python program to search a list for a particular value and return its index.,"list = [2, 3, 5, 9], value = 5","def search_list(list, value): 
    i = 0
    while(i < len(list)): 
        if list[i] == value: 
            return i 
        i = i + 1
  
    return -1
  
list = [2, 3, 5, 9] 
value = 5
result = search_list(list, value) 
  
if result != -1: 
    print(""Element is present at index"", result) 
else: 
    print(""Element is not present in list"")"
Write a Python program to perform linear search on a given array of numbers.,"[2, 3, 4, 6, 1]","def linearSearch(arr, x): 
  
    for i in range (len(arr)): 
  
        if arr[i] == x: 
            return i 
  
    return -1
  
arr = [2, 3, 4, 6, 1] 
x = 4
  
result = linearSearch(arr, x) 
  
if(result == -1): 
    print(""Element is not present in array"") 
else: 
    print(""Element is present at index"", result)"
Reverse a sequence of numbers with Python.,"[13, 25, 6, 93, 75]","[75, 93, 6, 25, 13]"
Create a program in Python that finds the index of the first occurrence of a target number in a given array.,"arr = [1, 3, 5, 3, 7, 3, 6], target = 3","arr = [1, 3, 5, 3, 7, 3, 6]
target = 3

def findIndex(arr, target): 
    for i in range(len(arr)): 
        if arr[i] == target: 
            return i 
  
    return -1
  
# Driver Code 
index = findIndex(arr, target) 
print(""Index of"", target, ""is"", index) 

// Output: Index of 3 is 1"
Generate a Python program that takes an input of a number and checks if it is prime.,7,"def is_prime(num):
    if num == 2:
        return True
    elif num < 2 or not all(num % i for i in range(2, num)):
        return False
    return True

num = 7
result = is_prime(num)
print(result)"
"Write a Python program to create a JSON object for a student's marks database. The database should contain the student's name, id, subject name and the marks obtained.","Student Name: John    
Id: 105    
Subject: Science    
Marks: 90","student_data = [
    {
        'name': 'John',
        'id': 105, 
        'subjects': {
            'Science': 90
        }
    }
]"
Generate a python program to find the minimum element of a list.,"[1, 7, 4, 8, 2]","def find_min(input_list):
    min_ele = input_list[0]
    for ele in input_list:
        if ele < min_ele:
            min_ele = ele
    return min_ele"
Create a Python program to compare two lists and return their intersection,"list1 = [1,2,3,4,5]
list2 = [4,5,6,7,8]","def intersection(list1, list2):
    intersection = [value for value in list1 if value in list2]
    return intersection

list1 = [1,2,3,4,5]
list2 = [4,5,6,7,8]
result = intersection(list1, list2)
print(result) # prints [4,5]"
Create a Python program to sort a dictionary by value in descending order.,"Dictionary: {""a"": 3, ""b"": 1, ""c"": 5, ""d"": 4, ""e"": 2}","# Sort the given dictionary by value 
import operator
 
d = {'a':3, 'b':1, 'c':5, 'd':4, 'e':2}
sorted_d = sorted(d.items(), key=operator.itemgetter(1),reverse=True)
 
print(sorted_d)

// Output: [('c', 5), ('d', 4), ('a', 3), ('e', 2), ('b', 1)]"
Write a Python program to find the closest match of a given list of integers in another.,"arr1 = [1, 5, 12, 36]
arr2 = [2, 4, 5, 6, 8, 9, 11, 12, 15, 21]","def closest_match(arr1, arr2):
    
    closest_match = None
    min_diff = float('inf')
    
    for x in arr1:
        for y in arr2:
            diff = abs(x - y)
            if diff < min_diff:
                min_diff = diff
                closest_match = y
    
    return closest_match"
"Given a list of integer values, write a Python program to find the number of consecutive values that are increasing.","numbers = [1, 2, 3, 4, 9, 8, 7, 6]","count = 0

for i in range(len(numbers) - 1):
    if numbers[i] < numbers[i + 1]:
        count += 1

print(count)"
Create python code to print the first n numbers of the Fibonacci sequence,n = 10,"def print_fibonacci_sequence(n):
    # Initialize the first two numbers of the sequence
    num1 = 0
    num2 = 1
    # Use a for loop to print the the sequence in the right order
    for i in range(n):
        print(num1, end=' ')
        num3 = num1 + num2
        num1 = num2
        num2 = num3

# Test
print_fibonacci_sequence(10)"
Find the intersection of two given sets using Python,"Set1 = [1, 2, 3, 4, 5]
Set2 = [3, 4, 5, 6, 7]","Set1 = [1, 2, 3, 4, 5]
Set2 = [3, 4, 5, 6, 7]

# intersection
intersection_set = set(Set1) & set(Set2)

# Printing intersection
print(""Intersection is :"", intersection_set)

# output
Intersection is : {3, 4, 5}"
Write a function in Python to find the sum of all elements of a given list.,"inputList = [1, 2, 3, 4, 5]","def sum_list(inputList): 
    sum_list = 0
    for num in inputList: 
        sum_list += num 
    return sum_list"
Optimize a Python program to convert all lowercase letters in a string to uppercase in the most efficient way.,"lowercase.txt
Hello World","# Open the input file
with open('lowercase.txt') as file:
    content = file.read()

# Convert the string to uppercase using a list comprehension
uppercase = ''.join([c.upper() for c in content])

print('Converted string to uppercase:', uppercase)"
Compose a Python program to solve an equation using the Bisection method.,Equation: f(x) = x^2 - 3,"def f(x): 
    return x**2 - 3

def bisection(f,a,b,tol):
  c = (a+b)/2
  if f(c)==0 or (b-a)/2 < tol:
    return c
  elif f(c)*f(a) > 0:
    return bisection(f,c,b,tol)
  else:
    return bisection(f,a,c,tol)"
You are given a Python program that prints random numbers. Improve the program to print a random number between 0 and 10.,"import random

for i in range(5):
    print(random.randint(0, 50))","import random

for i in range(5):
    print(random.randint(0, 10))"
Write a Python program to use Regular Expressions to search and replace a given string.,"text = ""He is an excellent programmer""","import re

text = ""He is an excellent programmer""

def find_and_replace(text, pattern, replacement):
    return re.sub(pattern, replacement, text)

result = find_and_replace(text, r""excellent"", ""brilliant"")
print(result)"
"Write an algorithm in Python to compute the total number of distinct pairs (x, y) such that ax + by = c.","a = 2, b = 2, and c = 4","def countPairs(a, b, c):
    count = 0
    for x in range(0, c + 1):
        for y in range(0, c + 1):
            if a * x + b * y == c:
                count += 1
    return count

a = 2
b = 2
c = 4
print(countPairs(a, b, c))"
Create a python function to classify a given dataset based on the numeric value of a given feature.,"Income<=50, Risk Level=Low","def classify_data(feature, value, outcome):
    if feature == ""Income"" and float(value) <= 50:
        return outcome
    else:
        return ""No Classification"""
Generate a loop in Python using a list of words and print out the length of each word.,"A list of strings [""apple"", ""pie"", ""is"", ""delicious""]","words = [""apple"", ""pie"", ""is"", ""delicious""]

for word in words:
 print(len(word))"
"Create a function in Python that receives a word as input, searches for synonyms in a dictionary and returns a list of synonyms.","word = ""happy""","import json

def get_synonyms(word):
 synonyms = []
 with open('dictionary.json') as dictionary_file:
 dictionary = json.load(dictionary_file)
 if word in dictionary.keys():
 for syn in dictionary[word]:
 synonyms.append(syn)
 return synonyms

print(get_synonyms('happy'))"
Create a function in Python to perform linear regression looking for the best correlation for a set of data.,"x = [1, 2, 4, 3, 5]
y = [1, 3, 3, 2, 5]","import numpy as np

def linear_regression(x, y):
    x_mean = np.mean(x)
    y_mean = np.mean(y)
    
    num = 0
    den = 0
    for i in range(len(x)):
        num += (x[i] - x_mean)*(y[i] - y_mean)
        den += (x[i] - x_mean)**2
    m = num / den
    c = y_mean - m*x_mean
    return m, c"
Optimize the following Python program to calculate the sum of two numbers.,"a = 100
b = 200
sum = a + b","a = 100
b = 200
sum = a + b

# Optimized code
sum = sum(100, 200)"
Write a Python script to find all common elements between two sets.,"[1, 2, 3, 4], [3, 4, 5, 6]","def find_common_elements(set1, set2):
    common_elements = []
    for item in set1:
        if item in set2 and item not in common_elements:
            common_elements.append(item)
    return common_elements"
Create a Python program to identify anagrams in a given list of strings.,"[""ab"",""ba"",""dog"",""god""]","def anagrams(words):
    anagram_list = []
    for word1 in words:
        for word2 in words:
            if word1 != word2 and sorted(word1) == sorted(word2):
                anagram_list.append([word1,word2])
    return anagram_list

list_of_words = [""ab"",""ba"",""dog"",""god""]
print(anagrams(list_of_words))"
"Create a Python program that takes a list of strings as input, removes any duplicate strings, and prints out the resulting unique list.","[""a"", ""b"", ""c"", ""d"", ""a"", ""e""]","input_list = [""a"", ""b"", ""c"", ""d"", ""a"", ""e""]
unique_list = set(input_list)

print(unique_list)
# Output: {'a', 'c', 'b', 'e', 'd'}"
Optimize the following python code to search for a substring in a given string.,"String = “GeeksforGeeks”, Substring = “for”","def containsSubstring(str, sub):
    for i in range(len(str)-len(sub)+1):
        j = 0
        while j < len(sub) and sub[j] == str[i+j]:
            j += 1
        if j == len(sub):
            return True
    return False"
Create a Python script that finds the longest word in a given sentence.,"""This is a sample sentence""","def find_longest_word(sentence):
    words = sentence.split("" "")
    longest_word = """"
    for word in words:
        if len(word) > len(longest_word):
            longest_word = word
    return longest_word

result = find_longest_word(""This is a sample sentence"")
print(result)"
Rewrite the following Python code in Node.js:,"EvenNumbers = [2, 4, 6, 8]
sum = 0
for item in EvenNumbers:
    sum += item
print(sum)","let evenNumbers = [2, 4, 6, 8];
let sum = 0;
for (let item of evenNumbers) {
 sum += item;
}
console.log(sum);"
Create a Python program to calculate the square root of a number without using the square root function.,36,"def my_sqrt(x): 
    guess = x
    i = 0
    while guess * guess != x and i < 20:
        guess = (guess + x/guess) / 2.0
        i += 1
    return guess 

result = my_sqrt(36) 
print(""Square root of 36 is = "", result)"
Write a python program that takes in a given list of string and then prints out a list of all the anagrams of those strings.,"strings = [""dear"", ""read"", ""dare""]","def find_anagrams(strings):
    anagrams = []

    for string in strings:
        temp = [string]
        for s in strings:
            if sorted(string) == sorted(s) and string != s:
                temp.append(s)
        anagrams.append(temp)
 
    return anagrams"
Construct a Python script that deletes all the characters in a given string except for the vowels.,"""Hello World!""","# Get the input string
string = ""Hello World!""

# Modify the string
vowels = ""aeiou""
new_string = """"
for char in string:
    if char in vowels:
        new_string += char

# Print the string
print(new_string)
# prints ""eoo"""
Develop a Python program that takes a list of words in variable ‘words’ and creates a new variable with the length of each word.,"words = [""Hello"", ""World"", ""I"", ""Love"", ""You""]","word_lengths = [len(word) for word in words]

print(word_lengths) # [5, 5, 1, 4, 3]"
Develop a Python function to remove the last n characters from a given string.,String = “Hello Programmers!”,"def remove_last_n_characters(str, n):
  return str[:len(str)-n]"
Develop a function in Python that takes a string and an integer as input and returns the string with the length of the integer.,"'Hello World', 5","def truncateString(inputString, length):
    return inputString[:length]

print(truncateString('Hello World', 5))"
Implement a web scraper in Python that downloads the contents of a given URL.,url = 'https://en.wikipedia.org/wiki/Web_scraping',"import requests
from bs4 import BeautifulSoup

url = 'https://en.wikipedia.org/wiki/Web_scraping'

r = requests.get(url)
soup = BeautifulSoup(r.text, 'html.parser')

html = str(soup)

with open(""output.html"", ""w"") as file:
    file.write(html)"
Create a python program to merge the two given lists.,"list_1 = [1, 2, 3] 
list_2 = [4, 5, 6]","def merge_lists(list_1, list_2):
    """"""Merge the two given lists.""""""
    list_1.extend(list_2)
    return list_1

# Usage Example
list_1 = [1, 2, 3] 
list_2 = [4, 5, 6]
merged_list = merge_lists(list_1, list_2)
print(merged_list)  # [1, 2, 3, 4, 5, 6]"
Create a Python program to encrypt a given text,This is a secret message,"def encrypt(text, key): 
    cipher = """" 
    for c in text: 
        cipher += chr(ord(c) + key) 
    return cipher

#Driver code 
if __name__ == '__main__': 
    plaintext = ""This is a secret message""
    key = 3
    ciphertext = encrypt(plaintext, key) 
    print(ciphertext)"
Edit this Python code to raise an error if the length of the list less than 3,"def check_list_length(lists):
    if len(lists) > 3:
        return True
    else:
        return False","def check_list_length(lists):
    if len(lists) > 3:
        return True
    else:
        raise ValueError(""list length should be more than 3"")"
Write a Python program which accepts a sequence of comma-separated numbers from console and generates a list.,"1,2,3,4,5","numbers = input(""Please enter a sequence of comma-separated numbers:"")

num_list = numbers.split(',')

num_list = list(map(int, num_list))

print(num_list)"
Create a python program to take as input a list of strings and concatenate them into a single string.,"list = [""alpha"", ""beta"", ""gamma""]","def concatenate_list(list):
    result = """"
    for item in list:
        result += item
    return result"
Suggest some improvements to the following Python program.,"def is_prime(x):
    if x > 1:
        i = 2
        while i < x:
            if (x % i) == 0:
                return False
            i+= 1
        return True","def is_prime(x):
    if x < 2:
        return False
    elif x == 2:
        return True
    elif x % 2 == 0:
        return False
    else:
        for i in range(2, x):
            if x % i == 0:
                return False
        return True"
Generate a Python script which takes an integer as an argument and prints out the Fibonacci sequence upto the given integer.,Integer: 10,"def fibonacci(n):
 a, b = 0, 1
 for _ in range(n):
   a, b = b, a+b
 return a
 
for i in range(1, 11):
 fib = fibonacci(i)
 print(fib)"
Write a Python program to optimize the given array such that its elements are in the range of 0 to 100.,"[3, 105, -10, 35, 120]","def optimize_array(arr):
    for i in range(len(arr)):
        # If the element is less than 0
        if arr[i] < 0:
            arr[i] = 0
        # If the element is greater than 100
        if arr[i] > 100:
            arr[i] = 100
    return arr

arr = [3, 105, -10, 35, 120]
print(optimize_array(arr))"
Write a function in Python to check whether a given string is in lower case or not.,String: ThisIsAnExample,"def is_lowercase(string):
    for character in string:
        if character != character.lower():
            return False
    return True"
Write a Python program that takes in a list of integerNums and returns a new list with elements which are divisible by 3.,"[3,4,6,9,10]","def divisible_by_3(intNums):
    result = []
    for i in intNums:
        if i % 3 == 0:
            result.append(i)
    return result

intNums = [3,4,6,9,10]
print(divisible_by_3(intNums)) # Output: [3, 6, 9]"
Write a Python program that takes a string and prints the frequency of each character in the string.,"""Code Generation Task""","# Frequency of each character in the string

string = ""Code Generation Task""

for i in string:
    print(""Number of Occurrence of"", i, ""is"", string.count(i))"
Reverse a string via a Python function.,String: Hello,"def reverse_string(string):
    return string[::-1]

result = reverse_string(""Hello"")
print(result)"
Generate a Python program that uses the requests library to make a GET request to an API endpoint.,https://jsonplaceholder.typicode.com/users,"import requests

# Make a get request to get the latest users
response = requests.get('https://jsonplaceholder.typicode.com/users')

# Get the response data as a JSON
data = response.json()

# Print the data
print(data)"
"Write a Python script that takes two string inputs, a first name and a last name and returns the full name.","""John""
""Smith""","def get_full_name(first, last):
  full_name = f""{first} {last}""
  return full_name

name = get_full_name(""John"", ""Smith"")
print(name)"
Write a Python program that takes a string as input and returns a list of words.,"""The quick brown fox jumps over the lazy dog""","def get_words(input_str):
    return input_str.split()

result = get_words(""The quick brown fox jumps over the lazy dog"")
print(result)"
Write a Python program to convert a list of numbers into a comma-separated string.,"[7, 8, 9, 10]","def listToString(numbers):
 return ','.join(str(num) for num in numbers)

list = [7, 8, 9, 10]
result = listToString(list)

print(result)

# Output: '7,8,9,10'"
Generate a code that will print out all substrings of a given string.,python,"def substrings(s):
    sub_str_list = []
    for i in range(len(s)):
        for j in range(i + 1, len(s)+1):
            sub_str = s[i:j]
            sub_str_list.append(sub_str)
    return sub_str_list

result = substrings(""python"")
print(result)"
Produce a program in Python to search for an element in a list,"[2, 3, 4, 5, 6]","# function to search an element  
# in a list 
def linear_search(list, x): 
    for index, element in enumerate(list): 
        if element == x: 
            return index 
    return -1"
Create a Python program which takes a list of integers and prints a list containing only those integers which have more than 2 occurrences in the input list.,"list = [1, 2, 3, 4, 5, 2, 3, 1, 6, 3]","list = [1, 2, 3, 4, 5, 2, 3, 1, 6, 3]

def findDuplicates(list):
 result = []
 seen = set()
 
 for num in list:
 if num not in seen:
 seen.add(num)
 else:
 result.append(num)
 
 return result

print(findDuplicates(list))"
Design a program using Python that capitalizes the first letter of every word in a given string.,"string = ""this is a sentence""","def capitalize(string):
    words = string.split() 
    capitalized_words = [word[0].upper() + word[1:] for word in words]
    return "" "".join(capitalized_words)

print(capitalize(""this is a sentence""))"
Compose a python program to carry out the following purpose,Check if a string is a palindrome,"def is_palindrome(s):
	rev_s = s[::-1]
	
	if s == rev_s:
		return True
	else:
		return False"
"Using Python, create a command line program to print out the frequency of a given string in a given text.","text = 'This is an example string.'
string = 'example'","def countSubstring(text, string):
 count = 0
 for i in range(len(text)):
 if text[i:i+len(string)] == string:
 count += 1
 return count

print(countSubstring(text, string))"
Write a Python program to create a new list with only odd numbers.,"[1,2,3,4,5,6,7,8,9]","def get_odd_numbers(nums):
    odd_nums = []
    for num in nums:
        if num % 2 == 1:
            odd_nums.append(num)
    return odd_nums

nums = [1,2,3,4,5,6,7,8,9]
print(get_odd_numbers(nums))"
Code a Python program that takes an array of integers and forms them into subarrays of length k.,"array = [2, 3, 4, 5, 6, 7, 8], k = 3","def form_subarrays(array, k):
    subarrays = []
    start = 0
    end = k
   
    # loop until all of the elements are placed in 
    # subarrays
    while start < len(array):
        subarrays.append(array[start:end])
        start += k
        end += k
    
    return subarrays"
Create a Python script which inputs a sentence and performs POS tagging and letter count for the text using NLTK library.,This is an example sentence.,"import nltk

sentence = 'This is an example sentence.'
words = nltk.word_tokenize(sentence)
tagged_words = nltk.pos_tag(words)

letter_count = 0
for word in words:
 letter_count += len(word)

print('POS Tags: ', tagged_words)
print('Letter Count: ', letter_count)"
Write a Python program to find the length of the longest increasing subsequence in a given array.,"[3, 4, 2, 1, 7]","def longest_increasing_subsequence(arr):
    length = len(arr)
    lis = [1] * length
    for i in range(1, length):
        for j in range(0, i):
            if arr[i] > arr[j] and lis[i] < lis[j] + 1:
                lis[i] = lis[j] + 1
    return max(lis)

result = longest_increasing_subsequence([3, 4, 2, 1, 7])
print(result)"
Generate code in Python to identify the type of an input number.,Number: 100,"if(type(100) == int):
    print(""It is an integer"")
elif(type(100) == float):
    print(""It is a float"")"
Create a python function that takes two inputs as a string and returns their concatenated output.,"String a = 'Hello'
String b = 'World'","def concat(a,b):
    return a+b"
Create a confidence-based voting system in Python.,"The input is a list of 5 different classifiers with numeric predictions: [classifier1: 0.6, classifier2: 0.3, classifier3: 0.2, classifier4: 0.9, classifier5: 0.1]","def confidence_voting(predictions):
 classifier_sum = 0
 total_confidence = 0
 for classifier, prediction in predictions.items(): 
     classifier_sum += prediction 
     total_confidence += (classifier_sum * prediction)
 return total_confidence/classifier_sum"
Create a function in Python to remove all the occurences of a given letter in a string.,"letter = 'a', 
string = 'Abra Cadabra'","def remove_occurences(letter, string):
	return string.replace(letter, '')"
Write a Python program to filter strings linked by commas and return only strings longer than three characters in length.,"""Code,Generation,Task,Instructions""","def filter_strings(string):
    strings = string.split(',')
    filtered = []
    for s in strings:
        if len(s) > 3:
            filtered.append(s)
    return filtered

filtered_strings = filter_strings(""Code,Generation,Task,Instructions"")
print(filtered_strings)"
Implement a Python script to flatten a list of lists.,"list_of_lists = [[1, 2, 3], [4, 5], [6, 7, 8, 9]]","def flatten_list(list_of_lists):
    flattened = []
    for sub_list in list_of_lists:
        for item in sub_list:
            flattened.append(item)
    return flattened"
Create a custom function in python to compute the total cost of an item.,"price=200
quantity=4
shipping=20
tax=8","def compute_total_cost(price, quantity, shipping, tax):
    return price * quantity + shipping + tax"
Write a function to generate a 3x3 matrix in Python filled with random integers,No input,"import random 
  
def generate_matrix():
    matrix = [[random.randint(1, 9) 
                for x in range(3)] 
                    for y in range(3)] 
  
    return matrix

result = generate_matrix()
print(result)"
Write a Python function to pass a number as a parameter and generate a table of the given size.,Number: 3,"def generate_table(n):
    # Generates a table with n columns and rows 
    for i in range(1, n+1):
        for j in range(1, n+1):
            print(i * j, end=""\t"")
        print()
 
generate_table(3)"
Write a code to compare two complex numbers in Python.,"z1 = 2+3j
z2 = 2-3j","def compare_complex_numbers(z1, z2):
    if z1.real == z2.real and z1.imag == z2.imag:
        return 'z1 and z2 are equal'
    else:
        return 'z1 and z2 are not equal'"
Use the Python script below to generate a random sequence of 0s and 1s.,"import random

def generate_sequence(length):
 return [random.randint(0, 1) for _ in range(length)]","def is_balanced(sequence):
 count = {0: 0, 1: 0}
 for bit in sequence:
 count[bit] += 1
 
 return count[0] == count[1]
 
sequence = generate_sequence(20)
balanced = is_balanced(sequence)

print(""Sequence:"", sequence)
print(""Balanced:"", balanced)"
Generate a Python program that will take two lists of integers as input and return a new list with the pairwise sums of the two inputs.,"List 1: 1,2,3,4
List 2: 4,5,6,7","def pairwise_sum(l1, l2):
    result = []
    for x, y in zip(l1, l2):
        result.append(x + y)
    return result

#Example Usage
list_1 = [1,2,3,4]
list_2 = [4,5,6,7]

sums = pairwise_sum(list_1, list_2)
print(sums) # [5,7,9,11]"
Write a Python function to split a given string into equal parts in a loop.,"string = ""Hello World""","def split_string(string):
    result = []
    for i in range(0, len(string), int(len(string) / 2)):
        result.append(string[i: i + int(len(string) / 2)])
    return result"
Generate a program in python to capitalize the first letter of each word in a string.,my name is john,"def capitalize(string):
    words = string.split()
    capitalized_words = [word.capitalize() for word in words]
    return "" "".join(capitalized_words)"
Implement a function in Python to determine the number of each character in a string.,"String: ""Hello, World!""","def count_characters(my_string):
    my_dict = dict()
    for character in my_string:
        if character in my_dict:
            my_dict[character] += 1
        else:
            my_dict[character] = 1
    return my_dict

String = ""Hello, World!""
print(count_characters(String)) # Output: {'H': 1, 'e': 1, 'l': 3, 'o': 2, ', ': 1, 'W': 1, 'r': 1, 'd': 1, '!': 1}"
"Using regular expression in Python, write a program to extract any birthday dates from a text.",This is a text where I am talking about my birthday 4th October 2020,"import re

text = 'This is a text where I am talking about my birthday 4th October 2020'

pattern = r'\d{1,2}\s[A-Z][a-z]{2,8}\s\d{4}'

match = re.search(pattern, text)
if match:
    print(match.group())"
Modify the following python program to create a new list whose elements are a tuple with the values of both lists?,"list1 = [1, 2, 3, 4] 
list2 = [5, 6, 7, 8]","list1 = [1, 2, 3, 4] 
list2 = [5, 6, 7, 8] 

#create an empty list
list3 = []

#iterate through each item in the two lists
for x, y in zip(list1, list2):
    #append each tuple as a single element in the new list
    list3.append((x, y))

print(list3)"
"Create a function in Python to calculate the average of a given list [9, 8, 7].","[9, 8, 7]","def calculate_average(lst): 
 sum = 0
 for el in lst: 
  sum += el
 return sum / len(lst) 
 
 avg = calculate_average([9, 8, 7]) 
 print(avg) 
# Output: 8.0"
Add a try-catch block to the given Python code,"x = 10
y = 0
z = x/y","try:
  x = 10
  y = 0
  z = x/y
except ZeroDivisionError:
  print(""ZeroDivisionError occurred: Cannot divide a number by 0"")"
Write a Python program that takes two strings and returns their combined length.,"word1 = ‘Hello’ 
word2 = ‘world’","def combine_string_lengths(word1, word2): 
  return len(word1) + len(word2)"
Generate a Python code snippet for sorting an array of strings in ascending alphabetical order.,"[""apple"", ""banana"", ""orange"", ""kiwi""]","def sort_words(words):
    # Sort the list in ascending alphabetical order.
    sorted_words = sorted(words)
    # Return the sorted list.
    return sorted_words
    
words = [""apple"", ""banana"", ""orange"", ""kiwi""]

sorted_words = sort_words(words)

print(sorted_words)"
"Given an integer input, write a Python program to find the maximum value of the input and print out the result.","3, 5, 7","input_list = [3, 5, 7]
 
max_value = max(input_list)
 
print(max_value) # prints 7"
Create a Python program that extrapolates the most frequent word from a given text.,"Text = ""This is an example of a text with some words""","from collections import Counter

def most_frequent_word(string):
    split_string = string.split("" "")
    counter = Counter(split_string)
    return counter.most_common(1)[0][0]

print(most_frequent_word(""This is an example of a text with some words""))"
Compute the prime factors of a given number using Python.,24,"def primeFactors(num):
	for div in range(2, num // 2 + 1):
		while num % div == 0:
			print(div)
			num //= div
	if num > 1:
		print(num)

num = 24
primeFactors(num) // 2, 2, 2, 3"
Suggest an implementation for the following class declaration in Python.,class Profile:,"class Profile:
    def __init__(self, first_name, last_name, occupation):
        self.first_name = first_name 
        self.last_name = last_name 
        self.occupation = occupation 
        
    def full_name(self): 
        return self.first_name + "" "" + self.last_name"
Develop a solution in Python for combining two sorted arrays into a third sorted array.,"arr1 = [1, 2, 5]
arr2 = [2, 4, 6]","def combine_sorted_arrays(arr1, arr2):
    arr3 = arr1 + arr2
    arr3.sort()
    return arr3

arr1 = [1, 2, 5]
arr2 = [2, 4, 6]

arr3 = combine_sorted_arrays(arr1, arr2)
print(arr3)"
Create a Python program to generate the powers of two up to a given number.,8,"def powersOfTwo(n):
    powers = []
    for i in range(n + 1):
        powers.append(2**i)
    return powers

n = 8
print(powersOfTwo(n))"
Create a Python script that compares two lists and prints their differences.,"list1 = [1, 2, 3, 4] 
list2 = [2, 4, 6, 8]","list1 = [1, 2, 3, 4] 
list2 = [2, 4, 6, 8]

list_diff = []

for i in list1:
    if i not in list2:
        list_diff.append(i)
        
for j in list2:
    if j not in list1:
        list_diff.append(j)
        
print(list_diff) # output: [1, 3, 6, 8]"
Implement a hash algorithm according to these specifications in Python.,"Length of Hashed String: 6
Hash Algorithm: SHA1","import hashlib

def generate_hash(string):
    hashed_string = hashlib.sha1(string.encode())
    return hashed_string.hexdigest()[:6]

hashed_string = generate_hash(""Code Generation Task Instructions"")
print(hashed_string)"
Generate a code in Python to extract the capital letters from a given string.,Hello World!,"def extract_capitals(string):
    capitals = """"
    for character in string:
        if character.isupper():
            capitals += character
    return capitals

# Main program
input_string = ""Hello World!""
capitals = extract_capitals(input_string)
print(capitals)"
Create a program in Python to flatten a given array of arrays.,"[[1,2,[3]],4]","def flatten_list(arr):
  result = []
  for element in arr:
    if type(element) == list:
      result += flatten_list(element)
    else:
      result.append(element)
  return result

arr = [[1,2,[3]],4]

print(flatten_list(arr)) # [1, 2, 3, 4]"
Suggest the python code for detecting the position of a character in a string.,"String: ""Hello World!""
Character: ""!""","def position_of_char(string, char):
    '''This function will detect the position of a character in a string.'''
    return string.index(char)"
Write a Python program that prints a table of contents from a given list of headings.,"headings = [""Introduction"", ""Fundamentals"", ""Algorithms"", ""Design Patterns"", ""Conclusion""]","headings = [""Introduction"", ""Fundamentals"", ""Algorithms"", ""Design Patterns"", ""Conclusion""]

print(""Table of Contents"")
for i, heading in enumerate(headings):
  print(f""{i+1}.{heading}"")"
Convert a given string to an array of characters using Python.,"str = ""Hello World!""","""""""
Convert a given string to an array of characters using Python
""""""

str = ""Hello World!""

list = []

for character in str:
    list.append(character)
    
print(list) #['H', 'e', 'l', 'l', 'o', ' ', 'W', 'o', 'r', 'l', 'd', '!']"
Write a Python program to remove all duplicate elements in a given list.,"given_list = [1, 2, 3, 4, 3, 2, 1]","def remove_duplicates(given_list):
    output = []
    for num in given_list:
        if num not in output:
            output.append(num)
    return output"
Create a function in Python to check if a given list of numbers is in ascending or descending order.,"[5, 3, 8, 6, 1]","def check_order(lst):
  ascending = all(lst[i] < lst[i+1] for i in range(len(lst)-1))
  descending = all(lst[i] > lst[i+1] for i in range(len(lst)-1))
  if ascending:
    return 'ascending'
  elif descending:
    return 'descending'
  else:
    return 'not ordered'"
"Design an algorithm in Python, that takes an array and sort it in ascending order.","[10, 3, 9, 1, 15, 2]","def sort_ascending(array):
  array.sort()
  return array

sort_ascending([10, 3, 9, 1, 15, 2])  # [1, 2, 3, 9, 10, 15]"
Create a function in Python to generate a multiplication table with numbers in a range given start and end parameters.,"start = 5
end = 10","def multiplication_table(start, end):
	for x in range(start, end + 1):
		for y in range(start, end + 1):
			print(x * y, end = ""  "")
		print(""\n"")
		
multiplication_table(start, end)"
Write a function to print the following pattern in Python.,n = 3,"def print_pattern(n): 
  
    # outer loop to handle number of rows 
    for i in range(1,n+1): 
      
        # inner loop to handle number of columns 
        for j in range(1,i+1): 
          
            # printing stars 
            print('* ', end="""") 
       
        # ending line after each row 
        print(""\r"") 
  
# Driver Code 
n = 3
print_pattern(n)

Output:
* 
* * 
* * *"
Write a python program to calculate the maximum of 3-d array and return the value.,"arr = [[[1, 2], [3, 4]], [[5, 6], [7, 8]], [[9, 10], [11, 12]]]","def calc_max(arr):
    max_val = arr[0][0][0]
    for i in range(len(arr)):
        for j in range(len(arr[i])):
            for k in range(len(arr[i][j])):
                if arr[i][j][k] > max_val:
                    max_val = arr[i][j][k]
    return max_val

print(calc_max(arr))"
Compose a Python program to classify data,"Classify the given dataset [5, 10, 25, 11, 14, 20] into two categories - numbers below 15 and numbers above 15.","def classify_number_data(data):
    numbers_below_15 = []
    numbers_above_15 = []

    for number in data:
        if number <= 15:
            numbers_below_15.append(number)
        else:
            numbers_above_15.append(number)
    
    return numbers_below_15, numbers_above_15"
Create a Python Flask application that takes a user input and generates a new text from the input.,Alice was once a a little girl living,"from flask import Flask

app = Flask(__name__)

@app.route('/', methods=['POST'])
def generate_newtext():
 input_text = request.form.get('input_text')
 
 new_text = input_text + "" She had wonderful adventures exploring the world around her and filled her days with joy.""
 
 return new_text
 
if __name__ == '__main__':
 app.run()"
Edit an existing Python program to remove a specific element from the list.,"my_list = ['abc', '123', 'def', '345'] 
element = 'def'","my_list = ['abc', '123', '345']

if element in my_list:
    my_list.remove(element)"
Write a Python code snippet for encrypting a given string using secret key.,"secret_key = 'test'
string = 'hello world'","import base64

def encrypt(key, string):
    enc = []
    for i in range(len(string)):
        key_c = key[i % len(key)]
        enc_c = chr((ord(string[i]) + ord(key_c)) % 256)
        enc.append(enc_c)
    return base64.urlsafe_b64encode("""".join(enc).encode()).decode()

encrypted_string = encrypt(secret_key, string)
print(encrypted_string)"
Generate a Python program to group a given list of strings into a dictionary based on the length of the string.,"words = [""apple"", ""cat"", ""robot"", ""fly"", ""revolution""]","words = [""apple"", ""cat"", ""robot"", ""fly"", ""revolution""]

words_by_length = {}

for word in words:
 length = len(word)
 if length not in words_by_length:
 words_by_length[length] = []
 words_by_length[length].append(word)"
Modify the following Python program to make it run faster by optimizing the code.,"# This code takes a list of integers and finds the 2nd biggest
def find_2nd_largest(l):
  biggest = -1
  2nd_biggest = -1
  for i in l:
    if i > biggest:
      2nd_biggest = biggest
      biggest = i
    elif i > 2nd_biggest:
      2nd_biggest = i
  return 2nd_biggest","def find_2nd_largest(l):
  biggest = max(l)
  l.remove(biggest)
  2nd_biggest = max(l)
  return 2nd_biggest"
Suggest five different ways to optimize the following Python code.,"data_sample = [1, 2, 3, 4, 5, 6, 7, 8]

def find_max(data): 
  max_value = data[0]   
  for x in data: 
    if x > max_value: 
        max_value = x 
  return max_value","1. Use max() instead of looping through each item of array
2. Preallocate memory for max_value
3. Using in-built iterator 
4. Remove redundant statements from code
5. Use list comprehension instead of looping through each item of array"
Write a python script to estimate the value of Pi to a specific degree of accuracy.,Degree of accuracy: 7,"def estimate_value_of_Pi_to_degree(n):
    use_below_formula = (22/7)*(10**n)
    return round(use_below_formula, n)

print (estimate_value_of_Pi_to_degree(7))"
Write a Python program that takes in a list of values and returns the maximum value.,"[1, 5, 2, 9, -2]","def get_maximum_value(lst):
    return max(lst)

print(get_maximum_value([1, 5, 2, 9, -2]))"
Design a solution in Python to identify all the words containing the given letter.,"String: ""Hello World""
Letter: ""H""","def find_words_containing_letter(givenString, letter):
    words = givenString.split(' ')
    words_containing_letter = []

    for word in words:
        if letter in word:
            words_containing_letter.append(word)
    
    return words_containing_letter

print(find_words_containing_letter('Hello World', 'H'))"
Create a code snippet in Python to sort the following array in ascending order.,"[5, 8, 2, 6]","def sort_ascending(arr):
    arr.sort()
    return arr

result = sort_ascending([5, 8, 2, 6])
print(result)"
Create a Python program that can turn a regular text phrase into a hex encoded form.,Hello World,"def text_to_hex(text):
    hex_encoded = """"
    for i in text:
        hex_encoded += ((hex(ord(i)))[2:]).zfill(2) 
    return hex_encoded

print(text_to_hex(""Hello World""))"
Create a Python code snippet for querying a database and converting the data into a Pandas DataFrame.,"A SQL query that returns column names name, age, gender, and location","import pandas as pd
import sqlite3

conn = sqlite3.connect('example.db')

df = pd.read_sql_query(""SELECT name, age, gender, location FROM table_name"", conn)

conn.close()"
Write a function in Python to remove the last element from a given array.,"[1, 6, 7, 3, 4]","def remove_last_element(arr):
  return arr[:-1]"
Create a Python algorithm to identify the longest word in a sentence.,“The rain in Spain stays mainly in the plain.”,"def find_longest_word(sentence):
    words = sentence.split()
    # initialise longest_word variable with 0
    longest_word = 0
    for word in words:
        if len(word) > longest_word:
            longest_word = len(word)
            longest_word_str = word
    return longest_word_str"
Create a Python module that evaluates a given expression and returns the result,"""2+2*2""","def evaluate(expr):
    return eval(expr)"
Write a python program to calculate the Mean Squared Error (MSE) loss between the predicted output and the actual output.,"Actual Output: [1, 2, 3, 4, 5] 
Predicted Output: [2, 3, 4, 5, 6]","mse_loss = ((1-2)**2 + (2-3)**2 + (3-4)**2 + (4-5)**2 + (5-6)**2)/5
print(mse_loss)
# Output: 1.2"
Write a function that takes two strings and returns a new string of the longest length.,"""Python"", ""programming""","def longest_string(string1, string2):
    if len(string1) > len(string2):
        return string1
    else:
        return string2

longest_str = longest_string(""Python"", ""programming"")
print(longest_str)"
"Edit the following Python script to randomly select 10 numbers between 10 and 20, store them in the list lst, and print them out.",lst = [],"import random
lst = random.sample(range(10, 21), 10)
print(lst)"
Write a Python program to automatically generate the HTML for a table from a dictionary of data.,"d = {""col1"": [""A"", ""B"", ""C""],
""col2"": [2, 4, 6],
""col3"": [3, 5, 7]}","html_str = '<table><tr>'

for key in d:
 html_str += '<th>{}</th>'.format(key)
html_str += '</tr>'

for i in range(len(d['col1'])):
 html_str += '<tr>'
 for key in d:
 html_str += '<td>{}</td>'.format(d[key][i])
 html_str += '</tr>'

html_str += '</table>'

print(html_str)"
Develop a method in Python that takes a string as an input and outputs the number of vowels in the string.,"string = ""Hello World""","def vowel_count(string):
  count = 0
  vowels = 'aeiou'
  for char in string.lower():
    if char in vowels:
      count += 1
  
  return count

print(vowel_count(""Hello World""))"
Generate a python program to modify all the characters in a string to lowercase,"string = ""HELLO WORLD""","def to_lowercase(string):
    lowercase_string = """"
    for char in string:
        lowercase_string += char.lower()
    return lowercase_string

if __name__ == '__main__':
    string = ""HELLO WORLD""
    print(to_lowercase(string))"
Write a python program to add two matrices.,"X = [[1, 2, 3], 
    [3, 4, 5], 
    [6, 7, 8]]
Y = [[2, 3, 4],
    [5, 6, 7],
    [8, 9, 10]]","def add_matrices(X, Y): 
  
    result = [[0, 0, 0], 
            [0, 0, 0], 
            [0, 0, 0]] 
  
    # iterate through rows 
    for i in range(len(X)): 
      
        # iterate through columns 
        for j in range(len(X[0])): 
            result[i][j] = X[i][j] + Y[i][j] 
  
    for r in result: 
        print(r)"
Write a Python program that processes a given list and returns a new list with all its duplicate elements removed.,"a = [1, 1, 2, 3, 3, 5]","def remove_duplicates(a):
    new_list = []
    for i in a:
        if i not in new_list:
            new_list.append(i)
    return new_list

a = [1, 1, 2, 3, 3, 5]
b = remove_duplicates(a)
print(b) 

# Output: [1, 2, 3, 5]"
Rewrite the following code in a different programming language.,"// JavaScript code
let arr = [1, 2, 3, 4, 5];

arr.forEach(item => {
 console.log(item * 2);
});","# Python code
arr = [1, 2, 3, 4, 5]

for item in arr:
 print(item * 2)"
Write a python code to extract the year from a string.,"string = ""This movie was released in 1980""","import re

string = ""This movie was released in 1980""

# search for substring of 4 digits
result = re.search(r'\d{4}', string)

# print the year
if result:
    print(result.group())"
Create a block of code for a Python program to generate a multiplication table for a given number.,num = 6,"# Create a multiplication table for a given number
num = 6

# Loop to generate the table
for i in range(1, 11):
  print(f'{num} x {i} = {num * i}')"
Write a function in Python to find the first non-repeating character in a given string.,"""the quick brown fox jumps over the lazy dog""","def non_repeating_char(s):
    char_freq = {}
    for c in s:
        if c in char_freq:
            char_freq[c] += 1
        else:
            char_freq[c] = 1
    
    for c in s:
        if char_freq[c] == 1:
            return c

if __name__ == '__main__':
    print(non_repeating_char(""the quick brown fox jumps over the lazy dog""))"
Write a Python function to convert a list of characters to their corresponding ASCII codes.,"[‘a’, ‘b’, ‘c’, ‘d’]","def to_ascii(arr):
    res = []
    for c in arr:
        res.append(ord(c))
    return res

print(to_ascii(['a', 'b', 'c', 'd']))"
"Using the input, generate a python program to count the number of times a specific word appears in a sentence or a paragraph.","sentence = 'My favorite color is blue'
word = 'blue'","def count_word(sentence, word):
    words = sentence.split(' ')
    return words.count(word)"
Generate a Python script to shuffle the elements in a list.,"Sample list [5, 2, 7, 1, 8]","import random

list = [5, 2, 7, 1, 8]
random.shuffle(list)

print(list) # Output -> [1, 8, 5, 2, 7]"
Write a Python function to insert an element in a given list after a given index.,"list = [1, 2, 3, 4, 5]
index = 2
element = 6","def insert_element(list, index, element):
    list.insert(index + 1, element)
    return list"
Create a web application in Python that displays a directory structure tree for a given path.,/home/myUser/myFolder,"import os

def make_tree(path): 
 files = os.listdir(path) 
 for f in files: 
     full_path = os.path.join(path, f) 
     if os.path.isdir(full_path): 
         print(f) 
         make_tree(full_path) 
     else: 
         print("" -"" + f) 
  
path = '/home/myUser/myFolder' 
make_tree(path)"
Generate a python script to perform this action.,"Given a string, remove all the consecutive duplicates from the string.

Input: ""AAABBCCCD""","def remove_duplicates(string): 
    result = """" 
    prev = '' 

    for char in string:
        if char != prev: 
            result += char
            prev = char
    return result

result = remove_duplicates(""AAABBCCCD"")
print(result)"
Implement an optimization algorithm in Python to find the local minima of a given function f(x).,f(x) = x^2 + 6x - 4,"def objective_function(x):
 return x**2 + 6*x - 4

def find_local_minima(func):
 x = 0
 delta = 0.01

while True:
 x_new = x + delta
 if objective_function(x_new) < objective_function(x):
 x = x_new
 else:
 return x

print('The local minima is', find_local_minima(objective_function))"
Generate a function that can be used to sort a given Python list in ascending order,<No Input>,"def sort_asc(lis):
    for i in range(len(lis)):
        for j in range(i + 1, len(lis)):
            if lis[i] > lis[j]:
                lis[i], lis[j] = lis[j], lis[i] 
    return lis"
"Given a list of numbers, write a Python program to check if any two numbers in the list add up to a given target number.","nums = [1, 4, -5, 3]
target = 2","def find_two_add_up_to_target(nums, target): 
    for num1 in nums:
        for num2 in nums:
            if num1 + num2 == target:
                return True
    return False"
Identify any errors in the following Python code.,"numbers = [1, 2, 3, 4]

for num in numbers
    print(num)","The code is incorrect because it is missing the colon at the end of the loop statement. 
It should be 'for num in numbers:' instead of 'for num in numbers'."
Write a Python program to compare two strings to determine which string would appear first in alphabetical order.,"string1 = ""hello""
string2 = ""world""","string1 = ""hello""
string2 = ""world""

if string1 < string2:
    print(string1 + "" comes before "" + string2 + "" alphabetically"")
else:
    print(string2 + "" comes before "" + string1 + "" alphabetically"")"
"Write a Python program to generate a random password consisting of lowercase alphabets, numerical digits and special characters.",password length: 10,"import string
import random

def generate_password(length):
 password_characters = string.ascii_lowercase + string.digits + string.punctuation
 password = ''.join(random.choice(password_characters) for i in range(length))
 return password"
Develop a method in Python for removing all duplicate elements from an array.,"[1, 3, 5, 4, 6, 3, 5, 4]","def removeDuplicates(arr): 
    newArr = []
    for i in arr: 
        if i not in newArr: 
            newArr.append(i) 
    return newArr

arr = [1, 3, 5, 4, 6, 3, 5, 4]
result = removeDuplicates(arr)
print(result)"
Create a Python program to calculate the average of all the ratings in the given list of tuple.,"[(3, 4), (5, 5), (7, 3)]","def avg_rating(ratings):
    total = 0
    for rating in ratings:
        total += rating[0] + rating[1]
    return total / (len(ratings)*2)"
Develop a function in Python that takes in a list and sorts the elements alphabetically.,"my_list = [""word"", ""translate"", ""language"", ""computer""]","def sort_list(my_list):
  my_list.sort()
  return my_list 

print(sort_list(my_list))"
Take the following Python code and refactor it using list comprehensions.,"arr = [1, 2, 3, 4, 5, 6] 
new_arr = [] 

for i in arr: 
    if i % 2 == 0: 
        new_arr.append(i**2)","arr = [1, 2, 3, 4, 5, 6] 
new_arr = [i**2 for i in arr if i % 2 == 0]"
Generate a Python program to edit a given list of strings and remove the duplicates in-place.,"[""AB"", ""AC"", ""AB"", ""CD"", ""AC""]","list = [""AB"", ""AC"", ""AB"", ""CD"", ""AC""]

seen = set()
res = []

for item in list:
    if item in seen:
        continue
    seen.add(item)
    res.append(item)

list[:] = res

print(list)"
"In Python, create a function to find the difference in number of a's and b's in a string.",abcdba,"def countDifference(s): 
   a_count = 0
   b_count = 0
   for i in range(len(s)):  
       if (s[i] == 'a'): 
           a_count = a_count + 1
       elif (s[i] == 'b'): 
           b_count = b_count + 1
   diff = a_count - b_count
   return diff

print(countDifference('abcdba'))"
Analyze a given text to extract the entities(with their type) in the text using a Python script.,The President Barack Obama was born in Hawaii.,"import spacy

text = ""The President Barack Obama was born in Hawaii.""

nlp = spacy.load(""en_core_web_sm"")
doc = nlp(text)

for entity in doc.ents:
    print(f""{entity.text} ({entity.label_})"")

Output: 
The President (ORG)
Barack Obama (PERSON)
Hawaii (GPE)"
"Use regex in a Python program to find all instances of the word ""the"".",The quick brown fox jumps over the lazy dog,"import re

string = 'The quick brown fox jumps over the lazy dog'

# Prints matches
matches = re.findall('the', string, re.IGNORECASE)
print(matches)"
"Create a Python script that given a list of numbers, multiplies each number by two and prints out the resulting list.","List: [1, 5, 8, 10]","def multiply_by_two(numbers):
result = []
for num in numbers:
 result.append(num * 2)
return result

numbers = [1, 5, 8, 10]
print(multiply_by_two(numbers))
# Outputs: [2, 10, 16, 20]"
Create a Python script that takes a list of strings as an input and prints the length of each string in the list.,"words = ['dog', 'cat', 'spring', 'summer']","words = ['dog', 'cat', 'spring', 'summer']
for word in words:
    print(len(word))"
Design an algorithm in Python that takes in a list of numbers and prints out the first and last element in the list.,"lst=[5,3,1,7,9]","def first_last(lst):
    first_element = lst[0]
    last_element = lst[-1]
    return [first_element, last_element]

print(first_last([5,3,1,7,9]))"
Rewrite the following Python code to improve readability and to simplify the code,"start = 0
end = 10
while start < end:
  print start
  start = start + 1","for start in range(10):
  print(start)"
Replicate an existing 3D plotting library in Python.,"The 3D plotting library consists of three functions, Plot3D, MeshGrid and Show.","def Plot3D(x, y, z): 
    fig = plt.figure() 
    ax = plt.axes(projection =""3d"") 
    ax.plot3D(x, y, z) 

def MeshGrid(x, y, z): 
    fig = plt.figure() 
    ax = plt.axes(projection =""3d"") 
    ax.plot_surface(X, Y, Z) 

def Show(): 
    plt.show()"
Create a Python program that takes a list of strings and filters out strings that do not contain the letter 'a'.,"words = [""apple"", ""banana"", ""grape"", ""pear"", ""kiwi""]","# Filtering out strings without letter 'a'
filtered_words = [word for word in words if 'a' in word]

# Print the filtered list
print(filtered_words)
# Output: ['apple', 'banana', 'grape']"
Create a program in Python to find the total number of words in a text,This is a sample text,"def word_total(text):
    words = text.split("" "")
    word_count = len(words)
    return word_count"
Write a Python code to determine if the user has enough money in the account for a given transaction.,"balance = 200
amount = 50","def enough_balance(balance, amount):
    if amount > balance:
        return False
    return True

if __name__ == '__main__':
    print(enough_balance(balance, amount))"
Optimize this Python code to make it more efficient.,"def count_numbers(lst):
    count = 0
    for i in range(len(lst)):
        if lst[i].isdigit():
            count += 1
    return count","def count_numbers(lst):
    count = sum(map(str.isdigit, lst))
    return count"
Generate code in Python to find all unique elements in a list.,"[1, 2, 5, 2, 4, 1]","original_list = [1, 2, 5, 2, 4, 1]
unique_list = []

for item in original_list:
    if item not in unique_list:
        unique_list.append(item)

print(unique_list)"
Write a Python program to calculate the compound interest.,"investment_amount = 1000, time = 5, rate_of_interest = 5","def compoundInterest(investment_amount, rate_of_interest, time):
    compound_interest = investment_amount * (pow((1 + rate_of_interest / 100), time))
    return compound_interest

ci = compoundInterest(1000, 5, 5)
print(ci)"
Optimize the following python code to make it run faster.,"def sum_of_squares(n):
    s = 0
    for i in range(n):
        s += i * i
    return s","def sum_of_squares(n):
    # Use summation formula to optimize the code
    return (n * (n + 1) * (2 * n + 1)) // 6"
Generate a python program to extract all the words starting with a given letter,given letter: e,"def extract_words(word_list, given_letter):
    extracted_words=[]
    for word in word_list:
        if word[0]==given_letter:
            extracted_words.append(word)
    return extracted_words"
Generate a function in Python to count the number of words in a given sentence.,Hello there,"def count_words(sentence):
    words = sentence.split(' ')
    return len(words)

print(count_words(""Hello there"")) # Output: 2"
Improve the performance of this Python function by adding caching or other techniques.,"def add_two_numbers(n1, n2):
 return n1 + n2","import functools

@functools.lru_cache(maxsize=None)
def add_two_numbers(n1, n2):
 return n1 + n2"
Create a Python program that searches a list of words for a given pattern.,"words = [""cat"", ""dog"", ""mouse"", ""camel""]
pattern = ""ca*""","pattern = ""ca*""

found_words = []

for word in words:
    if fnmatch.fnmatch(word, pattern):
        found_words.append(word)

print(found_words)

# Output: [""cat"", ""camel""]"
Create a function in Python to print the first n numbers of the Fibonacci series.,6,"def Fibonacci(n): 
 a = 0
 b = 1
if n<0: 
 print(""Incorrect input"") 
elif n==0: 
 print(a) 
elif n==1: 
 print(b) 
else: 
 print(a)
 print(b)
 for i in range(2,n): 
 c = a + b 
 a = b 
 b = c 
 print(b)"
Optimize the python code below for memory efficiency.,"my_list = []
for i in range(20):
    my_list.append(i**2)",my_list = [i**2 for i in range(20)]
Write a python program to iterate over two lists and print only the common items.,"list1 = [1, 2, 3, 4, 5]
list2 = [4, 5, 6, 7, 8]","list1 = [1, 2, 3, 4, 5]
list2 = [4, 5, 6, 7, 8]

for i in list1:
  if i in list2: 
    print(i)"
Generate a Python program that can take any type of input and return 'Valid' or 'Invalid'.,No input,"def check_input(data):
    if type(data) in [int, str, list, dict, set]:
        return 'Valid'
    else:
        return 'Invalid'"
Write a Python program to convert ratings in a list of strings to a float.,"['4.5', '3.0', '2.5', '4.0']","def str_to_float(ratings):
    return [float(x) for x in ratings]"
Create a Python script for cleaning up text and removing non-alphabetic characters.,"This text contains some non-alphabetic characters, like ""%.","import re

text = ""This text contains some non-alphabetic characters, like “%.”""

clean_text = re.sub(r'[^a-zA-Z ]', '', text)

print(clean_text)

# Output: This text contains some alphabetic characters"
Define a sorting algorithm in Python that sorts numbers in ascending order.,"[3, 7, 5, 4, 1]","def sort(A):
    A_len = len(A)

    for i in range(A_len):
        for j in range(A_len - i - 1):
            if A[j] > A[j+1]:
                A[j], A[j+1] = A[j+1], A[j]

    return A

sort([3, 7, 5, 4, 1]) # Outputs [1, 3, 4, 5, 7]"
Generate a Python code to print the frequencies of the characters of a given string.,"""Hello World!""","freq={}
for ch in ""Hello World!"":
 if ch in freq:
 freq[ch] +=1
 else:
 freq[ch] = 1

for key, value in freq.items():
 print(""{}:{}"".format(key,value))"
Write a Python program to detect duplicate values in a list.,"my_list = [1, 3, 5, 6, 3, 4, 7, 5]","seen = set()
duplicates = []
for item in my_list:
 if item in seen:
 duplicates.append(item)
 else:
 seen.add(item)

print(duplicates)
# Output: [3, 5]"
Write a function in Python to select the 3rd character from each string in the given list.,"['IronMan', 'Hulk', 'Thor', 'Captain America']","def third_char(lst):
 third_chars = """"
 for word in lst:
 third_chars += word[2]
 return third_chars

third_char(['IronMan', 'Hulk', 'Thor', 'Captain America'])"
Rewrite the following python code to be more concise while still producing the same output.,"for i in range(10):
 for j in range(10):
 print(""------------"")","for i in range(10):
 print(""------------\n""*10)"
Find the smallest number in the given list without using any built-in Python functions or sorting.,"arr = [8, 3, 9, 5, 1]","def find_smallest(arr):
    smallest = None
    for n in arr:
        if smallest is None or n < smallest:
            smallest = n
    return smallest
    
arr = [8, 3, 9, 5, 1]
smallest = find_smallest(arr)
print(smallest)"
Develop a function in Python which takes an input array of strings and returns a dictionary with the strings stored in their reverse order.,"[""Hello"", ""World""]","def reverseStrings(arr):
  revDict = {};
  for str in arr:
    revDict[str[::-1]] = str;
  return revDict;

reverseStrings([""Hello"", ""World""]); // Outputs: {'olleH': 'Hello', 'dlroW': 'World'}"
Create a basic scoring engine in Python that takes two numbers and returns the higher of the two.,"5, 6","def higher_number(num1, num2):
 if num1 > num2:
 return num1
 else:
 return num2

print(higher_number(5, 6)) # 6"
Generate Python code to filter a given list of numbers such that only the odd numbers are removed.,"[1, 2, 3, 4, 5]","def filter_odd(list):
    return [num for num in list if num % 2 == 0]"
"Write a function in Python that takes a single argument, a list of numbers, and returns a single number - the sum of all the numbers in the list.","[1, 2, 3, 4, 5]","def add_list(numbers):
  total = 0
  for number in numbers:
      total += number
  return total"
"Create a function in Python to convert a hexadecimal string (e.g. ""0xBA"") to a binary string (e.g. ""10111010"").","""0xA2""","def hex_to_binary(hex_str):
    # convert hex to int 
    num = int(hex_str, 16)
    # convert int to binary string
    bin_str = bin(num)[2:]
    
    return bin_str

print(hex_to_binary(""0xA2""))
# Output: ""10100010"""
Create a Python script that finds the longest word in a given array of words.,"['Python', 'JavaScript', 'C++', 'Java', 'Kotlin']","#  find the longest word
def findLongestWord(arr):
  
 longestWord = """"
 
 for word in arr:
 if(len(word) > len(longestWord)):
 longestWord = word
 
 return longestWord

# Driver code
words = ['Python', 'JavaScript', 'C++', 'Java', 'Kotlin']
print(""Longest word in the array is ""+ findLongestWord(words))"
"Use the inputs provided, write Python code to check if two integers are equal.","First Integer: 10
Second Integer: 10","if int(10) == int(10):
    print(""The two integers are equal"")
else:
    print(""The two integers are not equal"")"
Categorize each code snippet into the appropriate programming language.,"Code snippet 1:

def add(a, b):
    return a + b

Code Snippet 2:

int add (int a, int b) 
{
 return a + b;
}","Code snippet 1: Python
Code snippet 2: C/C++"
Write a Python program to flatten a nested list.,"lst = [[1,2,3], [4,5], [6]]","def flatten_list(lst):
    return [item for sublist in lst for item in sublist]"
Create a python loop to reduce a list of data points to their averages.,"[1, 2, 3, 4]","def averageList(arr):
    '''This function takes in an array and returns the average of all elements'''
    # initialize sum
    s = 0
    # traverse the array
    for i in arr:
        s += i
    # calculate average
    avg = s / len(arr)
    # return the average
    return avg

# Test
arr = [1, 2, 3, 4]
print(averageList(arr))
# Output 2.5"
Develop an algorithm to remove the duplicate words in a given string.,"""I love coding love coding Python""","def remove_duplicates(string): 
    words = string.split("" "") 
    res = [] 
    for word in words: 
        if word not in res: 
            res.append(word) 
    return ("" "".join(res)) 

string = ""I love coding love coding Python""
res = remove_duplicates(string) 
print(""String after removing duplicates:"")
print(res)"
Implement a basic sorting algorithm for an array of strings in Python.,"['banana', 'apple', 'orange']","def sort_array(arr):
    for i in range(len(arr)):
        for j in range(i+1, len(arr)):
            if arr[j] < arr[i]:
                arr[i], arr[j] = arr[j], arr[i]
    return arr"
Create a Bash script to run a python program in the background.,"""myscript.py""","#!/bin/bash

# Run the python program in the background
python myscript.py &

# Print the process id
echo ""Process id: $!""

# Wait for a keypress
read -p ""Press any key to exit""

# Kill the process
kill $!"
Create a Python script to sort a list of integers from lowest to highest.,"[3, 5, 1, 7, 4, 2]","def sort_list(list):
  # loop through the list
  for i in range(len(list)):
    # find the smallest number in the list
    lowest = min(list[i:])
    # find its index
    lowest_index = list.index(lowest)
    # swap the numbers
    list[i], list[lowest_index] = list[lowest_index], list[i]
  # return the sorted list  
  return list

print(sort_list([3, 5, 1, 7, 4, 2]))"
Write a Python program to search for a specific word in a given string and return the number of times the string appears.,"String: ""Hello, world! This is a sample message.""
Word: ""hello""","string = ""Hello, world! This is a sample message.""
word = ""hello""

count = string.lower().split().count(word.lower())
print(f""The word {word} appears {count} times in the given string."")"
Generate a Python program that can verify if a given sentence is correct or misspelled.,"The sentence: ""This is my new computer""","import re

def spell_check(sentence):
  words = re.findall(r'\w+', sentence)
  for word in words:
    if not word.lower() in dict:
        return False
  return True

sentence = ""This is my new computer""
result = spell_check(sentence)
if result:
    print('Correct spelling')
else:
    print('Incorrect spelling')"
Create a function in Python that takes two integers and returns the larger with the smaller one as its divisor.,"Input integers: 10, 20","def get_larger_number_divisible_by_smaller(num1, num2):
  max_num = max(num1, num2)
  min_num = min(num1, num2)

  return max_num if max_num % min_num == 0 else None

result = get_larger_number_divisible_by_smaller(10, 20)
print(result) # 20"
Write a python script to print the nth Fibonacci number.,6,"""""""
Python script to print the nth Fibonacci number
""""""

def fibonacci(num):
    a, b = 0, 1
    for _ in range(num):
        a, b = b, a+b
    return a

num = int(input(""Enter a number: ""))
print(""The Fibonacci number at position {0} is {1}"".format(num, fibonacci(num)))"
Create a Python script to remove all punctuation from a string.,String: A text containing punctuation marks.,"import string

# Define the input string
inp_str = ""A text containing punctuation marks.""

# Remove all punctuation
out_str = inp_str.translate(str.maketrans('', '', string.punctuation))

print(out_str) # Output: A text containing punctuation marks"
Create a web API in Python to get records from a database table.,Name of the database table: employee,"from flask import Flask, request, jsonify
import sqlite3

app = Flask(name)

@app.route('/api/v1/employees', methods=['GET'])
def get_employees():
 conn = sqlite3.connect('employees.db')
 cur = conn.cursor()
 data = cur.execute('SELECT * from employee').fetchall()
 conn.close()
 return jsonify(data)

if name == 'main':
 app.run(debug=True)"
"Create an algorithm in Python that given a number, returns whether the number is prime or not.",11,"def is_prime(n):
 if n == 1:
 return False

 for i in range(2,n):
 if n % i == 0:
 return False

 return True

n = 11
print(is_prime(n)) # Output: True"
Create an algorithm in Python to merge multiple dictionaries,"d1 = {'a': 1, 'b': 2}
d2 = {'c': 3, 'd': 4}","def merge_dicts(dicts):
    results = {}
    for d in dicts:
        results.update(d)
    return results"
"Implement a function in Python to extract all the words from the given string with their keyboard shifted character. For example, a letter ""a"" should be replaced by ""b"".","String: ""hello world""","def shift_words(s):
    shifted_s = """"
    for c in s:
        if c.isalpha():
            shifted_s += chr(ord(c)+1)
        else:
            shifted_s += c
    return shifted_s

print(shift_words(""hello world""))
# Output: ifmmp xpsme"
"Write a Python program to assign every character in a given string a unique number (e.g. a=1, b=2, c=3 and so on).","string = ""Hello, World!""","char_dictionary = {}

counter = 1

for char in string:
 if char in char_dictionary.keys():
 continue
 else:
 char_dictionary[char] = counter
 counter += 1

print(char_dictionary)
# Output: {'H': 1, 'e': 2, 'l': 3, 'o': 4, ', ': 5, 'W': 6, 'r': 7, 'd': 8, '!': 9}"
Create a Python program that takes an array of numbers and returns the index of the first number that is the duplicate of an earlier encountered number.,"[5, 7, 9, 3, 1, 3]","def find_first_duplicate(arr):
    seen = dict()

    for i, n in enumerate(arr):
        if n in seen:
            return i
        else:
            seen[n] = True

    return -1

arr = [5, 7, 9, 3, 1, 3]
print(find_first_duplicate(arr))
# Output: 4"
Rewrite the code snippet to Python 3.,"def my_list(list):
  new_list = []
  for item in list:
    new_list.append(item * 2)
  return new_list","def my_list(list):
  new_list = []
  for item in list:
    new_list.append(item * 2)
  return new_list"
Design a function in Python that takes two strings and returns a single string which is the concatenation of both strings.,"""Hello"" and "" World""","def concatenate(str1, str2):
    return str1 + str2

# example 
str1 = ""Hello""
str2 = "" World""
result = concatenate(str1, str2)
print(result) # Hello World"
Generate a python program to delete duplicate elements from the given array.,"Input: [1, 2, 3, 4, 4, 5, 6, 7, 8, 8]","def delete_duplicates(array):
    seen = set()
    non_duplicates = []
    for val in array:
        if val not in seen:
            non_duplicates.append(val)
            seen.add(val)
    return non_duplicates"
Write an Algorithm in Python that takes in a comma-separated string of numbers and returns the sum of the numbers.,"'1,2,3'","def sumString(s):
 nums = s.split(',')
 total = 0
 for num in nums:
 total += int(num)
 return total"
Create a Python program to detect cycles in a given array.,"array = [2, 4, 5, -1, 7, -1, 5]","def is_cycle_detected(array):
    # create a set to store visited indices
    visited = set()
    for i, num in enumerate(array):
        # check if num has been visited
        if i in visited or num not in visited:
            return False
        # mark the index as visited
        visited.add(i)
    return True"
Write a Python program to print a given number with commas separating the thousands.,12345678,"n = 12345678
# method 1
 print(""{:,}"".format(n))
# method 2 
print(f""{n:,}"")"
"Using input string, write a Python program to sort the string in ascending order.",hello,"def sort_string(string):
    lst = list(string)
    lst.sort()
    return ''.join(lst)

sorted_str = sort_string('hello')
print(sorted_str) # expected output: ehllo"
Create a function in Python to print a number pyramid given a height.,3,"def pyramid(h): 
    
    for i in range(0, h): 
        for j in range(0, h-i-1): 
            print(end="" "") 
        for j in range(0, i+1): 
            print(""* "", end="""") 
        print(""\r"") 

pyramid(3)"
Create a python script to convert a string to a list containing the ASCII values of each character in the string.,"""Hello World!""","def string_to_ascii_list(string):
    ascii_list = []
    for char in string:
        ascii_list.append(ord(char))
    return ascii_list

print(string_to_ascii_list(""Hello World!""))"
Implement the popular depth-first search (DFS) algorithm with Python.,"graph = {
    'A' : ['B','C'],
    'B' : ['D', 'E'],
    'C' : ['F'],
    'D' : [],
    'E' : ['F'],
    'F' : []
}","def dfs(graph, start):
    visited, stack = set(), [start]
    while stack:
        vertex = stack.pop()
        if vertex not in visited:
            visited.add(vertex)
            stack.extend(graph[vertex] - visited)
    return visited"
Edit the following Python code pasted and return the output.,"def print_message(name):
    print(""Hello ""+name)

print(""Matthew"")","def print_message(name):
    print(""Hello ""+name)

name = ""Matthew""
print_message(name)"
Develop a Python script to sort a given list of names alphabetically.,"[John, Harry, Robert]","def sort_names(names):
    names.sort()
    return names

names = [""John"", ""Harry"", ""Robert""]
result = sort_names(names)
print(result)"
Edit a given Python program such that it returns the optimal solution of a given problem.,"def solve_problem(input):
    solution = 0
    for i in range(input):
        solution += input
    return solution","def solve_problem(input):
    solution = 0
    for i in range(input):
        if input < 0:
            break
        solution += input
        input -= 1
    return solution"
Suggest an optimization technique to reduce the run time of this Python program.,"Python Program:

def time_function(n):
    a = []
    for i in range(n):
        a.append(i)
    return a","def time_function(n):
    a = [i for i in range(n)]
    return a

This will reduce the run time of the program as it eliminates the need for iterating over the range and appending to the list. Using list comprehension is faster and more memory efficient than regular looping."
Create an Python program that takes a list of words as input and prints out the longest word.,"words = [""cat"", ""dog"", ""elephant"", ""rhinoceros""]","words = [""cat"", ""dog"", ""elephant"", ""rhinoceros""]

def longest_word(words):
 longest_word = """"
 
 for word in words:
 if len(longest_word) < len(word):
 longest_word = word

 print(longest_word)

longest_word(words)"
Write a python program to sort a list of dictionaries based on a particular key.,"list_of_dicts = [{'name': 'Ajay', 'age': 15}, 
                 {'name': 'Bhavna', 'age': 10}, 
                 {'name': 'Cathy', 'age': 12}]","def sort_list_of_dicts(list_of_dicts, key):
    sorted_list = sorted(list_of_dicts, key=lambda i: i[key])
    return sorted_list"
Develop a function in Python to convert a given list to a dictionary.,"list = [1,2,3,4,5,6]","def convert_list_to_dict(list):
    final_dict = {}

    for index, value in enumerate(list):
        final_dict.update({index: value})

    return final_dict

list = [1,2,3,4,5,6]
list_dict = convert_list_to_dict(list)
print(list_dict)"
"Create a program in Python to optimize a function f(x) with x = 0, 1, 2, ..., n.",f(x) = x^2 - 3x + 5,"def f(x): 
 return x**2 - 3 * x + 5

def optimize(f, n):
 best_x = 0
 best_y = f(0)
 for x in range(n+1): 
 y = f(x) 
 if y > best_y: 
 best_x = x
 best_y = y
 return best_x

print(optimize(f, 5))"
Modify the given program to print the output in reverse order,"def print_list(lst):
    for i in lst:
        print(i)

word_list = [""Python"", ""is"", ""fun""]

print_list(word_list)","def print_list_reverse(lst):
    for i in reversed(lst):
        print(i)

word_list = [""Python"", ""is"", ""fun""]

print_list_reverse(word_list)"
Create a python program to print out all combinations of elements from two lists.,"list1 = [1,2,3]
list2 = [5,6,7]","for i in list1:
    for j in list2:
        print(i, j)"
Write a Python function that converts a given number from one numeric base to another.,"number = 42
from_base = 10
to_base = 16","def convert_number(number, from_base, to_base): 
    # convert number to base 10 
    result = int(str(number), from_base) 
  
    # convert base 10 to new base 
    res = """"
    while result > 0:
        res += str(result % to_base)
        result //= to_base
    res = res[::-1] 
  
    return res"
Convert the following array of Python objects into a JSON string.,"[{'name': 'John', 'age': '22'}, {'name': 'Bob', 'age': '33'}]","import json

data = [{'name': 'John', 'age': '22'}, {'name': 'Bob', 'age': '33'}]

json_str = json.dumps(data)
print(json_str)"
"Using Python, find the mean of a randomly generated array of integers of size 10.","array = [61, 28, 79, 75, 73, 89, 81, 92, 83, 10]","import numpy as np

def get_mean(array):
    '''This function returns the mean of the given array of integers.'''
    array = np.array(array)
    return np.mean(array)

if __name__ == '__main__':
    array = [61, 28, 79, 75, 73, 89, 81, 92, 83, 10]
    mean = get_mean(array)
    print(mean) # 63.2"
"Using the data structure provided below, create a Python program to sort a list of numbers in descending order.","numbers = [23, 45, 56, 78, 33, 19, 20]","def sort_descending(numbers): 
    numbers.sort(reverse=True) 
    return numbers 

print(sort_descending(numbers))"
Write an efficient Python program to find the second largest element in an array.,"[14, 46, 47, 86, 92, 52, 48, 36, 66, 85]","def secondLargestElement(arr):
  # Sort the array in ascending order 
  arr.sort() 
    
  # Return the second last element 
  return arr[-2] 

# Driver code 
arr = [14, 46, 47, 86, 92, 52, 48, 36, 66, 85] 

print(secondLargestElement(arr))"
Can you develop a Python script to merge two given lists?,"['a', 'b', 'c']
['1', '2', '3']","list1 = ['a', 'b', 'c']
list2 = ['1', '2', '3']

def merge_lists(list1, list2):
    merged_list = list1 + list2
    return merged_list

merged_list = merge_lists(list1, list2)
print(merged_list) # Output: ['a', 'b', 'c', '1', '2', '3']"
"Given a sentence, tokenize it in Python, separating each of the words using the NLTK library.",The cat sat on the mat.,"import nltk

tokenized = nltk.word_tokenize(""The cat sat on the mat."")
print(tokenized)
# Output: ['The', 'cat', 'sat', 'on', 'the', 'mat', '.']"
Create a function in Python for calculating the maximum value in an array.,example array,"def get_max(arr):
 m = arr[0]
 for val in arr:
 if val > m:
 m = val
 return m

# example
arr = [1, 2, 3, 4]
print(get_max(arr)) # 4"
Use the following data to create a graphical representation in Python.,"x = [1,2,3,4,5]
y = [2,4,6,8,10]","import matplotlib.pyplot as plt

x = [1,2,3,4,5]
y = [2,4,6,8,10]

plt.plot(x,y)
plt.title('Graph title')
plt.xlabel('X-axis Label')
plt.ylabel('Y-axis Label')

plt.show()"
Design a Python 3 program that takes as input from the user two comma-separated lists of integers and then finds the union of the two lists.,"list1 = [1,2,3,4], list2 = [6,5,4,3]","list1 = [1,2,3,4]
list2 = [6,5,4,3]

def findUnion(list1, list2):
 unionList = list1
 for item in list2:
  if item not in unionList:
   unionList.append(item)
 return unionList

union = findUnion(list1, list2)
print(union) # prints [1, 2, 3, 4, 6, 5]"
Create a Python program that takes a string as input and returns the longest word in it.,"""This is an example sentence.""","def find_longest_word(sentence):
    words = sentence.split()
    longest_word = words[0]
    for word in words:
        if len(word) > len(longest_word):
            longest_word = word
    return longest_word

sentence = ""This is an example sentence.""
longest_word = find_longest_word(sentence)
print(longest_word)"
Write a Python program to transform user input from lowercase to uppercase.,This is a sample string,"input_string = input('Enter a string: ')

output_string = input_string.upper()

print(f'Your input in uppercase is: {output_string}')"
Create a Python script to download a zip archive from a URL and extract it in the current directory.,https://example.com/myzip.zip,"import requests
import shutil
import zipfile

url = 'https://example.com/myzip.zip'

response = requests.get(url, stream=True)

with open('myzip.zip', 'wb') as f:
 shutil.copyfileobj(response.raw, f)

with zipfile.ZipFile('myzip.zip', 'r') as f:
 f.extractall()"
Create a Python dictionary where the keys are student IDs and the values are the corresponding student names.,"id_lst = [123, 456, 789]
name_lst = [""John"", ""Emma"", ""David""]","def create_dict(id_lst, name_lst): 
    dic = {}
    
    for i in range(len(id_lst)): 
        dic[id_lst[i]] = name_lst[i]
    
    return dic

result = create_dict(id_lst, name_lst) 
print(result)"
Generate a function in Python to determine the largest element in an array.,"[3, 2, 1, 4, 5]","def find_max(arr):
 max_val = arr[0]
 for num in arr:
 if num > max_val:
 max_val = num
 return max_val

array = [3, 2, 1, 4, 5]
print(find_max(array))"
Develop a Python program that uses a series of if-elif-else statements to act on the input data,Input a string and the program should convert it to uppercase letters.,"def convert_to_uppercase(data):
    if type(data)==str:
        return data.upper()
    else:
        print(""Input must be a string"")"
Classify a snippet of code according to programming language.,"def greet():
 print(""Hello world!"")",Python
Create a Python script that finds the median value in an unsorted list of numbers.,"[3, 4, 1, 2, 5]","def median(nums):
 sorted_list = sorted(nums)
 if len(sorted_list) % 2 == 0:
 mid = int(len(sorted_list) / 2)
 return (sorted_list[mid] + sorted_list[mid-1]) / 2
 else:
 return sorted_list[int(len(sorted_list)/2)]

median([3, 4, 1, 2, 5]) # Output: 3.0"
Create Python code to sum all the values in a list?,"[1,2,3,4,5]","def sum_list(l):
    '''This function returns the sum of all the values in a list'''
    sum = 0
    for val in l:
        sum = sum + val
    return sum"
Classify the following Python statement.,"print(""Hello World!"")",Statement Type: Print Statement.
Improve the performance of the following code using Python's in-built functions.,"s = 'Google'
count = 0
for i in range(len(s)):
    if s[i] == 'o':
        count+=1","s = 'Google'
# improved code
# use of built-in functions to count the number of occurrences of 'o' in a string
count = s.count('o')

print('Number of occurrences of ""o"": {}'.format(count))"
Create a web-scraping program in Python to scrape movie reviews from IMDb.,https://www.imdb.com/title/tt0816692/reviews?ref_=tt_urv,"import requests
import bs4
 
url = ""https://www.imdb.com/title/tt0816692/reviews?ref_=tt_urv""
page = requests.get(url).text
soup = bs4.BeautifulSoup(page, 'html.parser')

reviews = soup.find_all(class_=""text show-more__control"")
for review in reviews:
    print(review.get_text())"
Create a Python program to find the longest element in the list.,"[1, 5, 4, 3, 9, 8]","def find_longest(arr): 
    longest = 0
    for item in arr: 
        longest = max(len(str(item)), longest) 
    return longest
    
if __name__ == ""__main__"": 
    list = [1, 5, 4, 3, 9, 8]
    print(find_longest(list))"
Generate a Python program for converting temperatures from Celsius to Fahrenheit.,15 degree Celsius,"# Take input from user
c = float(input('Enter temperature in Celsius: '))

# Compute temperature in Fahrenheit
f = (c * 1.8) + 32

# Print the result
print('{} degree Celsius is equal to {} degree Fahrenheit.'.format(c, f))"
Write a Python program to find the sum of all values in a nested dictionary.,"d = {""a"":1, ""b"":2, ""c"":{""d"":3, ""e"": 4}}","def get_sum(data):
    """"""get the sum of all values in a nested dictionary""""""
    sum = 0
    for key, value in data.items():
        if type(value) is int:
            sum += value
        else:
            sum += get_sum(value)
    return sum

d = {""a"":1, ""b"":2, ""c"":{""d"":3, ""e"": 4}}
print(get_sum(d))
# Output: 10"
Produce a unit test report in Python for a program to find the mean of an array.,"Sample array: [1, 2, 3, 4, 5]","import unittest

def calculate_mean(numbers):
    return sum(numbers)/len(numbers)

class MeanCalculationTest(unittest.TestCase):
    def setUp(self):
        self.sample_array = [1, 2, 3, 4, 5]

    def test_mean_calculation(self):
        self.assertEqual(calculate_mean(self.sample_array), 3)

if __name__ == '__main__':
    unittest.main()"
Write a Python program to optimize the given code to make it more operationally efficient.,"def add_two_numbers(a,b):
    c = a + b
    return c","def add_two_numbers(a, b):
    return a + b"
"Given an array of integers, sort the array in ascending order using a Python program.","[5,3,7,1,9]","def sort_asc(arr):
    for i in range(len(arr)):
        for j in range(i+1,len(arr)):
            if arr[i] > arr[j]:
                arr[i], arr[j] = arr[j], arr[i]
    return arr

print(sort_asc([5,3,7,1,9]))"
Generate the following output in Python,"Given a list [1,2,3,4,5] generate the following:
[[1], [2], [3], [4], [5], [1, 2], [2, 3], [3, 4], [4, 5], [1,2, 3], [2, 3, 4], [3, 4, 5]]","def generate(lst):
    res = []
    for i in range(1, len(lst) + 1):
        for j in range(len(lst) - i + 1):
            res.append(lst[j: j + i])
    return res"
Write a Python program to find the maximum number in a list of numbers.,"[1, 9, 5, 18, 21, 2]","def find_max(nums):
  max_num = nums[0]
  for x in nums:
    if x > max_num:
      max_num = x
  return max_num

print(find_max([1,9,5,18,21,2]))"
Write an algorithm in Python to generate a random non-repeating integer array of size N,10,"import random 

def random_array(N): 
 
    result = [] 
  
    for i in range(N): 
  
        # Stores the number in result after checking for its presence. 
        data = random.randint(1, 100) 
  
        if data not in result: 
            result.append(data) 
          
    return result 

# Driver Code 
N = 10
res = random_array(N) 
print(res)"
Create a function in Python that takes an array of strings and returns an array with the strings sorted in reverse-alphabetical order.,"[‘tomato’, ‘apple’, ‘mango’]","def reverse_sort(arr): 
    return sorted(arr, reverse=True) 
  
# driver code 
arr = [""tomato"", ""apple"", ""mango""] 
sorted_arr = reverse_sort(arr) 
  
print(sorted_arr)"
Write a python program that finds a maximum subarray from a given list of integers.,"numbers=[-2,1,-3,4,-1,2,1,-5,4]","def max_subarray(numbers): 
    max_so_far = max_ending_here = numbers[0] 
    for i in range(1,len(numbers)): 
        max_ending_here = max(numbers[i], max_ending_here + numbers[i]) 
        max_so_far = max(max_so_far, max_ending_here) 
    return max_so_far"
Sort a given array of integers in Python.,"arr = [1, 10, 5, 8, 7]","arr.sort() 
# arr is now [1, 5, 7, 8, 10]"
Write a python program to check if a given array A is a subset of another array B,"A = [4, 6, 8]
B = [1, 4, 6, 8, 9, 10]","def is_subset(A, B):
    # Iterate through A
    for elem in A:
        # Check if the element is in B 
        if elem not in B:
            # If not, return False
            return False

    # If we reach here, all the elements of A
    # were present in B, so return True 
    return True"
Create a Python script to look up the IMDB rating of a movie by its title.,Title: The Prestige,"import imdb

ia = imdb.IMDb()
movie = ia.search_movie('The Prestige')[0]
ia.update(movie)

print(movie['rating'])
// Output: 8.5"
Develop a program in python to generate a matrix,"Rows: 3
Columns: 4","def generate_matrix(rows, cols):
   matrix = [] 
   for i in range(rows): 
       row = []
       for j in range(cols): 
           row.append(0)
       matrix.append(row)
   return matrix

# Example
m = generate_matrix(3, 4)
print(m)  # Output: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]"
Create a program in JavaScript to reverse a sentence.,"""I love coding in Python""","let sentence = ""I love coding in Python"";
let reversed = sentence.split("""").reverse().join("""");
console.log(reversed);"
Write a Python program to extract all the words starting with a specific letter,The letter is 's',"""""""
Extract all the words starting with a specific letter
""""""

def extract_words(word, letter):
    words_list = []
    for w in word.split():
        if w[0] == letter:
            words_list.append(w)
    return words_list

if __name__ == '__main__':
    words = 'This is a sample sentence to test the program'
    letter = 's'
    print(extract_words(words, letter))"
Generate a python function that computes the standard deviation of an array of numbers.,"[12,14,11,20,13]","def compute_std_dev(values):
  n = len(values)
  mean = 0
  for i in range(n):
    mean += values[i]
  mean /= n
  std_dev = 0
  for i in range(n):
    std_dev += (values[i] - mean)**2
  std_dev /= n
  return std_dev**(1/2)
#Example:
compute_std_dev([12,14,11,20,13])
#Output: 3.067"
Translate the following Java code to Python,"for (int i = 0; i < n; i++)
 System.out.println(""Hello World"");","for i in range(n):
 print(""Hello World"")"
Write a function in Python that takes a sentence as an argument and returns the same sentence but with all the words reversed.,"sentence = ""This is a test sentence""","def reverse_sentence(sentence):
 reversed_sentence = "" "".join(sentence.split()[::-1])
 return reversed_sentence

print(reverse_sentence(sentence))
# Output: sentence test a is This"
Generate a valid Python program that finds all the odd numbers in a given list of integers.,"[1, 2, 3, 4, 5, 6]","def find_odds(nums):
  result = []
  for num in nums:
    if num % 2 == 1:
      result.append(num)
  return result

odd_nums = find_odds([1, 2, 3, 4, 5, 6])
print(odd_nums)"
"Develop a Python program to generate a dictionary with the keys being the words in a given text, and the values being the corresponding frequencies.","""A few words, some more words!""","words = ""A few words, some more words!""

words_list = words.split()

frequency_dict = {word:words_list.count(word) for word in words_list}

print(frequency_dict)
# Output: {'A': 1, 'few': 1, 'words,': 1, 'some': 1, 'more': 1, 'words!': 1}"
Create a method in Python to format a date from the format dd-mm-yyyy to yyyy-mm-dd.,"date = ""10-05-2020""","def format_date(date):
    splitted_date = date.split(""-"")
    reformatted_date = splitted_date[::-1]
    return ""-"".join(reformatted_date)

format_date(""10-05-2020"")"
Create a Python function that takes two strings as input and returns the total of the lengths of the two strings.,"string1 = ""example""
string2 = ""string""","def string_length_sum(string1, string2):
    return len(string1) + len(string2)

result = string_length_sum(string1, string2)"
"Using the input provided, make a program to sort a given array in ascending order in Python.","arr = [9, 4, 7, 2, 3]","def insertionSort(arr): 
    for i in range(1, len(arr)): 
        key = arr[i] 
        j = i-1
        while j >=0 and key < arr[j] : 
                arr[j+1] = arr[j] 
                j -= 1
        arr[j+1] = key 

arr = [9, 4, 7, 2, 3]
insertionSort(arr) 
print (""Sorted array is:"") 
for i in range(len(arr)): 
    print (""%d"" %arr[i]),"
Generate a Python script to randomly select k elements from a list.,"An array with 6 values: [11, 22, 7, 12, 3, 8] and k=3","import random

# Initialize the array
array = [11, 22, 7, 12, 3, 8]
k = 3

# Randomly select k elements from array
selected = random.sample(array, k)

# Output the result
print(f'Randomly selected {k} elements: {selected}')"
Write a Python script to organize a given list of data of students alphabetically.,"student_list = [""John"", ""Amy"", ""Robert"", ""Lisa"", ""Samantha""]","def sort_alphabetically(students):
   return sorted(students)"
Write a Python program to convert a list of numbers into a single number by subtracting the sum of all numbers in the list from the first element.,"list1 = [5, 3, 2, 1]","def list_to_number(list1):
    result = list1[0]
    for i in range(1, len(list1)):
        result -= list1[i]
    return result"
"Write a python program to create an array of length n, where each element is a random number between 0 and 10.",n = 10,"import random

array_length = 10

my_array = [random.randint(0, 10) for _ in range(array_length)]

print(my_array)"
Write a Python program to optimize a given mathematical expression.,x - 5 + (y * (1 + (z / 2))),"def optimize_expression(expr):
    expr_tree = ast.parse(expr, mode='eval')
    
    # transform expression
    expr_tree = ast.fix_missing_locations(ast.optimize_expression(expr_tree)) 
    ast.increment_lineno(expr_tree, 1)

    # compile ast to python code
    compiled_expr = compile(expr_tree, '', 'eval') 
     
 return eval(compiled_expr)"
Create a program in Python that uses a machine learning approach to classify a type of data.,"dataset = [[1,2,3], [4,5,6], [7,8,9]]
labels = [""a"", ""b"", ""c""]","import numpy as np
from sklearn.svm import SVC

# Intialize dataset and labels
dataset = [[1,2,3], [4,5,6], [7,8,9]]
labels = [""a"", ""b"", ""c""]

# Fit the model
clf = SVC(gamma='auto')
clf.fit(dataset, labels)

# Make predictions 
x = [2, 3, 4]
prediction = clf.predict([x])
print(""The prediction is"", prediction[0])"
"Create a program in Python which takes a list of tuples as an input, and prints true if it contains two elements that sum to 10.","[(2, 8), (4, 6), (7, 3)]","def checkSum(arr):
    for (a, b) in arr:
        if a + b == 10:
            return True
    return False

arr = [(2, 8), (4, 6), (7, 3)]

print(checkSum(arr)) # True"
Create a Python program to compare two given lists and return the common elements.,"listOne = [1, 3, 10, 15, 20] 
listTwo = [2, 3, 11, 15, 20]","def commonElements(listOne, listTwo):
 commonList = []
 for element in listOne:
  if element in listTwo:
   commonList.append(element)
 return commonList

print(commonElements(listOne, listTwo))"
Reverse engineer the following Java code to create a Python program.,"int i = 0;
while (i < 10) {
 System.out.println(i);
 i++;
}","def main():
 i = 0
 while i < 10:
  print(i)
  i += 1
 
main()"
Generate a Python script for replacing a substring in a given string.,"String = ""Hello World""
Substring = ""Hello""
Replacement Substring = ""Goodbye""","new_str = str.replace(""Hello"",""Goodbye"")
print(new_str)"
Write a Python program that carries out the following tasks. The program should take two strings as parameters and return a new string that contains the two inputs merged together.,"Input 1: Hello
Input 2: World","def mergeStrings(str1, str2):
   return str1 + str2

print(mergeStrings('Hello', 'World'))"
Write a Python program to remove consecutive sequences of duplicates from the given list,"list = [0, 0, 0, 1, 2, 0, 2, 0]","def remove_duplicates(list):
    new_list = []
    previous_item = None
    for item in list:
        if item != previous_item:
            new_list.append(item)
        previous_item = item
    return new_list

new_list = remove_duplicates(list)
print(new_list)"
"Create a Python function that computes the distance between two points (x1, y1) and (x2, y2).","x1= 5, y1= 4, x2= 9, y2= 2","def compute_distance(x1, y1, x2, y2):
    return ((x2-x1)**2 + (y2-y1)**2)**0.5

distance = compute_distance(5, 4, 9, 2)
print(""The distance between two points is:"", distance)"
Write a procedure in Python to rectify misspelled words in a paragraph.,"""My favarite flowers are rose and tulples""","import re

def fix_spelling(paragraph):
    words = paragraph.split()
    corrected_words = []
    for word in words:
        corrected_words.append(re.sub(r'[aeiou]',r'[aeiou]', word))
 
    return "" "".join(corrected_words)

print(fix_spelling(""My favarite flowers are rose and tulples""))"
"Given an email list, write a python program to sort the list alphabetically","['bob@example.com', 'alice@example.com', 'jane@google.com', 'mary@example.com']","def sort_list(list_of_emails):
    list_of_emails.sort()
    return list_of_emails

print(sort_list(['bob@example.com', 'alice@example.com', 'jane@google.com', 'mary@example.com']))"
Build a Python code to convert a list to a dictionary using the list values as the keys.,"my_list = [""This"", ""is"", ""a"", ""list""]","my_dict = {}
for item in my_list:
    my_dict[item] = None

print(my_dict)"
Use a recursive algorithm in Python to calculate the sum of a given array.,"array1 = [1, 2, 3, 4, 5]","def array_sum(arr):
  if len(arr) == 1:
    return arr[0]
  else:
    return arr[0] + array_sum(arr[1:])

#Driver code
print(array_sum(array1)) #prints 15"
Create a python script to calculate the average of 10 numbers.,"1, 2, 3, 4, 5, 6, 7, 8, 9, 10","def calculate_avg(nums):
 sum = 0
 for num in nums:
 sum += num
 avg = sum/len(nums)
 return avg

numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(calculate_avg(numbers))"
Generate a Python program which takes two strings as input and returns true if they are anagrams of each other.,"""listen"", ""silent""","def is_anagram(a, b):
  return sorted(a) == sorted(b)

result = is_anagram(""listen"", ""silent"")
print(result)"
Write a Python program to round a number to a given number of decimal places.,"number = 2.68
round_places = 2","number_rounded = round(number, round_places)
print(number_rounded)
# Output: 2.68"
Write a python script that calculate the sum of an array,"The array is [-3,9,2,1].","def array_sum(arr):
  sum_arr = 0
  for _ in range(len(arr)):
    sum_arr += arr[_]
  return sum_arr

print(array_sum([-3,9,2,1]))"
Rewrite the following Python code by introducing list comprehensions.,"even_numbers = []
for i in range(1,21):
    if i % 2 == 0:
        even_numbers.append(i)","even_numbers = [i for i in range(1, 21) if i % 2 == 0]"
Create a function in python that takes a string and adds a prefix to each word in the string.,"Input String: ""Hello World""
Prefix: ""Prefix_""","def add_prefix(input_string, prefix):
    """"""Takes a string and adds a prefix to each word in the string.""""""
    output_string = []
    words = input_string.split()
    for word in words:
        output_string.append(prefix + word)
    return ' '.join(output_string)"
Write a function in Python to sum all the positive integers of n numbers.,"[1,2,3,4,5]","def sum_numbers(arr):
    total = 0
    for num in arr:
        if num > 0:
            total += num
    return total

print(sum_numbers([1,2,3,4,5])) # 15"
Find all possible substrings in a given string.,"my_string = ""Python""","def find_substrings(string):
    substrings = []
    length = len(string) 
    for i in range(length): 
        for j in range(i + 1, length + 1): 
            substrings.append(string[i: j]) 
    return substrings

substrings = find_substrings(my_string)
print (substrings) # ['P', 'Py', 'Pyth', 'Pytho', 'Python', 'y', 'yt', 'yth', 'ythe', 'yhon', 't', 'th', 'tho', 'thon', 'h', 'ho', 'hon', 'o', 'on', 'n']"
Write a Python program that takes a list of numbers as an argument and prints the count of all even and odd numbers.,"[2, 9, 4, 8, 0, 7, 1]","def countNumbers(nums):
 evenCount = 0
 oddCount = 0
 
 for num in nums:
 if num % 2 == 0:
 evenCount += 1
 else:
 oddCount += 1
 
 return (evenCount, oddCount)

nums = [2, 9, 4, 8, 0, 7, 1]
evenCount, oddCount = countNumbers(nums)

print(""Even numbers:"", evenCount)
print(""Odd numbers:"", oddCount) 
# Even numbers: 4
# Odd numbers: 3"
"Edit the following Python program to print all the numbers in a given list, one number per line.","[1, 2, 3, 4, 5]","list = [1, 2, 3, 4, 5]

for num in list:
    print(num)"
"Given a 2D array of integers, write a Python code snippet to rotate the array by 90 degrees.","arr = [[0, 1, 2], 
       [3, 4, 5],
       [6, 7, 8]]","def rotate90(arr):
    N = len(arr[0])
    rotate_matrix = [[0 for x in range(N)] for y in range(N)]

    for x in range(N):
        for y in range(N):
            rotate_matrix[y][N-1-x] = arr[x][y]
    return rotate_matrix"
Design an algorithm in Python to count the number of occurrences of each character in a given string.,Hello World,"def count_chars(string):
 chars = {}
 
 for c in string:
 if c not in chars:
 chars[c] = 0
 chars[c] += 1
 
 return chars
 
str = ""Hello World""
print(count_chars(str))
# {'H': 1, 'e': 1, 'l': 3, 'o': 2, ' ': 1, 'W': 1, 'r': 1, 'd': 1}"
Write an efficient algorithm in Python to find the second smallest number in an array.,"[9, 7, 4, 8, 2]","def find_second_smallest(arr):
    smallest = arr[0]
    second_smallest = None
    for i in range(1, len(arr)):
        if arr[i] < smallest:
            second_smallest = smallest
            smallest = arr[i]
    return second_smallest

arr = [9, 7, 4, 8, 2]

second_smallest = find_second_smallest(arr)

print(""Second smallest number is:"", second_smallest) # Output is 7"
Write a python program to filter a list of numbers by removing duplicate items.,"A list of numbers: [1,2,3,4,5,2,3]","# Create an empty set
result = set()
nums = [1,2,3,4,5,2,3]

# Iterate over the list
for num in nums:
 # Add each item to the set if it is not already present
 if num not in result:
  result.add(num)

# Print the resulting list
print(list(result)) #[1, 2, 3, 4, 5]"
Convert the following function call from Python to JavaScript.,"def my_function(a, b):
  return a + b

my_function(3, 4)","function myFunction(a, b) {
 return a + b;
}

myFunction(3, 4);"
Write a Python program to query a provided API and return the result in JSON format.,The API URL: https://example.com/api,"import requests

url = 'https://example.com/api'

response = requests.get(url)

if response.status_code == 200:
 data = response.json()
 print(data)
else:
 print('Error:', response.status_code)"
Design a program in Python to sort a list of tuples based on the value the tuples contain.,"tuples = [('a', 4), ('c', 2), ('b', 3)]","def sort_tuples(tuples):
    return sorted(tuples, key=lambda x: x[1])

sorted_tuples = sort_tuples(tuples)
print(sorted_tuples) # Outputs [('c', 2), ('b', 3), ('a', 4)]"
Generate a function in Python that combines two string variables and returns the combined string?,"string1 = ""Hello""
string2 = ""World""","def combine_strings(string1, string2): 
    return string1 + ' ' + string2 

string1 = ""Hello"" 
string2 = ""World""

result = combine_strings(string1, string2) 
print(result)"
Create a Python function to check whether a number is divisible by another number or not.,"number1 = 15 
number2 = 3","def is_divisible(number1, number2):
   return number1 % number2 == 0"
Write a function in Python to compute the sum of the given list of numbers.,"[1, 24, 47, 98, 22, 45]","def sum_list(nums):
 sum = 0
 for n in nums:
  sum += n
 return sum

result = sum_list([1, 24, 47, 98, 22, 45])
print(""Sum of the list is"", result)"
Construct a Python program that computes the maximum of a given list of numbers.,"[5, 6, 7, -2, 3]","def max_number(num_list):
 max = num_list[0]
 for num in num_list:
 if num > max:
   max = num
 return max

print(max_number([5, 6, 7, -2, 3]))"
Rewrite the following snippet of code so it can run in modern python versions.,"def foo(my_list):
    result = []
    for element in my_list:
        if 'foo' in element
            result.add('foo')
    return result","def foo(my_list):
    result = []
    for element in my_list:
        if 'foo' in element:
            result.append('foo')
    return result"
Write a Python code snippet for comparing two strings regardless of their case. You should use regular expressions.,"String 1: ""Hello""
String 2: ""heLLo""","import re

string1 = ""Hello""
string2 = ""heLLo""

if re.search(string1.lower(), string2.lower()):
 print(""Strings are equal regardless of case."")"
Create a function in Python to print a sorted list of the given input string.,Input string: computer,"def sortString(inputString): 
  
    words = inputString.split() 
    words.sort() 
  
    for i in words: 
        print(i) 
          
sortString(inputString)"
Generate a python function that takes a list of strings and returns the string concatenation of them.,"[""Hello"", ""World"", ""How"", ""are"", ""you""]","def concatenateString(list):
    result = """"
    for item in list:
        result += item
    return result
 
print(concatenateString([""Hello"", ""World"", ""How"", ""are"", ""you""]))"
Make a POST request using Python to the specified URL.,URL: http://example.com/,"import requests

url = 'http://example.com/'
response = requests.post(url)"
Design an algorithm in python to solve the Towers of Hanoi puzzle.,Number of discs: 3,"def hanoi(discs, start, temp, end):
    if discs > 0:
        hanoi(discs - 1, start, end, temp)
        end.append(start.pop())
        hanoi(discs - 1, temp, start, end)"
Construct a python program to create a unique list from a given one,"list = [2, 3, 3, 5, 6, 7]","result = [] 
for x in list: 
    if x not in result: 
        result.append(x) 
print(result)"
Generate a program in Python that takes as input an array of numbers and returns the sum of all numbers in the array.,"[2, 3, 4]","def sum_elements(nums):
    """"""Given an array of number, return the sum of all elements in the array """"""
    result = 0
    for num in nums:
        result += num
    return result

print(sum_elements([2,3,4]))"
Code an algorithm in Python to check if two given sets are equal.,"A = {1, 2, 3, 4, 5}
B = {4, 1, 2, 3, 5}","def is_equal(A, B):
    if len(A) != len(B):
        return False
    for el in A:
        if el not in B:
            return False
    return True"
Develop a Python program to calculate the area of a triangle using the side lengths.,"a=5, b=9, c=11","# Calculates the area of a triangle given the three side lengths
def area_triangle(a, b, c): 
    # Calculate the semi-perimeter 
    s = (a + b + c) / 2  
  
    # calculate the area 
    area = (s*(s-a)*(s-b)*(s-c)) ** 0.5 
    return area 
  
# Driver Code 
a = 5
b = 9
c = 11
print(""Area of triangle is : "", area_triangle(a, b, c))"
"Given two strings s and t, create a new Python function to check if s is an anagram of t.","s = ""anagram""
t = ""nagaram""","def is_anagram(s, t):
 s_list = list(s)
 t_list = list(t)
 s_list.sort()
 t_list.sort()
 if s_list == t_list:
 return True
 else:
 return False"
Write a function in Python which takes one string as input and checks if the string starts with a vowel.,"String ""abc""","def start_vowel(input_string):
    vowel_list = [""a"", ""e"", ""i"", ""o"", ""u""] 
    if input_string[0] in vowel_list: 
      print(""String starts with a vowel"") 
    else:
      print(""String does not start with a vowel"")

start_vowel(""abc"")"
"edit an existing Python program so that it prints ""Hello, World!""","print('Goodbye, World!')","print('Hello, World!')"
Generate a bar chart using the given data in Python.,"data = [10, 5, 20, 25, 15]","import matplotlib.pyplot as plt

data = [10, 5, 20, 25, 15]

plt.bar(range(len(data)), data, color='blue')
plt.show()"
Create a Python program to calculate the median value of an array.,"nums = [1, 5, 9, 11, 16, 21]","def median(nums): 
    if len(nums)%2 == 0: 
        median1 = nums[int((len(nums)-1)/2)] 
        median2 = nums[int((len(nums))/2)] 
        median = (median1 + median2)/2
    else: 
        median = nums[int((len(nums))/2)]
    return median 
  
nums = [1, 5, 9, 11, 16, 21]
 print(median(nums))"
Write a Python function to convert USD to Euro and print the new value to the console.,Input amount: 12.5 USD,"def usd_to_euro(amount):
  euro = amount * 0.9
  print(amount, ""USD is equal to"", euro, ""Euros."")
  
usd_to_euro(12.5)"
Write a function in Python that chooses a random element from a list.,"[1, 2, 3, 4, 5]","import random 
  
def randomElement(list): 
    return random.choice(list) 

print(randomElement([1,2,3,4,5]))"
Develop a Python program to remove duplicates from a list of integers.,"arr = [1, 4, 2, 1, 7, 4, 4, 5, 7]","def remove_duplicates(arr):
    seen = set()
    for elem in arr:
        if elem not in seen:
            seen.add(elem)
    return list(seen)"
Create a function in Python to produce a list of all combinations of given elements from two different lists.,"list_1 = [1, 2 , 3] 
list_2 = [4, 5]","def get_combos(list1, list2):
    combo_list = []
    for i in list1:
        for j in list2:
            combo_list.append([i, j]) 
    return combo_list

list1 = [1, 2, 3] 
list2 = [4, 5]

combos = get_combos(list1, list2)  
print(combos)

# Output: [[1, 4], [1, 5], [2, 4], [2, 5], [3, 4], [3, 5]]"
Write a Python program to optimize a given solution.,"Solution:
def multiply(a, b):
 c = a * b
 return c","def optimize_solution(solution):
 optimized_solution = solution.replace(""*"", ""
 times"")
 optimized_solution = optimized_solution.replace("" c ="", ""return a times b"")
 return optimized_solution"
Write a Python script to find the average of numbers stored in an array.,"[10, 20, 30]","def calculate_mean(numbers):
    total_sum = 0
    for num in numbers:
        total_sum += num
    mean = total_sum / len(numbers)
    return mean

print(calculate_mean([10, 20, 30]))"
Create a Python code to generate a Fibonacci sequence up to a given number..,A maximum number of 12.,"def generate_fibonacci_sequence(n):
 a, b = 0, 1
 fibonacci_sequence = []
 while a <= n:
  fibonacci_sequence.append(a)
  a, b = b, a + b
 return fibonacci_sequence


print(generate_fibonacci_sequence(12))  # Output: [0, 1, 1, 2, 3, 5, 8, 13]"
Generate a program to compare the lengths of two strings using Python.,"s1 = ""hello""
s2 = ""world""","def compare_string_lengths(s1, s2):
 if len(s1) == len(s2):
 return 0
 elif len(s1) < len(s2):
 return -1
 else:
 return 1"
Categorize the following text into distinct classes using natural language processing techniques in Python.,Apple banana cherry,"from sklearn.feature_extraction.text import CountVectorizer 
  
# create the transform 
vectorizer = CountVectorizer(token_pattern=r""(?u)\b\w+\b"") 
  
# tokenize and build vocab 
vectorizer.fit([text]) 
  
# summarize 
print(vectorizer.vocabulary_) 

# output {'apple': 0, 'banana': 1, 'cherry': 2}"
Generate a function in Python to sort a given list of strings by their length.,"['cat', 'dog', 'goat', 'tiger', 'bird']","def sortByLength(strings):
    return sorted(strings, key=len)

strings = ['cat', 'dog', 'goat', 'tiger', 'bird']

print(sortByLength(strings)) # Output: ['cat', 'dog', 'goat', 'bird', 'tiger']"
Generate a Python script to detect the number of capitalized words in a sentence.,"sentence = ""This is a Sample Sentence""","def count_capitals(s):
    count = 0
    arr = s.split(' ')
    for word in arr:
        if word[0].isupper():
            count += 1
    return count"
Optimize this Python code to run faster.,"def find_largest_number(numbers):
    largest = 0
    for n in numbers:
        if n > largest:
            largest = n
    return largest","def find_largest_number(numbers):
    largest = numbers[0] 
    for n in numbers[1:]:
        if n > largest:
            largest = n
    return largest"
Create an algorithm in Python that replaces substrings in a given string,"""hello world"", ""world"", ""Earth""","# Define function
def replace_substring(string, substring, replacement):
    return string.replace(substring, replacement)
	
# Call function
print(replace_substring(""hello world"", ""world"", ""Earth"")) 
# Output hello Earth"
Create a Python program to calculate the Factorial of a positive integer.,n = 4,"def Factorial(n): 
    if (n == 0): 
        return 1
    else: 
        return n * Factorial(n - 1) 
  
# Compute and print result 
result = Factorial(n) 
print(f""Factorial of {n} is {result}"")"
Write a Python program to insert a given string at the beginning of all items in a list.,"List: ['Red', 'Green', 'Black']
String: 'White'","def add_string_beginning(list_string, add_string):
    new_list = [add_string + str(item) for item in list(list_string)]
    return  new_list

list_string = ['Red', 'Green', 'Black']
add_string = 'White'

print(add_string_beginning(list_string, add_string)) # ['WhiteRed', 'WhiteGreen', 'WhiteBlack']"
Generate Python code that uses a list comprehension to take a given list of numbers and multiple each by 10.,"[1,2,3,4]","[x * 10 for x in [1,2,3,4]]"
Write a Python program to classify the given dataset using k-means clustering.,"x_points = {2, 4, 5, 10, 12, 13, 15, 16,18, 20}
y_points = {3, 8, 10, 13, 15, 16, 18, 22, 25, 30}","from sklearn.cluster import KMeans

def cluster_data(x_points, y_points):
 X = list(zip(x_points, y_points))
 clustering_model = KMeans(n_clusters=3)
 clustering_model.fit(X)
 labels = clustering_model.labels_
 return labels"
Convert this Python list to a JSON object.,"['Apple', 'Banana', 'Coconut']","import json

inputList = ['Apple', 'Banana', 'Coconut']
jsonObj = json.dumps(inputList)
print(jsonObj)"
Transform the following code to be in Python 3 syntax.,"x = input(""Enter a number: "")","x = input(""Enter a number: "")
x = int(x)"
Create a Python script that takes a number and prints the multiplication table for that number.,Number: 4,"num = 4 # Take input
  
# To take input from the user 
# num = int(input(""Display multiplication table of? "")) 
  
# Iterate 10 times from i = 1 to 10 
for i in range(1, 11): 
   print(num, 'x', i, '=', num*i)"
Create a Python program to find the root of a quadratic equation.,given equation is ax2+bx+c=0,"def roots(a, b, c):
    disc = b*b - 4*a*c 
    root1 = (-b + math.sqrt(disc))/(2*a)
    root2 = (-b - math.sqrt(disc))/(2*a)
    return root1, root2"
Compute the dot product of two 1-d vectors using Python.,"x = [1, 4, 5]
y = [2, 4, 6]","def dot_product(x, y):
    result = 0
    for i in range(len(x)):
        result += x[i] * y[i]
    return result"
Develop a Python program to create a frequency table for an array of integer elements.,"arr = [1,1,3,5,3,3,5]","from collections import Counter

def frequency(arr):
    """"""
    Develop a Python program to create a frequency table for an array of integer elements
    """"""
    return Counter(arr)

if __name__ == '__main__':
    arr = [1,1,3,5,3,3,5] 
    print(frequency(arr))"
Write a Python program that takes in two sets and prints out the elements that are common to both sets.,"Set 1: [""apple"", ""banana"", ""orange""]
Set 2: [""pineapple"", ""banana"", ""mango""]","def common_elements(set1, set2):
 set_common = set1.intersection(set2)
 return set_common"
Build a Python program that finds the smallest number divisible by all the numbers in a given list,"numbers in the list : 2, 4, 8","def smallest_multiple(arr):
  min_num = min(arr)
  multiple = min_num

  while True:
    for x in arr:
      if multiple % x != 0:
        break
    else:
      return multiple
    multiple += min_num"
Create a Python function which takes a numerical list as an input and returns the list with each item multiplied by two.,"mylist = [1, 4, 5, 12]","def multiply_by_two(mylist):
    new_list = []
    for item in mylist:
        new_list.append(item * 2)
    return new_list"
Create an algorithm in Python that takes an array of strings and removes all duplicates,"['Apple', 'Orange', 'Apple', 'Mango', 'Banana', 'Mango']","input_array = ['Apple', 'Orange', 'Apple', 'Mango', 'Banana', 'Mango']

unique_array = []
for item in input_array:
 if item not in unique_array:
 unique_array.append(item)

print(unique_array) #['Apple', 'Orange', 'Mango', 'Banana']"
Write a Python program to split a list into different variables,"my_list = [""Hello"", ""World"", 42]","value1, value2, value3 = my_list
print(value1)
print(value2)
print(value3)"
Convert the following imperative statement into a Python function.,Return the sum of two numbers.,"def add_numbers(a, b):
    '''This function will return the sum of two numbers'''
    return a + b"
Write a Python program to convert a given list to a dictionary with each item as a key-value pair.,"list = [(""a"", 1), (""b"", 2), (""c"", 3), (""d"", 4)]","list = [(""a"", 1), (""b"", 2), (""c"", 3), (""d"", 4)]

d = dict(list)

print(d)
# Output: {'a': 1, 'b': 2, 'c': 3, 'd': 4}"
Convert a given Python function to a JavaScript function.,"def showMessage(message):
    print(message)","function showMessage(message) {
 console.log(message);
}"
Write a Python program to sort a list of tuples by their second element.,"[(1, 3), (3, 2), (4, 1), (2, 4)]","def sortBySecondElement(lst):
    # Sort the list of tuples by their second elements
    return sorted(lst, key=lambda x : x[1])

# Testing
lst = [(1, 3), (3, 2), (4, 1), (2, 4)]

sortedLst = sortBySecondElement(lst)

print(sortedLst)

# Output
# [(4, 1), (3, 2), (1, 3), (2, 4)]"
Write a Python program to create a list of tuples from two lists of equal length with each element in the tuple being the sum of the two corresponding elements in the lists.,"list1 = [1, 2, 3, 4]
list2 = [4, 3, 2, 1]","tuple_list = list(zip(list1, list2)) 
sum_list = [(x + y) for (x, y) in tuple_list]"
Create a Python script to detect any missing numbers in a given sorted array and return the missing numbers.,"[2, 3, 5, 6, 7, 8, 10]","def missingNumbers(arr):
        start = arr[0]
        end = arr[len(arr)-1]
        
        result = []
        
        for i in range(start, end+1):
            if i not in arr:
                result.append(i)
                
        return result

# Test Case
arr = [2, 3, 5, 6, 7, 8, 10]
print(missingNumbers(arr))

# Output:
# [4, 9]"
Develop a function to make an HTTP request using python and store the response into a variable.,"""https://www.example.com""","import requests

def http_request(url):
    response = requests.get(url)
    return response"
Write a Python function to detect geographical coordinates of a given address.,"Address: 1 Rockefeller Plaza, New York City, NY","(40.7588972, -73.9787129)"
Create a Python script to extract all emails from a given list of web urls.,"urls: [""http://example.com"", ""http://example.org""]","import re
import requests

urls = [""http://example.com"", ""http://example.org""]

for url in urls:
 r = requests.get(url)
 emails = re.findall(r'[\w\.-]+@[\w\.-]+', r.text)
 print(emails)"
Write a python program to calculate the sum of consecutive numbers starting from 0 to a given number.,Number = 10,"#Calculate sum of consecutive numbers starting at 0

#Get input
num = 10

#Calculate and print result
sumNum = sum(range(0, num+1))

print(""The sum of consecutive numbers from 0 to 10 is :"", sumNum)"
Create a Python script which takes a list containing items and their prices and calculates the total cost.,"[('Bread', 5.99), ('Cheese', 4.99), ('Milk', 2.99)]","total = 0
items_with_price = [('Bread', 5.99), ('Cheese', 4.99), ('Milk', 2.99)]

for item, price in items_with_price:
 total += price

print(f'The total cost is ${total}')"
Write a Python script to implement the quick sort algorithm on a list.,"[5, 4, 2, 1, 3]","def quick_sort(array):
    if len(array) < 2:
        return array
    pivot = array[0]
    less = [i for i in array[1:] if i <= pivot]
    greater = [i for i in array[1:] if i > pivot]
    return quick_sort(less) + [pivot] + quick_sort(greater)"
Edit the given Python program to print 'Happy Holidays' 10 times.,"for i in range(10):
    print('Hello World')","for i in range(10):
    print('Happy Holidays')"
Write a Python program that takes three strings as input and returns a new string that contains the sums of the first two strings.,"""Hello,"", "" World!"", "" Goodbye""","def combine_strings(str1, str2, str3):
    return str1 + str2 + str3

result = combine_strings(""Hello,"", "" World!"", "" Goodbye"")
print(result)"
Write a Python function that computes the area of a square using the side length as a parameter.,Side length: 5,"def calArea(side):
	return side * side

if __name__ == '__main__':
	side = 5
	area = calArea(side)
	print('Area of Square = ', area)"
Create a python program to calculate the compound interest for a given principal amount and a given interest rate.,"Principal amount = 1000
Interest rate = 9%","# Python program to calculate the compound interest  
  
def compound_interest(principal, rate, time): 
  
    # Calculates compound interest  
    CI = principal * (pow((1 + rate / 100), time)) 
    print(""Compound interest is"", CI) 
  
# Driver Code  
compound_interest(1000, 9, 2)"
Write a Python program that uses a while loop to calculate a Fibonacci sequence up to the given upper limit.,Upper limit: 10,"upper_limit = 10

fibonacci_sequence = [0, 1]

a = 0
b = 1

while b <= upper_limit:
 c = a + b
 a = b
 b = c
 fibonacci_sequence.append(b)

print(fibonacci_sequence) # Output: [0, 1, 1, 2, 3, 5, 8, 13]"
Develop a script in Python to find the longest common subsequence of two given strings.,"AGGTAB
GXTXAYB","def lcs(X, Y, m, n):
    if m == 0 or n == 0:
        return 0
    elif X[m-1] == Y[n-1]:
        return 1 + lcs(X, Y, m-1, n-1)
    else:
        return max(lcs(X, Y, m, n-1), lcs(X, Y, m-1, n))

X = ""AGGTAB""
Y = ""GXTXAYB""
m = len(X)
n = len(Y)
print(""The length of LCS is "" + lcs(X, Y, m, n))"
Develop a Python program that finds the maximum value in a given array.,"[1, 2, 7, 4, 5]","def findMax(arr):
  max = arr[0]
  for i in range(1, len(arr)):
    if max < arr[i]:
      max = arr[i]
  return max

max_num = findMax([1,2,7,4,5])
print(max_num)"
Write a Python script to calculate the sum of all the element of a given list.,"my_list = [3, 5, 6, 7]","def my_function(my_list):
    #code
    return sum(my_list)"
Take a given Python program and refactor it using method chaining and higher order functions.,"def divisible_by_three_and_five(number):
 if number % 3 == 0 and number % 5 == 0:
 return True
 else:
 return False","def divisible_by_three_and_five(number):
 return (number % 3 == 0 and number % 5 == 0)"
Write a python script to compute the average value in an array.,"values = [2,4,6,8,10]","# Funciton to compute the average value in an array
def computeAverage(values):
 # Initialize sum
 sum = 0
 
 # Iterate through values
 for value in values:
 sum+=value
 
 # Compute average
 average = sum / len(values)
 
 # Return average
 return average
 
# Call function
computeAverage(values); // Returns 6.0"
Develop a python program to calculate the sum of all the odd numbers in a given range.,2 to 10,"def oddSumInRange(start, end):
    sum = 0
    for i in range(start, end+1):
        if i % 2 != 0:
            sum += i
    return sum

result = oddSumInRange(2, 10)
print(result)"
Write a Python program to remove the characters which have odd index values of a given string.,Hello World,"def remove_odd_index_characters(string):
    result = """"
    for i in range(len(string)):
        if i % 2 == 0:
            result += string[i]
    return result

print(remove_odd_index_characters(""Hello World""))"
Edit the following python class so that it is a singly linked list.,"class Node:
    def __init__(self, data):
        self.data = data
        self.prev = None
        self.next = None","class Node:
    def __init__(self, data):
        self.data = data
        self.next = None"
Write a Python program to calculate the area of a triangle given 3 sides.,"side1=5, side2=8, side3=7","def area(side1, side2, side3):
    # calculate the semi-perimeter
    s = (side1 + side2 + side3)/2
    # calculate the area
    area = (s*(s-side1)*(s-side2)*(s-side3)) ** 0.5
    return area"
Write a Python program that takes a list of words and returns a dictionary where the keys are the words and the values are the lengths of the words.,"words = ['cat', 'dog', 'kangaroo', 'tiger']","def word_lengths(words):
    lengths = {}
    for word in words:
        lengths[word] = len(word)
    return lengths

result = word_lengths(['cat', 'dog', 'kangaroo', 'tiger'])
print(result)"
"Generate a Python program to print a numbers pyramid of size n, with the first line of the pyramid containing n consecutive numbers.",10,"n = int(input())
 
for i in range(1, n + 1):
 for j in range(1, i + 1):
  print(j, end="""")
 print("""")
 
for i in range(n - 1, 0, -1):
 for j in range(1, i + 1):
  print(j, end="""")
 print("""")"
Create a Python program to find the the largest and smallest in a list,"numbers = [234, 534, 123, 42, 56, 1, 234]","def find_limits(numbers):
    largest = numbers[0]
    smallest = numbers[0]
    for num in numbers:
        if num > largest:
            largest = num
        if num < smallest:
            smallest = num
    
    return largest, smallest"
Write a Python code to calculate the root mean square error (RMSE) between two given lists of numbers.,"A = [2.2, 3.07, 3.68, 1.33] 
B = [1.17, 2.47, 2.57, 0.0]","def rmse(A, B):
   """""" 
   Calculates the root mean square error between two given lists of numbers. 
   """"""
   RMSE = 0
   for i,j in zip(A,B):
       RMSE += (i-j)**2
   return (RMSE/len(A))**(1/2)


if __name__ == '__main__':
   A = [2.2, 3.07, 3.68, 1.33] 
   B = [1.17, 2.47, 2.57, 0.0]
   print(rmse(A, B))"
Compile this Python code into an executable.,"def greeting():
  print(""Hello, World!"")

greeting()","import py_compile

py_compile.compile('sample.py', cfile='sample.pyc')"
Create an API in Python to list out all directories and subdirectories from a given path.,'C://Users/Username/Documents',"import os

def listDirectories(path):
    dirs = os.listdir(path)
    for dir in dirs:
        print(os.path.join(path, dir))
        if os.path.isdir(os.path.join(path, dir)):
            listDirectories(os.path.join(path, dir))"
Create a Python program that takes in a list of numbers and finds the closest number to a given number.,"[2, 4, 7, 8], 5","def find_closest(nums, target):
 closest_num = float('inf')
 for num in nums:
  if abs(target - num) < abs(target - closest_num):
   closest_num = num
 return closest_num

nums = [2, 4, 7, 8]
target = 5

print(find_closest(nums, target))"
"Given a list of words, construct a python dictionary of all the words with their length as the value.","words = [""apple"", ""strawberry"", ""coffee""]","word_lengths = {
    ""apple"": 5,
    ""strawberry"": 10,
    ""coffee"": 6
}"
Write a function in Python which takes in a list of numbers and returns the most common element in the list.,"mylist = [3, 8, 8, 2, 4]","def most_common(mylist):
    return max(set(mylist), key = mylist.count)"
Create a Python script to print out only the even numbers from a list of numbers.,"list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","for num in list: 
    if (num % 2 == 0):
        print(num, end = ' ')"
Write a Python program to find the second highest number in the given list.,"[8,9,1,5,7]","def find_second_highest_num(nums):
    first_max = nums[0]
    second_max = float('-inf')
    for num in nums:
        if num > first_max:
            second_max = first_max
            first_max = num 
        if num < first_max and num > second_max:
            second_max = num
    return second_max

nums = [8,9,1,5,7]

print(find_second_highest_num(nums))"
Compose a Python program to insert an element at a given position in an array.,"[1, 4, 5, 7], 2, 6","def insert_element(arr, position, element):
    arr.insert(position, element)

print(insert_element([1, 4, 5, 7], 2, 6)) # Output: [1, 4, 6, 5, 7]"
Write a Python function to retrieve the frequency of elements in a given list.,"[1, 1, 2, 3, 4, 4]","from collections import Counter

def get_frequencies(lst):
  return Counter(lst)

input_list = [1, 1, 2, 3, 4, 4]
frequencies = get_frequencies(input_list)

print(""Frequency of elements:"", frequencies)"
Design an algorithm in Python to read in a matrix of integers and print the sum of each row.,"[[1, 2, 3],
[4, 5, 6], 
[7, 8, 9]]","def rowSum(matrix):
    row_sums = []
    for row in matrix:
        row_sum = 0
        for num in row:
            row_sum += num
        row_sums.append(row_sum)
    return row_sums

matrix = [[1, 2, 3],
          [4, 5, 6],
          [7, 8, 9]]

print(rowSum(matrix)) # [6, 15, 24]"
Create a function in Python to perform a binary search on a sorted array.,"A sorted array arr = [1, 3, 5, 7, 8, 9, 12]","def binary_search(arr, target):
  start = 0
  end = len(arr) -1
  while start <= end:
    mid = (start + end) // 2
    if arr[mid] == target:
      return mid
    elif arr[mid] > target:
      end = mid - 1
    else:
      start = mid + 1
  return -1"
Rewrite the following Python code using list comprehensions.,"def divisible(x):
    out = []
    for i in range(1, x):
        if (i % 3 == 0) or (i % 5 == 0):
            out.append(i)
    return out","def divisible(x):
    return [i for i in range(1, x) if (i % 3 == 0) or (i % 5 == 0)]"
Classify the following code as either a python function or code section.,"x = ""hello"" 
z = x + "" world""",Code section.
Take this Python Code and optimize it.,"def count_items(items):
    item_counter = {}
    for item in items:
        if item not in item_counter:
            item_counter[item] = 1
        else:
            item_counter[item] += 1        
    return item_counter","def count_items(items):
    item_counter = {}
    for item in items:
        item_counter[item] = item_counter.get(item, 0) + 1
    return item_counter"
"Given a dictionary, write a Python code snippet to find all values that are greater than 5.","{'a': 1, 'b': 3, 'c': 5, 'd': 7}","dictionary = {'a': 1, 'b': 3, 'c': 5, 'd': 7}

result = [item for item in dictionary.values() if item > 5]

print(result)

# Output:
[7]"
Create a bash script that runs an application on startup.,Application Command: python3 my_app.py,"#!/bin/bash
sudo echo ""@python3 my_app.py"" >> /etc/rc.local
sudo chmod +x /etc/rc.local"
Write a Python script that generates a histogram given a list of numbers.,"[1,2,3,4,5,4,3,2,1]","import matplotlib.pyplot as plt 
  
# x-axis values 
x = [1,2,3,4,5,4,3,2,1] 
  
# Y-axis values 
y = [1,2,3,4,5,4,3,2,1] 
  
# Function to plot the histogram 
plt.hist(x, y, histtype = 'bar', rwidth = 0.8) 
  
# Deifne labels and titles 
plt.xlabel('x') 
plt.ylabel('y') 
plt.title('Histogram') 
  
# Function to show the plot 
plt.show()"
Create a web-scraping script with Python to extract information from a website with 20 thousand pages.,Example website: https://example.com,"import requests
import bs4

url = 'https://example.com'

while True:
 response = requests.get(url)
 soup = bs4.BeautifulSoup(response.text, 'html.parser')

 # Extract information here

 next_page_url = soup.find('a', {'class': 'next-page'})
 if next_page_url:
 url = next_page_url['href']
 else:
 break"
Create a Python script to format a string into a list,"string = ""Hello, World, I am here""","string = ""Hello, World, I am here""

list = string.split("", "")
print(list)

# Output
['Hello', 'World', 'I am here']"
Build a web scraping script in Python that stores the HTML content of a website in a variable.,URL: https://www.example.com,"import urllib.request

url = 'https://www.example.com'

html_content = urllib.request.urlopen(url).read()"
Build a linear search algorithm with Python.,"arr = [3, 4, 10, 15, 23, 42]","def linear_search(arr, value):
    for i in range(len(arr)):
        if arr[i] == value:
            return i
    return -1

arr = [3, 4, 10, 15, 23, 42]
value = 10

index = linear_search(arr, value)
if index == -1:
    print('Value not found in array.')
else:
    print('Value found at index ' + str(index) + '.')"
Create a Python function that takes two lists and returns a list of all elements in common between them.,"list1 = [1, 2, 3, 4, 5]
list2 = [2, 4, 6, 8]","def find_common_elements(list1, list2):
  common_elements = []
  for i in list1: 
    if i in list2: 
        common_elements.append(i) 
  return common_elements"
Create a function that takes in a string and evaluates it according to Python's syntax rules.,"String: ""2+3*4""","def evaluate_string(str):
 try:
 result = eval(str)
 return result
 except SyntaxError:
 return ""Syntax Error"""
Develop an algorithm in Python that takes a list of strings as an input and sorts them alphabetically.,"List of Strings: [""hello"", ""world"", ""good"", ""morning"", ""programming""]","def sortAlphabetically(strings): 
    strings.sort() 
    return strings 

#Test 
strings = [""hello"", ""world"", ""good"", ""morning"", ""programming""]
sorted_strings = sortAlphabetically(strings) 
print(*sorted_strings)"
Write a Python code snippet that takes a list of numbers as argument and prints the average.,"[2, 3, 4, 5, 6]","def average(numbers: list):
    if numbers:
        return sum(numbers) / len(numbers)
    else:
        return 0
    
numbers = [2, 3, 4, 5, 6]
print(f""Average of {numbers} is {average(numbers)}"")"
Create a code snippet in Python to find the missing number in an array of length n-1 when all numbers from 1 to n are present.,"[7, 5, 6, 4, 2]","def missing_number(nums): 
     
    full_list = list(range(1,len(nums)+1))
    return (set(full_list) - set(nums)).pop()

nums = [7, 5, 6, 4, 2]
result = missing_number(nums) 
print('Missing number is', result)"
Write an API endpoint in Python which takes a JSON object as an input and returns a modified version of the same object.,"{""name"": ""John"", ""age"": 30}","@app.route('/api', methods=['POST'])
def api():
 data = request.get_json()
 data['age'] = data['age'] + 2
 return jsonify(data)"
Generate a reverse string of each word present in the list.,"[""Python"", ""Java"", ""C++""]","def reverseStringOfList(list):
    revList = []
    for string in list:
        revList.append(string[::-1])
    return revList

result = reverseStringOfList([""Python"", ""Java"", ""C++""])
print(result)"
Write a Python program that will create a histogram of a given set of data.,"[0, 4, 5, 10, 11, 15]","import matplotlib.pyplot as plt 

# Data to plot
data = [0, 4, 5, 10, 11, 15]

# Create a histogram 
plt.hist(data, bins = [0,5,10,15,20])

# Label the x and y axis 
plt.xlabel(""Value"") 
plt.ylabel(""Number of Occurrences"") 

# Show the plot 
plt.show()"
"Create a Python program that will take a list of integers and output the sum, average, largest value, and smallest value of the list.","[-2, -4, 0, 5, 10]","list_input = [-2, -4, 0, 5, 10]

list_sum = sum(list_input)
print(""Sum: "" + str(list_sum))

list_average = sum(list_input) / len(list_input)
print(""Average: "" + str(list_average))

list_max = max(list_input)
print(""Largest value: "" + str(list_max))

list_min = min(list_input)
print(""Smallest value: "" + str(list_min))"
Create a Python program to remove the given item from a list.,"[1, 2, 3, 4], 2","def remove_item(lst, item):
    while item in lst:
        lst.remove(item)
    return lst

result = remove_item([1, 2, 3, 4], 2)
print(result)"
Write Python code to classify a lead email.,"The email content: ""Hello, I am interested in getting more information about your product.""","# Detect the intent of the email
intent = ""lead""

# Label the email
label = ""Lead"""
Construct a Python program to check if a given array of numbers is sorted in ascending order or not.,"[1, 2, 3, 4]","def is_sorted(arr):
    return arr == sorted(arr)

print(is_sorted([1, 2, 3, 4]))"
Create an algorithm in Python to print all the prime numbers between two given numbers.,"Range: (2, 10)","def printPrimeNumbers(start, end):
 
 for num in range(start, end + 1):
   if num > 1:
      for i in range(2, num):
          if (num % i) == 0:
              break
      else:
          print(num)
          
start = 2
end = 10
print(""Prime numbers between"", start, ""and"", end, ""are:"")
printPrimeNumbers(start, end)"
Create a python function to extract the intersection of two lists.,"listOne = [5,4,3]
listTwo = [3,2,1]","def intersection(listOne, listTwo):
    return list(set(listOne).intersection(set(listTwo)))"
Can you find the smallest number in a given list using Python?,"[4, 5, 6, 7, 8, 1, 2]","def smallest_num(lst):
   min_num = lst[0]
   
   for num in lst:
       if num < min_num:
           min_num = num
           
   return min_num

lst = [4, 5, 6, 7, 8, 1, 2]

print(smallest_num(lst))"
Devise an algorithm in Python that takes an array and returns a histogram of the occurrences of each element in the array.,"[1, 2, 1, 2, 3, 1, 3, 3]","def histogram(arr):
    hist = {}
    for num in arr:
        if num in hist:
            hist[num] += 1
        else:
            hist[num] = 1
    return hist"
create a function in Python that takes an array of integers and returns a string of the array in reverse order.,"[1, 3, 5, 7]","def reverse_list(arr):
    rev_arr = []
    for i in range(len(arr)-1,-1,-1):
        rev_arr.append(arr[i])
    return ''.join(map(str,rev_arr))

arr = [1, 3, 5, 7]
output_string = reverse_list(arr) 
print(output_string)"
"Construct a program, in Python code, to identify all the anagrams of a given word","word = ""eat""","def find_anagrams(word):
    word_list = list(word)
    anagrams = []
    for i in range(len(word_list)):
        for j in range(i+1,len(word_list)+1):
            anagram = ''.join(word_list[i:j])
            if anagram != '' and anagram != word and anagram not in anagrams:
                anagrams.append(anagram)
    return anagrams"
Create an algorithm in Python to count the number of unique elements in a list.,"[1, 2, 3, 1, 2]","def countUnique(arr):
    # create a lookup to keep track of elements
    lookup = set()
    # loop over list to add elements to set
    for elem  in arr:
        if elem not in lookup:
            lookup.add(elem)
    # return the length of the lookup set
    return len(lookup)

# test program
arr = [1, 2, 3, 1, 2]
print(countUnique(arr))"
"Given the following JSON input, write a Python program to calculate the average age of all the users.","[
  {
  ""name"": ""Alice"",
  ""age"": 25
  },
  {
  ""name"": ""Bob"",
  ""age"": 30
  },
  {
  ""name"": ""John"",
  ""age"": 20
  }
]","import json

users = json.loads(input)
total_age = 0
for user in users:
 total_age += user[""age""]

average_age = total_age / len(users)

print(f""Average age of users is {average_age}"")"
Relace a for loop with appropriate list comprehension in a Python program.,"list = [1, 2, 3, 4, 5, 6]","list = [x**2 for x in [1, 2, 3, 4, 5, 6]]"
Write a Python program to print food items along with their prices from a given dictionary of food items and prices.,"food_items = {
 'Burger': 3.99,
 'Fries': 1.99,
 'Pizza': 12.99 
}","for item, price in food_items.items():
 print(f'{item}: ${price}')"
Construct an algorithm in Python to sort the elements of an array in decreasing order.,"[4, 7, 1, 3, 5, 2]","def sortDecreasing(arr):
    for i in range(len(arr)): 
        for j in range(i+1, len(arr)): 
            if arr[i] < arr[j]: 
                arr[i], arr[j] = arr[j], arr[i] 
    return arr
arr = [4, 7, 1, 3, 5, 2]
print(sortDecreasing(arr))

# Output: [7, 5, 4, 3, 2, 1]"
Compile the following Python code using Python 3.,"print(""Hello, World!"")","python3 hello.py
# output: Hello, World!"
"Write a Python program to compute the sum of values of a given dictionary, where each item in the dictionary has a key and a value associated with it.","d = {
 'x': 9, 
 'y': 10, 
 'z': 15
}","def get_dict_sum(d): 
    summ = 0
    for key, val in d.items(): 
        summ += val
    return summ
print(get_dict_sum(d))"
Write a Python 3 script that reads input from stdin line by line and prints the number of occurrences of each word.,The quick brown fox jumps over the lazy dog,"import sys

dictionary={}

for line in sys.stdin:
 words_in_line = line.split()
 for word in words_in_line:
 word=word.lower()
 if word in dictionary:
 dictionary[word]+=1
 else:
 dictionary[word]=1

for word in dictionary:
 print(word +"":""+ str(dictionary[word]))"
"Generate a Python program that take a list y and a number n, and rotate y by n.","[1, 2, 3, 4, 5] and n = 2","def rotate(y , n):
    temp = y[0:n]
    for i in range (len(y) - n):
        y[i] = y[n + i]
    for i in range (n):
        y[i + len(y) - n] = temp[i]
    return y"
Create a program in Python to find the maximum value in a given sequence.,"[3, 4, 6, 2, 8, 9, 5]","def findMaxValue(arr):
    max_val = arr[0]

    for i in range(1, len(arr)):
        if arr[i] > max_val:
            max_val = arr[i]

    return max_val

arr = [3, 4, 6, 2, 8, 9, 5]
maxValue = findMaxValue(arr)
print('Max value in given array is: {}'.format(maxValue))"
Generate Python code to remove all punctuation from the given string.,"String: This, is a test-string.","import string

str = ""This, is a test-string.""
str = str.translate(str.maketrans('', '', string.punctuation))
print(str)"
Write a Python script to fetch the current stock price of a given company,name = ABC,"from yahoo_fin import stock_info as si

def get_stock_price(name):
    data = si.get_live_price(name)
    return data

if __name__ == '__main__':
    name = 'ABC'
    print(get_stock_price(name))"
Perform classification on the given dataset using Support Vector Machines in Python.,"X = [[0,0],[1,1],[1,2],[2,2],[2,3]]
y = [0,0,0,1,1]","from sklearn.svm import SVC

model = SVC(kernel = 'linear', probability=True) 
model.fit(X, y)"
Write a Python program that calculates the largest prime factor of a given number.,60,"def is_prime(num):
 for i in range(2, int(num**0.5) + 1):
  if num % i == 0:
   return False
 return True

def largest_prime_factor(n):
 for i in range(2, n + 1):
  if n % i == 0 and is_prime(i):
   lpf = i
 return lpf

print(largest_prime_factor(60))
# Output: 5"
Create a Python program to calculate the factorial of a given integer.,5,"def factorial(n):
    if n == 0:
        return 1

    return n * factorial(n-1)

result = factorial(5)
print(result)"
Convert a given Python function to a JavaScript function.,"def factorial(n):
    if n == 1:
        return 1
    else:
        return n * factorial(n-1)","function factorial(n) {
    if (n == 1) {
        return 1;
    }
    else {
        return n * factorial(n-1);
    }
}"
Write a python code that takes a string as a parameter and returns the number of different words present in that string.,"string=""The quick brown fox jumped over the lazy dog""","def word_count(string):
    words = string.split()
    return len(set(words))

if __name__ == '__main__':
    output = word_count(""The quick brown fox jumped over the lazy dog"")
    print(output)"
Design a program in Python to take two numbers as input and return their product.,"num1 = 5
num2 = 7","def multiply(num1, num2):
    product = num1 * num2
    return product

num1 = 5
num2 = 7

product = multiply(num1, num2)
print('Product of', num1, 'and', num2, 'is', product) # prints 'Product of 5 and 7 is 35'"
"Generate a Python script that takes two arguements, a filename and a number, and prints out all the lines from the filename whose length is less than the number.","file_name = 'sample.txt'
number = 10","import sys

file_name = sys.argv[1]
number = int(sys.argv[2])

with open(file_name, 'r') as f:
 for line in f:
 if len(line) < number:
 print(line, end='')"
Automate the following task to be completed on Python,Determine if a given number is prime or not,"def is_prime(num):
    if num <= 1:
        return False
    for i in range(2, num):
        if num % i == 0:
            return False
        return True"
Create a Python function which takes a list of strings as an input and determines if the list contains palindrome strings (i.e. strings that are the same forward and backwards).,"list_of_strings = [""racecar"", ""cat"", ""mom"", ""noon""]","def is_palindrome(list_of_strings):
  palindrome_list = [string for string in list_of_strings if string == string[::-1]]
  if palindrome_list:
    return True
  return False"
Construct a Python program to combine the elements of two lists into a list of tuples.,"[1, 2, 3], [4, 5, 6]","def combine_list(array1, array2):
    return list(zip(array1, array2))"
Write a Python program to convert a string to a list of characters.,"String ""Hello"".","def str_to_list(str):
    char_list = []
    for c in str:
        char_list.append(c)
    return char_list

print(str_to_list(""Hello"")) #prints ['H', 'e', 'l', 'l', 'o']"
"Write a Python function that takes a string, checks if it is a palindrome and returns true or false.","""level""","def is_palindrome(string):
    rev_string = string[::-1]
    if string == rev_string:
        return True
    else:
        return False 

print(is_palindrome(""level""))"
Write a Python program to insert a given string at the beginning of all items in a list.,"_list = ['digger', 'dog', 'deer']
string = 'The'","_list = ['digger', 'dog', 'deer']
string = 'The'

# Create an empty list to store the modified elements
new_list = []

# Iterate through the old list and create the modified list
for item in _list:
    new_list.append(string + ' ' + item)

# Print the modified list
print(new_list) # Output: ['The digger', 'The dog', 'The deer']"
Edit a python method to assign a grade based on a given exam marks.,"def assign_grade(marks):
    if marks >= 90:
        return 'A'
    elif marks >=80 and marks < 90:
        return 'B'","def assign_grade(marks):
    if marks >= 90:
        return 'A'
    elif marks >= 80 and marks < 90:
        return 'B'
    elif marks >= 70 and marks < 80:
        return 'C'
    elif marks >= 60 and marks < 70:
        return 'D'
    else:
        return 'F'"
Translate a given program written in Python to Java.,"def calculate_mean(numbers):
    total = 0
    for i in numbers:
        total = total + i
    mean = total / len(numbers)
    return mean","public static double calculateMean(int[] numbers) {
    int total = 0;
    for (int i : numbers) {
        total += i;
    }
    double mean = total / numbers.length;
    return mean;
}"
Build a Python function that takes in two integers and returns the greatest common divisor.,4 and 8,"def gcd(a, b):
    if b == 0:
        return a
    return gcd(b, a % b)

print(gcd(4, 8)) # Output: 4"
Generate a python program to print out all the factors of a number n.,n = 10,"def factor_of(n):
    result = []
    for i in range(1, n + 1):
        if n % i == 0:
            result.append(i)
    return result"
Generate a valid python program to calculate the frequency of occurrence of a character in a given string.,"""Hello World!""","def char_frequency(string):
    frequencies = {}
    for char in string:
        if char in frequencies:
            frequencies[char] += 1
        else:
            frequencies[char] = 1
    return frequencies

freq = char_frequency(""Hello World!"")
print(freq)"
Write a Python function to multiply all the numbers in a list.,"[1, 2, 3, 4]","def multiplyList(numbers):
  result = 1
  for x in numbers:
    result = result * x
  return result"
"Using Python, create a program to convert the string 'Hello, world!' to titlecase.","""Hello, world!""","import string

def toTitlecase(inputString):
    return inputString.title()

print(toTitlecase(""Hello, world!""))"
Edit the following code to make it compatible with python 3 syntax,"def divide(x,y):
    return x/float(y)","def divide(x, y):
    return x / y"
Create a function to create a NxN matrix in Python with all elements equal to a given number.,"N=5, num=7","def mat_gen(N, num):
    matrix = [[num for col in range(N)] for row in range(N)]
    return matrix

mat_gen(5, 7)"
Write a function in Python that takes a list of strings and a string as input and adds the string as the last item in the list.,"list=['apple','orange','banana']
string='kiwi'","def add_string_to_list(string_list, string):
 string_list.append(string)
 
 return string_list
 
# sample call
list = ['apple', 'orange', 'banana']
string = 'kiwi'
new_list = add_string_to_list(list, string)

print(new_list)
# ['apple','orange','banana','kiwi']"
Write a Python program to create a dictionary from a given list of integers that contains elements from 1 to the given number.,number = 5,"def create_dict(number):
    dict_N = dict()
    for i in range(1, number+1):
        dict_N[i] = i

    return dict_N

dict_N = create_dict(5)
print(dict_N)"
Write a Python program to remove the nth index character from a nonempty string.,"text = ""Python""
n = 0","def remove_nth_index(text, n):
    return text[:n] + text[n + 1:]"
Modify the given Python function to print out the reversed list first and then find the sum of the numbers.,"def reverse_list(numbers):
 return numbers[::-1]","def reverse_list(numbers):
 reversed_list = numbers[::-1]
 print(reversed_list)
 return sum(reversed_list)"
Modify a python program so that it can sort the list of numbers in ascending order.,"numbers = [3, 5, 9, 1, 2]","numbers = [3, 5, 9, 1, 2] 

numbers.sort() 

print(numbers)"
Write a python script which reformats the json string below,"data = '{""name"":""Jason"",""age"":42,""favorite_food"":""Lasagna""}'","import json

def reformat_json(data):
    data = json.loads(data)
    return json.dumps(data, indent=4)

data = '{""name"":""Jason"",""age"":42,""favorite_food"":""Lasagna""}'
updated_data = reformat_json(data)

print(updated_data)
# {""name"": ""Jason"",
#  ""age"": 42,
#  ""favorite_food"": ""Lasagna""}"
"Create a Python program that reads in a CSV, parse the data, and generates a JSON report.","Name, Age, Profession
John, 25, Engineer
Jane, 30, Developer","import csv
import json
 
csv_file = open('data.csv', 'r')
json_file = open('data.json', 'w')
 
fieldnames = (""Name"",""Age"",""Profession"")
reader = csv.DictReader(csv_file, fieldnames)
out = json.dumps([r for r in reader])
json_file.write(out)"
Write a Python script to fold a given array of integers into two halves.,"[1, 7, 3, 4, 9]","def foldArray(arr): 
    n = len(arr) 
    if n % 2 != 0: 
        mid = int(n / 2) + 1
    else: 
        mid = int(n / 2)
    left = arr[:mid] 
    right = arr[mid:] 
    newarr = list(map(lambda x,y:(x+y),left,right[::-1])) 
    return newarr 

arr = [1, 7, 3, 4, 9] 
print(foldArray(arr))"
Create an algorithm in Python to group the numbers of an array in such a way that the total sum of each group is equal.,"[1, 2, 3, 4, 5, 6, 7, 8]","def group_equal_sum(arr):
    result = []
    arr.sort()

    while len(arr) > 0:
        group = [arr[0]]
        arr.remove(arr[0])

        sum_ = group[0]
        while sum_ in arr:
            group.append(sum_)
            arr.remove(sum_)
            sum_ += 1

        result.append(group)
    return result"
Write a Python script that filters a list of integers and returns only even numbers.,"list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","def filter_even_numbers(lst):
    # Filter out even numbers from the given list 
    even_numbers = [num for num in lst if num % 2 == 0]
    return even_numbers

list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
result = filter_even_numbers(list)
print(result)"
"Construct a Python program to read in a sequence of numbers, find the largest number and its position in the sequence.","[3, 2, 5, 1, 9]","sequence = [3, 2, 5, 1, 9]

# finding the largest number
max_num = max(sequence)

# finding the index of the largest number in the sequence
index = sequence.index(max_num)

print(""The largest number in the sequence is:"", max_num)
print(""The position of the largest number in the sequence is:"", index)"
Write a Python program to sort a list of tuples by the second item in each tuple.,"[(5, 5), (4, 4), (3, 3), (2, 2), (1, 1)]","# sort a list of tuples by the second item in each tuple
def sort_tuple(tuples):
    # sort in ascending order
    tuples.sort(key=lambda x: x[1])
    # return the list
    return tuples"
Optimize this code snippet in Python.,"data = [1, 2, 3, 4, 5, 6]
sum = 0

for num in data:
    sum = sum + num","data = [1, 2, 3, 4, 5, 6]
sum = 0

sum = sum + sum(data) # This is more efficient than iterating through the whole list with a `for` loop."
Implement a function in Python that takes an array of strings and returns a list of all strings that have length greater than 6,"[""testing"", ""this"",""array""]","def getStringsWithLength(array):
    output = []
    for x in array:
        if len(x) > 6:
            output.append(x)
    return output

print(getStringsWithLength([""testing"", ""this"",""array""]))"
Improve the efficiency of a Python program by using functions.,"arr = [1, 2, 3, 4, 5]

def calculate(arr):
    sum = 0
    for i in arr:
        sum += i
    print(sum)

calculate(arr)","arr = [1, 2, 3, 4, 5]

def calculate(arr):
    return sum(arr)

def main():
    print(calculate(arr))

if __name__ == '__main__':
    main()"
"Create a Python program to simulate a vending machine with two coins, a quarter and a dime.",No input,"class VendingMachine:
    def __init__(self):
        self.coins_inserted = 0

    def insert_coins(self, quarters, dimes):
        self.coins_inserted += quarters * 25 + dimes * 10

    def get_coins_inserted(self):
        return self.coins_inserted"
Write a python function to parse a list of strings and extract the date that appears at the end of the strings?,"list_of_strings = [""April 11th, 2019"", ""July 2nd, 2018"", ""October 16th, 2012""]","def parse_list_of_strings(list_of_strings):
    date_list = []
    for string in list_of_strings:
        date_to_add = datetime.strptime(string, '%B %dth, %Y')
        date_list.append(date_to_add)
    return date_list"
Write a Python program to check if a number is prime by eliminating the multiples of all numbers from 2 to the square root of the number.,n = 99,"import math

def is_prime(n):
    for i in range(2, int(math.sqrt(n))+1):
        if n % i == 0:
            return False
    return True

print(is_prime(n))"
Create an logging utility in Python that prints the timestamp along with the logged content for each log entry.,.,"import datetime

def log(content):
 timestamp = datetime.datetime.now().strftime(""%Y-%m-%d %H:%M:%S"")
 message = f""{timestamp}: {content}""
 print(message)
 
log('Logging Message')"
Create a function in Python that finds the common elements two arrays.,"arr1 = [1, 2, 3, 4, 5]
arr2 = [2, 3, 6, 7, 8]","def find_common_elements(arr1, arr2):
  common = []
  for element in arr1:
    if element in arr2:
      common.append(element)
  return common

arr1 = [1, 2, 3, 4, 5]
arr2 = [2, 3, 6, 7, 8]

print(find_common_elements(arr1, arr2))"
Create a Python script to calculate the sum of the numbers in a list given as input.,"list = [1, 5, 10, 30]","def sum_list(list):
    total = 0
    for i in list:
        total += i
    return total

print sum_list(list)"
Create a program in Python that takes a collection of numbers as input and calculates their mean.,"[1, 4, 6, 8, 12]","def calculate_mean(nums):
    mean = 0
    for num in nums:
        mean += num
    mean /= len(nums)
    return mean"
Create a Python program for filtering a given list of numbers and returning the even numbers.,"[1, 2, 3, 4, 5, 6, 7, 8, 9]","def filter_even_numbers(numbers):
  even_numbers = []
  for number in numbers:
    if number % 2 == 0:
      even_numbers.append(number)
  return even_numbers

numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]
print(filter_even_numbers(numbers))"
Write a Python function to check whether a number is in a given range.,"num = 10
lower = 10
upper = 20","def check_range(num, lower, upper):
        return (num >= lower and num <= upper)
 
print(check_range(10, 10, 20)) # prints True"
"Given a function that takes a string as an argument, write a Python code snippet to capitalize the first letter of every word in the string.",def capitalize_string(str):,"def capitalize_string(str):
    words = str.split(' ')
    capitalized_words = [word.capitalize() for word in words]
    capitalized_string = ' '.join(capitalized_words)
    return capitalized_string"
Create a program in Python that will filter a list of numbers by removing any number divisible by 3.,"[2, 4, 7, 8, 10, 12, 15, 20]","def filter_by_three(numbers):
    filtered_numbers = []
    for num in numbers:
        if num % 3 != 0:
            filtered_numbers.append(num)
    return filtered_numbers

print(filter_by_three([2, 4, 7, 8, 10, 12, 15, 20]))"
Optimize this while loop in the given Python code.,"i = 0
while i < 5:
    i += 1
    print(i)","i = 0
while i < 5:
    print(i)
    i += 1"
"Create a Python program to calculate the total cost of a trip, given the cost of the flight, hotel, and other expenses.","Flight Cost: $500
Hotel Cost: $350
Other Expenses: $200","# Calculate the total cost

flight_cost = 500
hotel_cost = 350
other_expenses = 200
total_cost = flight_cost+hotel_cost+other_expenses

print(f""The total cost of the trip is ${total_cost}"")"
Write a Python algorithm that finds the factorial of a given number.,5,"def factorial(n):
    if n == 0:
        return 1
    
    return n * factorial(n-1)"
Write a Python program to get the index of the largest item in a given list.,"[4, 3, 5, 7, 6]","# get the index of the largest item in a list
def get_max_index(arr):
    max_index = 0
    for i in range(1, len(arr)):
        if arr[i] > arr[max_index]:
            max_index = i
    return max_index

result = get_max_index([4, 3, 5, 7, 6])
print(result) # 3"
Can you write a code snippet to flatten a 2D array in Python?,"[[1, 2, 3], [4, 5, 6], [7, 8, 9]]","def flatten_2d_array(arr):
    flattened_arr = []
    for row in arr:
        for item in row:
            flattened_arr.append(item)
    return flattened_arr

arr = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
flattened_arr = flatten_2d_array(arr)
print(flattened_arr)"
Compute the median of a sequence of numbers in Python.,"Sequence: [3, -2, 4, 7, 10, 12, 11, -4, 8]","import statistics 
sequence = [3, -2, 4, 7, 10, 12, 11, -4, 8]
median = statistics.median(sequence) 
print(median) # Output: 7"
Write a python program to convert a number into a list of its digits,235,"def number_to_digits(number):
  digits = []
  while (number>0):
    digits.append(number % 10)
    number = number // 10
  
  digits.reverse()
  return digits"
Construct a decision tree in Python using the given data set.,"import pandas as pd

data = { 
    'Skewness': ['low', 'high', 'medium'], 
    'Target': ['yes', 'no', 'yes'] 
}

df = pd.DataFrame(data)","from sklearn import tree

features = ['Skewness']
X = df[features]
y = df['Target']

clf = tree.DecisionTreeClassifier(random_state=0)
clf = clf.fit(X, y)"
Write a Python code snippet to search for a given number in the given array.,"arr = [5, 8, 2, 10, 48, 41], number = 8","def search(arr, number): 
    for i in range(len(arr)): 
        if arr[i] == number: 
            return True
    return False
  
arr = [5, 8, 2, 10, 48, 41] 
number = 8
if search(arr, number): 
    print(""Number found"") 
else: 
    print(""Number not found"")"
Find and fix the errors in the following Python code snippet.,"def multiplying():
retrun x * y","def multiplying(x, y): 
    return x * y"
Modify the following code in Python to check if a number is prime or not.,"def checkPrime(n):
    for i in range(2,n):
        if n%i==0:
            return False
    return True","def checkPrime(n):
    if n <= 1:
        return False

    for i in range(2,n):
        if n % i == 0:
            return False
    
    return True"
Program a Python class for handling employee data.,class Employee:,"class Employee:
    def __init__(self, name, age, salary, company):
        self.name = name
        self.age = age
        self.salary = salary
        self.company = company
    def get_details(self):
        return ""{}, {}, {}, {}"".format(self.name, self.age, self.salary, self.company)"
Create a Python script to find the Fibonacci series which is a sequence of numbers where every number is the addition of the previous two numbers.,n = 10,"def fibonacci(n): 
    if n == 0: return 0
    if n == 1 or n == 2: return 1

    fib_n_2 = 1
    fib_n_1 = 1
    fib_n = 0

    for i in range(3, n + 1): 
        fib_n = fib_n_1 + fib_n_2
        fib_n_2 = fib_n_1  
        fib_n_1 = fib_n 
    return fib_n 

print(fibonacci(n))"
"Create a program in Python which will take in a list of strings, and print out the longest string in the list.","['foo', 'test', 'longstring', 'bar']","def longest_string(str_list): 
    longest_str = '' 
    for str in str_list: 
        if len(str) > len(longest_str): 
            longest_str = str 
  
    return longest_str 

string_list = ['foo', 'test', 'longstring', 'bar'] 
long_string = longest_string(string_list) 

print(long_string)"
Construct a python program to create a dictionary containing a list of student grades,"James: 95
Alice: 80
John: 75","grades_dict = {
  ""James"": 95,
  ""Alice"": 80,
  ""John"": 75
}"
Calculate the sum of the numbers in this list in Python.,"lst = [3, 5, 8, 9]","# Calculate the sum of the numbers in the list
total = sum(lst)

# Print the result
print(total) # prints 25"
Create a function in Python to find all unique combinations of numbers from a given list.,"[1, 2, 3, 4]","def find_unique_combos(lst):
    combos = []
    for i in range(len(lst)):
        for j in range(i+1, len(lst)+1):
            combos.append(lst[i:j])
    return list(set(tuple(x) for x in combos))

print(find_unique_combos([1,2,3,4]))"
Create a function in Python that takes a string as an argument and replace all vowels with underscores.,teststring,"def replace_vowels(input_string):
    vowels = [""a"", ""e"", ""i"", ""o"", ""u"", ""A"", ""E"", ""I"", ""O"", ""U""]
    output_string = ''
    for s in input_string:
        if s in vowels:
            output_string += '_'
        else:
            output_string += s
    return output_string

result = replace_vowels('teststring')
print(result)"
Generate a Python program to find the index of an item in the given list.,"arr = [3,7,2,5]","def find_index(arr, item):
    for i, value in enumerate(arr):
        if item == value:
            return i
    return -1"
Design a Python code to detect and remove duplicate elements from a given array.,"[12, 34, 11, 12, 23, 11]","def remove_duplicates(arr): 
    result = [] 
    for i in arr: 
        if i not in result: 
            result.append(i) 
    return result

arr = [12, 34, 11, 12, 23, 11]
result = remove_duplicates(arr)
print(result) // Prints [12, 34, 11, 23]"
How can you improve the following python function to make it run more quickly?,"def find_target(numbers, target):
    for number in numbers:
        if number == target:
            return True
    return False","def find_target(numbers, target):
    """"""This function returns True if the target is present in the given list of numbers.""""""
    # Use set to improve the lookup performance
    num_set = set(numbers)
    if target in num_set:
        return True
    return False"
Create a Python program that takes a varchar input and encodes it using the Base 64 algorithm.,"""Hello World!""","import base64

string = ""Hello World!""

data_bytes = string.encode('ascii')
encoded_string = base64.b64encode(data_bytes)

print(encoded_string)"
Create a Python code to delete the last element in a list.,"[1, 2, 2, 4, 4]","def delete_last(lst):
    return lst[:-1]

result = delete_last([1, 2, 2, 4, 4])
print(result)"
Implement a function in Python to reverse a given list of numbers.,"List: [1, 2, 4, 7, 9]","def reverseList(list):
    start = 0
    end = len(list) - 1
  
    while start < end:
        list[start], list[end] = list[end], list[start]
        start += 1
        end -= 1
  
    return list

list = [1, 2, 4, 7, 9]

reverseList(list)
# Output: [9, 7, 4, 2, 1]"
Write a Python code to compare two list and print the elements which are common between them.,"list1 = [2, 3, 5, 8]
list2 = [1, 4, 5, 9]","list1 = [2, 3, 5, 8]
list2 = [1, 4, 5, 9]

common_elements =  [element for element in list1 if element in list2]

print(common_elements)"
Write a Python script that takes a list of integers and checks if any two numbers sum up to a given target.,"[3, 2, 5, 7], target = 9","def checkSum(arr, target): 
 for i in range(len(arr)): 
 for j in range(i + 1, len(arr)): 
 if arr[i] + arr[j] == target: 
 return True

 return False

nums = [3, 2, 5, 7]
target = 9

print(checkSum(nums, target)) # output: True"
Write a Python program to check whether a number is divisible by 7 or not.,92,"number = 92

if (number % 7) == 0:
    print(""The number is divisible by 7"")
else:
    print(""The number is not divisible by 7"")"
"Edit the following Python code to implement case-insensitivity and replace ""word"" with a user-defined variable.","word = 'SUPER'

if word == 'super' or word == 'SUPER':
 print('Object found')","word = input('Enter word: ')

if word.lower() == 'super':
 print('Object found')"
Modify this Python program to print the greatest common divisor of two numbers.,"num1 = 5, num2 = 6","def gcd(x, y):
    while y != 0:
        (x, y) = (y, x % y)
    return x

num1 = 5
num2 = 6

print(""GCD is:"", gcd(num1, num2))"
Generate a program in Python which takes a list of integers as an argument and prints the odd numbers in ascending order.,"list = [1, 2, 3, 4, 5, 6, 7]","def print_odd_numbers(numbers):
    for num in sorted(numbers):
        if num % 2 != 0:
            print(num)

print_odd_numbers([1, 2, 3, 4, 5, 6, 7])
# Output: 1, 3, 5, 7"
Write a Python function to calculate the average grade for a given list of student grades.,"[90, 99, 75, 72, 85]","def average_grade(grades):
 total = 0
 for grade in grades:
 total += grade
 return total / len(grades)

>>> average_grade([90, 99, 75, 72, 85])
84.2"
Create a function in Python that takes two strings as arguments and returns the first string repeated as many times as specified by the second argument.,Abstract,"def repeat_string (string, repeat):
    """"""Return the supplied string repeated as many times as specified.""""""
    
    repeated_string = string * repeat
    
    return repeated_string
    
print(repeat_string(""Abstract"", 3)) # Output: AbstractAbstractAbstract"
"Given a sample data set, write a Python program to remove all rows that have missing values.","name  age	nationality
John  22	Nigerian
Steve	null	American
Harry	25	British","import pandas as pd

data = {
   'name': ['John', 'Steve', 'Harry'],
   'age': [22, None, 25],
   'nationality': ['Nigerian', 'American', 'British']
}

df = pd.DataFrame(data)
df = df.dropna()

print(df)"
Create a Python function to print out all the words in a given string with the letter e.,"str = ""Hello World""","def print_words_with_e(str): 
    words = str.split() 
    for word in words: 
        if 'e' in word: 
            print(word) 

print_words_with_e(str)"
Write a python program to sort a list of tuples based on their second element.,"list = [('dog', 6), ('cat', 4), ('rabbit', 2)]","list = [('dog', 6), ('cat', 4), ('rabbit', 2)]

list.sort(key=lambda x: x[1])

print(list)"
Write a code in Python that takes a given string and removes all spaces from the string.,"""Hello World""","def remove_spaces(str): 
    new_str = """"
	
    # loop through each character in the string
    for letter in str: 
        if letter != "" "":
            new_str = new_str + letter 
		
    return new_str 

# main program
str = ""Hello World""
new_str = remove_spaces(str)

#print the new string
print(""String without spaces:"", new_str)"
Set up conditions for a for-loop for iterating over a dictionary in Python.,"dict = {""Apple"": 10, ""Orange"": 20, ""Banana"": 30}","keys = dict.keys()
for i in keys:
    value = dict[i]
    print(i, "":"", value)"
Write a python code snippet to reverse each word of the given sentence.,sentence = 'Hello world',"def reverse_string(string): 
    words = string.split() 
      
    reversed_string = [word[::-1] for word in words]
    return ' '.join(reversed_string)

reverse_string(sentence) //Returns 'olleH dlrow'"
Please provide a python code snippet that counts the number of words in a given sentence.,"my_string = ""This is a sentence with five words.""","my_string = ""This is a sentence with five words.""
words = my_string.split("" "")
print(len(words))"
Write a Python code snippet to display all the items stored in a list given below.,"list_items = ['Apple', 'Mango', 'Banana']","for item in list_items:
    print(item)"
Write a function in Python to find the number of prime numbers up to a given number.,100,"def countPrimes(num): 
    if num <= 1:  
        return 0
 
    primes = [2] 
    x = 3
    
    while x <= num: 
        for y in primes: 
            if x % y == 0: 
                x += 2
                continue
        primes.append(x) 
        x += 2
    
    return len(primes) 

num_primes = countPrimes(100)
print(""Number of primes between 1 and 100:"", num_primes)"
"In Python, create a function that takes an list of numbers and returns the list with any duplicate values removed.","[1,2,3,3,2,1,4,5]","def remove_duplicates(list_num):
    return list(dict.fromkeys(list_num))

list_num = [1,2,3,3,2,1,4,5]
list_num = remove_duplicates(list_num)
print(list_num)  // [1, 2, 3, 4, 5]"
Optimize the following Python program to print numbers from 1 to 100 without using a loop.,"def print_numbers():
    num = 1
    while num <=100:
        print(num)
        num += 1","def print_numbers():
    if num <= 100:
        print(num)
        print_numbers(num + 1)

print_numbers(1)"
"Using Python, create a program to print a random element from a list.","[""apple"", ""banana"", ""mango"", ""pear"", ""grape""]","import random

# list of fruits
fruits = [""apple"", ""banana"", ""mango"", ""pear"", ""grape""]

# generate a random index
randomIndex = random.randint(0, len(fruits)-1)

# select and print the random fruit
randomFruit = fruits[randomIndex]
print(""Random fruit: "" + randomFruit)"
Generate a Python program to scrape the headlines from a given news article.,https://www.bbc.com/news/uk-england-london-53741405,"import requests
from bs4 import BeautifulSoup

url = ""https://www.bbc.com/news/uk-england-london-53741405""

page = requests.get(url)
soup = BeautifulSoup(page.content, 'html.parser')

headlines = soup.find_all('h1', class_='story-body__h1')
for headline in headlines:
 print(headline.text)"
Generate a Python program to filter out any words containing a given letter from a list.,"words = [""apple"", ""banana"", ""orange"", ""peach""]
letter = ""e""","def filter_words(words, letter):
    filtered_words = []
    
    for word in words:
        if letter not in word:
            filtered_words.append(word)
    
    return filtered_words"
"Given the following data, generate a Python program that sorts the data in ascending order.","[5, 3, 10, 4, 1]","def sort_list(list_input):
    sorted_list = sorted(list_input)
    return sorted_list"
Generate a unique ID in Python for a given string.,"string = ""Hello World!""","import uuid
unique_id = uuid.uuid3(uuid.NAMESPACE_DNS, string)"
Write a Python program to add a prefix and suffix to all strings in a list.,"list = ['abc', 'def', 'ghi']","pre = ""PRE-""
suf = ""-SUF""

enriched_list = [ pre + s + suf for s in list]

print(enriched_list)"
Edit the given code segment in Python and make it a valid program:,"x = 5
def add_two_numbers(x, y):
    z = x + y
    return z","x = 5
def add_two_numbers(x, y):
    z = x + y
    return z

result = add_two_numbers(x, 5)
print(result)"
Create a Python script to convert an input JSON string into a Python dictionary.,"{""name"": ""John"", ""age"": 30, ""country"": ""USA""}","import json

input_string = '{""name"": ""John"", ""age"": 30, ""country"": ""USA""}'

python_dict = json.loads(input_string)
print(python_dict) # Output: {'name': 'John', 'age': 30, 'country': 'USA'}"
Create a Python function that takes a list of strings as an argument and returns a new sorted list with no duplicates.,"['cat', 'dog', 'cat', 'mouse', 'lion', 'dog']","def remove_duplicates(strings):
  new_list = []
  for s in strings:
    if s not in new_list:
      new_list.append(s)
  new_list.sort()
  return new_list

strings = [""cat"", ""dog"", ""cat"", ""mouse"", ""lion"", ""dog""]
unique_list = remove_duplicates(strings)

print(unique_list)"
Find the minimum element in a Python list called 'nums',"nums = [2, 3, 4, 1, 7, 8, 5]","""""""
Find the minimum element in a Python list called 'nums'
""""""

def find_min(nums):
    min = nums[0]
    for num in nums:
        if num < min:
            min = num
    return min
    
if __name__ == '__main__':
    nums = [2, 3, 4, 1, 7, 8, 5]
    print(find_min(nums))"
Write a Python program to multiply two given numbers and print their product,"num1 = 10
num2 = 8","product = num1 * num2
print(product)"
Translate the following pseudocode into Python.,"// read two numbers
// add the two numbers
// output the result","# Read two numbers
n1 = int(input()) 
n2 = int(input()) 

# Add the two numbers
result = n1 + n2

# Output the result
print(result)"
Create a function in Python to filter out elements in a list that share the same value.,"mylist = [1, 2, 2, 3, 3, 3]","def filter_same_value_elements(mylist):
 seen = set()
 for item in mylist:
 if item not in seen:
 yield item
 seen.add(item)

filtered_list = list(filter_same_value_elements(mylist))
print(filtered_list) # [1, 2, 3]"
Modify the following code to make it more Pythonic.,"list1 = [1, 2, 3, 4]
list2 = [5, 6, 7, 8]

result = []
for i in range(len(list1)):
result.append(list1[i] * list2[i])","list1 = [1, 2, 3, 4]
list2 = [5, 6, 7, 8]

result = [x * y for x, y in zip(list1, list2)]"
Design a program in Python that takes 4 numbers as input and prints out the product of the first three numbers.,"1, 2, 3, 4","def product(nums):
    product = 1
    for i in range(3):
        product *= nums[i]
    return product

nums = [int(x) for x in input().split("","")]
print(product(nums))"
Generate a Python program to calculate the sum of all numbers in a list and print it out.,"[1, 2, 3, 4, 5]","def sum_list(l):
    result = 0
    for num in l:
        result += num
    return result

list = [1, 2, 3, 4, 5]
print(sum_list(list))"
Create a python code to print the frequency of each character in a string.,"String: ""Hello World""","for char in ""Hello World"":
    print(char, "":"", ""Hello World"".count(char))"
Suggest a correction for the following python code to return the average of a given list of numbers.,"def avg(numbers):
 sum = 0
 for n in numbers:
 sum = sum + n
 return sum","def avg(numbers):
 sum = 0
 for n in numbers:
 sum = sum + n
 return sum / len(numbers)"
Generate a string of random characters in Python. The length of the string should be determined by a parameter.,length = 20,"import string 
import random
 
def generate_random_string(length):
 return ''.join(random.choice(string.ascii_letters + string.digits) for _ in range(length))
 
length = 20
print(generate_random_string(length))"
How would you parse the following JSON string in Python?,"{
    ""name"": ""John Doe"", 
    ""age"": 34, 
    ""email"": ""john@example.com""
}","import json

json_string = '{""name"": ""John Doe"", ""age"": 34, ""email"": ""john@example.com""}'
data = json.loads(json_string)

name = data['name']
age = data['age']
email = data['email']"
Write a Python function that gets a list of numbers and returns the sum of the elements.,"List = [1, 2, 3, 4, 5]","def get_sum(list):
    total = 0
    for num in list:
        total += num
    return total"
Construct an algorithm in Python to compute the sum of a array of numbers.,"[3,5,1,2]","def compute_sum(arr):
    
    # Initialize sum
    sum = 0
    
    # Compute sum
    for num in arr:
        sum += num
    
    # Return the sum
    return sum

# Testing
arr = [3,5,1,2]

print(compute_sum(arr))"
Create an efficient sorting algorithm in Python to sort a given array.,"[9, 4, 6, 1, 3, 7]","def sort_arr(arr):
    n = len(arr)
    for i in range(n): 
        for j in range(0, n-i-1): 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j]  
    return arr

result = sort_arr([9, 4, 6, 1, 3, 7])
print(result)"
Create a hash table in Python.,<no input>,"table = dict()

table['one'] = 1
table['two'] = 2
table['three'] = 3"
Create a Python program that takes a given list of numbers and remove any duplicate numbers.,"sample input: [1, 2, 2, 3, 3, 4]","def remove_duplicates(arr):
 result = []
 
 for num in arr:
 if num not in result:
 result.append(num)
 
 return result

# testing 
arr = [1, 2, 2, 3, 3, 4]
print(remove_duplicates(arr)) # Output: [1, 2, 3, 4]"
Design a program in Python to filter the elements from a list which are not divisible by 3.,"[2, 3, 4, 5, 6, 7, 8, 9]","def filter_list(arr):
    filtered_list = []
    for num in arr:
        if num % 3 != 0:
            filtered_list.append(num)
    return filtered_list

print(filter_list([2, 3, 4, 5, 6, 7, 8, 9]))"
Optimize the following Python program to run faster.,"def remove_duplicates(lst):
  s = set()
  for item in lst:
    if item in s:
      pass
    else:
      s.add(item)
  return s

lst = [1, 2, 4, 2, 5, 6, 3, 3]
new_list = remove_duplicates(lst)
print(new_list)","def remove_duplicates(lst):
  return list(set(lst))

lst = [1, 2, 4, 2, 5, 6, 3, 3]
new_list = remove_duplicates(lst)
print(new_list)"
Write a Python program that removes duplicates from a list.,"Input List: [1, 2, 3, 4, 3, 2, 1]","def remove_duplicates(my_list):
 return list(dict.fromkeys(my_list))

my_list = [1, 2, 3, 4, 3, 2, 1]

print(remove_duplicates(my_list)) # output [1, 2, 3, 4]"
Convert the following Ruby code snippet to Python,"name = ""Jared""
puts ""Hello #{name}""","name = ""Jared""
print(f""Hello {name}"")"
You are given a 2D list that needs to be flattened into a single dimensional list. Write some python code to achieve this transformation.,"[[1, 2], [3, 4], [5, 6]]","def flatten_list(input_list): 
    flattened_list = [] 
      
    # traversing the 2d list  
    for row in input_list: 
        # traversing the row 
        for column in row: 
            flattened_list.append(column) 
    return flattened_list"
"Using Python, generate a program to count the number of words in a given sentence.","given_sentence = ""This is a given sentence""","def count_words(given_sentence):
    return(len(given_sentence.split()))

given_sentence = ""This is a given sentence""
word_count = count_words(given_sentence)
print(""Number of words in given sentence is: "", word_count)"
"Implement bubble sort, an efficient sorting algorithm, in Python.","[10, 9, 8, 7, 6, 5, 4, 3, 2, 1]","def bubbleSort(arr):
 n = len(arr)
 for i in range(n - 1):
 for j in range(0, n - i - 1):
 if arr[j] > arr[j + 1]:
 arr[j], arr[j + 1] = arr[j + 1], arr[j]
 
 # Driver code to test above
arr = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]
bubbleSort(arr)

print (""Sorted array is:"")
for i in range(len(arr)):
print (""%d"" %arr[i])"
Edit the given Python code to improve its runtime complexity.,"def func(arr):
  for i in range(len(arr)):
    for j in range(len(arr)):
      if arr[i] == arr[j]:
        print(arr[i])","def func(arr):
  s = set()
  # Store all the elements in a set
  for item in arr:
    s.add(item)
  # Traverse the list and search for the element 
  # in set. It will take O(1) time
  for item in arr:
    if item in s:
      print(item)"
Rewrite this function in Python.,"// original function
int multiply(int x, int y)
{
    int product = 0;
    while(x > 0)
    {
        if (x % 2 != 0)
            product += y;
        x >>= 1;
        y <<= 1;
    }
    return product;
}","def multiply(x, y): 
    product = 0
    while (x > 0): 
        if x % 2 != 0: 
            product += y 
        x >>= 1
        y <<= 1
    return product 

print(multiply(10, 5)) # Output: 50"
"Generate a Python program that given a list of numbers, finds the largest pair sum.","[7, 8, 12, 10]","def max_pair_sum(arr):
    if len(arr) == 0:
        return 0

    max_sum = 0

    for i in range(len(arr)):
        for j in range(i+1, len(arr)):
            max_sum = max(max_sum, arr[i] + arr[j])
    
    return max_sum"
Write a Python program to sort a given list in ascending order without using built-in functions.,"[3, 7, 4, 1, 9]","def sort_list(lst):
    for i in range(0, len(lst)):
        for j in range(i+1, len(lst)):
            if lst[i] > lst[j]:
                lst[i], lst[j] = lst[j], lst[i]
    
    return lst

print(sort_list([3, 7, 4, 1, 9])) # prints [1, 3, 4, 7, 9]"
Fix the following python code.,"def remove_vowel(string):
    vowels = ('a', 'e', 'o', 'u')
    for x in vowels: 
        txt = string.replace(x, """")
    return txt","def remove_vowel(string):
    vowels = ('a', 'e', 'o', 'u')
    for x in vowels: 
        string = string.replace(x, """")
    return string"
Generate an optimized Python program that sorts a list of integers using bubble sort.,"[3, 5, 1, 4, 7]","def bubble_sort(nums):
    n = len(nums)
    for i in range(n):
        swaped = False
        for j in range(0, n-i-1):
            if nums[j] > nums[j+1]:
                nums[j], nums[j+1] = nums[j+1], nums[j]
                swaped = True
 
        if swaped == False:
            break

# Driver code
nums = [3, 5, 1, 4, 7]
bubble_sort(nums)
print(nums)"
Develop a Python program to print a value based on a comparison between two numbers,"a = 10
b = 20","if a < b:
    print(""A is less than B"")
else:
    print(""A is not less than B"")"
Write Python code to print the fibonnaci sequence up to the given number.,Input: 10,"""""""
Print the Fibonacci sequence up to the given number
""""""

def fibonacci(n):
    # Base case
    if n == 0 or n == 1:
        return n
 
    # Recursive case
    return fibonacci(n-1) + fibonacci(n-2)
 
# Print the Fibonacci sequence up to the given number
n = 10
for i in range(n + 1):
    print(fibonacci(i))"
Design an algorithm in Python to convert a temperature in Fahrenheit to Celsius.,64 degrees Fahrenheit,"def convert_f_to_c(temperature):
    return (temperature - 32) * 5.0/9.0

result = convert_f_to_c(64)
print(result)"
Generate code that will use the AWS SDK for Python to create an S3 bucket.,bucket-name: mybucket,"import boto3

# Create an S3 client
s3 = boto3.client('s3')

# Create an S3 bucket
response = s3.create_bucket(
    Bucket='mybucket',
    CreateBucketConfiguration={
    'LocationConstraint': 'us-east-1'
    }
)

print(response)"
Develop an algorithm in Python to find the median of a list of numbers.,"[1, 4, 6, 12, 24, 36]","def get_median(nums): 
    nums.sort()
    if len(nums) % 2 == 0:
        return (nums[int(len(nums)/2)] + nums[int(len(nums)/2-1)])/2
    else:
        return nums[int((len(nums)-1)/2)]
    
result = get_median([1, 4, 6, 12, 24, 36])
print(result)"
"Given a string, write a Python program to remove all leading and trailing whitespace characters.","text = ""  This  is a text string   """,text = text.strip()
Suggest a completion for the following python code to merge two given dictionaries into one.,"def merge_dict(dict1, dict2):","def merge_dict(dict1, dict2):
 result = dict1.copy()
 result.update(dict2)
 return result"
Create a function in Python that takes an array of integers as input and outputs the number of unique values in the array.,"[1,5,5,4,4,6,7,7]","def get_unique_values(arr):
    # convert to set 
    unique_arr = set(arr) 
  
    # return length 
    return len(unique_arr) 
  
# driver code 
arr = [1, 5, 5, 4, 4, 6, 7, 7] 
  
# function call 
unique_values = get_unique_values(arr) 
  
# print unique values 
print(unique_values)"
Write a Python program to retrieve the name of the user from a given input.,User ID: uchefu,"ID = input('User ID: ')

user_name = ID.split('che')[0]
print('User Name: ' + user_name)"
Append a number to each element of a list in Python.,"[1, 2, 3]","def append_nums(lst):
    new_list = [x + 10 for x in lst]
    return new_list

print(append_nums([1, 2, 3]))"
Design a Python algorithm to perform a Prefix Sum operation on an array.,"[1, 2, 3, 4]","def prefix_sum(arr):
result = []
s = 0
for x in arr:
    s += x
    result.append(s)
return result

arr = [1, 2, 3, 4]
prefix_sum(arr)"
Rewrite a given JavaScript function as a Python function. Make sure the output is the same.,"function powerOfTwo(num) {
 return 2 ** num;
}","def powerOfTwo(num):
 return 2 ** num"
Design a program in Python that takes two positive integers and returns their greatest common divisor.,"25, 15","def gcd(a, b): 
    while(b): 
        a, b = b, a % b 
  
    return a 

result = gcd(25, 15) 
print(result)"
Rewrite the following bash script to Python.,"#!/bin/bash
echo ""Enter a number: ""
read num
fact=1
for((i=num;i>=1;i--))
do 
    fact=$((fact * i))
done
echo ""Factorial is $fact""","print(""Enter a number: "")
num = int(input())

fact = 1
for i in range(num, 0, -1):
    fact *= i

print(""Factorial is"", fact)"
Create a function in Python that takes two lists of integers and return a list which contains elements present in both the lists.,"list1 = [1, 2, 3 ,4 ,5]
list2 = [3, 4, 5, 6 ,7]","def intersection(list1, list2):
    return [value for value in list1 if value in list2]

list1 = [1, 2, 3 ,4 ,5]
list2 = [3, 4, 5, 6 ,7]

print (intersection(list1, list2))"
Create a python function to compute the area of a triangle with given sides.,"a = 3
b = 5
c = 4","def calculateTriangleArea(a, b, c): 
    s = (a + b + c) / 2
    area = (s*(s-a)*(s-b)*(s-c)) ** 0.5
    return area
  
area = calculateTriangleArea(a, b, c) 
print(""Area of triangle is %.2f"" % area)"
Improve the performance of the following Python code.,"def find_max(a, b):
 max_val = a
 if b > a:
 max_val = b
 return max_val","def find_max(a, b):
 return max(a, b)"
Generate an algorithm in Python that takes an array of strings and returns all strings which are palindromes.,"['racecar', 'level', 'toronto', 'bob', 'noon']","def palindrome_checker(string_list):
    result = []
    for string in string_list:
        rev_string = string[::-1]
        if rev_string == string:
            result.append(string)
    return result

palindromes = palindrome_checker(['racecar', 'level', 'toronto', 'bob', 'noon'])
print(palindromes)"
Optimize a given Python function to make it more efficient.,"def my_function(n):
  sum = 1
  for i in range(n):
    for j in range(n):
        sum *= j
  return sum","def my_function(n):
  sum = 1
  for j in range(1, n+1):
    sum *= j
  return sum"
Write a Python class that takes 2 strings as arguments and prints them out in a concatenated form.,"string1 = ""Hello"" 
string2 = ""World""","class ConcatStrings:
    def __init__(self, string1, string2):
        self.string1 = string1
        self.string2 = string2

    def print_concat(self):
        print(self.string1 + self.string2)"
Edit the following Python program to use a dictionary instead of a list.,"items = [1, 2, 3, 4]

for item in items:
 print(item)","items = {1: 'one', 2: 'two', 3: 'three', 4: 'four'}

for key, value in items.items():
 print(value)"
Write a Python program to generate a random string with the given length.,Length: 8,"import string
import random

def generate_random_string(length):
  characters = string.ascii_letters + string.digits 
  return ''.join(random.choice(characters) for i in range(length))"
Correct the syntax errors in this piece of Python code.,"def greet(name):
print(""Hello ""name)","def greet(name):
    print(""Hello"", name)"
Write a Python program to evaluate a simple expression and print the output.,"""7*6+20""","def evaluate_expression(exp):
  return eval(exp) 

expression = ""7*6+20""
output = evaluate_expression(expression)
print(output)"
Generate a Python code which takes a list of strings as input and return a string which contain the first letter of each string concatenated.,"[""Hello"", ""World"", ""This"", ""Is"", ""A"", ""Test""]","def first_letter_concat(l):
    '''This function takes a list of strings as input and return a string which contain the first letter of each string concatenated.'''
    result = ''
    for s in l:
        result += s[0]
    return result"
Create a program in Python to remove the duplicates from a given array.,"[1, 2, 5, 7, 1, 8, 5, 9, 8]","def remove_duplicates(arr):
  res = []
  for i in arr: 
    if i not in res: 
      res.append(i)
  return res"
Create a program in Python to find the minimum value in a list.,"[30, 10, 40, 20]","def findMinValue(list):
    minValue = list[0]
    for i in range(1, len(list)):
        if list[i] < minValue:
            minValue = list[i]
    return minValue

list1 = [30, 10, 40, 20]
minValue = findMinValue(list1)
print(minValue)"
Create a web scraper using Python and the requests library to scrape data from a specific website.,Example website URL: https://www.example.com,"import requests

# Specify your website URL
url = 'https://www.example.com'

# Send a request to the website
response = requests.get(url)

# Check the status of the response
if response.status_code == 200:
 # Parse the HTML of the response
 response_html = response.content

 # Do something with the HTML
 print(response_html)"
Design an algorithm in Python to replace all occurrences of blank spaces in a given string with a string.,"""This is a test string""","def replace_spaces(s,replace_with):
    return s.replace("" "",replace_with)

s = ""This is a test string""
replace_with = ""X""

print(replace_spaces(s,replace_with))"
Develop a Python function to calculate the summed weighted average from a given set of values and weight.,"values = [90, 50, 70], weights = [0.4, 0.2, 0.4]","def weightedAverage(values, weights):
    sum = 0.0
    for i in range(len(values)):
        sum += values[i] * weights[i]
    return sum/len(values)

values = [90, 50, 70]
weights = [0.4, 0.2, 0.4]

print(weightedAverage(values, weights))"
Create a python script to identify if a given string is a valid IPv4 address or not.,String: 192.168.25.688,"def is_valid_ipv4(ip):
    parts = ip.split('.')
    if len(parts) != 4:
        return False
    for part in parts:
        if not part.isdigit():
            return False
        if int(part) < 0 or int(part) > 255:
            return False
    return True

print(is_valid_ipv4('192.168.25.688'))

Output: False"
Generate a Python script to find the top 5 most popular items in a given list.,"[1, 3, 5, 3, 6, 2, 4, 6, 8, 4]","from collections import Counter

# Get the input list
list = [1, 3, 5, 3, 6, 2, 4, 6, 8, 4]

# Use Counter library to get a dictionary of the top 5 items
top_five = Counter(list).most_common(5)

# Print the top five items
print(""Top five items in the list:"")
for key, val in top_five:
    print(key, "":"", val, ""occurrences"")"
Cut at current position in a string by 1 letter in Python.,"mystring = ""This is my string""",mystring = mystring[:-1]
Write a Python program to calculate the average of a list of positive integers and output the result.,"List of positive integers: [1, 5, 6, 7, 8]","list_of_positive_integers = [1, 5, 6, 7, 8]
total = sum(list_of_positive_integers)

avg = total/len(list_of_positive_integers)

print(""The average of the list of positive integers is {}"".format(avg))"
Write a Python program to find the longest common prefix among all strings in the list.,"strings = [""code"", ""coder"", ""coding""]","def find_longest_common_prefix(strings):
 first_str = strings[0]
 longest_prefix = """"
 for i in range(len(first_str)):
  current_prefix = first_str[:i]
  flag = True
  for string in strings[1:]:
   if not string.startswith(current_prefix):
    flag = False
    break
  if flag:
   longest_prefix = current_prefix
 return longest_prefix"
Create a Python program that removes duplicate elements from a list.,"[1,2,3,4,4,2,7,8,8,1]","def remove_duplicates(nums): 
  
    # A list for storing final output 
    new_list = [] 
  
    # Looping over the elements 
    for num in nums: 
        # If num is not in new_list, then add it 
        if num not in new_list: 
            new_list.append(num) 
  
    return new_list 

# Main code 
input_list = [1,2,3,4,4,2,7,8,8,1]
print(remove_duplicates(input_list))"
Develop a function in Python to identify the courses in a list of courses that need prerequisites.,"[ [""Calculus I"",""none""], [""Calculus II"", ""Calculus I""], [""Algebra I"", ""none""], [""Algebra II"", ""Algebra I""] ]","def prerequisitesCourses(courses):
    requiredCourses = []
    for course in courses:
        if course[1] != ""none"":
            requiredCourses.append(course[1])
    return requiredCourses"
Create an algorithm in Python for sorting an array of integers with the bubble sort method.,"[12, 3, 10, 7, 5, 11]","def bubble_sort(arr):
    for i in range(len(arr)):
        for j in range(len(arr) - 1):
            if arr[j] > arr[j+1]:
                temp = arr[j]
                arr[j] = arr[j+1]
                arr[j+1] = temp
    return arr

result = bubble_sort([12, 3, 10, 7, 5, 11])
print(result)"
Write a function in Python that takes two strings as input and return true if one is a rotation of the other.,"""listen"",""enlist""","def is_rotation(s1, s2):
  # edge case check
  if len(s1) != len(s2):
    return False

  # concatenate s2 to itself
  concat_s2 = s2 + s2

  #search s1 in concat_s2
  return s1 in concat_s2"
Design a Python script to remove all numerical elements from a list.,"[1, 2, 3, ""a"", ""b"", ""c"", 4, 5]","lst = [1, 2, 3, ""a"", ""b"", ""c"", 4, 5]

new_lst = []

for item in lst:
    if not isinstance(item, int):
        new_lst.append(item)

print(new_lst)"
Write a Python program to find the maximum sum of any continous subarray.,"[1, -2, 3, 4, -5]","def maxSubarrySum(arr):
  cur_max = 0
  global_max = 0
  
  for i in arr:
    cur_max = max(cur_max + i, 0)
    global_max = max(global_max, cur_max)
    
  return global_max
  
# test
arr = [1, -2, 3, 4, -5]
print(maxSubarrySum(arr))

# output: 7"
Generate a Python dictionary from a given list of strings.,"[""Apple"", ""Banana"", ""Carrot""]","# Create a dictionary from a list
my_dict = {key: value for key, value in enumerate([""Apple"", ""Banana"", ""Carrot""])}

# Print dictionary
print(my_dict)"
Optimize an existing Python sorting algorithm to minimize its runtime.,"def sort(arr):
 for i in range(len(arr)):
 for j in range(i + 1, len(arr)):
 if arr[i] > arr[j]:
 arr[i], arr[j] = arr[j], arr[i]","def sort(arr):
 swapped = True
 while swapped:
 swapped = False
 for i in range(len(arr) - 1):
 if arr[i] > arr[i + 1]:
 arr[i], arr[i + 1] = arr[i + 1], arr[i]
 swapped = True"
Come up with a solution in Python to replace all the words in a sentence with the same character.,"Sentence: ""I am bored""
Character: *","def replaceWordsWithCharacter(sentence, character):
    sentenceList = sentence.split(' ')
    newSentence = ''
    
    for word in sentenceList:
        newSentence += character
    
    return newSentence

sentence = ""I am bored""
character = ""*""
print(replaceWordsWithCharacter(sentence,character))"
Write a short python script to get the average of numbers stored in the list.,"[1, 2, 3, 4, 5]","# Compute the average of the numbers
numbers = [1, 2, 3, 4, 5]
total = 0
for number in numbers:
    total += number

# Divide the total by the number of elements in the list
average = total / len(numbers)

# Print the average
print(average)"
Find the minimum of two numbers using Python.,"5, 3","def find_min(a, b):
    return min(a, b)

result = find_min(5, 3)
print(result) # 3"
Create a Python function for computing the Factorial of a number.,6,"def factorial(n):
   if n == 0:
      return 1
   else:
      return n * factorial(n-1)

print(factorial(6))"
Create a Python function that takes in a text string and returns a dictionary of words and the number of times each word appears in the text string.,A quick brown fox jumps over the lazy dog,"def words_count(text):
 words_dict = {}
 for word in text.split(' '):
 if word in words_dict:
 words_dict[word] += 1
 else:
 words_dict[word] = 1
 return words_dict

words_dict = words_count(""A quick brown fox jumps over the lazy dog"")
print(words_dict)"
Design a function that returns the least common multiple (LCM) of two numbers,two integers a and b,"# Python3 program to find LCM of two numbers 

# method to return gcd of a and b 
def gcd(a, b): 
    if a == 0 : 
        return b 
          
    return gcd(b % a, a) 
      
# method to return LCM of two numbers 
def lcm(a, b): 
    return (a*b) // gcd(a, b)"
"Create a python data structure to store customer data, including customer name, address, email and phone number.","""John Doe 1234 Anystreet Anytown, ST 12345 johnd@example.com 123-456-7890""","customer = {
    'name': ""John Doe"",
    'address': ""1234 Anystreet Anytown, ST 12345"",
    'email': ""johnd@example.com"",
    'phone': ""123-456-7890""
}"
Write a Python program to sort a list of numbers from lowest to highest.,"[7, 3, 5, 8, 4]","[3, 4, 5, 7, 8]"
Implement a function in Python to take a string of comma separated numbers and return the average of the numbers.,"""3, 4, 5, 6, 7""","def calculate_average(nums):
 nums_list = nums.split("","")
 total = 0
 for num in nums_list:
 total += float(num)
 return total / len(nums_list)
 
# test code
print(calculate_average(""3, 4, 5, 6, 7"")) # should print 5.0"
Create a Python dictionary with keys based on the given list of data and assign a default value to them.,"[1,2,3]","dictionary = {1: 'default', 2: 'default', 3: 'default'}"
Create a Python script to print out all the numbers in a given range that are divisible by a given number.,"lower = 1
upper = 50
divisible = 5","def printDivisible(lower, upper, divisible):
    for i in range(lower, upper + 1):
        if i % divisible == 0:
            print(i)

printDivisible(lower, upper, divisible)"
Optimize this Python code to achieve better performance.,"def functionA(x):
    answer = 0
    for i in range(x):
        for j in range(i+1):
            answer += 1
    return answer","def functionA(x):
    answer = 0
    for i in range(x):
        answer += x-i
    return answer"
Write a Python function to compute the length of each element in the given list.,"list = [5, 10, 15]","def list_length(list):
  for element in list:
    print(len(element))

list_length(list)"
Suggest  a web scraper API to extract tabular data from a website.,<no input>,"A popular API for web scraping and extracting tabular data from websites is Scrapy. It provides an easy-to-use API for programming web crawlers in Python. It is also extensible, so it can be easily modified and extended to focus on more specific tasks."
Generate a complete python code to print the output shown.,I love Python,"print(""I love Python"")"
Generate a Python program to sort a given list of integers in descending order.,"[6, 4, 7, 2, 1, 3]","def descending_order_sort(arr): 
    n = len(arr)  
    for i in range(n): 
        for j in range(0, n-i-1): 
            if arr[j] < arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j] 

arr = [6, 4, 7, 2, 1, 3] 
descending_order_sort(arr)
print(arr)"
Code a Python program to calculate the permutation of a given string.,"String = ""ABC""","def permutations(string):
 if len(string) == 0:
  return []

 if len(string) == 1:
  return [string]

 perm_list = []
 for c in string:
  for perm in permutations(string.replace(c, '')):
   perm_list.append(c + perm)
 return perm_list

string = ""ABC""
print(permutations(string))"
Write a web scraper in Python to extract all the links from a given webpage and print them.,https://www.example.com/,"from bs4 import BeautifulSoup
import requests

# Get html of desired webpage
url = ""https://www.example.com/""
r = requests.get(url)
html = r.text

# Parse html using BeautifulSoup
soup = BeautifulSoup(html, 'html.parser')

# Extract all links
links = []
for link in soup.find_all('a'):
    links.append(link.get('href'))

# Print all links
print(links)"
Create a function in Python which finds the minimum of the list of given numbers.,"[2, 4, 6, 3, 5, 8]","def min_list(list1): 
    min_value = min(list1) 
  
    return min_value"
Convert the following Matlab code into Python.,"a = 0:10:100;
b = zeros(101,1);
for i=1:101
b(i) = 5*i
end","import numpy as np
a = np.arange(0, 101, 10)
b = np.zeros(101)
for i in range(1, 101):
    b[i] = 5 * i"
Write a Python program to get the two smallest numbers in a list of numbers.,"[1, 3, 7, 4, 5]","list = [1, 3, 7, 4, 5]
small1 = min(list)
list.remove(small1)
small2 = min(list)

print(small1, small2) # 1, 3"
EDIT this Python function to print the number of characters in its argument.,"def print_length(text):
    print(""Length of text is "" + text.length())","def print_length(text):
    print(""Length of text is "" + str(len(text)))"
Write a Python script to calculate the prime factorization of a number.,number = 225,"def prime_factorization(number):
    i = 2
    factors = []
    while i * i <= number:
        if number % i:
            i += 1
        else:
            number //= i
            factors.append(i)
    if number > 1:
        factors.append(number)
    return factors

prime_factorization(number)"
Write a Python program to clean a given text from unwanted words and punctuations.,A raw string,"import string

def clean_text(text):
 # remove punctuation 
 translator = str.maketrans('', '', string.punctuation)
 text = text.translate(translator)
 
 # remove unwanted words
 unwanted_words = {'the', 'and', 'a'}
 words = text.split(' ')
 words = [word for word in words if word not in unwanted_words]
 
 return ' '.join(words)"
Create a Python program that takes a string of text and returns a list of all words in it.,"""This is a sentence.""","def get_words(sentence):
    words = sentence.split(' ')
    return words

words = get_words('This is a sentence.')
print(words)"
Create a function in Java that encodes a string using base64.,Python,"import java.util.Base64;

public String encode(String message) {
 byte[] messageBytes = message.getBytes();
 String encodedMessage = Base64.getEncoder().encodeToString(messageBytes);
 return encodedMessage;
}

String message = ""Python"";
String encodedMessage  = encode(message);
System.out.println(encodedMessage); // Output: UHl0aG9u"
Write a Python program to optimize an existing array using Bubble sort.,"arr = [2,3,1,4,5]","def bubble_sort(arr):
    for i in range(len(arr)):
        for j in range(len(arr) - 1):
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]
    return arr

if __name__ == '__main__':
    arr = [2,3,1,4,5]
    print(""Optimized array:"", bubble_sort(arr))"
Create an AI program in Python that determines whether a given sentence is a statement or a question.,The weather is cold today,"import re

def is_question(sentence):
 sentence = sentence.strip()
 if sentence.endswith('?'):
 return True
 else:
 return False

sentence = ""The weather is cold today""
print(is_question(sentence)) # False

sentence = ""Is it raining outside?""
print(is_question(sentence)) # True"
Optimize an existing sorting algorithm to be as efficient as possible using Python.,"def sort(arr):
 n = len(arr)
 for i in range(n): 
 min_index = i 
 for j in range(i+1, n): 
 if arr[min_index] > arr[j]: 
 min_index = j 
 arr[i], arr[min_index] = arr[min_index], arr[i]","def sort(arr):
 n = len(arr)
 for i in range(n): 
 min_index = i 
 for j in range(min(i+1, n)): 
 if arr[min_index] > arr[j]: 
 arr[i], arr[min_index] = arr[j], arr[i] 
min_index = j"
Create a program in Python to compute the cosine similarity between two given vectors.,"[2, 5], [1, 3]","import numpy

def cos_sim(vec1, vec2):
    sim = numpy.dot(vec1, vec2)/(numpy.linalg.norm(vec1)* numpy.linalg.norm(vec2)) 
    return sim

vec1 = [2, 5]
vec2 = [1, 3]
print(""Cosine Similarity:"", cos_sim(vec1, vec2))"
"Using the ""range"" function, write a Python program to find the sum of all numbers in a given range.","range(3,7)","def sum_in_range(n1, n2):
    return sum(range(n1, n2+1))

print(sum_in_range(3, 7))

# Outputs:
# 25"
Create a function in Python that takes a string as input and converts all the vowels to capital letters.,"str = ""This is a sample string""","def convert_to_upper(str):
    res = """"
    for ch in str:
        if ch in ""aeiou"":
            res += ch.upper()
        else:
            res += ch
    return res

input = ""This is a sample string""
output = convert_to_upper(input)
print(""Converted string: ""+ output)"
Create an algorithm in Python to convert a binary number to its decimal equivalent.,1010101,"def binaryToDecimal(binary):
    binary = str(binary)
    length = len(binary)
    decimal = 0
    j = 0
    for i in range(length-1, -1, -1):
        decimal += (2**j)*int(binary[i])
        j += 1
    return decimal

binary_number = 1010101
decimal_number = binaryToDecimal(binary_number)
print(decimal_number) # Output: 85"
Optimize this python code to reduce the number of lines and make it more efficient,"def calculate_sum(numbers):
    sum = 0
    for n in numbers:
        sum += n
    return sum","def calculate_sum(numbers):
    return sum(numbers)"
Create a Python function that uses a given dictionary to calculate the sum of all the values for each key.,"{'a': 4, 'b': 2, 'c': 1}","def sum_dict_values(dict):
  result = 0
  for key in dict:
    result += dict[key]

  return result

dict = {'a': 4, 'b': 2, 'c': 1}
sum = sum_dict_values(dict)
print(sum) # 7"
Use the given data structure to create a python class.,"data = { 
   ""name"": ""John Doe"",
   ""age"": 30,
   ""city"": ""London""
}","class Person:
    def __init__(self, data):
        self.name = data['name']
        self.age = data['age']
        self.city = data['city']"
Design an algorithm to check if a number is a perfect square in Python.,25,"import math 
  
def isPerfectSquare(n): 
    # Find floating point value of 
    # square root of x. 
    sqr = math.sqrt(n) 
   
    # If square root is an integer 
    return (sqr - math.floor(sqr) == 0) 
  
# Driver program 
x = 25
if(isPerfectSquare(x)): 
    print(x, ""is a perfect square"") 
else: 
    print(x, ""is not a perfect square"")"
Design an algorithm in Python for finding the longest string in an input.,"['cat', 'dog', 'elephant']","def longest_string(strings):
    longest_len = 0
    longest_str = ''
    for s in strings:
        str_len = len(s)
        if str_len > longest_len:
            longest_str = s
            longest_len = str_len
    return longest_str

strings = ['cat', 'dog', 'elephant']
longest_str = longest_string(strings)
print(longest_str)"
Write a Python program to sort a list of tuples using a lambda expression,"tuple_list = [(1, 3), (2, 2), (3, 1), (2, 3)]","sorted_list = sorted(tuple_list, key=lambda x: (x[1], x[0]))
print(sorted_list)

# Output: [(3, 1), (2, 2), (1, 3), (2, 3)]"
"Using the given Python data, create dictionaries of all students and all courses with the corresponding IDs as keys.","students = [('john', 'A', 15), ('jane', 'B', 12), ('dave', 'B', 10)]
courses = [('math', 'B', 18), ('science', 'A', 20)]","student_dict = {'john': {'grade': 'A', 'age': 15},
 'jane': {'grade': 'B', 'age': 12},
 'dave': {'grade': 'B', 'age': 10}}

courses_dict = {'math': {'grade': 'B', 'duration': 18},
 'science': {'grade': 'A', 'duration': 20}}"
Write a Python program to print the top 5 most frequent words in a given sentence.,"""Python is an interpreted, high-level, general-purpose programming language.""","import collections
 
sentence = ""Python is an interpreted, high-level, general-purpose programming language.""
 
# Split sentence into words
words = sentence.split()
 
# Set the counter for words
counter = collections.Counter(words)
 
# Find top 5 most frequent words
result = counter.most_common(5)
print(result)"
Create a Python function to generate an array of random numbers that follows a binomial distribution.,"n = 100 
p = 0.5","import numpy as np

def binomial(n, p):
  return np.random.binomial(n, p)

dist = binomial(n, p)"
Write a Python program that takes a list as input and returns a list that contains only the unique elements.,"list_items = [2, 3, 3, 4, 4, 5, 6, 7, 7]","list_items = [2, 3, 3, 4, 4, 5, 6, 7, 7]

def find_unique_items(input_list):
    result = []
    for elem in input_list:
        if elem not in result:
            result.append(elem)
    return result

print(find_unique_items(list_items))"
Create a Python script to print the sum of all numbers divisible by 3 or 7 in a list.,"[1, 2, 3, 4, 5, 6, 7, 8, 9 ,10, 11, 12, 13, 14]","nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]

total = 0

for num in nums:
    if (num % 3 == 0) or (num % 7 == 0):
        total += num

print(total)   # Output: 42"
Generate a programming code with Python to count the frequency of each character in a given string.,hello,"def count_frequency(text):
  char_frequency = {}
  for i in text:
    if i in char_frequency:
      char_frequency[i] += 1
    else:
      char_frequency[i] = 1
  return char_frequency

str1 = 'hello'
res = count_frequency(str1) 

print (""Per character frequency is : \n"" +  str(res))"
Write a Python script to calculate the sum of the elements of a list.,"[1, 2, 3, 4, 5]","nums = [1, 2, 3, 4, 5]

sum_val = 0
for n in nums:
    sum_val += n

print(f""Sum of the elements in the list: {sum_val}"")"
Implement a search algorithm in Python that finds a given element in an array.,"[2, 4, 6, 3, 1], target 4","def search(array, target):
  for i in range(len(array)):
    if array[i] == target:
      return i
   
  return -1

array = [2, 4, 6, 3, 1]
target = 4

result = search(array, target)

if result != -1:
  print(""Element found at index "" + str(result))
else:
  print(""Element not found"")"
Write a python program to compute the total cost of an item given a price and the quantity.,"price = 5
quantity = 10","def calculate_total_price(price, quantity):
  total_cost = price * quantity
  return total_cost

price = 5
quantity = 10
total_cost = calculate_total_price(price, quantity)
print(""The total cost is:"", total_cost)"
You need to write a program in Python that checks if a given number is a perfect square or not.,36,"def isPerfectSquare(n):
    root =  n ** 0.5
    return root == int(root)

result = isPerfectSquare(36)
print(result)"
Create a sorting algorithm in Python that sorts a list of numbers from smallest to largest.,"[5, 4, 3, 2, 1]","def sort_nums(nums):
    for i in range(len(nums)):
        for j in range(len(nums)-i-1):
            if nums[j] > nums[j+1]:
                nums[j], nums[j+1] = nums[j+1], nums[j]
    return nums"
Create a list of codes to store product data in Python.,"<Product information:
product code (string), product name (string), quantity (integer)>","product_data = [
    ('code', 'str'),
    ('name', 'str'),
    ('quantity', 'int')
]"
Create a Python script to evaluate an expression given as a string.,"Expression string: ""2 * (3 + 1)""","# input expression as a string
expr = ""2 * (3 + 1)""

# Evaluate the expression using eval()
result = eval(expr)

# print the result
print(""Result:"", result)"
Classify the given words using a Python classification program.,"Words: horse, dog, cat","import nltk
from nltk.tokenize import word_tokenize

words = ['horse', 'dog', 'cat']

tokens = [word_tokenize(word) for word in words]

for token in tokens:
    print(nltk.pos_tag([token])[0][1])

# prints NN, NN, NN"
Generate a Python program to generate multiplication table of a given number.,5,"def multiplication_table(num): 
    for i in range(1, 11): 
        print(num, 'x', i, '=', num*i) 
        
num = int(input(""Enter a number: ""))

multiplication_table(num)"
"Write a Python program to clean a given string. The given string should be stripped of special characters, converted to lowercase and only words with more than three characters should be returned.","This is , MY string!?","s= ""This is, MY string!?""
 
output=""""
 
for i in s:
 if i.isalnum():
  output+=i.lower()
 
output = ' '.join(w for w in output.split() if len(w)>3)
 
print(""Cleaned String: ""+output)"
Transform the following piece of code from C to Python,"int a = 3;
int b = 2;
int c = a + b;","a = 3
b = 2
c = a + b"
Write a Python program to solve the following mathematical equation.,Equation: 2x^2 - x = 1,"def solve_equation(equation):
    x = float(x)
    solution = (2*x**2 - x + 1)
    return solution"
Propose and implement a method to sort a list of varied size nested lists in Python.,"Sample input: [[2,6],[1],[3,4,5]]","def sortList(lists):
 sortedList = [sorted(lst) for lst in lists]
 sortedList.sort(key = len)
 return sortedList

lists = [[2,6],[1],[3,4,5]]
print(sortList(lists)) // prints [[1],[2,6],[3,4,5]]"
Write a Python program to replace all the occurrences of one character with another in a given string.,"String: ""Hello World!""
Character to replace: ""l""
Character to replace with: ""t""","def replace_char(string, char_rep, char_rep_with):
    new_string = string.replace(char_rep, char_rep_with)
    return new_string

result = replace_char('Hello World!', 'l', 't')
print(result)"
Generate a python program to swap the first and last element of a list,"list_of_numbers = [4, 5, 7, 8, 6]","def swap(list_of_numbers):
    list_of_numbers[0], list_of_numbers[-1] = list_of_numbers[-1], list_of_numbers[0]
    return list_of_numbers"
Generate a correct Python program to copy a list.,"list_x = [1,2,3,4]","def copy_list(list_x):
	list_y = list_x [:]
	return list_y"
Design a web scraper using Python that gathers all the phone numbers from a set of webpages?,URLs to scrape,"import requests
import re

def scrape_phone_numbers(urls):
    phone_numbers = []
    for url in urls:
        response = requests.get(url)
        numbers = re.findall(""([+]\d{2}\s?0?\d{10})"", response.text)
        phone_numbers.extend(numbers)
    return phone_numbers"
Improve the design of the following Python code.,"def count_vowels(string):
        vowel_count = 0
        for letter in string:
             if letter in ""aeiou"":
                      vowel_count += 1
        return vowel_count","def count_vowels(string):
    vowel_count = 0
    vowels = 'aeiou'
    for letter in string:
        if letter in vowels:
            vowel_count += 1
    return vowel_count"
Create a basic Python program to list all the odd numbers from 0 to a user-specified number,user_number = 10,"def odd_numbers(num):
 for n in range(num+1):
 if n % 2 != 0:
 print(n)

odd_numbers(user_number)
# Output: 1, 3, 5, 7, 9"
Generate a Python program that computes and prints the sum of the even numbers in a given list.,"[2, 3, 6, 7, 13, 14]","def get_even_sum(nums):
    even_sum = 0
    for num in nums:
        if num % 2 == 0:
            even_sum += num
    return even_sum

nums = [2, 3, 6, 7, 13, 14]  
even_sum = get_even_sum(nums)
print(even_sum)"
Rewrite the following program to use Python's filter function,"""""""
program 

numbers = [12, 15, 20, 9, 5]

filtered = []
for number in numbers:
    if number > 10:
        filtered.append(number)

print(filtered)
""""""","numbers = [12, 15, 20, 9, 5]

filtered = list(filter(lambda x: x > 10, numbers))
print(filtered)"
Create a Python program to convert paragraphs into sentences.,"""This is the first sentence. This is the second sentence. This is the third sentence.""","def convert_paragraphs_to_sentences(paragraph): 
    sentences = paragraph.split('. ') 
    return sentences

sentences = convert_paragraphs_to_sentences(""This is the first sentence. This is the second sentence. This is the third sentence."")
for x in sentences:
    print(x)"
Design an algorithm in Python to find all unique combinations of three numbers that sum to a given value.,Target Sum: 6,"def findUniqueCombos(targetSum): 
  result = []
  for i in range(targetSum+1): 
    for j in range(i+1): 
      for k in range(j+1): 
        if i + j + k == targetSum: 
          uniqueCombo = [i, j, k] 
          result.append(uniqueCombo) 
  
  return result"
Write a python code snippet to append a new item to a given list.,"list = [1, 2, 4, 8]",list.append(16)
Develop a Python program to compare two given strings and display the number of matches,"String 1: Python
String 2: Program","def compareStrings(string1, string2):
    count = 0
    for ch in string1:
        if ch in string2:
            count +=1
    return count

print(compareStrings(""Python"", ""Program""))
// Output: 3"
Create a function in Python to remove all vowels in a given string.,"""Hello, World!""","def remove_vowels(string): 
    vowels = ('a', 'e', 'i', 'o', 'u')  
    for x in string.lower(): 
        if x in vowels: 
            string = string.replace(x, """") 
    return string

print(remove_vowels(""Hello, World!""))"
"Implement a 'closest to zero' algorithm in Python, which returns the closest to 0 value from a given array.","[-2, 4, -5, - 1]","def closest_to_zero(arr):
    closest_val = 0
    closest_diff = float('inf')
    
    for val in arr:
        if abs(val) < abs(closest_diff):
            closest_diff = val
            closest_val = val

    return closest_val

arr1 = [-2, 4, -5, -1]
result = closest_to_zero(arr1)
print(result)"
Create a Python program that takes two strings as parameters and prints out all of the common letters in the two strings.,"String 1: Hello
String 2: World","def printCommonChars(str1, str2):
    commonChars = ''
    for char in str1:
        if char in str2:
            commonChars += char
    
    print(commonChars)

printCommonChars('Hello','World')"
Create a simple webscraper using Python and Beautiful Soup.,URL of website to scrape: https://example.com,"import requests
from bs4 import BeautifulSoup
 
url = 'https://example.com'
content = requests.get(url).content
soup = BeautifulSoup(content, 'html.parser')
 
for element in soup.find_all('h2'):
    print(element.text)"
Generate a correct python program to fetch the price of a given stock ticker symbol.,Apple Inc. (AAPL),"import requests

def get_stock_price(symbol):
 url = ""https://finance.yahoo.com/quote/"" + symbol
 req = requests.get(url)
 data = req.json()
 return data['regularMarketPrice']"
"Implement a solution in Python using loops, to determine the maximum number of consecutive 1's in a binary number.",1011101101,"def max_consecutive_ones(n):
    max_ones = 0
    count = 0
    while n > 0:
        if n %2 == 1:
            count+=1
            max_ones = max(max_ones, count)
        else:
            count = 0
        n>>=1
    return max_ones"
Generate a Python function that takes two matrices (2-dimensional lists) as inputs and returns the result of matrix multiplication.,"A = [[1, 2], [3, 4]] 
B = [[5, 6], [7, 8]]","def multiply_matrix(A,B):
result = [[0,0], [0,0]]
for i in range(len(A)):
 for j in range(len(B[0])):
 for k in range(len(B)):
 result[i][j] += A[i][k] * B[k][j]
return result

# example
A = [[1, 2], [3, 4]]
B = [[5, 6], [7, 8]]
print(multiply_matrix(A, B)) 
# [[19, 22], [43, 50]]"
Analyze a Python program to remove all global variables and replace them with local variables.,"a = 1
def foo():
 print(a)

def bar():
 global a
 a = 2

foo()
bar()","def foo():
 a = 1
 print(a)

def bar():
 a = 2

foo()
bar()"
Create a Python program to implement a linear search algorithm to find an element in a list.,"x = [1, 5, 8, 3], n = 8","def linear_search(x, n):
    found = False
    for i in range(len(x)):
        if x[i] == n:
            found = True
            break

    if found == True:
        print('Element', n, 'found at position', i)
    else:
        print('Element', n, 'not found')

x = [1, 5, 8, 3]
n = 8

linear_search(x, n)"
"Create a Python program that reads two integer values from standard input, stores them in two variables, and then swaps their values?","a = 5, b = 10","# Read two integer values
a = int(input())
b = int(input())

# Swap their values
temp = a
a = b
b = temp

# Print the variables
print(""a ="", a)
print(""b ="", b)"
Improve this Python function to double the input array.,"def double_array(arr):
    return arr","def double_array(arr):
    return [element * 2 for element in arr]"
Create a program in Python that takes a list as input and returns a new list with every element doubled.,"[1, 2, 3, 4]","def double_list(numbers):
    doubled_list = []
    for num in numbers:
        doubled_list.append(num*2)
    return doubled_list"
Write a Python program to print the multiplication table for a given number.,Number: 8,"def printMultiplicationTable(num):

 for i in range(1, 11):
 print(""{} x {} = {}"".format(num, i, num * i))

printMultiplicationTable(8) 
# Output:
# 8 x 1 = 8
# 8 x 2 = 16
# 8 x 3 = 24
# 8 x 4 = 32
# 8 x 5 = 40
# 8 x 6 = 48
# 8 x 7 = 56
# 8 x 8 = 64
# 8 x 9 = 72
# 8 x 10 = 80"
Create a Python program to split a string in the match of a regular expression and return a list of the split strings.,"string = ""102030-abc-5060""","import re

string = ""102030-abc-5060"" 
pattern = r'-\w+-' 
result = re.split(pattern, string)
print(result)

# Output -> ['102030', '5060']"
Create a Python program to search for a given item in a list of strings.,"[""hello"", ""world"", ""foo"", ""bar""], ""bar""","def search_for_item(strings, item):
    for string in strings:
        if string == item:
            return True
    return False"
Create a function in Python to convert a list of strings to a single long string,"['Hello', 'World', '!']","def list_to_string(list_str):
    long_str = ''
    for i in list_str:
        long_str += i
    
    return long_str

list_str = ['Hello', 'World', '!']
string = list_to_string(list_str)
print(string) # prints 'HelloWorld!'"
"Using a dictionary, write a program in Python to categorize each list item into a group of the same type.","items = [1, 2, ‘a’, ‘b’, 4, 5, ‘c’, ‘d’, 7, 8]","def categorize(items):
    groups = {
        'numbers': [],
        'strings': []
    }
    for item in items:
        if type(item) == int or type(item) == float:
            groups['numbers'].append(item)
        else:
            groups['strings'].append(item)
    return groups"
Create a sorting algorithm in Python to sort an unsorted set of names.,"[""John"", ""Jack"", ""Joan"", ""Adam"", ""Elena"", ""Mia""]","def sort_names(names):
    # sorted() returns an alphabetically sorted list
    return sorted(names)

unsorted_names = [""John"", ""Jack"", ""Joan"", ""Adam"", ""Elena"", ""Mia""]

print(sort_names(unsorted_names)) # ['Adam', 'Elena', 'Jack', 'Joan', 'John', 'Mia']"
Write a Python program to find all matches of a given string in another string while ignoring case sensitivity.,"string1 = ""Hello world"" 
string2 = ""World""","import re 

def find_match(string1, string2):
 return re.findall(r'(?i)'+re.escape(string2), string1)

string1 = ""Hello world"" 
string2 = ""World""

print(find_match(string1, string2))"
Estimate the power demand of a computer system using the given time and CPU utilization information using Python.,"Utilization = 10%
Operating Time = 10 hours
Power Consumption = 100 Watts","def calculatePowerDemand(util, time, power):
    return util * time * power

PowerDemand = calculatePowerDemand(0.1, 10, 100)
print(PowerDemand)"
Create an AWS Lambda function in Python that calculates the summation of two given numbers.,"Input-1 = 2
Input-2 = 3","import json

def lambda_handler(event, context):
 # Get the input numbers
 num1 = event['Input-1']
 num2 = event['Input-2']

 # Calculate the sum
 result = num1 + num2

 # Return the output
 return {
 'Result': result
 }"
"Write a python program to parse and print out the name, email, and phone number from a given string.","John Doe, foobar@example.com, 123-456-7890","def parse_contact_info(string):
    name = string.split("", "")[0]
    email = string.split("", "")[1]
    phone_number = string.split("", "")[2]
    print(f""Name: {name} \nEmail: {email} \nPhone Number: {phone_number}"")"
Create an algorithm in Python for calculating the standard deviation of a given set of numbers.,"Numbers: 3, 7, 12, 22, 35","import numpy as np

def calculate_std_dev(nums):
    n = len(nums) 
    std_dev = np.std(nums, axis=0) 
    return std_dev

nums = [3, 7, 12, 22, 35]
print(""Standard Deviation: {:.3f}"".format(calculate_std_dev(nums)))
# Output: Standard Deviation: 11.106"
Create a list comprehension in Python that takes a list of numbers and squares each number in the list.,"[1, 2, 3, 4, 5]","[x**2 for x in [1, 2, 3, 4, 5]]"
Generate a program in Python to convert a list of strings to a dictionary where all the values are 1.,"words = [""Hello"", ""World"", ""Welcome""]","def to_dict(words):
    result = {}
    for word in words:
        result[word] = 1
    return result

result = to_dict([""Hello"", ""World"", ""Welcome""])
print(result)"
Rewrite the following python code so that it can be run as a script.,"def my_function():
    print(""Hello, World!"")

if __name__ == '__main__':
    my_function()","def my_function():
    print(""Hello, World!"")

if __name__ == '__main__':
    my_function()

if __name__ == '__main__':
    my_function()"
Make a program to search for a given string in a list of strings.,"search_string = 'python'
list_of_strings = ['java', 'javascript', 'python', 'ruby']","def search_string(search_string, list_of_strings):
    for string in list_of_strings:
        if string == search_string:
            return True
    return False

result = search_string('python', ['java', 'javascript', 'python', 'ruby']) 
print(result)"
Optimize the following Python program to ensure performance,"def find_first_occurrence(arr, x):
    for item in arr:
        if item == x:
            return arr.index(item)","def find_first_occurrence(arr, x):
    for i in range(len(arr)):
        if arr[i] == x:
            return i"
Create a Python program for splitting a given string by every nth character.,"String = ""Hello World""
n = 3","#Function for splitting a given string by every nth character
def splitStringByN(string, n): 
    res = [string[i:i+n] for i in range(0, len(string), n)] 
    return res

# Driver code
string = ""Hello World!""
n = 3
splitString = splitStringByN(string, n)
print(splitString)"
Write a function to display a given number of random items from a list in Python.,"<List: [""dog"", ""cat"", ""bird"", ""fish""]
Number of items: 3>","import random

def display_random_items(lst, num):
 random.shuffle(lst)
 return lst[:num]

lst = [""dog"", ""cat"", ""bird"", ""fish""]
num = 3

random_items = display_random_items(lst, num)
print(random_items)"
Generate Python code to find the pair of numbers from an array whose sum is closest to a given number.,"array: [10, 2, 3, 4, 5], target: 8","def closest_sum(array, target):
  diff = float('inf')
  for i in range(len(array) - 1):
    for j in range(i + 1, len(array)):
      pair_sum = array[i] + array[j]
      if abs(target - pair_sum) < diff:
        diff = abs(target - pair_sum)
        result = [array[i], array[j]]
  return result"
"Create a Python program to calculate the average value of an array and store the result in the variable ""average"".","Input array: [1, 2, 3, 4, 5]","input_array = [1, 2, 3, 4, 5]

# calculate the average value
average = sum(input_array) / len(input_array)

# print result
print(""Average:"", average)

# Output:
Average: 3.0"
Edit the Python code to store the maximum value of a list in a variable called max_value,"list_values = [21, 15, 11, 17, 12, 29]","list_values = [21, 15, 11, 17, 12, 29]
max_value = max(list_values)"
Develop an algorithm in Python for parsing a given text and counting the number of occurrences of a given word.,This is an example text.,"def parse_text(text, word):
  word_count = 0
  words = text.split()
  for w in words:
    if w == word:
      word_count += 1
  return word_count
  
text = 'This is an example text.'
word = 'example'
word_count = parse_text(text, word)
print('The word ""{}"" appears {} times in the text.'.format(word, word_count))"
Create a Python script to print an nxn matrix containing all the numbers from 1 to n²,5,"def print_matrix(n):  
    matrix = [[0 for x in range(n)] for y in range(n)] 
    k = 1
  
    for i in range(0, n): 
  
        for j in range(0, n): 
  
            matrix[i][j] = k
            k = k + 1
  
    for i in range(0, n): 
  
        for j in range(0, n): 
            print(matrix[i][j], end = "" "")
    
        print("""")"
Create a Python class that sums up the results of a given array of numbers.,"[3, 4, 5, 6, 7]","class SumArray:
    def __init__(self, numbers):
        self.numbers = numbers
    
    def get_sum(self):
        sum = 0 
        for number in self.numbers:
            sum += number
        return sum"
Design a classification model in Python that can predict the probability of a customer churning.,"data = [[1, 20, 0], [1, 24, 0], [0, 30, 1], [1, 35, 0], [1, 32, 0]]","import numpy as np
from sklearn.linear_model import LogisticRegression 

X = np.array([[1, 20, 0], [1, 24, 0], [0, 30, 1], [1, 35, 0], [1, 32, 0]])
y = np.array([0, 0, 1, 0, 0])

model = LogisticRegression()
model.fit(X, y)

prediction = model.predict_proba([[1, 33, 0]])"
Write a Python function to get the nth number in the Fibonacci sequence.,n = 5,"def Fibonacci(n): 
 a = 0
 b = 1
 if n < 0: 
  print(""Incorrect input"") 
 elif n == 0: 
  return a 
 elif n == 1:
   return b 
else: 
  for i in range(2,n): 
   c = a + b 
   a = b 
   b = c 
 return b"
"Given a list of directions, create a Python program to find the maximum cumulative sum of the list.","[3, 8, -2, 10, -6]","def max_sum(arr):
 max_sum = 0
 sum = 0
 for num in arr:
 sum += num
 max_sum = max(max_sum, sum)
 return max_sum

max_sum([3, 8, -2, 10, -6])  # 17"
"Create a program in Python that takes an integer n as input and prints out n lines of ""Hello World!""",5,"def hello_world_lines(n):
    for i in range(n):
        print(""Hello World!"")"
Optimize a function in Python that calculates the sum of numbers from 0 to n.,"def slow_sum(n):
    s = 0
    for number in range(n+1):
        s += number
    return s","def fast_sum(n):
    return ((n+1)*n)/2"
Turn the Python dictionary below into a data table.,"d = {
    'name': 'John',
    'age': 24,
    'gender': 'Male',
    'hobby': 'Football'
}","Name | Age | Gender | Hobby
-----|-----|--------|-------
John | 24  | Male   | Football"
Generate a linear regression program for Python,This program should return the coefficient of determination (R2) of a linear regression model.,"import numpy as np

def calculateR2(x, y):
    # Calculate the mean of x and y vectors
    x_mean = np.mean(x)
    y_mean = np.mean(y)
    
    # Calculate the sums
    SS_tot = np.sum((y - y_mean)**2)
    SS_res = np.sum((y - x)**2)
    
    # Calculate R2
    r2 = 1 - (SS_res / SS_tot)
    
    return r2"
Write a Python program to generate a bar chart representing the monthly sales data for a small business.,"month = [""Jan"", ""Feb"", ""Mar"", ""Apr"", ""May"", ""Jun""];
sales = [312, 443, 235, 564, 234, 431];","import matplotlib.pyplot as plt

month = [""Jan"", ""Feb"", ""Mar"", ""Apr"", ""May"", ""Jun""]
sales = [312, 443, 235, 564, 234, 431]

plt.bar(month, sales)

plt.xlabel(""Month"")
plt.ylabel(""Sales"")

plt.title(""Monthly Sales"")

plt.show()"
Rewrite the following Python script as an SQL query.,"a = 1
while a < 6:
    print(a)
    a = a + 1","SELECT * FROM (SELECT @curRow := @curRow + 1 AS row_number FROM
(SELECT 0 UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 ) AS t1
CROSS JOIN
(SELECT 0 UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 ) AS t2
CROSS JOIN 
(SELECT @curRow := 0) AS t3 ) AS numbers 
WHERE row_number < 6;"
Construct a correct python program to evaluate the expression y = (1/x) + x^2.,x = 5,"x = 5

def evaluate_expression(x):
    y = (1 / x) + (x ** 2)
    return y"
Write a function in Python that returns the longest word from a list.,"[""Hello"", ""how"", ""are"", ""you""]","def longest_word(word_list):
    longest = word_list[0]
    for word in word_list[1:]:
        if len(word) > len(longest):
            longest = word
    return longest

words = [""Hello"", ""how"", ""are"", ""you""]

longest_word = longest_word(words)
print(longest_word)"
Write a Python function to generate all permutations of a given list.,"[1,2,3]","def permutations(input_list):
 if len(input_list) == 0:
 yield []
 else:
 for i in range(len(input_list)):
 first_el = [input_list[i]]
 remainder_list = input_list[:i] + input_list[i+1:]
 for perm in permutations(remainder_list):
 yield first_el + perm"
Create a simple Python program that takes in two strings and prints the one with the longer length.,"string1:'Inception', string2: 'Interstellar'","string1 = 'Inception'
string2 = 'Interstellar'

if len(string1) > len(string2):
    print(string1)
else:
    print(string2)"
Develop a Python program that prints an alphabetically sorted list of unique words from a given sentence.,"""This sentence contains a handful of words""","sentence = ""This sentence contains a handful of words""
word_list = sentence.split()
unique_words = set(word_list)
sorted_words = sorted(unique_words)

print(sorted_words)

# Output: ['This', 'a', 'contains', 'handful', 'of', 'sentence', 'words']"
Write a Python program to generate a random string of length n from a set of characters consisting of lowercase (a-z) and uppercase (A-Z).,n = 7,"import string
import random

length = 7
chars = string.ascii_letters

random_string = ''.join(random.choice(chars) for x in range(length))

print(random_string)"
"Using an HTTP library in Python (e.g. Requests), make a POST request and send a JSON payload to a web service.","const url = 'https://example.com/api/submit';
const data = {
 message: 'Hello!',
 name: 'John'
};","import requests

url = 'https://example.com/api/submit'
data = {'message': 'Hello!', 'name': 'John' }

r = requests.post(url, json=data)
print(r.text)"
Create a sorting algorithm in Python that takes a list of numbers as an input and prints the sorted output.,"[10, 5, 1, 8, 9, 6]","def sort(numbers):
    for i in range(len(numbers)):
        for j in range(i + 1, len(numbers)):
            if numbers[i] > numbers[j]:
                numbers[i], numbers[j] = numbers[j], numbers[i]
    return numbers"
"Write a Python program that web-scrapes data from a website and stores it in a structured format (e.g. JSON, CSV).",Example Website: https://example.com,"import requests
import json

# Make a get request to get the data
response = requests.get('https://example.com')

# Store the data in a structured format
data = json.loads(response.text)

# Save the data to a json file
with open('example.json', 'w') as f:
 json.dump(data, f)"
Develop a Python program to decrypt the given messages using a key?,"message: ""AB cDE@5sfg90~!"", key: 6","def decrypt(message, key):
    decrypted_message = """"
    
    for char in message:
        ascii_value = ord(char)
        decrypted_char = chr(ascii_value - key)
        decrypted_message += decrypted_char
    
    return decrypted_message

message = ""AB cDE@5sfg90~!""
key = 6

decrypted_message = decrypt(message, key)
print(decrypted_message)"
Write a Python program which takes a string and returns the first non-repeated character.,"String: ""hello""","def first_non_repeated_char(input): 
    counts = {} 
    chars = [] 
    for char in input: 
        if char in counts: 
            counts[char] += 1
        else: 
            counts[char] = 1
            chars.append(char) 
  
    for char in chars: 
        if counts[char] == 1: 
            return char 
  
    return None"
Create a Python program to generate an ISO8601-compliant string from a given date,Date: 2020-07-15,"from datetime import datetime

date_str = '2020-07-15'
date = datetime.strptime(date_str, '%Y-%m-%d')
iso8601_str = date.isoformat()

print(iso8601_str)
# Output: 2020-07-15T00:00:00"
Create a Python program to calculate the dot product of two vectors.,"[1, 2, 3] and [4, 5, 6]","def dot_product(v1, v2):
    total  = 0
    for (x1, x2) in zip(v1, v2):
        total += x1*x2
    return total"
Construct a Python program to determine the sum of all positive integers between 1 and N that are divisible by 3,N = 15,"""""""
Construct a Python program to determine the sum of all positive integers between 1 and N that are divisible by 3

def sum_div_3(N):
    total = 0
    for i in range(1, N+1):
        if i % 3 == 0:
            total += i
    return total

print(sum_div_3(15))
"""""""
Write a Python program to create two separate lists containing the even and odd elements of the given list.,"[1, 2, 3, 4, 5, 6, 7, 8]","# Program to create two separate lists containing the even and odd elements of the given list 
given_list = [1, 2, 3, 4, 5, 6, 7, 8] 

even_list = [] 
odd_list = [] 

for element in given_list: 
    if element % 2 == 0 : 
        even_list.append(element) 
    else: 
        odd_list.append(element) 

print(even_list)
print(odd_list)"
Generate a Python program to remove vowels from a string.,This is a string.,"def removeVowels(string):
    vowels = ('a', 'e', 'i', 'o', 'u')
    stringWithoutVowels = """"
    for char in string:
        if char not in vowels:
            stringWithoutVowels += char
    return stringWithoutVowels

string = input(""Enter a string: "")
result = removeVowels(string)
print(result)"
Write a function in Python to convert a dictionary into a list and then sort the list alphabetically.,"Example Dictionary: {'a':1, 'b':2, 'c':3}","def dict_to_sorted_list(d):
 # Convert Dictionary to List
 lst = list(d.items())
 
 # Sort List Alphabetically
 lst.sort(key=lambda x: x[0])
 
 return lst
 
example_dict = {'a':1, 'b':2, 'c':3}
sorted_list = dict_to_sorted_list(example_dict)
print(sorted_list)

# Output:
# [('a', 1), ('b', 2), ('c', 3)]"
Design a Python script to remove the given word from a sentence.,"Sentence: He is working on it
Word: working","sentence = ""He is working on it""
word = ""working""

sentence = sentence.replace(word, """")

print(sentence)"
Create a script in Python to determine the largest number in a sequence of numbers.,"11, 9, 12, 8, 5","nums = [11, 9, 12, 8, 5]
max_num = max(nums)

print(max_num) # 12"
Create a list of strings in Python based on the following conditions:,"Input array: [""Apple"", ""Orange"", ""Pear"", ""Watermelon""]
Condition: Return a list of strings that contains elements in the input array that start with ""P"".","[”Pear”, ”Watermelon”]"
Convert the following C++ code to Python.,"int foo(int a, int b, int c) {
    int result = a + b + c;
    return result;
}","def foo(a, b, c):
    result = a + b + c
    return result"
Create a program in Python to predict the sentiment of a phrase using a provided pretrained model.,"model_path = ""mymodel.model""
phrase = ""This is a great day""","import numpy as np
from keras.models import load_model

# Load the model
model = load_model(model_path)

# Encode the phrase
phrase_encoded = np.array([phrase])

# Make the prediction
prediction = model.predict(phrase_encoded)

# Print the result
print(""The sentiment of the phrase is: {}"".format(prediction))"
Write a python program to sort words in alphabetical order.,"words = [""software"", ""engineering"", ""programming""]","def sort_words(words): 
    words.sort() 
    return words 

words = [""software"", ""engineering"", ""programming""]
print(sort_words(words))"
Write a Python program to find the greatest common divisor of two numbers.,"a = 24
b = 60","def gcd(a, b): 
  
    # base case 
    if a == 0 :  
        return b 
       
    return gcd(b % a, a) 
  
a = 24
b = 60
  
print (""GCD of"", a , ""and"", b ,""is"", gcd(a, b)) 
# GCD of 24 and 60 is 12"
Write a Python program to select all the Sundays of a specified year.,year = 2020,"import datetime

def select_all_sundays(year):
    sunday_list = []
    for n in range(1,13):
        sundays = [d for d in [datetime.date(year, n, d) for d in range(1, 32)]
                if d.weekday() == 6]
        sunday_list.extend(sundays)
    return sunday_list

if __name__ == '__main__':
    year = 2020
    sunday_list = select_all_sundays(year)
    print(sunday_list)"
Generate a Python program to detect the key phrases in a given text.,"text = ""I like to eat apples and oranges.""","def detect_key_phrases(text):
    # use some NLP model to detect the key phrases
    key_phrases = model.predict(text)
    return key_phrases"
"Write a Python program to determine the sum of the elements of an array, after applying a given function to each array element.","def func(x):
  return x * x

arr = [1, 2, 3, 4]","def element_wise_sum(func, arr):
    sum = 0 
    for elem in arr:
        sum += func(elem)
    return sum

sum = element_wise_sum(func, arr)"
Simplify and optimize the following Python code for computing the mean of a list of numbers.,"def mean(numbers):
    total = 0
    for n in numbers:
        total = total + n
    return total / len(numbers)","def mean(numbers):
    return sum(numbers) / len(numbers)"
Write a Python program to find the largest three numbers in a list.,"1, 6, 3, 8, 7, 4","my_list = [1, 6, 3, 8, 7, 4]
largest_three = sorted(my_list)[-3:]
print(largest_three)"
Create a Python program to sort a list of numbers using the quicksort algorithm.,"[10, 5, 6, 3, 2, 8, 9, 4, 7, 1]","def quicksort(arr):
 if len(arr) <= 1:
  return arr
 pivot = arr[len(arr) // 2]
 left = [x for x in arr if x < pivot]
 middle = [x for x in arr if x == pivot]
 right = [x for x in arr if x > pivot]
 return quicksort(left) + middle + quicksort(right)

arr = [10, 5, 6, 3, 2, 8, 9, 4, 7, 1]
result = quicksort(arr)
print(result)"
Can you produce a Python script that outputs all possible permutations of a given string?,"""ABC""","from itertools import permutations

def print_permutations(input):
    perms = [''.join(p) for p in permutations(input)]
    for perm in perms:
        print(perm)

if __name__ == ""__main__"":
    print_permutations(""ABC"")"
Write a Python program to predict the class label for a given data sample.,"X = [[2.2, 3.5], [2.7, 3.2]]
y = [1, 0]","from sklearn.linear_model import LogisticRegression

model = LogisticRegression()

model.fit(X, y)

def predict_class(X):
    pred = model.predict([X])
    return pred"
Write a Python function that finds the maximum element in an array.,"[3, 4, 6, 5, 9, 1, 2]","def find_max(nums):
    max_val = nums[0]
    for num in nums:
        if num > max_val:
            max_val = num
    return max_val

nums = [3, 4, 6, 5, 9, 1, 2]
max_val = find_max(nums)
print(max_val)"
Create a script to list the content of a given directory in Linux.,Path: /usr,"#!/usr/bin/env python

import os

path = ""/usr""

for root, dirs, files in os.walk(path):
 for file in files:
 print(os.path.join(root, file))"
Express the following SQL query in a pythonic way.,"SELECT id,name FROM users WHERE gender = 'M' AND age >= 20","def select_users_male_age_above_20(users):
    output = []
    for user in users:
        if user['gender'] == 'M' and user['age'] >= 20:
            output.append({'id':user['id'], 'name':user['name']})
    return output"
"Given two integers, write a Python function to compare them.","Integer1: 6
Integer2: 4","def compare_ints(num1, num2):
  if num1 > num2:
    return ""Integer1 is greater than Integer2""
  elif num1 < num2:
    return ""Integer1 is lesser than Integer2""
  else:
    return ""The integers are equal""

result = compare_ints(6, 4)
print(result)"
Revise a given Python code snippet to make it more efficient and performant.,"def calculate_sum(arr):
 sum = 0
 for i in range(len(arr)):
 sum += arr[i]
 return sum","def calculate_sum(arr):
 return sum(arr)"
Write a Python program to find the index of an element in an array.,"array = [3, 7, 9, 10] 
 element = 7","def findIndex(array, element): 
  for i in range(len(array)): 
    if(array[i] == element): 
      return i 
  return -1
  
# Driver code 
print(findIndex([3, 7, 9, 10], 7))"
"Use Python to check whether a given string is a palindrome (e.g. ""abccba"" is a palindrome).",abcba,"def isPalindrome(string):
 if string == string[::-1]: # Check if string is the same backwards
return True
 else:
 return False

isPalindrome('abcba') # Output: True"
Create a function in Python to calculate the area of a triangle using its three sides.,"Side One: 3
Side Two: 4
Side Three: 5","def triangleArea(a, b, c):
 # Calculate the semi-perimeter of the triangle
 s = (a + b + c) / 2
 
 # Calculate the area using Heron's formula
 area = (s*(s - a)*(s - b)*(s - c))**0.5
 
 return area

triangleArea(3,4,5) # 6.0"
Create a function to replace substring 'old' with 'new' in the given string.,Python is very old,"def replace_substring(string, old, new):
  new_string = """"
  l = len(old)
  for i in range(len(string)-l+1):
    if string[i:i+l] == old:
      new_string += new
    else:
      new_string += string[i]
  return new_string

print(replace_substring('Python is very old', 'old', 'new'))

# Output: Python is very new"
Create a function to invert the keys and values of a dictionary in Python.,"{
    ""apple"": 3,
    ""banana"": 4,
    ""carrot"": 2
}","def invert_dictionary(input_dict):
    output_dict = {}
    for key, value in input_dict.items():
        output_dict[value] = key
    return output_dict

inverted_dict = invert_dictionary({
    ""apple"": 3,
    ""banana"": 4,
    ""carrot"": 2
})

print(inverted_dict) # {3: 'apple', 4: 'banana', 2: 'carrot'}"
Create a function in Python that takes a list as an argument and returns the list in reverse order.,"[1,2,3,4,5]","def reverse_list(lst):
  return lst[::-1]"
Create a Python program to select high temperature days based on a given dataset.,Link to Dataset: http://web.engr.oregonstate.edu/~mjb/weather_data/index.html,"import pandas as pd

# Load data
df = pd.read_csv('Oregon_OregonState_97_02.csv', sep=',', index_col=0)

# Select days with high temperature
high_temp_days = df.query('T_MAX > 25')

# Display results
print(high_temp_days)"
You are given a data set. Compute the mean of the data set using Python.,"[1, 2, 5, 10, 20, 50]","def compute_mean(data):
    total = 0
    for num in data:
        total += num
    return total/len(data)

data = [1, 2, 5, 10, 20, 50]

result = compute_mean(data)
print(result)"
"Given a dictionary and a string, write a Python program to compute the number of times each character appears in the string.","dict = {'a': 0, 'b': 0, 'c': 0}
str = 'abacab'","def freq_char_dict(dict, str): 
    for char in str: 
        dict[char] += 1
    return dict
  
dict = {'a': 0, 'b': 0, 'c': 0} 
str = 'abacab'
print(freq_char_dict(dict, str))"
Create a Python program to sort a list of tuples based on the second elements of the tuples.,"l = [(1, 3), (2, 5), (4, 1), (6, 4)]","def sortTuples(l): 
    l.sort(key = lambda x: x[1]) 
    return l
 
# Sample Output 
# [(4, 1), (1, 3), (6, 4), (2, 5)] 
print(sortTuples(l))"
Create a Python script for a sorting algorithm that can efficiently sort an array of integers.,"[8, 3, 5, 1, 4, 6]","def bubble_sort(lst):
 for i in range(len(lst)):
  for j in range(0, len(lst) - i - 1): 
   if lst[j] > lst[j + 1] : 
    lst[j], lst[j + 1] = lst[j + 1], lst[j]
 return lst
 
lst = [8, 3, 5, 1, 4, 6]
sorted_list = bubble_sort(lst)

print(""Sorted Array:"", sorted_list)"
Develop a Python script to extract some text from a website.,Website URL: http://example.com,"import requests
from bs4 import BeautifulSoup
 
response = requests.get(""http://example.com"")
 
soup = BeautifulSoup(response.content, ""html.parser"")
 
text = soup.get_text()
print(text)"
Optimize the following Python program to find the given number in a list.,"A list = [2, 4, 9, 8, 10]
Number = 8","def find_number(lst, num):
  for i, v in enumerate(lst):
    if v == num:
      return i
  
  return -1

list_of_numbers = [2, 4, 9, 8, 10]
number_to_find = 8

# Find the given number in the list
index = find_number(list_of_numbers, number_to_find)
if index != -1:
  print(f'Number {number_to_find} found at index {index}.')
else:
  print('Number not found.')"
Write a function in Python to find the maximum two numbers in a list.,"List: [2, 4, 5, 9, 10, 11]","def max_two(list):
    #sort the list in ascending order
    list.sort()
    #return the last two elements
    return list[-2:]

#example
number_list = [2, 4, 5, 9, 10, 11]
result = max_two(number_list)

print(result)
# Output: [10, 11]"
Compose a program in Python to iterate through a list of integers and creates a new list which contains the square of each number of the first list,"[1, 2, 3, 4]","def squared_list(input_list): 
    output_list = [x ** 2 for x in input_list] 
    return output_list 

input_list = [1, 2, 3, 4]
output_list = squared_list(input_list) 
print(output_list)"
Create a function to convert JSON objects to Python dictionaries.,"{""key1"": ""value1"", ""key2"": ""value2"" }","import json

def convert_json_to_dict(input_json):
    """"""
    Convert JSON object to Python dictionary 
    Args: 
        input_json (json): JSON object to be converted 
    Returns: 
        output_dict (dict): Python dictionary with keys and values from input_json
    """"""

    output_dict = json.loads(input_json)
    return output_dict"
Create a Python code that sorts the given data in descending order.,"[2, 4, 3, 6, 1, 7]","def descending_sort(data):
    for j in range(len(data)-1):
        for i in range(len(data)-1):
            if data[i] < data[i+1]:
                temp = data[i]
                data[i] = data[i+1]
                data[i+1] = temp
    return data

print(descending_sort([2, 4, 3, 6, 1, 7]))"
Write a Python function to check if a given substring is contained in a string.,"String = ""This is an example""
SubString = ""ex""","def check_substring(String, SubString):
    if SubString in String : 
        return True
    else: 
        return False"
Create a Python program to scale the values of an array by adding a scalar value and then dividing each element of the new array by a scalar value.,"[1,2,3], scalar:2","def scaleArray(arr, s1, s2):
  scaledArr = []
  for x in arr:
    scaledArr.append((x + s1) / s2)
  return scaledArr

arr = [1,2,3] 
scaledArr = scaleArray(arr, 2, 2)
print(scaledArr)"
Design a Python program which takes two arrays of strings as input and sorts them alphabetically.,"['zebra', 'apple', 'carrot'], ['banana', 'elephant', 'cat']","def sort_str_arr(arr1, arr2):
    arr1.sort()
    arr2.sort()

    return arr1 + arr2

arr1 = [""zebra"", ""apple"", ""carrot""]
arr2 = [""banana"", ""elephant"", ""cat""]

sorted_arrs = sort_str_arr(arr1, arr2)

print(sorted_arrs) # ['apple', 'banana', 'carrot', 'cat', 'elephant', 'zebra']"
Generate a Python program which takes in a string and returns each of its characters in reverse order.,Hello,"def reverse_string(string):
    reversed_string = """"
    for i in range(len(string) - 1, -1 , -1):
        reversed_string += string[i]
    return reversed_string

result = reverse_string('Hello')
print(result)"
Create a python program to find all possible combination of arrangements of a list of words.,"['dog', 'cat', 'fish']","import itertools 
words = ['dog', 'cat', 'fish'] 
result = list(itertools.permutations(words)) 

for word in result: 
    print(word)"
Sort this list of numbers in ascending order using Python.,"[3, 1, 6, 9, 10, 5]","list = [3, 1, 6, 9, 10, 5]
list.sort()
print(list)  # prints [1, 3, 5, 6, 9, 10]"
Develop a Python program to calculate the sum of natural numbers up to a given number.,7,"def natural_sum(n):
    if n < 0:
        return 0
    s = 0
    for i in range(n+1):
        s += i
    return s
 
number = 7
result = natural_sum(number)
print(result) # 28"
Edit the following Python program to optimize its speed.,"# This program to calculate sum of first n numbers
def sumN(n): 
    sum=0
    for i in range(1,n+1): 
        sum=sum+i

    return sum

print(sumN(100))","# This program to calculate sum of first n numbers
def sumN(n): 
    sum = n * (n + 1) // 2
    return sum

print(sumN(100))"
Generate a function to create a Python dictionary from two lists.,"list_a = [1,2,3]
list_b = ['apple','banana','mango']","def create_dict(a, b):
    dictionary = {}
    for i in range(len(a)):
        dictionary[a[i]] = b[i]
    return dictionary"
Write a Python program to search a list of box ids for duplicates and return a list of all duplicated items.,"box_ids = [‘abc123’, ‘def456’, ‘ghi789’, ‘abc123’]","duplicates = []
 
for box_id in box_ids:
    if box_ids.count(box_id) > 1 and box_id not in duplicates:
        duplicates.append(box_id)
 
print(duplicates)"
Create a Python script to apply a log transformation to every element of a NumPy array.,"[0.1, 0.4, 0.9, 2.2]","import numpy as np

arr = np.array([0.1, 0.4, 0.9, 2.2])
# Applying log transformation
arr = np.log(arr)

print('After applying log transformation to every element of the array:')
print(arr)"
Create a program in Python to classify an input string as either palindrome or not.,"Input string: ""racecar""","def is_palindrome(string):
    # reverse the string and compare
    reversed_string = ''.join(reversed(string)) 
    if string == reversed_string:
        print(""Input string is a palindrome"")
    else:
        print(""Input string is not a palindrome"")
        
is_palindrome(""racecar"")  # Outputs: ""Input string is a palindrome"""
Generate a program using Python that takes a user-defined dictionary with string values and returns the reversed key-value mappings.,"The dictionary is: {""one"": ""apple"",""two"": ""banana"",""three"": ""pear"" }","myDict = {""one"": ""apple"",""two"": ""banana"",""three"": ""pear"" }

reverseMyDict = {}

for key, value in myDict.items():
 reverseMyDict[value] = key

print(reverseMyDict) # Output: {'apple': 'one', 'banana': 'two', 'pear': 'three'}"
Write a Python program to find the longest common substring between two strings.,"s1 = ""abcdabxabcdabcdabt"",
s2 = ""abcdabyabcdabcdabz""","def longest_common_substring(s1, s2):
 m = len(s1)
 n = len(s2)
 lengths = [[0 for x in range(n+1)] for y in range(m+1)]
 longest = """"
 for i in range(1, m+1):
 for j in range(1, n+1):
 if s1[i-1] == s2[j-1]:
 lengths[i][j] = lengths[i-1][j-1] + 1
 if lengths[i][j] > len(longest):
 longest = s1[i-1-lengths[i][j]+1:i]
 return longest"
Write a Python method to find the area of a triangle using Heron's formula.,"The sides of the triangle are 6, 8 and 10","import math

def heron(a, b, c):
    s = (a + b + c) / 2
    area = math.sqrt(s * (s - a) * (s - b) * (s - c))
    return area

print('The area of the triangle is ', heron(6, 8, 10))"
Convert a string of comma-separated values into a list in Python.,"""apple, banana, orange""","str = ""apple, banana, orange""

# split the string
string_list = str.split(', ')

# print result
print(string_list)  # ['apple', 'banana', 'orange']"
Create a program in Python to remove all the occurrences of an item from a list.,"List: [1, 2, 3, 4, 2, 5, 2]
Item to Remove: 2","def removeItem(list, item):
    # loop through the list
    for i in list:
        # check if the element is the item to remove
        if i == item:
            # remove the item
            list.remove(i)
    # return the list
    return list

#example
list = [1, 2, 3, 4, 2, 5, 2]
result = removeItem(list, 2)

print(result)
# Output: [1, 3, 4, 5]"
"Generate a Python program to solve the following problem: given an array of integers, find the number of pairs of integers whose sum is equal to zero.","[-5, -4, -2, 0, 2, 5]","def pairs_sum_to_zero(array):
  pairs = []
  for i in range(len(array)):
    for j in range(i+1, len(array)):
      if array[i] + array[j] == 0:
        pairs.append([array[i], array[j]])
  return len(pairs)"
Write a Python program to create a program that computes the area of a triangle given three sides.,"side1 = 3
side2 = 5
side3 = 4","def area_triangle(side1, side2, side3):
    # calculate the semi-perimeter
    s = (side1 + side2 + side3) / 2
    # calculate the area
    area = (s*(s-side1)*(s-side2)*(s-side3)) ** 0.5
    
    return area"
Write a Python function to add 5 to each of the numbers in a list.,"[1, 2, 3, 4, 5]","def add_five(nums):
    return [num + 5 for num in nums]

result = add_five([1, 2, 3, 4, 5])
print(result)"
Construct a Python program to remove duplicate values from a list.,"[1, 2, 1, 4, 6, 2]","def remove_duplicates(list):
    new_list = []
    for item in list:
        if item not in new_list:
            new_list.append(item)
    return new_list"
Develop a Python program to calculate the sum of all the elements in a given 2D array.,"[[1, 2],
 [3, 4],
 [5, 6]]","def sum_2d_array(array):
  # Initialize sum
  _sum = 0
  # Iterate over array and add each element
  for row in array:
    for element in row:
      _sum += element
  # Return sum
  return _sum

arr = [[1, 2], [3, 4], [5, 6]]
print(sum_2d_array(arr))"
Develop a Python function to check if a given string contains a palindrome.,"""moon""","def is_palindrome(s):
  return s == s[::-1]

print(is_palindrome(""moon""))"
Write a python code that sorts the values of the given list.,"[52, 34, 12, 33, 16]","unsorted_list = [52, 34, 12, 33, 16]

sorted_list = sorted(unsorted_list)

print(sorted_list) # prints [12, 16, 33, 34, 52]"
Generate a Python script to sort a list of strings in ascending alphabetical order.,"['cat', 'apple', 'elephant', 'dog']","list = ['cat', 'apple', 'elephant', 'dog']

list.sort()

print(list) # Output: ['apple', 'cat', 'dog', 'elephant']"
Create a program in Python that takes in an integer and returns its factorial.,5,"def factorial(n): 
    fact = 1
    # multiply the current value of fact by all the numbers from 1 to n
    for i in range(1, n+1): 
        fact = fact * i
    return fact 
 
num = 5
factorial = factorial(num) 
print(""Factorial of"", num, ""is"",  factorial)"
Create a function in Python to calculate the cost of an online shopping order given the cost of the items and the shipping charges.,"item1 = 10 
item2 = 20 
shipping_charges = 15","def calculate_cost(item1, item2, shipping_charges):
    total_cost = item1 + item2 + shipping_charges
    return total_cost

calculate_cost(item1, item2, shipping_charges) 
# returns 45"
Create a program in Python that will calculate the mean of a given set of numbers.,"[1, 2, 3, 4, 5]","nums = [1, 2, 3, 4, 5]

def mean(nums):
 total = 0
 for i in nums:
  total += i
 mean = total/len(nums)
 return mean

print(mean(nums)) # 3.0"
Create a function in Python that accepts 3 numbers and finds the largest of the 3.,"num1 = 2
num2 = 5
num3 = -1","def get_max(num1, num2, num3):
    """"""
    Finds the largest number among three provided numbers
    """"""
    max_num = num1
    if num2 > max_num:
        max_num = num2
    if num3 > max_num:
        max_num = num3
    return max_num

num1 = 2
num2 = 5
num3 = -1

maximum = get_max(num1, num2, num3)
print(maximum) # 5"
Write a Python program to generate the powerset of a given set.,"[1, 2, 3]","def powerset(s):
    x = len(s)
    powerset = []
    for i in range(1 << x):
        subset = [s[j] for j in range(x) if (i & (1 << j))]
        powerset.append(subset)
    return powerset"
Convert a set of Python functions to JavaScript.,"def say_hello(name):
    return ""Hello, {}!"".format(name)

def add_two(num):
    return num + 2","function say_hello(name) {
 return `Hello, ${name}!`;
}

function add_two(num) {
 return num + 2;
}"
Develop a web scraper in Python to get all emails from a web page.,URL of the page: http://example.com,"import requests 
from bs4 import BeautifulSoup

# Get request to the URL
page = requests.get(""http://example.com"")

# Create a BeautifulSoup object from the response
soup = BeautifulSoup(page.content, 'html.parser') 

# Get all emails from the page
emails = soup.find_all('a', {'href': 'mailto'})

for email in emails:
    print(email.get('href').replace(""mailto:"", """"))"
Create a function in Python which gathers the maximum and minimum values from a list of numbers.,"[1, 4, 8, 3, 5, 9, 7]","def min_max(nums):
  min_val = min(nums)
  max_val = max(nums)
  return min_val, max_val

nums = [1, 4, 8, 3, 5, 9, 7]
min_val, max_val = min_max(nums)
print('Minimum value:', min_val)
print('Maximum value:', max_val)"
Create a python function for calculating the total cost of an item after tax and discounts are applied.,"Price: 150
Discount: 20
Tax Rate: 0.1","def calculate_cost(price, discount, tax_rate):
    discount_amount = price * (discount / 100.0)
    total = price - discount_amount
    tax = total * (tax_rate / 100.0)
    final_cost = total + tax
    return final_cost

price = 150
discount = 20
tax_rate = 0.1
final_cost = calculate_cost(price, discount, tax_rate)
print(final_cost)"
Create an algorithm in Python for removing all duplicates from an array.,"arr = [1, 2, 4, 4, 1, 5, 2]","def removeDuplicates(arr): 
    res = [] 
    seen = set() 
    for e in arr:
        if e not in seen: 
            res.append(e) 
            seen.add(e) 
      
    return res 
  
print(removeDuplicates([1, 2, 4, 4, 1, 5, 2]))"
Create a Python script to transform every item from a list into a string.,"[1, 2, 3]","# Transform each item to a string 
list_ = [1, 2, 3]

# Transform the list
string_list = [str(item) for item in list_]

# Print the transformed list
print(string_list)

# Output
['1', '2', '3']"
Write a Python script to pad a matrix to a given size.,"matrix = [[1, 2], [3, 4], [5, 6]]
pad_size = 3","def pad_matrix(matrix, pad_size):
    rows = len(matrix)
    cols = len(matrix[0])

    new_matrix = [[0 for j in range(pad_size)] for i in range(pad_size)] 
    
    for i in range(rows):
        for j in range(cols):
            new_matrix[i][j] = matrix[i][j]

    return new_matrix

print(pad_matrix(matrix, pad_size))"
Create a machine learning model in Python to classify a given dataset into 5 different classes.,"X (feature matrix), y (label vector)","from sklearn.neighbors import KNeighborsClassifier

# Initialize KNN model
knn_model = KNeighborsClassifier(n_neighbors=5)

# Fit the model
knn_model.fit(X, y)

# Predict the classes
y_pred = knn_model.predict(X)"
Convert the following Python List into a Dictionary.,"lst = [[1, 2], [3, 4], [5, 6]]","dict_data = { lst[i][0] : lst[i][1] for i in range(len(lst)) }
 
print(dict_data)"
"Create a Python program to print the nth Fibonacci number in the sequence, where n is provided as an input.",n = 10,"def Fibonacci(n): 
	a = 0
	b = 1
	if n < 0: 
		print(""Incorrect input"") 
	elif n == 0: 
		return a 
	elif n == 1: 
		return b 
	else: 
		for i in range(2,n+1): 
			c = a + b 
			a = b 
			b = c 
		return b 

print(Fibonacci(10))"
Construct a function in Python to reverse the order of the words in a given string.,hello world,"def reverse_words(str):
    words = str.split()
    reversed_words = words[::-1]
    reversed_str = ' '.join(reversed_words)
    return reversed_str

result = reverse_words('hello world')
print(result)"
Design an algorithm in Python to calculate the sum of individual digits in a given number.,Number: 12345,"def digitSum(n): 
	sum = 0
 
	# loop until we have no digits left 
	while (n != 0): 
		# extract the last digit 
		dig = n % 10
 
		# add the digit to the total sum 
		sum += dig
 
		# remove the last digit from n 
		n = n // 10
 
	return sum
 
# Driver Code 
n = 12345
sum = digitSum(n) 
 
# Print the result 
print(sum)"
Create a Python script to parse a list of IP addresses into readable fields.,"IPs = [""123.235.123.245"", ""54.72.56.14"", ""182.193.146.172""]","import re

IPs = [""123.235.123.245"", ""54.72.56.14"", ""182.193.146.172""]
for ip in IPs:
 ip_parts = ip.split('.')
 octet1 = ip_parts[0]
 octet2 = ip_parts[1]
 octet3 = ip_parts[2]
 octet4 = ip_parts[3]

 print(f'The first octet is {octet1}, the second is {octet2}, the third is {octet3}, and the fourth is {octet4}.')"
Create a function in Python that takes in a string and returns the characters in reverse order.,Hello,"def reverse_string(s): 
    return s[::-1]

result = reverse_string(""Hello"") 
print(result)"
Write a Python function to add two given numbers stored in two dictionaries with the same keys.,"nums1 = {'a': 2, 'b': 4}
nums2 = {'a': 5, 'b': 8}","def add_dict_nums(nums1, nums2):
    result = dict()
    for key in nums1.keys():
        result[key] = nums1[key] + nums2[key]
    return result

print(add_dict_nums(nums1, nums2))"
Generate a function in Python that takes a list and returns an ordered list,"mylist = [5, 9, 1, 4]","def order_list(mylist):
    mylist.sort()
    return mylist

print(""Ordered list: "", order_list(mylist))"
Compose a Python function that sorts a list using insertion sort.,"[4, 1, 3, 6, 2, 5]","def insertion_sort(arr):
    for i in range(1, len(arr)):
        current_value = arr[i]
        j = i - 1
        while j >= 0 and arr[j] > current_value:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = current_value
    return arr

arr = [4, 1, 3, 6, 2, 5]
print(insertion_sort(arr))"
Generate a Python script to create a list of numbers in the range 0-n (inclusive) and print it.,n = 10,"n = 10

list_numbers = []
for i in range(0,n+1):
    list_numbers.append(i)

print(list_numbers)"
Write a Python script to compare two lists of numbers. The output should be the elements in the first list that are not in the second list.,"listA = [1, 2, 3, 4, 5]
listB = [2, 4, 6, 8, 10]","listC = [x for x in listA if x not in listB]
print(listC) # prints [1, 3, 5]"
Find the value of x in the following equation using a numerical calculation method in Python.,"ax+by = 0
x = 3
y = 4
a = 5
b = 7","# define variables
a = 5
b = 7
x = 3
y = 4

# calculate x
x = (0 - (b*y))/a

print(x)"
Optimize this Python function to improve its running time.,"def find_duplicates(a):
    result = []
    for i in range(len(a)):
        for j in range(i + 1, len(a)):
            if a[i] == a[j]:
              result.append(a[i])
    return result","def find_duplicates(a):
    seen = set()
    result = []
    for num in a:
        if num in seen:
            result.append(num)
        else:
            seen.add(num)
    return result"
Create an API route in Python that allows users to retrieve the top 5 most recent posts from a blog.,Blog post data,"import datetime

@app.route('/posts')
def get_posts():
 posts = Post.query \
 .order_by(Post.created_at.desc()) \
 .limit(5)
 return jsonify([{
 'title': post.title,
 'date': post.created_at.strftime('%Y-%m-%d'),
 'body': post.body
 } for post in posts])"
"Given a string, write a Python program to count the number of words in it.","""This is an example string.""","def count_words(sentence):
    words = sentence.split(' ')
    count = 0
    for word in words:
        if word != '':
            count+=1
    return count

sentence = ""This is an example string.""
print(count_words(sentence))"
Can you design an algorithm in Python for finding the largest element in a list?,"[2, 4, 9, 1, 8]","def max_element(lst):
    max_element = lst[0]
    for element in lst:
        if element > max_element:
            max_element = element
    return max_element"
"Write a Python program to generate a dictionary that contains a number (between 1 and n) in the form (x, x*x).",n = 8,"def generate_dict(n):
    my_dict = {}
    for num in range(1, n+1):
        my_dict[num] = num * num
    return my_dict

print(generate_dict(8)) # {1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36, 7: 49, 8: 64}"
Create a Python program to find the shortest string in a given list of strings.,"[‘Geeks’, ‘for’, ‘Geek’, ‘a’, ‘Geekeee’]","def shortest_string(strings):
    shortest_string = strings[0]
   
    for string in strings:
        if len(string) < len(shortest_string):
            shortest_string = string
    
    return shortest_string"
Implement a solutions for the Tower of Hanoi problem using Python.,int n = 4,"def hanoi(n, source, aux, dest):
 if n == 1:
  print('Move disk 1 from {0} to {1}'.format(source, dest))
 else:
  hanoi(n-1, source, dest, aux)
  print('Move disk {0} from {1} to {2}'.format(n, source, dest))
  hanoi(n-1, aux, source, dest)

# Driver program
n = 4
hanoi(n, 'a', 'b', 'c')"
Create a class in Python that implements the count() method to count the number of elements in a given array.,"[1, 2, 3, 4]","class ArrayCounter:
 def __init__(self, array):
 self.array = array
 
 def count(self):
 return len(self.array)

arr_counter = ArrayCounter([1, 2, 3, 4])
print(arr_counter.count())"
Write a Python program to fliter a list of strings and return a new list containing only the strings containing the letter 'a'.,"['ant', 'bar', 'cat', 'dog', 'eel']","list_strings = ['ant', 'bar', 'cat', 'dog', 'eel']

# using list comprehension
filtered_list = [x for x in list_strings if 'a' in x]
 
print(filtered_list)
# output: ['ant', 'bar', 'cat']"
"Given an array of numbers, write a Python program to calculate the sum of the integers in the array.","[5, 2, 8, 4, 23]","def sum_integer(arr):
    """"""
    Args :
        arr (list): List of integer
    
    Returns :
        int : Sum of integers
    """"""
    
    res = 0
    
    for num in arr:
        res += num
    
    return res

sum_integer([5, 2, 8, 4, 23])
# output: 42"
"Create a Python function that searches a given list of strings for a match. The function should return true if any of the strings match, and false if none of the strings match.","list = ['Hello', 'World', '!']","def search_list(lst, s):
 for item in lst:
  if item == s:
   return True
 return False"
Create a Python function that takes a Python dictionary and returns the unique values contained in the dictionary.,"example_dict = {
 'apple': 1,
 'banana': 2,
 'mango': 1
}","def unique_values(example_dict):
return list(set(example_dict.values()))"
Create a web scraping application in Python that downloads the source code of a website given its URL.,https://www.example.com/,"import urllib.request

url = ""https://www.example.com/""

response = urllib.request.urlopen(url) 
webContent = response.read()

f = open(""example.html"", ""w"")
f.write(webContent.decode('utf-8'))
f.close()"
Create a Python script that takes in two lists as inputs and generates a list containing all possible pairings between elements from both lists.,"Input 1: [1, 2, 3]
Input 2: ['a', 'b', 'c']","list1 = [1,2,3]
list2 = ['a', 'b', 'c']

pairs = []

for x in list1:
    for y in list2:
        pairs.append((x,y))

print(pairs) // Output: [(1, 'a'), (1, 'b'), (1, 'c'), (2, 'a'), (2, 'b'), (2, 'c'), (3, 'a'), (3, 'b'), (3, 'c')]"
Generate a Python program to calculate the most common value in a list,"['a', 'a', 'b', 'd', 'e', 'a']","def most_common(list):
    dict = {}
    for item in list:
        dict[item] = dict.get(item,0) + 1
    max_count = 0
    max_item = list[0]
    for k,v in dict.items():
        if v > max_count:
            max_count = v
            max_item = k
    return max_item

list = ['a', 'a', 'b', 'd', 'e', 'a']
result = most_common(list)
print(result)"
Convert the given equation in Python to a mathematical expression.,x = y + 2z - 7,x = y + 2*z - 7
Write a Python program to generate a table of HTML with data from the specified dictionary.,"{
    'name': 'James',
    'age': 25,
    'city': 'New York'
}","html_str = """"
html_str += ""<table>\n""
html_str += ""<tr><th>Name</th><th>Age</th><th>City</th></tr>\n""

data = {
    'name': 'James',
    'age': 25,
    'city': 'New York'
}

html_str += ""<tr><td>{}</td><td>{}</td><td>{}</td></tr>\n"".format(data['name'], data['age'], data['city'])

html_str += ""</table>\n""

print(html_str)"
Write a Python program to remove the nth index character from a non-empty string.,"String: ""Hello world!"", index: 5","def remove_character(string, index):
    return string[:index] + string[index+1:]

input_string =  'Hello World!'
index = 5

print(remove_character(input_string, index))"
Create a Python program to filter a list of words and keep only those words that are longer than 8 characters.,"['hello', 'world', 'this', 'is', 'a', 'test', 'foobar']","# Filter list 
words = ['hello', 'world', 'this', 'is', 'a', 'test', 'foobar']

# Keep only words longer than 8 characters
filtered_words = [word for word in words if len(word) > 8]

print(filtered_words)
# Output: ['foobar']"
Generate a Python program to create a histogram from a data set.,"[2, 4, 5, 3, 5, 6, 8, 2]","import matplotlib.pyplot as plt
 
data = [2, 4, 5, 3, 5, 6, 8, 2]
plt.hist(data, bins = 5) 
 
plt.title(""Histogram"") 
plt.xlabel(""Values"")
plt.ylabel(""Frequency"")
plt.show()"
Write a Python program to test if the inputs are equal and return a boolean value.,"28, 48","def equals(a, b):
    return a == b

equal = equals(28, 48)
print(equal)"
Generate a list of zeros of length m using Python,m = 10,"[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"
Classify the following as a Python class,"def add(a, b):
    return a + b",This is not a Python class. It is a Python function.
Determine the type of the given expression in Python.,Expression: 9 + 5,int
Generate a function in Python to capitalize the first letter of every word in a given sentence.,newton theory of gravitation,"def capitalize(sentence):
    words = sentence.split() 
    new_sentence = [] 
    for word in words:
        new_sentence.append(word.capitalize()) 
    return "" "".join(new_sentence)

sentence = ""newton theory of gravitation""
print(capitalize(sentence))"
Optimize a Python program to sort numeric data in ascending order.,"[3, 5, 2, 1, 4]","def sort_list(nums):
  for i in range(len(nums)):
    min_value = min(nums[i:])
    min_index = nums[i:].index(min_value)
    nums[i], nums[i + min_index] = min_value, nums[i] 
  return nums

unsorted_list = [3, 5, 2, 1, 4]
sorted_list = sort_list(unsorted_list)
print(sorted_list) # [1, 2, 3, 4, 5]"
Write a function to remove all elements from a Python list that are divisible by a given number.,"mylist = [7, 8, 15, 21, 24]
num = 3","def remove_divisible(lst, n):
    new_list = []
    for item in lst:
        if item % n != 0:
            new_list.append(item)
    return new_list

mylist = [7, 8, 15, 21, 24]
num = 3

print(remove_divisible(mylist, num)) # [7, 8, 21]"
Design a python function to filter out the fields from a JSON data.,"{
  ""name"": ""John"",
  ""age"": 25,
  ""position"": ""Developer""
}","def filter_json_data(input, fields):
    output = {}
    for field in fields:
        if field in input:
            output[field] = input[field]
    return output"
Create a class in Python that can generate a new instance of itself given a list of arguments,"list = [""name"", ""age"", ""gender""]","class Student():
    def __init__(self, name, age, gender):
        self.name=name
        self.age=age
        self.gender=gender
    def generate(self, args):
        return Student(*args)"
Generate a Python program that accepts an integer as an input and then outputs a string composed of stars,5,"# Get the number from the user
num = int(input(""Enter a number: ""))

# Generate a string of stars
star_string = '*' * num

print(star_string)"
Create a Python program to generate the n-th item in the Fibonacci sequence.,5,"def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    # First Fibonacci number is 0 
    elif n==1: 
        return 0
    # Second Fibonacci number is 1 
    elif n==2: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2) 

# Driver Code 
n = 5
print(Fibonacci(n))"
Modify the following Python code to add a try/except block to catch any errors.,"def add_numbers(a, b):
 return a + b","def add_numbers(a, b):
 try:
  sum = a + b
 except:
  print(""Error: Could not compute the sum of the numbers"")
  return None
 else:
  return sum"
Write a Python program to check if an element exists within a list.,"my_list = [1, 3, 5 ,7, 9]","def find_elm(lst, elm):
  return elm in lst

print(find_elm(my_list, 7)) # True"
Create a method in Python that receives a list of strings and prints out the longest string.,"strings = [“ABC”, “AAA”, “AB”, “ABCDE”]","def longest_string(strings):
  longest = """"
  for s in strings:
    if len(s) > len(longest):
        longest = s
  print(longest)

longest_string(strings)
# Output: ABCDE"
Develop a Python function that takes in two lists and compares their elements,"List1 = [1, 5, 6, 4]
List2 = [3, 7, 4, 2]","def compare_lists(list1, list2):
    
    if len(list1) != len(list2):
        return False
    for i in range(len(list1)):
        if list1[i] != list2[i]:
            return False

    return True"
Generate a python code to evaluate a given polynomial at a given x-value.,"polynomial = [2, 4, 5]
x = 3","def evaluate_polynomial(polynomial, x):
    result = 0
 
    for i in range(len(polynomial)):
        result += polynomial[i] * x**i
 
    return result
 
print(evaluate_polynomial(polynomial, x))"
Generate an optimized code in Python to search an array and find the most frequent number.,"array = [3, 4, 6, 3, 2, 8, 6, 7, 3]","from collections import Counter

def find_most_frequent(array):
  c = Counter(array)
  return c.most_common(1)[0][0]

array = [3, 4, 6, 3, 2, 8, 6, 7, 3]

print(find_most_frequent(array)) # 3"
Optimize an existing Python code snippet that sorts a list of integers in ascending order. The code should be optimized for speed and should not use any libraries.,"unsorted_list = [2, 4, 1, 5, 3]","def bubble_sort(lst):
 n = len(lst)
    
 for i in range(n-1):
 for j in range(0, n-i-1):
 if lst[j] > lst[j+1]:
 lst[j], lst[j+1] = lst[j], lst[j+1]
 
 sorted_list = bubble_sort(unsorted_list)"
Convert the following pseudocode into Python code to check if a number is even or odd:,if num MOD 2 == 0,"def is_even(num):
 return num % 2 == 0"
Create a python script to remove all the vowels from the given string.,"string = ""Hello World!""","import re

def remove_vowels(string):
    """"""Remove all the vowels from the given string.""""""
    return re.sub(r'[aeiouAEIOU]', '', string)

# Usage Example
string = ""Hello World!""
removed_vowels = remove_vowels(string)
print(removed_vowels)  # Hll Wrld!"
Write a Python program to sort the given list of lists by their third elements.,"my_list = [[1, 2, 5], [3, 4, 1], [7, 8, 9]]","def sort_by_third_elements(list_of_lists):
    return sorted(list_of_lists, key=lambda x: x[2])

my_list = [[1, 2, 5], [3, 4, 1], [7, 8, 9]]
print(sort_by_third_elements(my_list))
# Output: [[3, 4, 1], [1, 2, 5], [7, 8, 9]]"
Create a Python script to print out the multiplication table for the given number.,4,"def printMultTable(n):
    for i in range(1, 11):
        print(n, 'x', i, '=', n*i)

printMultTable(4)"
Create a python program to calculate the mean of the given list.,"list = [1, 2, 3, 4, 5]","def mean(list):
    """"""Calculate the mean of the given list.""""""
    total = 0
    for i in list:
        total += i
    return total / len(list)

# Usage Example
list = [1, 2, 3, 4, 5]
mean = mean(list)
print(mean)  # 3.0"
Convert the following Python loop into a list comprehension.,"for x in range(0, 5):
    if (x%2 == 0):
        print(x)","# Solution
[x for x in range(0,5) if (x%2 == 0)]"
Write a Python program to search for a given number in a sorted list using binary search,"[1, 2, 4, 8, 16, 32]","def binary_search(lst, num): 
    start = 0
    end = len(lst) - 1
    while start <= end: 
        mid = (start + end)//2
        if lst[mid] == num: 
            return mid 
        elif lst[mid] > num: 
            end = mid - 1
        else: 
            start = mid + 1
    return -1"
Generate a program in Python for a simple chatbot. The program should accept a user input and output a response using the input provided.,Hello,"user_input = input(""User: "")

if user_input == ""Hello"":
 print(""Chatbot: Hi there!"")
else:
 print(""Chatbot: I'm not sure what you mean, please try again."")"
Write a Python program to calculate the difference between the lowest and highest value for an array of integers.,"[12, 24, 3, 8, -1]","def diffHighestLowest(arr):
    lowest = min(arr)
    highest = max(arr)
    return highest - lowest

arr = [12, 24, 3, 8, -1]
difference = diffHighestLowest(arr)
print(difference)  # 25"
Write a Python script to predict the sentiment of a given sentence using the TextBlob library.,"""Life is full of surprises.""","import textblob

sentence = ""Life is full of surprises.""
sentiment = textblob.TextBlob(sentence).sentiment.polarity

if sentiment == 0:
 # neutral sentiment
 print(""Neutral Sentiment"")
elif sentiment > 0:
 # positive sentiment
 print(""Positive Sentiment"")
else:
 # negative sentiment
 print(""Negative Sentiment"")"
"Analyze a given Python code snippet and determine its type - a documentation, a code snippet, or a comment.","def f(x):
    """"""A simple function
    that prints the argument""""""
    print(x)",Documentation
Create an optimization algorithm in Python which finds the smallest number in an array of integers.,"[20, 8, 7, 22, 32]","def find_smallest_int(arr):
    smallest_num = arr[0]
    for num in arr:
        if num < smallest_num:
            smallest_num = num
    return smallest_num
 
arr = [20, 8, 7, 22, 32]
smallest_num = find_smallest_int(arr)
 
print(""The smallest number is"", smallest_num)"
Create a sentiment classifier using a linear regression algorithm in Python.,"Sentences:
1. I love this movie 
2. I hate this movie","import numpy as np

X = np.array([[1, 0], [0, 1]])
y = np.array([1, 0])

from sklearn.linear_model import LinearRegression 

model = LinearRegression().fit(X, y) 
  
predictions = model.predict(X) 
  
print(""Sentiment:"", predictions)"
Create a Python program to print out a listed dictionary.,"my_dict = {'Name': 'John', 'Age': 26, 'Gender': 'Male'}","for key, value in my_dict.items(): 
  print(f""{key}: {value}"")"
Debug a Python program which calculates the sum of two given numbers.,"x = 5
y = 7
sum = x + y
print(""Sum="", sum)","x = 5
y = 7
sum = x + y

# Add the correct operator here
sum = x + y

print(""Sum="", sum)"
Generate a Python script that extracts text from a given PDF and converts it to CSV.,A PDF file,"import os
import pdfplumber
import csv

# Open the pdf
with pdfplumber.open(file_path) as pdf:
 # Extract text
 text = pdf.extract_text()
 
 # Convert to list
 lines = text.splitlines()
 
 # Save as csv
 with open('file.csv', 'w') as csvfile:
 wr = csv.writer(csvfile)
 for line in lines:
 wr.writerow(line.split())"
Rewrite the following Python function without using loop.,"def multiply_list(l): 
	result = 1
	# Iterate through the list 
	for i in l: 
		result = result * i 
	return result","def multiply_list(l): 
	from functools import reduce
	return reduce((lambda x, y: x * y), l)"
Estimate the time it takes to execute a given Python function.,"def foo():
    a = 0
    for i in range(10000):
        a += 1","# TODO: Estimate time
import time

def estimate_time(func):
    start_time = time.time()
    func()
    end_time = time.time()
    return end_time - start_time

time_taken = estimate_time(foo)
print(f'Time taken to execute the function is {time_taken} seconds')"
Generate a Python script for sorting a list of items alphabetically.,"items = [""Apple"", ""Banana"", ""Cherry"", ""Avocado""]","def sort_items(items):
  items.sort()
  return items

print(sort_items(items))

# Output
['Apple', 'Avocado', 'Banana', 'Cherry']"
"Write a Python program to predict the grade of a student, based on the past exam results.","Mia's last 3 exam results:
Math: 84
English: 89
Biology: 82","import numpy as np

# Input data
math = 84
english = 89
biology = 82

# Define weights
math_weight = 0.3
english_weight = 0.4
biology_weight = 0.3

# Compute weighted sum
grade = math * math_weight + english * english_weight + biology * biology_weight

# Print the grade
print('Mia\'s grade is: {:.2f}'.format(grade))"
Create a python function that takes a list as an argument and returns a list with all the values doubled.,"lst = [2, 4, 6]","def double_list(lst):
    return [x*2 for x in lst]"
"Create a python script that takes a list of numbers, shuffles them and prints the list.","[1, 2, 3, 4, 5]","import random

mylist = [1, 2, 3, 4, 5]
random.shuffle(mylist)

print(mylist)"
You need to optimize a given Python code for improving speed.,"def find_corresponding_nums(nums1, nums2):
  result = []
  for num1 in nums1:
    for num2 in nums2:
      if num1 == num2:
        result.append(num1)
  return result","def find_corresponding_nums(nums1, nums2):
    result = []
    seen = set(nums2) 
    for num1 in nums1:
        if num1 in seen:
            result.append(num1)
    return result"
"Analyse the given Python code and identify the errors, if any.","def set_variable(name, value):
    variable = name
    variable_value = value
    return variable_name","Error 1: The function definition is missing the closing parenthesis.
Error 2: The variable ""variable_name"" is not defined.
Error 3: The function does not return the value of ""variable""."
"Create a Python program that given an array of strings, returns an array with all the strings that have a length of more than 10 characters.","[ ""example"", ""string"", ""webapp"", ""happiness"", ""testcase"", ""application"" ]","def getLongStrings(arr):
 return [s for s in arr if len(s) > 10]
 
long_strings = getLongStrings([""example"", ""string"", ""webapp"", ""happiness"", ""testcase"", ""application""]) 
print(long_strings)"
Write a Python program to normalize a list of words that contains upper and lowercase letters.,"List of words: [""HeLlO"", ""wOrlD""]","def normalize(lst):
 return [word.lower() for word in lst]"
Write a Python program that takes an integer input and prints the Fibonacci series up to the input,10,"def fibonacci(n): 
 a = 0
 b = 1
 if n < 0:
 print(""Incorrect input"")
 elif n == 0:
 return a 
 elif n == 1:
 return b
 else:
 for i in range(2,n+1): 
 c = a + b 
 a = b 
 b = c 
 return b 

n = 10
print(fibonacci(n))

# Output: 55"
"Given a list of numbers, write a function in Python that returns the average of the numbers.","[4, 2, 6, 8, 10]","def average_list(list):
 total = 0
 for item in list:
  total += item
 return total / len(list)

list = [4,2,6,8,10]
print(average_list(list)) # Output: 6.0"
Write Python program to convert a temperature (in Fahrenheit) into Celsius.,Temp in Fahrenheit = 98,"temp_in_fahrenheit = 98
temp_in_celsius = (temp_in_fahrenheit - 32) * 5/9
print(f'{temp_in_fahrenheit} Fahrenheit = {temp_in_celsius:.2f} Celsius')"
Create a script in any language to pass two arrays of different lengths and return a new array that is a combination of the two.,"array1 = [1, 2, 3, 4], array2 = [5, 6]","# Python
def combine_arrays(arr1, arr2):
  combined_arr = [x for x in arr1]
  for i in arr2:
    combined_arr.append(i)
  return combined_arr

# JavaScript 
function combineArrays(arr1, arr2) {
  let combinedArr = [...arr1];
  for (let i of arr2) {
    combinedArr.push(i);
  }
  return combinedArr;
}"
Generate a batch of X random numbers in Python using a for loop.,X = 10,"import random
numbers = []

for i in range(10):
 number = random.randint(1, 100)
 numbers.append(number)
 
print(numbers)"
Write a Python program to generate random numbers in a specified range.,Range: 0 to 1000,"import random 
  
# Generates a random integer between 0 and 1000 
x = random.randint(0,1000) 
  
print(x)"
Optimize this Python code for speed.,"lst = []
 
for i in range(100):
    lst.append(i)
 
for i in lst:
    print(i)","lst = list(range(100))
 
for i in lst:
    print(i)"
Create an algorithm in Python to check whether an array has even or odd number of elements.,"[1, 2, 3, 4]","def is_array_even(arr): 
  if len(arr)%2 == 0:
    return True
  else:
    return False"
Create a function in Python that takes a list as an argument and removes any duplicate values in the list.,"[1, 2, 3, 4, 2]","def remove_duplicates(my_list):
  new_list = []
  for num in my_list:
    if num not in new_list:
      new_list.append(num)
  return new_list"
Optimize the given Python function to reduce its run time and memory usage.,"def func1(n): 
    if n==0: 
        return 0 
    if n==1: 
        return 1 
    else: 
        return func1(n-1)+func1(n-2)","def func1(n, lookup): 
    if n == 0 or n == 1 : 
        lookup[n] = n 
    if lookup[n] is None:  
        lookup[n] = func1(n-1, lookup) + func1(n-2, lookup)  
    return lookup[n] 
  
def optimizedFibo(n): 
    lookup = [None]*(n+1)  
    return func1(n, lookup)"
Design a python program that prints out alternating strings from two lists,"words1 = [""Hello"",""World"",""My"",""Name"",""Is""]
words2 = [""John"", ""Smith"", ""Where"", ""Are"", ""You""]","words1 = [""Hello"",""World"",""My"",""Name"",""Is""]
words2 = [""John"", ""Smith"", ""Where"", ""Are"", ""You""]

for i in range(len(words1)):
    print(words1[i], words2[i])"
"In Python, parse the following XML document and extract the book title and author.","<book>
  <title>Title1</title>
  <author>Author1</author>
</book>","# import the necessary libraries
import xml.etree.ElementTree as ET

# Parse the XML document
root = ET.fromstring(xml_doc)

for book in root:
    if book.tag == 'title':
        title = book.text
    elif book.tag == 'author':
        author = book.text

print(f""Book Title: {title}, Author: {author}"")"
Write a Python program to create multiple directories from the given list.,"[""dir1"", ""dir2"", ""dir3""]","import os

dirs_list = [""dir1"", ""dir2"", ""dir3""]

for d in dirs_list:
    os.makedirs(d)"
Optimize the following Python code by using list comprehensions:,"string_list = [""Hello"", ""world"", ""how"", ""are"", ""you""]","string_list = [""Hello"", ""world"", ""how"", ""are"", ""you""] 

# Optimized version 
string_list = [s.upper() for s in string_list]"
Generate a correct python program to return the second biggest element in a given list.,"[1, 5, 9, 4, 16, 11]","def second_biggest(lst):
 max1 = 0
 max2 = 0
 for num in lst:
 if num > max1:
 max1 = num
 elif num > max2:
 max2 = num
 return max2

second_largest_num = second_biggest([1, 5, 9, 4, 16, 11])
print(second_largest_num)"
Write a Big O notation for the following python code.,"def fibonacci(n)
 if n <= 2
   return 1
 else 
   return fibonacci(n-1) + fibonacci(n-2)",O(2^n)
Write a Python program to calculate the tax for an item given a set of tax rates.,"Tax Brackets: [0.01, 0.05, 0.1, 0.15, 0.2], Item Price: $110","def calculate_tax(brackets, price):
 taxamount = 0
 for i in range(len(brackets)):
 if price>=100*(i+1):
 taxamount += 100*brackets[i]
  else:
 taxamount += (price%100)*brackets[i]
  break
 return taxamount

tax_brackets = [0.01, 0.05, 0.1, 0.15, 0.2]
item_price = 110 

tax = calculate_tax(tax_brackets, item_price)
print(tax)"
Create a Python program that will take an array of integers as input and output a reversed version of the array.,"[1,2,3,4,5]","def reverseArray(arr): 
    return arr[::-1] 
  
arr = [1,2,3,4,5] 
reverseArr = reverseArray(arr) 
  
print(""Reversed array is"", reverseArr)"
Develop a function in Python to delete punctuation from a string.,"This, is a string.","import string

def rm_punctuation(text): 
    translator = text.maketrans("""", """", string.punctuation) 
    return text.translate(translator) 
  
text = ""This, is a string.""
print(rm_punctuation(text))"
Write a Python expression that returns the element at index 2 of a list.,"[""Apple"", ""Banana"", ""Cherry"", ""Date""]","list[2] # returns ""Cherry"""
Critique the given code for best coding practices.,"def calculate_total_sum(list_num):
    total_sum = 0
    for num in list_num:
        total_sum += num
    return total_sum","The code could improve by using the built-in sum() from the Python library. Also, you should use a more meaningful variable name instead of list_num to better explain the intent of the code. Lastly, you could use type hinting to specify the type of variables passed into the function."
"Edit the following Python code to print out ""Hello World"" 5 times.","print(""Hello World"")","for i in range(5):
    print(""Hello World"")"
Create a Python class that has the following functionality.,Create a class with a method to check if a given string contains any vowels or not.,"class StringChecker:
    def containsVowels(self, s):
        vowels = set('aeiouAEIOU')
        for letter in s:
            if letter in vowels:
                return True
        return False"
Create a Python script to extract emails from a given string.,"""Alice lives at alice@example.com and Bob lives at bob@example.com.""","import re

input_str = ""Alice lives at alice@example.com and Bob lives at bob@example.com.""

# use regular expression to extract emails
pattern = r'[\w\.-]+@[\w\.-]+'

emails = re.findall(pattern, input_str)

print(emails) # ['alice@example.com', 'bob@example.com']"
Write a Python script to convert a list of words into a dictionary that details the frequencies of each word.,"['word', 'word', 'words', 'python']","word_dict = {}

# Count frequency of each word
for word in input_list:
 if word in word_dict.keys():
 word_dict[word] += 1
 else:
 word_dict[word] = 1

print(word_dict)
# Output: {'word': 2, 'words': 1, 'python': 1}"
Write a function in Python that uses an exponential function to calculate the number of steps needed for a particular sorting algorithm for a given array,"A=[1,2,3,4], sorting algorithm is Merge Sort","def merge_complexity(arr, sort):
    n = len(arr)

    # base case
    if (n <= 1): 
        return 0

    # Merge sort complexity calculation
    if (sort == ""Merge Sort""): 
        return (n * log(n, 2))

# Driver code 
A = [1, 2, 3, 4]
print(merge_complexity(A, 'Merge Sort'))"
Optimize the following Python function to calculate the sum of natural numbers up to a given number.,n = 10,"def sum_natural_numbers(n):
    total = 0
    for i in range(1, n + 1):
        total += i
    
    return total

def sum_natural_numbers(n):
    return n * (n + 1) // 2

print(sum_natural_numbers(10))"
Write a function in Python to merge two sorted arrays.,"arr1 = [1, 4, 7, 8]
arr2 = [3, 5, 9]","def merge_arrays(arr1, arr2):
    merged_array = arr1 + arr2
    return sorted(merged_array)

merged_array = merge_arrays(arr1, arr2)
print(merged_array)"
Write a Python program to optimize the given code for speed and reduce memory usage.,"def func(a):
    result = []
    for x in range(len(a)):
        result.append(a[x] + 5)
    return result","def func(a):
    result = [x + 5 for x in a]
    return result"
Convert the following python class to XML format.,"class Person:
    def __init__(self, name, age):
        self.name = name
        self.age = age","<?xml version=""1.0"" ?>
<person>
    <name>{self.name}</name>
    <age>{self.age}</age>
</person>"
Write a Python script to calculate the total marks by adding the marks of two subjects.,"subject1 = 78
subject2 = 85","total = subject1 + subject2
print(""Total Marks:"", total)"
Generate code for a function in Python for finding the sum of a given list of numbers.,"[4, 7, 6, 2]","def add_numbers(numbers):
    """"""
    Find the sum of a given list of numbers.
    Args:
        numbers: a list of numbers.
    Returns:
        The sum of the numbers.
    """"""
    sum = 0

    # Iterate over numbers
    for num in numbers:
        # Add number to total
        sum += num

    return sum

total = add_numbers([4, 7, 6, 2])

print(total)"
Generate a program in Python to calculate the area of a circle given its radius.,5.5,"import math

def calculate_area_of_circle(radius):
    area = math.pi * radius ** 2
    return area

result = calculate_area_of_circle(5.5)
print('The area of the circle is: ', result)"
Write a function in Python that takes three string arguments and returns a list where the elements are the concatenation of each pair of strings.,"str1 = ""This""
str2 = ""is""
str3 = ""fun""","def strJoin(str1, str2, str3):
    return [str1 + str2, str2 + str3, str1 + str3]"
"Create a Python script that given a list of strings and a target string, returns the strings from the list that contain the target string.","['hello world', 'good bye', 'hello', 'hello planet'], 'hello'","target = 'hello'
list_strings = ['hello world', 'good bye', 'hello', 'hello planet']

results = [string for string in list_strings if target in string]

print(results)
# Output: ['hello world', 'hello', 'hello planet']"
Write a Python script to make an HTTP request using the Requests library.,url = 'https://example.org',"import requests

resp = requests.get(url)

if resp.status_code == 200:
 print('Success!')
 print(resp.text)
 else:
 print('An error occurred.')"
Design a computer program to sort the list according to alphabetical order.,"[""python"", ""javascript"", ""java"", ""ruby""]","def alphabetical_sort(words):
    return sorted(words)

list_of_words = [""python"", ""javascript"", ""java"", ""ruby""]
sorted_list = alphabetical_sort(list_of_words)
print(sorted_list)"
Write a python script to print out every possible combination of letters given a list of characters,"[""a"", ""b"", ""c""]","from itertools import product

# Create a function to generate every possible combination
def generate_combinations(chars):
    for combination in product(*chars):
        combination = """".join(combination)
        print(combination)
        
# Input list of characters
chars = [""a"",""b"",""c""]

# Generate all combinations
generate_combinations(chars)"
"Generate a Python function to reverse the order of each word in a string, leaving the absolute order of each word unchanged.","hello, world.","def reverser(string):
    reversed_string = []
    words = string.split()
    for word in words:
        reversed_string.append(word[::-1])
    return "" "".join(reversed_string)"
Classify different programming languages based on their features.,"C++, Java, Python, JavaScript","C++:   Object-oriented, compiled language
Java:  Object-oriented, compiled language
Python: Object-oriented, interpreted language
JavaScript: Object-oriented, interpreted language"
Develop a Python program that calculates the average hours of sunlight in a given city during a month. Assume the city name and month are provided as user input.,"City Name: Tokyo
Month: February","# Get user input
city = input(""City Name: "")
month = input(""Month: "")

# Calculate the average hours of sunlight in a given city during a month
def average_sunlight(city, month):
    # Your code goes here
    ...

# Print the result
print(average_sunlight(city, month))"
Resolve the given merge conflict using Python.,"<<<<<<< HEAD
x = 5
=======
x = 10
>>>>>>> branch2",x = 10
Create a Python program to remove all whitespaces from a string.,"""This is a string with whitespaces""","def remove_whitespace(s):
    return s.replace("" "", """")

print(remove_whitespace(""This is a string with whitespaces""))"
"Using the provided Python code, optimize the code to be as efficient as possible.","x = 0
y = 0

def func():
global x
global y
x += 1
y += 2

for i in range(10000):
func()","x = 0
y = 0

def func():
global x, y
x, y = x+1, y+2

func()
x += 9999
y += 19998"
Generate an equation in Python that works with given input.,x = 5,y = x**2 + 7*x + 3
Write a Python program to compute the sum of items in a given list and multiply it by a given number.,"{'list': [1, 3, 5, 7], 'num': 3}","#initialize variables
list = [1, 3, 5, 7]
num = 3

# compute sum
sum = 0
for i in list:
    sum = sum + i

# compute product
result = sum * num

# Print result
print(""Result: "", result)"
Develop a program in Python for counting the occurrences of a given character in a string.,"String: abcdefg
Character: a","def countOccurences(str, char):
    count = 0
    for ch in str:
        if ch == char:
            count += 1
    return count

print(countOccurences('abcdefg', 'a'))"
Generate a list of combinations of three numbers from a given array in Python.,"[1, 2, 3, 4, 5]","combinations = []
for i in range(len(arr)):
    for j in range(i+1, len(arr)):
        for k in range(j+1, len(arr)):
            combinations.append([arr[i], arr[j], arr[k]])"
Create a Python program to normalize a given data set.,"[2, 6, 25, -25, 9]","def normalize(nums):
    min_Num = min(nums)
    max_num = max(nums)
    
    for i in range(len(nums)):
        nums[i] = (nums[i] - min_Num)/ (max_num - min_Num)
    
    return nums"
Create a Python script to return the first two elements of a list.,"[1,2,3,4,5]","def get_first_two(list):
    return list[:2]

list = [1,2,3,4,5] 
print(get_first_two(list)) # returns [1,2]"
Optimize the following Python code for counting the number of vowels in a string.,"def count_vowels(str):
 count = 0
 vowels = [""a"", ""e"", ""i"", ""o"", ""u""]
 for i in str:
  if i in vowels:
   count += 1
 return count","def count_vowels(str):
 count = 0
 vowels = set(""aeiou"")
 for i in str:
  if i in vowels:
   count += 1
 return count"
Create a Python script to convert a given list of integers to a new list of strings.,"[1, 2, 3]","def to_string_list(lst):
    return [str(x) for x in lst]

int_list = [1, 2, 3]
string_list = to_string_list(int_list)
print(string_list)

## Output
['1', '2', '3']"
Create a program in Python that visualizes the data given.,"DataSet = [
    [1,2,3,4,5],
    [6,7,8,9,10],
    [11,12,13,14,15]
]","import matplotlib.pyplot as plt

data_set = [
    [1,2,3,4,5],
    [6,7,8,9,10],
    [11,12,13,14,15]
]

fig, ax = plt.subplots()
ax.plot(data_set)
ax.legend([""Group 1"", ""Group 2"", ""Group 3""])
plt.show()"
Edit the following Python code to include a while loop:,"a = 0
b = 0","a = 0
b = 0

while a < 10:
    a += 1
    b = b + a

print(b)"
Implement this algorithms in Python.,Algorithm: Depth-first Search,"def dfs(graph, start):
    visited = []
    stack = [start]
    while stack:
        vertex = stack.pop()
        if vertex not in visited:
            visited.append(vertex)
            for node in graph[vertex]:
                stack.append(node)
    return visited"
Convert the following SQL query to Python.,"SELECT * 
FROM `employee_table`
WHERE `salary` < 10000","import sqlite3

db = sqlite3.connect(""employee_table.db"") # Assumes the table is in a file named employee_table.db
cur = db.cursor()

# Execute the SQL command
cur.execute(""SELECT * FROM employee_table WHERE salary < 10000"")

# Commit your changes
db.commit()

# Get the results
results = cur.fetchall()

# Print the results
for row in results:
    print(row)"
Write a Python program to create a dictionary from two lists.,"keys = [""a"", ""b"", ""c""]
values = [1, 2, 3]","def create_dict(keys, values):
    return dict(zip(keys, values))
    
dictionary = create_dict(keys, values)
print(dictionary)"
Develop a Python program to flatten a 2-D list.,"list_2d = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","def flatten_2d_list(list_2d):
 # Initialize an empty list 
 flat_list = []
 
 # Loop through the list 
 for row in list_2d:
	 for item in row: 
		 # Add the item to the flat list 
		 flat_list.append(item) 

# Return the flattened list 
return flat_list"
"Write a python program that takes a list of strings, checks if any of them are palindromes, and returns 'True' if at least one of them is a palindrome.","['abc', 'bob', 'kayak']","def is_palindrome(strings):
    for string in strings:
        reversed_string = string[::-1]
        if string == reversed_string:
            return True
    return False

strings = ['abc', 'bob', 'kayak']
out = is_palindrome(strings)
print(out)"
Design an efficient algorithm to sort a list of integers in Python.,"[4, 2, 7, 1, 3, 8]","def sort_integers(arr):
 n = len(arr)
 for i in range(n):
  for j in range(0, n - i - 1):
   if arr[j] > arr[j + 1]:
    arr[j], arr[j + 1] = arr[j + 1], arr[j]
 return arr

unsorted_list = [4, 2, 7, 1, 3, 8]
print(sort_integers(unsorted_list))
# Output: [1,2,3,4,7,8]"
Write a Python program to find the sum of the three given numbers where the three numbers are given as input.,4 5 6,"# Function to calculate the sum 
# of three numbers 
def SumOfThree (x, y, z): 
    sum = x + y + z 
    return sum

# Print the sum 
print(""Sum of 3 numbers is: "", SumOfThree(4, 5, 6))"
Design a Python program to filter out the odd numbers from a list.,"list1 = [1, 2, 3, 4, 5, 6]","def filter_odd_numbers(numbers):
    filtered_list = []
    for num in numbers:
        if num % 2 != 0:
            filtered_list.append(num)
    return filtered_list

list1 = [1,2,3,4,5,6]
filtered_list = filter_odd_numbers(list1)
print(filtered_list)  # [1, 3, 5]"
Construct a new Python program for converting a given hashmap to a list.,"{ 'name': 'John', 'age': 44, 'job': 'Engineer' }","d = { 'name': 'John', 'age': 44, 'job': 'Engineer' }
l = list(d.items())
print(l)  // [('name', 'John'), ('age', 44), ('job', 'Engineer')]"
Write a Python program to calculate the sum of the elements in a given matrix. Assume the matrix is a list of lists.,"matrix = [[1,2], [3,4], [5,6]]","def matrix_sum(matrix):
sum = 0
for row in matrix:
 for elem in row:
  sum += elem
return sum"
Write a function in Python to convert following input into a dictionary,"[(""a"", 1), (""b"", 2), (""c"", 3)]","def list_to_dict(input_list):
  output_dict = {}
  for key, value in input_list:
    output_dict[key] = value 
  return output_dict"
Examine a Python function and refactor it to make it more efficient and optimized.,"def foo(n):
    result = 0
    while n > 0:
        result += n
        n -= 1
    return result","def foo(n):
    return n * (n + 1) // 2"
Write a Python program to convert a string of lower case characters to upper case characters.,"""Hello World""","string = ""Hello World""

# convert to upper case
string = string.upper()

# print result
print(string) # prints ""HELLO WORLD"""
Create a Python script to find the area of a circle when given its radius.,radius = 5,"import math
 
def area_circle(radius):
 return math.pi * (radius ** 2)
 
print(area_circle(radius))"
Write a Python script to retrieve a title from a given URL.,https://www.nytimes.com/2020/11/19/us/denver-police-protest.html,"import requests

url = 'https://www.nytimes.com/2020/11/19/us/denver-police-protest.html'
response = requests.get(url)

if response.status_code == 200:
 title = response.text.split(""<title>"")[1].split(""</title>"")[0]
 print(title)"
Maximize a given function subject to the given constraints.,"f(x) = x1^2 + x2^2
subject to: x1 + x2 <= 2","We can maximize the given function by solving the given constraints as a linear programming problem. We can use an optimization library in Python to solve this problem. We can also use the Simplex algorithm to solve this problem. The optimal solution is (1,1), which gives a maximum value of 2."
Create a Python program to generate a 2D array of a defined size and fill it with random numbers.,Size of the array: 10x10,"import random

# define the size of the array
x, y = 10, 10

# create an empty array of the given size
arr = [[0 for j in range(x)] for i in range(y)]

# fill the array with random numbers
for i in range(x):
 for j in range(y):
 arr[i][j] = random.randint(0, 9)

# print the array
for i in range(x):
 print(arr[i])"
Create a Python program that uses natural language processing and machine learning to analyze sentiment in a given sentence.,The food was absolutely delicious.,"import nltk
from nltk.sentiment.vader import SentimentIntensityAnalyzer

sentences = [""The food was absolutely delicious.""]
sid = SentimentIntensityAnalyzer()

for sentence in sentences:
 print(sentence)
 ss = sid.polarity_scores(sentence)
 for k in ss:
 print('{0}: {1}'.format(k, ss[k]), end='\n')"
Write a Python script to loop through a list of numbers and print out only the even numbers.,"List of numbers: [3, 7, 10, 15, 17, 20]","my_list = [3, 7, 10, 15, 17, 20]

for number in my_list: 
  if (number % 2 == 0): 
    print(number)"
Generate a program in Python which takes an input array and outputs the unique elements in the array.,"[1, 2, 5, 2, 6, 6, 1]","def uniqueValues(arr):
    uniqueVal = []
    for i in arr:
        if i not in uniqueVal:
            uniqueVal.append(i)
    return uniqueVal

arr = [1, 2, 5, 2, 6, 6, 1]
uniqueVal = uniqueValues(arr) 
print(uniqueVal)"
Rewrite the following code in Python.,"let x = 5;
let y = 10;
let z = x + y;","x = 5
y = 10
z = x + y"
Transform this JSON into a Python Dictionary.,"{""name"": ""John"", ""age"": 28, ""location"": ""New York""}","import json

# Load the JSON data into a Python Dictionary
data = json.loads('{""name"": ""John"", ""age"": 28, ""location"": ""New York""}')"
Generate a Python program that scrambles the input string by randomly switching the positions of the characters.,Hello World,"import random

input_string = ""Hello World""

#Split the given string
string_list = list(input_string)
random.shuffle(string_list)

#Form the scrambled string
scrambled_string = """".join(string_list) 

print(""Scrambled string:"",scrambled_string)"
Write a Python program that counts the number of even and odd numbers in a list.,"[2, 7, 3, 8, 12]","def count_odd_even(lst):
 even_count = 0
 odd_count = 0
 for num in lst:
 if num % 2 == 0:
 even_count += 1
 else:
 odd_count += 1
 return [even_count, odd_count]"
Write a python program to find the largest of three given numbers.,"num1 = 14
num2 = 25
num3 = 6","num1 = 14
num2 = 25
num3 = 6

largest = max(num1, num2, num3)

print(""The largest number is"", largest)"
Develop an algorithm in Python to compute the intersection of two lists.,"list_a = [3, 5, 6, 9]
list_b = [4, 5, 8, 9]","def findIntersection(list_a, list_b):
  intersection_list = []

  for element in list_a:
    if element in list_b:
      intersection_list.append(element)
  
  return intersection_list
  
# Main
list_a = [3, 5, 6, 9]
list_b = [4, 5, 8, 9]
intersection_list = findIntersection(list_a, list_b)

print('Intersection of list_a and list_b:', intersection_list)"
Create a serverless function in Python that converts a filename to a corresponding filetype.,filename: “example.jpg”,"import os

def get_filetype(filename):
 _, file_extension = os.path.splitext(filename)
 return(file_extension.lower()[1:])

filetype = get_filetype(""example.jpg"")
print(filetype)

# Output: jpg"
Edit the following Python program to find the maximum number in a given list of numbers.,"numbers = [25, 12, 15, 32, 7]","numbers = [25, 12, 15, 32, 7]

# initialize maximum number
max = numbers[0]

# loop through list
for num in numbers:
    # compare each number to find the max
    if num > max:
        max = num

# print maximum number
print(max)"
"Using the input data as a guide, implement a Fibonacci sequence in Python.","# Fibonacci sequence
# The first two terms of the sequence is 0 followed by 1","# Fibonacci sequence
def fibonacci(n): 
    if n<0: 
        print(""Incorrect input"")
    elif n==1: 
        return 0
    elif n==2: 
        return 1
    else: 
        return fibonacci(n-1)+fibonacci(n-2)
  
# Driver Program 
print(fibonacci(9))"
Implement a Python program that returns the sum of the elements in an array.,"[4, 8, 12, 16]","def arraySum(arr):
    if len(arr) == 0:
        return 0
    else: 
        return arr[0] + arraySum(arr[1:])

print(arraySum([4, 8, 12, 16])) # 40"
Analyze a given list of numbers and print out the mean and variance using Python.,"numbers = [2, 4, 6, 9, 12, 13]","def analyze_list(numbers):
 mean = 0
 for num in numbers:
 mean += num
 mean /= len(numbers)
 
 variance = 0
 for num in numbers:
 variance += (num - mean)**2
 variance /= len(numbers)
 
 print(""Mean:"", mean)
 print(""Variance:"", variance)"
Write a python program that takes in two integers and prints the largest number.,"Num1 = 10 
 Num2 = 8","num1 = 10
 num2 = 8

if num1 > num2:
    print(num1)
else:
    print(num2)"
Write a Python program to print the factorial of a number.,5,"def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n-1)

num = 5
print(""The factorial of"", num, ""is"", factorial(num))"
Rewrite a provided Python function to a more Pythonic version.,"def add_numbers(x, y):
total = 0
for i in range(x, y):
 total = total + i
return total","def add_numbers(x, y):
 return sum(range(x, y))"
"Using Python, write a program that finds the most common word in a given set of text.","""This is an example sentence. The quick brown fox jumps over the lazy dog""","from collections import Counter

def most_common_word(text):
    words = text.split()
    cnt = Counter()
    for word in words:
        cnt[word] += 1
    return cnt.most_common(1)[0][0]

text = ""This is an example sentence. The quick brown fox jumps over the lazy dog""
print(most_common_word(text))"
Write a Python function to shift every element in a given array by k.,"[1, 2, 3, 4, 5]","def shift(arr, k):
    for i in range(len(arr)):
        arr[i] = arr[i] + k
    return arr

arr = [1, 2, 3, 4, 5]
shift(arr, 10)
print(arr)"
"Write a function in Python to create a dictionary from two lists, one of keys and the other one of values.","keys = [1,2,3]
values = ['a','b','c']","def createDict(keys, values):
  dict = {}
  for i in range(len(keys)):
    dict[keys[i]] = values[i]
  return dict"
Write Python code to generate a report of the total price of the items stored in a list?,"items = [('Milk', 1.99), ('Eggs', 3.40), ('Cereal', 4.75)]","total_price = 0
for item in items:
    total_price += item[1]

print(""The total price of the items is {:.2f}"".format(total_price))"
Write a Python program to create a list that represents the frequency of each word in a given sentence.,This is a sentence,"sentence = ""This is a sentence""
sentence_list = sentence.split()
frequency_list = []

for word in sentence_list:
    frequency_list.append(sentence_list.count(word))
    
frequency_dict = dict(zip(sentence_list, frequency_list))

print(frequency_dict)"
Create a python function that stores the elements of a list in a dictionary.,"list = ['apple', 'orange', 'banana']","def list_to_dict(list):
    dictionary = {}
    for item in list:
        dictionary[item] = 0

    return dictionary"
Write a Python script to decode a base64 encoded string.,encoded_string = 'aGVsbG8=',"import base64

encoded_string = 'aGVsbG8='
decoded_string = base64.b64decode(encoded_string)
print(decoded_string) # prints b'hello'"
"Write a function in Python that takes in a string and returns true if it is a palindrome, and false otherwise.","text = ""racecar""","def is_palindrome(text):
    return text == text[::-1]"
Generate Python code to print the smallest number in a given list of numbers.,"[24, 14, 67, 89, 34, 52]","list_of_numbers = [24, 14, 67, 89, 34, 52]
print(min(list_of_numbers))"
Develop a loop that prints a python array from the end to the beginning.,"arr = [1, 2, 3, 4, 5]","def printArrayReverse(arr): 
    for i in range(len(arr) - 1, -1, -1): 
        print(arr[i], end = "" "")

printArrayReverse(arr)"
Create a function in Python to read two strings and return the concatenation of them.,"""Hello"", ""world!""","def concatenate_strings(str1, str2):
    return str1 + str2

print(concatenate_strings(""Hello"", ""world!""))"
Design a function in Python to get the largest number in an array of numbers.,"[2, 11, 15, 9, 5]","def get_largest_number(arr):
    largest = arr[0]
    for num in arr:
       if num > largest:
           largest = num
    return largest

largest_num = get_largest_number([2, 11, 15, 9, 5])
print(largest_num)"
"Given a list of numbers, write a python program that finds an index of an array element and its corresponding value.","my_list = [2,4,6,8,10]","def find_index_and_value(my_list):
    for i, num in enumerate(my_list):
        print(""Element with index %d has value %d"" % (i, num))

my_list = [2,4,6,8,10]
find_index_and_value(my_list)"
Write an algorithm in Python to find the average value in an array of integers.,"[4, 10, 6, 8]","def avg(arr): 
  
    # calculating length of array 
    n = len(arr) 
    total_sum = 0

    for i in range(0, n): 
        total_sum += arr[i] 
  
    return total_sum / n 

# Driver code 
arr = [4, 10, 6, 8] 
assert avg(arr) == 7.0"
Write a function in Python that takes two strings and returns the length of the longest string.,"string1 = “hello”
string2 = “goodbye”","def longest_string_length(string1, string2):
    if len(string1) > len(string2):
        return len(string1)
    return len(string2)

string1 = “hello”
string2 = “goodbye”

result = longest_string_length(string1, string2)
print(result)"
Optimize the given Python code by removing any redundant or unnecessary operations.,"s = """"
for i in range(0, 10):
    for x in range(0, 10):
        for y in range(0, 10):
            s += str(i) + str(x) + str(y)","s = """"
for i in range(0, 10):
    for x in range(0, 10):
        s += str(i) + str(x) + ''.join([str(y) for y in range(0, 10)])"
Generate a method to remove all duplicates from a Python list.,"[4, 4, 5, 7, 8, 8, 1]","def removeDuplicates(in_list):
    out_list = []
    for item in in_list:
        if item not in out_list:
            out_list.append(item)
    return out_list

my_list = [4, 4, 5, 7, 8, 8, 1] 
print(removeDuplicates(my_list))"
Create a JSON object using Python that contains the following data:,"Name: John 
Age: 56
City: New York","data = {
    'name': 'John',
    'age': 56,
    'city': 'New York'
    }"
Write a Python code to encode a given string using the Caesar cipher.,"string = ""Hello World""","def caesar_encrypt(string, shift_amount):
 encrypted_string = """"
 for i in range(len(string)):
  char = string[i]
  x = ord(char) + shift_amount
  encrypted_string += chr(x)
 
 return encrypted_string

encoded_string = caesar_encrypt(string, 3)
print(encoded_string) // Output: Khoor Zruog"
Create a web scraper in Python using Selenium to extract the contents of a webpage.,URL: https://en.wikipedia.org/wiki/Python,"from selenium import webdriver

url = 'https://en.wikipedia.org/wiki/Python'

driver = webdriver.Chrome()
driver.get(url)

page_content = driver.page_source
 
driver.close()

# Process page_content"
Create a class in Python to represent a circle containing methods to calculate the area and circumference.,-,"class Circle:
    def __init__(self, radius):
        self.radius = radius

    def area(self):
        return 3.14 * self.radius * self.radius

    def circumference(self):
        return 2 * 3.14 * self.radius"
Rewrite the following Python program using recursion.,"def fib(n):
    if n == 1 or n == 0:
        return n
    return fib(n-1) + fib(n-2)

print(fib(5))","def fib(n):
    if n == 0:
        return 0
    elif n == 1:
        return 1
    else:
        return fib(n-1) + fib(n-2)

print(fib(5))"
Create a basic function in Python to extract the first digit from a number.,Number: 2458,"def firstDigit(num):
	return int(str(num)[0])

num = 2458
print(firstDigit(num)) # 2"
Create a program in Python 3 which prints out a multiplication table of a given number.,Number: 9,"def create_multiplication_table(n):
 for i in range(1,11):
 print(f'{n} * {i} = {n * i}')

create_multiplication_table(9)

# Outputs:
# 9 * 1 = 9
# 9 * 2 = 18
# 9 * 3 = 27
# 9 * 4 = 36
# 9 * 5 = 45
# 9 * 6 = 54
# 9 * 7 = 63
# 9 * 8 = 72 
# 9 * 9 = 81 
# 9 * 10 = 90"
Create a Python program to convert a string to its equivalent unicode value.,"""hello""","import unicodedata
 
#example string
s = ""hello""
 
#printing string to unicode
print(""The unicode value of '"" + s + ""' is: "" + str(ord(unicodedata.normalize('NFKD', s)[0])))
 
#output
#The unicode value of 'hello' is: 104"
Create a code in Python that takes two lists and returns a new list that contains the elements of both.,"list1 = [1, 2, 3]
list2 = [2, 3, 4]","def merge_lists(list1, list2):
  merged_list = list1 + list2
  return merged_list

merged_list = merge_lists(list1, list2)
print(merged_list)"
Create a for-loop in Python to loop through the items in a list and print their elements.,"names = ['John', 'Kate', 'Mike', 'Alex']","for name in names:
    print(name)"
"Describe the algorithm to find the height of a binary tree in Python, using recursion.","Tree:

      5
   /     \
  2       8
 /  \    /  \
1    4  6    10","def getHeight(root):
    if not root:
        return 0
    else:
        # Compute using recurssion
        leftHeight = getHeight(root.left)
        rightHeight = getHeight(root.right)

        # Return the overall height
        return max(leftHeight, rightHeight) + 1"
Create a Python list in which each element is a dictionary containing customer data.,"[
    {
        'name': 'John',
        'age': 21
    },
    {
        'name': 'Minh',
        'age': 24
    },
    {
        'name': 'Linda',
        'age': 18
    }
]","customers = [
    {
        'name': 'John',
        'age': 21
    },
    {
        'name': 'Minh',
        'age': 24
    },
    {
        'name': 'Linda',
        'age': 18
    }
]"
Develop an API call in Python to fech data from a website.,Link to website: www.example.com,"import requests 

URL = ""www.example.com"" 
  
# defining a params dict for the parameters to be sent to the API 
PARAMS = { } 
  
# sending get request and saving the response as response object 
r = requests.get(url = URL, params = PARAMS) 
  
# extracting data in json format 
data = r.json() 
print(data)"
Use the given data structure to create a Python dictionary that represents a contact list.,"Name: John Smith 
Phone: 123-456-7890 
Address: 123 Main St. 
City: Seattle 
State: WA","dictionary = { 
""John Smith"": { 
    ""phone"": ""123-456-7890"", 
    ""address"": ""123 Main St."", 
    ""city"": ""Seattle"", 
    ""state"": ""WA""
} 
}"
Create a Python script to perform the following transformation on a given string?,"""HELLO WORLD""","inp_str = ""HELLO WORLD""

result_str = ''

for c in inp_str:
    if c.isupper():
        result_str += c.lower()
    else:
        result_str += c.upper()
        
print(result_str)"
Create a Python script to download a web page from a URL.,https://example.com,"import requests

# Get the webpage
url = 'https://example.com'
r = requests.get(url)

# Save the webpage to a file 
with open('webpage.html', 'wb') as f:
 f.write(r.content)"
Compose a program to take in a string as an input and output only the unique characters in it.,python,"def unique_chars(string):
    unique_characters = set()
    for char in string:
        unique_characters.add(char)
    return unique_characters

print(unique_chars(""python""))"
Generate a code in Python that takes a string as input and removes duplicate characters from it,"St = ""DaSSmmoonnd""","st = ""DaSSmmoonnd""
st_list = list(st)
st_set = set(st_list)
st_nodupes = ''.join(st_set)
print(st_nodupes)"
Create a program in Python to print the following pattern,n = 5,"def print_pattern(n):
    for i in range(1, n+1):
        for j in range(1, i+1):
            print(j, end="""")
        print("""")

print_pattern(5)"
Optimize the following Python code to make it run faster.,"def is_prime(num):
    for i in range(2, num):
        if (number % i) == 0:
            return False
    return True","def is_prime(num):
    if num < 2:
        return False
    if num == 2 or num == 3: 
        return True

    i = 2
    while i*i <= num: 
        if (num % i) == 0: 
            return False
        i += 1

    return True"
"Develop a Python class to represent an employee with name, position and salary.","The employee is named 'John', he is a software engineer and he earns 6000$ per month.","class Employee:
    def __init__(self, name, position, salary):
        self.name = name
        self.position = position
        self.salary = salary

john = Employee('John', 'Software Engineer', 6000)"
Generate a Python script that plots the relationship between two variables.,"x = [1, 2, 3, 4, 5]
    y = [2, 4, 6, 8, 10]","import matplotlib.pyplot as plt

x = [1, 2, 3, 4, 5]
y = [2, 4, 6, 8, 10]

plt.plot(x, y)
plt.xlabel(""x"")
plt.ylabel(""y"")
plt.title(""Relationship between x and y"")
plt.show()"
Create a program in Python to count the number of elements of a given list.,"list = ['This', 'is', 'a', 'list']","def element_count(list):
    return len(list)

list = ['This', 'is', 'a', 'list']
print(element_count(list))"
Rewrite the following pseudocode in Python,"Function Multiply(a, b) 
  Product = 0 
  i = 0 
  While i < b 
    Product = Product + a 
    i = i + 1 
  End While 
  Return Product","def Multiply(a, b):
    product = 0
    i = 0 
    while i < b:
        product = product + a
        i = i + 1
    return product"
Design a Python program to extract the duplicate elements from an integer array.,"[1, 2, 3, 2, 4, 5, 5]","def extractDuplicates(nums): 
    result = [] 

    for i in range(len(nums)): 
        k = i + 1 
        for j in range(k, len(nums)): 
            if nums[i] == nums[j] and nums[i] not in result: 
                result.append(nums[i]) 
  
    return result"
Create a program in Python that removes duplicates from a given array.,"[1,1,2,3,4,5,5,5]","def remove_duplicates(array):
    new_array = []
    for element in array:
        if element not in new_array:
            new_array.append(element)
    return new_array"
Write a Python program to translate a string into pig latin.,Hello,"def toPigLatin(word):
    vowels = [""a"",""e"",""i"",""o"",""u""]
    first_letter = word[0]
    if first_letter in vowels:
        modified_word = word + ""way""
    else:
        modified_word = word[1:] + first_letter + ""ay""
    return modified_word

result = toPigLatin(""Hello"")
print(result)"
Create a function in Python to return the length of the longest word in a list of words.,"words = [""cat"", ""longestword"", ""dog"", ""night""]","def findLongestWordLength(words):
  longest_length = 0
  for word in words:
    if len(word) > longest_length:
      longest_length = len(word)
  return longest_length

longest_word_length = findLongestWordLength([""cat"", ""longestword"", ""dog"", ""night""])
print(longest_word_length)"
Create a program in Python to compare the elements of two given arrays and return the number of matches.,"arr1 = [1, 2, 3]
arr2 = [3, 4, 5]","def count_matches(arr1, arr2):
    count = 0
    for i in arr1:
        if i in arr2:
            count += 1
    return count

print(count_matches(arr1, arr2))"
Can you make a Python program to sort an array of integers from highest to lowest?,"[6, 2, 8, 3, 9]","def sort_highest_to_lowest(arr):
    sorted_arr = sorted(arr, reverse = True)
    return sorted_arr

arr = [6, 2, 8, 3, 9]
sorted_arr = sort_highest_to_lowest(arr)
print(sorted_arr)"
Enhance the following python function to rank elements of the given list in descending order.,"def my_sort(items):
    items.sort()","def my_sort(items):
    items.sort(reverse=True)"
Develop a Python program to test a condition,Test whether a given number is greater than 5.,"def test_gt_5(num):
    return num > 5"
Create a sorting algorithm in Python that sorts a random list of integers in ascending order.,"[45, 33, 38, 10, 49]","def sort(lst): 
    for i in range(len(lst)): 
        min_index = i 
        for j in range(i+1, len(lst)): 
            if lst[min_index] > lst[j]: 
                min_index = j 
  
        lst[i], lst[min_index] = lst[min_index], lst[i] 
  
list = [45, 33, 38, 10, 49] 

sort(list) 

print(list)"
What is the size of the memory required by a given string in Python?,"The given string is ""Hello World!""","The size of the memory required for the string ""Hello World!"" is 12 bytes."
Fill the given syntax tree to generate a valid python code,"def
        initial_value
            =
                0","def initial_value():
    return 0"
Create an algorithm in Python to find the index of an element in an array.,"arr = [1, 2, 3, 4]
target = 3","def indexFinder(arr, target): 
    for i in range(len(arr)):
        if arr[i] == target:
            return i
    return -1

arr = [1, 2, 3, 4]
target = 3

print(""Index of % d is % d"" %(target, indexFinder(arr, target)))"
Generate a function in Python that displays the Fibonacci sequence for a given value.,n = 10,"def fibonacci(n):
 a, b = 0, 1
 result = []
 
 while a < n:
 result.append(a)
 a, b = b, a + b

 return result

print(fibonacci(n))"
Build an algorithm in Python for finding the sum of all the odd numbers in a given array.,"[1, 2, 3, 4, 5, 6]","def sumOddNumbers(arr):
    sum = 0
    for num in arr:
        if num % 2 != 0:
            sum += num
    return sum

arr = [1, 2, 3, 4, 5, 6]
print(sumOddNumbers(arr))"
Generate a python list of all prime numbers between m and n.,"m = 10, n = 20","def prime_range(m, n):
    primes = []
    for num in range(m, n+1):
        for i in range(2, num):
            if (num % i) == 0:
                break
        else:
            primes.append(num)
    return primes

prime_range(10, 20) # [11, 13, 17, 19]"
Convert the following Python program to a JavaScript program.,"def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n-1)","function factorial(n) {
   if (n === 0) {
      return 1;
   } else {
      return n * factorial(n - 1);
   }
}"
Create a python script that evaluates a binary expression.,Expr: 1 + 0,"def evalBinaryExpr(expr): 
    return eval(expr) 
  
print(evalBinaryExpr(""1 + 0""))"
Write a python program to print the Fibonacci series upto n terms.,6,"def fibonacci_series(n):
    if n==0:
        return 0
    elif n==1:
        return 1
    else: 
        return fibonacci_series(n-1) + fibonacci_series(n-2)

for i in range(6):
    print(fibonacci_series(i), end=', ')"
Create a program in Python that will find the smallest number in a list of numbers.,"[5, 4, 12, 17, 9]","def find_smallest_number(numbers):
    smallest = numbers[0] 
    for num in numbers:
        if num < smallest:
            smallest = num
    return smallest

print(find_smallest_number([5, 4, 12, 17, 9]))"
Design a Python function which takes in a list of integers as an input and returns a tuple containing the number of positive and negative entries in the list.,"[3, -1, 5, -2, 8]","def countPosAndNeg(lst):
 positive = 0
 negative = 0
 for num in lst:
  if num >= 0:
   positive += 1
  else:
   negative += 1
 return (positive, negative)"
Create a machine learning model in Python to predict the age of a person from their height and weight.,"Sample input: 
Height: 59
Weight: 140","import numpy as np
from sklearn.linear_model import LinearRegression

# Creating the X and Y datasets 
x = []
y = []

# Adding the data
x.append([59, 140])
y.append(30)

x = np.array(x)
y = np.array(y)

# Creating and fitting the model 
model = LinearRegression().fit(x, y)"
Write a Python program to check how many times a given element occurs in a list.,"List: [1, 2, 3, 2, 4, 2, 1]
Element: 2","def count_element_occurrence(lst, target):
 count = 0
 for element in lst:
     if element == target:
         count += 1
 return count"
Generate a Python program that takes one string and returns the most frequently used character from the string.,"string = ""test string""","def most_frequent_character(string): 
    counts = dict() 
    max = -1
    character = '' 

    for char in string: 
        if char in counts: 
            counts[char] += 1
        else: 
            counts[char] = 1

        if counts[char] > max: 
            max = counts[char] 
            character = char 
    return character"
Create a Python program to find the sum of the first n numbers.,n = 5,"def calculate_sum(n):
    """"""Function to calculate the sum of the first n numbers.""""""
    sum = 0
    while n > 0:
        sum = sum + n
        n = n - 1
    return sum

if __name__ == ""__main__"":
    n = 5 
    result = calculate_sum(n)
    print(""The sum is"", result)"
Create a python 3 function to encode the input string.,Hello World!,"def encode_string(s):
    # Function to encode a string
    encoded_string = ''
    for c in s:
        encoded_string += hex(ord(c)).upper()[2:]
    return encoded_string"
Create a Python program to generate a list from two given lists using a list comprehension.,"list1 = [1, 2, 3]
list2 = [4, 5, 6]","list1 = [1, 2, 3]
list2 = [4, 5, 6]

result = [x + y for x in list1 for y in list2]
print(result)"
Generate an algorithm in Python that can take in a list of integers and sort them in ascending order.,"Example list: [4, 9, 1, 6, 5]","def sort_ascending(nums):
    n = len(nums)
    for i in range(n):
        for j in range(0, n-i-1):
            if nums[j] > nums[j+1] :
                nums[j], nums[j+1] = nums[j+1], nums[j] 
    return nums"
Write an algorithm in Python to merge two sorted lists.,"list_1 = [3, 5, 7, 11]
list_2 = [2, 4, 6, 8]","def merge_list(list_1, list_2):
  merged_list =[]
  while list_1 and list_2:
    if list_1[0] < list_2[0]:
      merged_list.append(list_1.pop(0))
    else:
      merged_list.append(list_2.pop(0))
  merged_list.extend(list_1 if list_1 else list_2)
  return merged_list"
Write a Python program to evaluate a mathematical expression given as string.,"""2 + 3 * 5""","expression = ""2 + 3 * 5""
result = eval(expression)
print(result)"
Compose a piece of code to print the length of a given string.,"""Python""","string = ""Python""
print(""Length of the given string is:"", len(string))"
"Create a command line tool in Python that takes input from the user and prints a message. The message should be ""You entered <input>.""",hello,"import sys

def main():
 args = sys.argv[1:]

 if args and len(args) == 1:
 print('You entered {}.'.format(args[0]))
 else:
 print('Please provide a single argument.')

if __name__ == ""__main__"":
 main()"
Create a Python function to find the maximum number from a list of non-negative integers.,"list = [1, 3, 12, 5, 8, 10]","def find_max(list): 
  max_num = 0
  for i in list: 
    if i > max_num: 
      max_num = i
  
  return max_num

list = [1, 3, 12, 5, 8, 10]
max_num = find_max(list)
print(""Maximum number is:"", max_num)"
Create a program in Python which can classify whether an animal is a bird or a mammal.,"classify(""hummingbird"")","def classify(animal):
    if animal == ""hummingbird"":
        return ""Bird"" 
    else:
        return ""Mammal"""
Generate a Python script that takes a number and calculates its factorial.,4,"def factorial(n): 
    fact = 1
    for i in range(1,n+1): 
        fact *= i
    return fact
  
num = 4
print(""Factorial of"",num,""is"",factorial(num))"
Create a Python program to convert a given date string to a datetime object and return the week number.,"""2020-05-18""","import datetime
def get_week_number(date_string):
    d = datetime.datetime.strptime(date_string, '%Y-%m-%d')
    return d.isocalendar()[1]  # isocalendar() is used to get the ISO week number"
Compress the following string using the gzip library in Python.,"String: ""This is a sample string to compress.""","import gzip

string = ""This is a sample string to compress.""
compressed_string = gzip.compress(string.encode('utf-8'))
print(compressed_string)"
Construct a program in Python that computes the sum of 3rd and 7th elements of a list.,"list = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]","def sum_elements(list):
    Sum = list[2] + list[6]
    return Sum
print(sum_elements(list))"
Create a Python program that takes a list of words given by the user and prints out a sentence constructed from these words.,"words = ['The', 'quick', 'brown', 'fox']","words = ['The', 'quick', 'brown', 'fox']

sentence = "" "".join(words)
print(sentence)
# Output: The quick brown fox"
Write a python program to calculate the discount rate based on a given purchase price and discount amount.,"The purchase price is $100, the discount amount is $10.","discount_rate = 10/100
discount = purchase_price * discount_rate

purchase_price = 100
discount_rate = 10/100
discount = purchase_price * discount_rate

print(""The discount is: ${}"".format(discount))"
"Using the list and additional libraries, write a python program to calculate the sum of all elements in the list.","list = [2, 3, 5, 8, 9]","#Importing the libraries
import numpy as np

#Defining the list
list = [2, 3, 5, 8, 9]

#Calculating the sum
sum = np.sum(list)

#Printing the result
print(sum)"
Write a Python program to format a given string with a desired length.,"string = ""GPT-3""
length = 10","def format_string(string, length):
  format_string = string.ljust(length)
  return format_string

string = ""GPT-3""
length = 10
result = format_string(string, length)
print(result)  # -> GPT-3    (9 spaces added after GPT-3)"
Create a function in Python to find the maximum and minimum of a list of numbers.,"[4, 8, 15, 16, 23, 42]","def find_max_min(numbers):
    max_num = float(""-inf"")
    min_num = float(""inf"")
    for num in numbers:
        if num > max_num:
            max_num = num
        elif num < min_num:
            min_num = num
    return (max_num, min_num)"
Construct a Python program to calculate the age in years of a person given their birthdate.,06-11-96,"import datetime

def calculate_age(birthdate):

    today = datetime.date.today()
    current_year = today.year

    age = current_year - birthdate.year

    if ((birthdate.month, birthdate.day) > (today.month, today.day)):
        age -= 1
    
    return age

birthdate = datetime.date(1996, 6, 11)
age = calculate_age(birthdate)
print(age) # 24"
Write a Python program that prints the time in a given timezone.,"timezone: ""UTC+11:00""","from datetime import datetime
import pytz

def print_time(tz):
  timezone = pytz.timezone(tz)
  print(datetime.now(timezone).strftime(""%H:%M:%S""))

print_time(""UTC+11:00"")"
Create a Python program to sort an array of strings alphabetically.,"arr_of_strings = [""cat"", ""elephant"", ""dog"", ""bird""]","def alphabetical_sort(arr):
 arr.sort()
 return arr

arrOfStrings = [""cat"", ""elephant"", ""dog"", ""bird""]
sorted_arr = alphabetical_sort(arrOfStrings)
print(sorted_arr)  # Output: [""bird"", ""cat"", ""dog"", ""elephant""]"
Write a function in Python to print the top n elements of an array.,"[2, 3, 4, 5, 1], top_n = 3","def max_n_elements(arr, n):
    res = []
    for i in range(n):
        max_val = max(arr)
        res.append(max_val)
        arr.remove(max_val)
        
    return res
    
arr = [2, 3, 4, 5, 1] 
top_n = 3
print(max_n_elements(arr, top_n))"
Write a Python program to generate a random password with length x.,x = 8,"import string
import random

def generate_password(length):
    characters = string.ascii_letters + string.digits
    password = """"
    for i in range(length):
        password += random.choice(characters)
    return password

result = generate_password(8)
print(result)"
Design a function in Python to classify all the numbers in a list as even or odd.,"my_list = [1,2,3,4,5]","def classify_odd_even(nums):
    output = []
    for n in nums:
        if n%2 == 0:
            output.append('even')
        else:
            output.append('odd')
    return output

if __name__ == '__main__':
    print(classify_odd_even(my_list))"
"Given a Python script,rewrite it in Java.","def add(x, y):
    z = x + y
    return z","public int add(int x, int y) {
    int z = x + y;
    return z;
}"
Debug the following Python program to print the given output.,"a = [3,4,6,2,1]
for x in a:
 print(x)
Expected Output:
1
2
3
4
6","a = [3,4,6,2,1]
for x in a:
 print(x)
a.sort() 
for x in a:
 print(x) 

Output:
1
2
3
4
6"
Write a python program to compute the Gini index for a given data set.,"[10, 3, 5, 7]","def gini_index(data):
    data_set_size = len(data)
    data_sum = sum(data)

    gini = 0.0
    for val in data:
        gini += (val/data_sum)**2
    
    return 1 - gini

print(gini_index([10, 3, 5, 7]))"
Generate a Python function which takes two strings as arguments and returns the number of letters they have in common.,"String 1: apple
String 2: orange","def number_of_common_letters(s1, s2):
    common_letters = 0
    for c in s1:
        if c in s2:
            common_letters += 1
    return common_letters"
Optimize a Python program to reverse an array in place.,"[1, 2, 3, 4]","def reverse_in_place(arr):
    low = 0
    high = len(arr) - 1
    while low < high:
        arr[low], arr[high] = arr[high], arr[low]
        low += 1
        high -= 1
    return arr

arr = [1, 2, 3, 4]
print(reverse_in_place(arr))"
"Using the given data, write a Python function to calculate the median of the numbers.","data = [2, 5, 8, 11, 14, 17, 20]","def calculate_median(data):
    data.sort()
    if len(data) % 2 == 0:
        first_num = data[int(len(data) / 2) - 1]
        second_num = data[int(len(data) / 2)]
        median = (first_num + second_num) / 2
    else:
        median = data[int((len(data) - 1) / 2)]
    return median

result = calculate_median(data)
print(result)"
Generate an algorithm in Python to return the common elements in two unsorted arrays.,"A = [2, 3, 5, 7, 8]
B = [3, 5, 7, 9, 10]","def commonElements(A, B):
    commonElements = []
    for i in A: 
        if i in B and i not in commonElements:
            commonElements.append(i) 
    return commonElements

A = [2, 3, 5, 7, 8]
B = [3, 5, 7, 9, 10]
print(commonElements(A, B))
# Output: [3, 5, 7]"
Generate a program in Python to convert all characters of a string in lowercase.,"String = ""HELLO""","def to_lower(string):
    return string.lower()"
Build a Python script for deleting all characters from a string,"string = ""Hello world!""","newString = string.replace("""", """")
print(newString)"
Convert the following code from python 2.x to python 3.x.,"import csv
csvReader = csv.reader(open(""filename.csv"", ""rb""))","import csv

with open(""filename.csv"", 'r', newline='') as f:
    csvReader = csv.reader(f)"
Create a Python program to identify words of length k in a given string.,"String: ""This is a program to identify words of length 3""

Length: 3","def find_words_of_length_k(sentence, k):
    words = sentence.split(' ')
    words_of_length_k = []
    for word in words:
        if len(word) == k:
            words_of_length_k.append(word)
    return words_of_length_k

sentence = ""This is a program to identify words of length 3""
k = 3
print(find_words_of_length_k(sentence, k))"
Write a Python program to set the difference between two sets.,"Set1 = {1, 2, 3, 4, 5}
Set2 = {3, 4, 5, 6, 7}","def set_difference(Set1, Set2):
    return set(Set1) - set(Set2)

result = set_difference({1, 2, 3, 4, 5}, {3, 4, 5, 6, 7})
print(result)"
Create a Python program to find and print all pairs of numbers from a given array of integers whose sum is equal to a given number.,"[3, 4, 2, 8, 5, 6], the number should be 10","array = [3, 4, 2, 8, 5, 6]
sum = 10

def find_pair(array,sum):
 for i in range (len(array)-1):
  for j in range (i+1, len(array)):
   if array[i] + array[j] == sum:
    print(""Pair found:"",array[i], array[j])

find_pair(array,sum)"
Evaluate the following Python code and suggest how to improve it.,"def cumulative_sum(numbers):
  result = 0
  for number in numbers:
    result += number
  return result","def cumulative_sum(numbers):
  result = 0
  for number in numbers:
    result += number
  return result
  
# Improvements:
# Calculate the sum using a list comprehension to increase readability
result = sum([number for number in numbers])
return result"
Arrange the given Python code in the correct order so that it prints the square of the numbers from 0 to 10.,"print(n)
for n in range(11)
n = n * n","for n in range(11):
 n = n * n
 print(n)"
Implement a Python function that will take a dictionary as the argument and return a new dictionary with the key and its value reversed.,"{""a"":1, ""b"":2, ""c"":3}","def reverse_dict(d):
 new_dict = {}
 for key, value in d.items():
 new_dict[value] = key
 return new_dict

d = {'a':1, 'b':2, 'c':3}
print(reverse_dict(d))
# {1:'a', 2:'b', 3:'c'}"
Convert a given Python program to a C# program.,"def power(x, y):
    if y == 0:
        return 1
    else:
        return x * power(x, y - 1)","public int Power(int x, int y)
{
    if (y == 0)
    {
        return 1;
    }
    else
    {
        return x * Power(x, y - 1);
    }
}"
"Implement a function in Python that takes a 2D Numpy array and returns a dictionary whose keys are the unique values in the array, and the values are the number of occurrences for each of the unique values.","arr = [[1,2,3],
       [2,3,4],
       [2,1,3]]","import numpy as np

def count_occurrences(arr):
    result = {}
    for value in np.unique(arr):
        result[value] = np.sum(arr == value)
    return result

arr = [[1,2,3], [2,3,4], [2,1,3]]
print(count_occurrences(arr))"
Generate a Python code to multiply all the items of a given list.,"[2, 3, 4]","product = 1
for value in [2, 3, 4]:
 product *= value
print(product)"
Develop a python function to locate a specific element in an array,"[6, 2, 4, 8], 8","def find_element(arr, target): 
    for i in range(len(arr)): 
        if arr[i] == target: 
            return i 
    return -1"
Write a function in Python for encrypting a given string with a given key.,"Key: ""mykey123""
String: ""My secret message""","import base64
from Crypto.Cipher import AES

def encrypt(key, message):
 cipher = AES.new(key.encode(), AES.MODE_ECB)
 padded_msg = message.encode() + ((16 - len(message) % 16) * '{'.encode())
 encrypted = cipher.encrypt(padded_msg)
 encoded = base64.b64encode(encrypted)
 return encoded.decode()

encrypt('mykey123', 'My secret message')"
"Write a Python function that takes two integers, n and base, as parameters and returns a string representation of the base-n number.","n: 3, base: 4","def base_n(n, base):
    result = """"
    while n != 0:
        result += str(n % base)
        n //= base
    return result[::-1]  # Reverse the string"
Write a function in Python that takes in two strings and returns true if both strings have the same letter counts.,"'abc', 'cba'","def isPermutation(s1, s2):
 s1_dict = {}
 s2_dict = {}
 for c in s1:
  if c in s1_dict:
   s1_dict[c] += 1
  else:
   s1_dict[c] = 1
 for c in s2:
  if c in s2_dict:
   s2_dict[c] += 1
  else:
   s2_dict[c] = 1
 
 return s1_dict == s2_dict"
Write a function in Python Web scripting to update the value of a given list.,"my_list = [1,2,3]
new_value = 5","def update_list(my_list, new_value):
    my_list[-1] = new_value
    return my_list

my_list = [1,2,3]
new_value = 5

updated_list = update_list(my_list, new_value)
print(updated_list)"
Edit the existing Python code to output two separate lines.,"print(""Hello World"")","print(""Hello"")
print(""World"")"
Create a Python script to check if a given word or phrase is a palindrome.,madam,"def is_palindrome(word):
    word_list = list(word)
    if word_list == word_list[::-1]:
        return True
    else:
        return False

result = is_palindrome('madam')
print(result)"
"Write a function in Python that takes two lists of strings as input, and returns a list of all strings that are common to both lists.","list_1 = ['John', 'Paul', 'George', 'Ringo']
list_2 = ['Ringo', 'George', 'Pete', 'John']","def common_words(list_1, list_2):
 result = [word for word in list_1 if word in list_2]

 return result

# sample usage
common_words(list_1, list_2) # would return ['John', 'George', 'Ringo']"
Suggest a completion for the following python funtion which calculates the sum of two numbers.,"def sum_of_nums(num1, num2):","def sum_of_nums(num1, num2):
    return num1 + num2

example_sum = sum_of_nums(2, 3)
print(""Sum of two numbers is:"", example_sum)"
Write a Python program to count the number of elements which are greater than the given number?,"list1 = [1, 2, 3, 4, 5], number = 3","list1 = [1, 2, 3, 4, 5] 
number = 3

#initialize a count
count = 0

#iterate through the list and count the elements that are greater than the given number
for num in list1:
    if num > number:
        count += 1

print(""Number of elements greater than the given number:"", count)"
Design a Python program to return the largest and smallest elements from a given list.,"[7, 9, 5, 4, 8, 1]","def largest_smallest(array):
    smallest = array[0]
    largest = array[0]

    for element in array:
        if element > largest:
            largest = element
        elif element < smallest: 
            smallest = element

    return (smallest, largest)

largest_smallest([7, 9, 5, 4, 8, 1]) => (1, 9)"
Write a Python code snippet to print Hello multipe times as per a given number.,number = 10,"for i in range(number):
    print(""Hello"")"
Generate a python code to create a list containing tuples of two elements each.,Number of tuples: 5,"my_list = [(x, y) for x in range(5) for y in range(5)]
print(my_list)"
Design an algorithm in Python to print out binary numbers between 1 and N.,3,"def print_binary(n):
 if n == 0:
  return
 
 print_binary(n-1)
 print(bin(n))
 
print_binary(3)
 
# Output: 
# 0b1
# 0b10
# 0b11"
Use the provided data set to generate a bar chart in Python.,"x-axis values: 1, 2, 3, 4
y-axis values: 10, 12, 7, 5","import matplotlib.pyplot as plt

x_values = [1, 2, 3, 4]
y_values = [10, 12, 7, 5]

plt.bar(x_values, y_values)
plt.title('Bar Chart')
plt.xlabel('X-axis')
plt.ylabel('Y-axis')
plt.show()"
Develop a Python program to filter out duplicate words in a given string.,This is a test string with some duplicate words.,"def filter_duplicate_words(original_string):
  words = original_string.split("" "")
  filtered_words = []
  for word in words:
    if word not in filtered_words:
      filtered_words.append(word)
  return ' '.join(filtered_words)"
Create a Python program to parse a list of strings and print the words with odd length.,"['abc', 'hello', 'world']","list = ['abc', 'hello', 'world']

for word in list:
    if (len(word) % 2 != 0):
        print(word)"
"Create a function in Python that takes an array of integers as input, checks if the array is sorted,  and, if not, sorts it.","[3, 1, 4, 2, 5]","def is_sorted(arr):
  sorted_arr = sorted(arr)
  if arr == sorted_arr:
    return True
  else:
    arr.sort()
    return arr"
Write a function in Python to find the top k words in a given document.,"""This is a document it contains some words and a lot of phrases.""

k = 2","from collections import Counter    

def topKWords(doc, k):
    words = doc.split()
    counts = Counter(words).most_common(k)
    return [word for word,_ in counts]

doc = ""This is a document it contains some words and a lot of phrases.""
k = 2
print(topKWords(doc, k))"
Create a base-2 binary addition calculator in Python.,"A: 010
B: 101","def binary_addition(a, b):
    a_bin = bin(int(a,2))[2:]
    b_bin = bin(int(b,2))[2:]
    c_bin = bin(int(a_bin, 2) + int(b_bin, 2))[2:]
    c = c_bin.zfill(max(len(a), len(b)))
    return c

result = binary_addition('010', '101')
print(result)"
Write a Python program to filter out values from a given list based on a certain condition.,"[7, 6, 5, 4, 3], condition: x > 5","def filter_values(lst, condition):
    filtered_list = []
    for x in lst:
        if eval(condition):
            filtered_list.append(x)
    return filtered_list"
Design a Python class to hold a given array of objects.,"[1, 2, 3, 4, 5]","class ArrayContainer:
  def __init__(self, arr):
    self.arr = arr

  def get_array(self):
    return self.arr"
Compose Python code to remove all elements from a list by value.,"mylist = [1,2,3,4,2]","def remove_by_val(mylist, val):
     return [i for i in mylist if i != val]

mylist = [1,2,3,4,2]
result = remove_by_val(mylist, 2)
print(""Updated list after removing elements are: "", result)"
Write a Python method that takes a string and returns its reverse.,text = 'hello',"def reverse(text):
 return text[::-1]"
Write a Python program to access an item of a list.,"list1 = [1, 2, 3, 4, 5]
item_index = 3","list1 = [1, 2, 3, 4, 5]
item_index = 3

def access_list_item(my_list, index):
    return my_list[index]

result = access_list_item(list1, item_index)
print(result)"
Generate code to print each element of a list of strings in Python.,"[""apple"", ""banana"", ""cherry""]","for item in [""apple"", ""banana"", ""cherry""]:
    print(item)"
Design an algorithm in Python that takes a list of strings and returns the list of strings in decreasing order of length.,"[""Hello"", ""World"", ""This"", ""is"", ""a"", ""test""]","def order_by_length(input_list):
  return sorted(input_list, key=len, reverse=True)
  
input_list = [""Hello"", ""World"", ""This"", ""is"", ""a"", ""test""]
print(order_by_length(input_list))"
Rewrite this Java program in Python3.,"public class HelloWorld {
    public static void main(String args[]) {
        System.out.println(""Hello, World!"");
    }
}","print(""Hello, World!"")"
"Using Python, create a sentence out of all the words entered in an array.","[""hello"", ""world"", ""!""]","sentence = "" "".join([""hello"", ""world"", ""!""])
print(sentence)"
Write a Python program to calculate the mean and standard deviation of an array of numbers.,"[2,3,4,5,7]","mean = 4.4
std = 1.6

import numpy as np

arr = np.array([2, 3, 4, 5, 7])

mean = np.mean(arr)
std = np.std(arr)

print('mean =', mean)
print('std =', std)"
Write a function in Python to check if an element is present in an array.,"arr = [1, 2, 3, 5, 7]
element = 4","arr = [1, 2, 3, 5, 7]
element = 4

def contains(arr, element):
  for e in arr:
    if e == element:
      return True
  return False

result = contains(arr, element)
print(result)"
Optimize a Python program to copy and append an array of integers.,"[2, 4, 6]","def array_copy(arr):
    return arr[:]

def array_append(arr, value):
    arr.append(value)

arr = [2, 4, 6]
arr_copy = array_copy(arr)
array_append(arr_copy, 8)

print(arr_copy)"
Write a Python program to organize the words of a sentence into alphabetical order.,"""Hello to the world of programming""","sorted_words = sorted(input_string.split(), key=str.lower)

print('Sorted words are:')

for word in sorted_words:
 print(word)"
Create a Pie Chart in Python with the following data,"Item	Frequency
Pen	4
Pencil	9
Eraser	3","import matplotlib.pyplot as plt

items = ['Pen', 'Pencil', 'Eraser']
frequencies = [4, 9, 3]

plt.pie(frequencies, labels=items, autopct='%1.1f%%', shadow=True, startangle=90)
plt.axis('equal')
plt.show()"
Edit the following python function so that it prints its parameters in reversed order.,"def print_params(a, b):
  print(a + ' ' + b)","def print_params(a, b):
  print(b + ' ' + a)"
Re-write the following Java program in Python.,"public class HelloWorld {
public static void main(String[] args) {
 System.out.println(""Hello World"");
 }
}","def main():
 print(""Hello World"")
 
if __name__ == ""__main__"":
 main()"
Implement an algorithm in Python to check for palindromes.,noon,"def isPalindrome(text):
    n = len(text)
    for i in range(n // 2):
        if text[i] != text[n - i - 1]:
            return False
    return True

print(isPalindrome('noon'))"
Write a Python program to generate a Python Class using the given description.,"description = ""This class should store the name, age, and height of a person.""","class Person:
 def __init__(self, name, age, height):
 self.name = name
 self.age = age
 self.height = height
 
 def get_name(self):
 return self.name
 
 def get_age(self):
 return self.age
 
 def get_height(self):
return self.height"
Edit the following Python program to accept a list of numbers as input and find the second largest number from the list.,"[12, 23, 45, 22, 50]","# Find the second largest number from a given list

numbers = [12, 23, 45, 22, 50]

# Sort the list in ascending order
numbers.sort()

# Get the second largest number
second_largest_num = numbers[-2]

print('The second largest number in the list is:', second_largest_num)"
Write a Python program to parse a JSON string and extract a specific key-value pair.,"{
 ""key"": ""value1"",
 ""anotherKey"": ""value2"",
 ""somekey"": ""somevalue""
}","import json
 
myJSON = '{""key"": ""value1"", 
           ""anotherKey"": ""value2"", 
           ""somekey"": ""somevalue""}'
 
# parse json
parsedJSON = json.loads(myJSON)
 
# access data
key = parsedJSON['key']
value = parsedJSON['value']
 
# print key and value
print(""key: "" + key)
print(""value: "" + value)"
Create a function in Python that takes a string and returns a new string with the characters in reverse order.,"""Hello World!""","def reverse_string(input_str):
    reversed_str = """"
    for i in range(len(input_str)-1,-1,-1):
        reversed_str += input_str[i]
    return reversed_str

print (reverse_string(""Hello World!""))"
Optimize a given code in Python for higher efficiency.,"def power(base, exponent):
    answer = 1
    for _ in range(exponent):
        answer *= base
    return answer","def power(base, exponent):
    answer = 1
    while exponent > 0:
        if exponent & 1:
            answer *= base
        base *= base
        exponent >>= 1
    return answer"
Write a Python program which will take a list of score of five students and compute the average score for the five students.,"[85, 70, 72, 90, 75]","def compute_average(score_list):
    return sum(score_list)//len(score_list)"
"Write a Python program that categorizes a product as ""red"", ""green"" or ""blue"".","red: tomatoes
green: apples
blue: chocolates","def product_category(product):
 products = {""tomatoes"": ""red"",
 ""apples"": ""green"",
 ""chocolates"": ""blue""}
 
 if product in products:
 return products[product]
 else:
 return ""Invalid product"""
Optimize the following Python code,"def sum_of_list(list):
sum=0
for x in list:
sum=sum+x
return sum","def sum_of_list(list):
    return sum(list)"
Write a python program to calculate the average of a list of numbers.,"[1, 2, 3, 4, 5]","def calculate_average(numbers):
    total = sum(numbers)
    length = len(numbers)
    return total / length

numbers = [1, 2, 3, 4, 5]
average = calculate_average(numbers)
print(average)"
Write a Python program that takes a text string as input and returns the number of words in it.,text = 'This is a sample string.',"def count_words(text):
    words = text.split()
    return len(words)"
Can you create a program in Python that will return the nth Fibonacci number?,n = 8,"def fib(n):
    if n == 0 or n == 1:
        return 1
    else:
        return fib(n-1) + fib(n-2)

n = 8
print(fib(n))"
"Create a function in Python that takes a string and a dictionary, and returns a list of all the words in the string that match keys in the dictionary.","string = 'This is a string'
dictionary = {'This': 'that', 'is': 'not'}","def get_words(string, dict):
  words = string.split()
  
  output = []
  for word in words:
    if word in dict:
      output.append(dict[word])

  return output

output = get_words(string, dictionary)
print(output) # ['that', 'not']"
Generate a Python function that will accept an array of integers and remove duplicates from the array.,"[1, 2, 3, 3, 4, 4, 5, 5]","def remove_duplicates(arr):
 new_arr = [] 
 for num in arr: 
 if num not in new_arr:
 new_arr.append(num) 
 return new_arr"
Create a Python script to generate a dictionary that includes numerical data from a given list.,"list1 = [1, 2, 3, 4, 5]","def generate_dict(list1):
    my_dict = {}
    for item in list1:
        my_dict[item] = item ** 2
    return my_dict"
Implement an algorithm to find the second smallest element in an array of integers using Python.,"arr = [1, 5, 3, 0, -1]","def secondSmallest(arr):
    m1, m2 = float('inf'), float('inf')
    for x in arr:
        if x <= m1:
            m1, m2 = x, m1
        elif x < m2:
            m2 = x
    return m2

arr = [1, 5, 3, 0, -1]
print(secondSmallest(arr)) # Outputs 0"
Generate all the permutations of a string using Python.,"str = ""abc""","def permutations(str):
	if len(str) <= 1:
		return [str]

	perms = [] 
	for i in range(len(str)):
		rest_strings = str[:i] + str[i+1:]
		for perm in permutations(rest_strings):
			perms.append(str[i:i+1] + perm)
	
	return perms

str = ""abc""
perms = permutations(str)
print(perms) # ['abc', 'acb', 'bac', 'bca', 'cab', 'cba']"
Develop an algorithm in Python for generating the nth Fibonacci number.,N: 5,"def fibonacci(n):
 # base case
 if n == 1:
  return 0
 elif n == 2:
  return 1
 # recursive case
 else:
  return fibonacci(n-1) + fibonacci(n-2)

# testing
print(fibonacci(5)) # Output: 3"
"Given a list of integers, write a program in Python to determine which is the maximum number.","[19,7,32,1,8,27]","# take a list 
list = [19,7,32,1,8,27] 
  
# initializinf max_val to INT_MIN so that 
# any int number would be greater that it 
max_val = float(""-inf"") 
  
# traversing through the list 
for item in list: 
    if item > max_val: 
        max_val = item 
  
# printing the maximum value 
print(""The maximum value of the list is:"", max_val)"
Write a Python program to remove all instances of a word from a given sentence.,"sentence = ""This is a sentence with some words to be removed.""
 word = ""removed""","def remove_word(sentence, word):
 new_sentence = []
 words = sentence.split()
 for w in words:
 if w != word:
 new_sentence.append(w)
 return "" "".join(new_sentence)"
Generate a Python script for searching for a pattern in a given text.,"Text: ""The cat jumped over the fence""
Pattern: ""cat""","import re
text = ""The cat jumped over the fence""
pattern = ""cat""
match = re.search(pattern, text)
if match:
    print(""Pattern found!"")"
You are asked to write a Python program that computes the mean of a list of numbers.,"[1, 3, 5, 8, 10]","def mean(nums):
    total = 0
    for num in nums:
        total += num
    return total / len(nums)

mean([1, 3, 5, 8, 10])  # 6.0"
Optimize the following Python code for calculating the Fibonacci numbers up to n.,"def fibonacci(n):
 if n <= 1:
 return n
 return fibonacci(n-1) + fibonacci(n-2)","def fibonacci(n):
 # Initialize a memoization dictionary
 memo = {
 0: 0,
 1: 1
 }
 
 # If n is in the memoization dictionary, return the value
 if n in memo:
 return memo[n]
 
 # Calculate the Fibonacci number
 if n > 1:
 memo[n] = fibonacci(n-1) + fibonacci(n-2)
 
 return memo[n]

print(fibonacci(10))"
Rewrite a given function in Python to return the sum of the two parameters instead of multiplying them.,"def multiply(a, b):
  return a * b","def multiply(a, b):
  return a + b"
Write a Python program to find all the words with a length equal to 5 in a sentence and replace them with a placeholder.,"The sentence is ""The quick brown fox jumped over the lazy dog""","sentence = 'The quick brown fox jumped over the lazy dog'
words = sentence.split()

for i in range(len(words)):
 if len(words[i]) == 5:
 words[i] = '_____'

modified_sentence = ' '.join(words)
print(modified_sentence)
# Output: The _____ brown _____ jumped over the _____ _____"
Generate a random number between given two numbers.,"min = 10
max = 20","We can generate a random number between two numbers using the random.randint() function in Python. We can call the function like this: random.randint(min, max)."
A number is said to be abundant if its proper divisors sum to more than the number itself. Create a python program to identify if a given number is abundant or not.,21,"def is_abundant(num):
    divisor_sum = 0
    for i in range(1, int(num/2)+1):
        if num % i == 0:
            divisor_sum += i

    return divisor_sum > num

num = 21

if is_abundant(num):
    print(f""{num} is abundant"")
else:
    print(f""{num} is not abundant"")"
Write a Python program to combine two dictionaries into one.,"dict1 = {'a': 1, 'b': 2}
dict2 = {'c': 3, 'd': 4}","dict1 = {'a': 1, 'b': 2}
dict2 = {'c': 3, 'd': 4}

# Create a new dictionary
new_dict = {}

# Add each key-value pair from dict1
for key, value in dict1.items():
    new_dict[key] = value

# Add each key-value pair from dict2
for key, value in dict2.items():
    new_dict[key] = value

print(new_dict)

# Output: {'a': 1, 'b': 2, 'c': 3, 'd': 4}"
Design a program in Python to detect the vowel in a given string.,Hello World,"def vowelCheck(inputString): 
    vowels = ['a','e','i','o','u','A','E','I','O','U'] 
    for x in inputString: 
        if x in vowels: 
            return x"
Classify a piece of code into an appropriate language.,"def f(x):
    return x * x",Python
Create a Python program to read in 15 integers and print the sum of them.,"[1, 5, 9, 0, 2, 4, 7, 8, 6, 10, 3, 11, 12, 13, 14]","def sum_nums(nums):
    total = 0
    for num in nums:
        total += num
    return total

lst = [1, 5, 9, 0, 2, 4, 7, 8, 6, 10, 3, 11, 12, 13, 14]
total = sum_nums(lst)
print(total)"
Write a Python code to compute the average of all numbers in a list.,"numbers = [2, 8, 4, 3]","def average(numbers):
    total = 0
    for num in numbers:
        total += num
    return total / len(numbers)"
Write a Python function to access a given key from a given dictionary.,"d = {'x': 3, 'y': 4, 'z': 5}","def access_key(key, dictionary): 
    if key not in dictionary: 
        return -1
    return dictionary[key]"
Create an if-else statement to check if a number is a multiple of 3 in Python.,num=12,"if num % 3 == 0: 
    print(""Number is multiple of 3"")
else: 
    print(""Number is not a multiple of 3"")"
Compile a Python program to retrieve the nth Fibonacci number in the series.,5,"def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    elif n==1: 
        return 0
    elif n==2: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2) 
  
num = 5
print(Fibonacci(num))"
Create a web scraper program in Python that can scrape a given website.,"The website to be scraped is ""https://www.example.com/"".","import requests
from bs4 import BeautifulSoup

url = 'https://www.example.com/'
response = requests.get(url)
soup = BeautifulSoup(response.text, 'html.parser')

# scrape the website using soup"
Develop an algorithm in Python to find all the prime numbers from a given list.,"[12, 23, 7, 8, 10, 15]","def isPrime(num):
    if num < 2:
        return False
    for i in range(2,num):
        if num % i == 0:
            return False
    return True

num_list = [12, 23, 7, 8, 10, 15]

prime_numbers = []
for n in num_list:
    if isPrime(n):
        prime_numbers.append(n)

print(prime_numbers) #[23, 7]"
Write a Python program to replace all occurrences of a character in a string with the provided replacement character.,"str = ""Hello World!""

replacement = ‘X'","def replace_all_occurrences(str, char, replacement):
  return str.replace(char, replacement)

print(replace_all_occurrences(""Hello World!"", 'l', 'X'))"
Create a Python program to visualize Pandas DataFrame.,"df = pandas.DataFrame({
    'Name': ['Alice', 'Bob', 'Carol', 'Dave'],
    'Age': [18, 25, 35, 45]
})","import matplotlib.pyplot as plt
import pandas as pd

df = pd.DataFrame({
    'Name': ['Alice', 'Bob', 'Carol', 'Dave'],
    'Age': [18, 25, 35, 45]
})

ax = df.plot.bar(x='Name', y='Age', rot=0)

plt.show()"
Rewrite this Python code to modernize it and make it more efficient.,"def removeNegatives(nums):
  result = []
  for n in nums:
    if n >= 0:
      result.append(n)
  return result","def removeNegatives(nums):
    return [n for n in nums if n >= 0]"
"Using the provided data, generate a decision tree classifier in Python.","X = np.array([[0, 0], [1, 1], [1, 0], [0, 1]])
Y = np.array([0, 0, 1, 1])","from sklearn.tree import DecisionTreeClassifier

# Create and train a Decision Tree classifier
clf = DecisionTreeClassifier().fit(X, y)

# Make predictions
predictions = clf.predict(X)

# Print the predictions
print(predictions)"
Transform the following algorithm into a functional programming style in Python.,"def add_number(x,y):
    total = 0
    for i in range(x,y):
        total += i
    return total","def add_number(x, y):
    return sum(range(x, y))"
Develop a Python script to encode and decode a string using Base64.,"""Hello""","import base64

def encode(s):
    encoded = base64.b64encode(s.encode('utf-8'))
    return encoded.decode('utf-8')

def decode(s):
    decoded = base64.b64decode(s.encode('utf-8'))
    return decoded.decode('utf-8')"
Create a python script that filters out all negative numbers from the given matrix,"[[-1, 2, -3], [-4, 5, 6], [-7, 8, 9]]","import numpy as np

def filter_out_negative(matrix):
  # Convert matrix to numpy array
  matrix = np.array(matrix)
  # Find all negative numbers and set them to 0
  matrix[matrix < 0] = 0
  return matrix

result = filter_out_negative([[-1, 2, -3], [-4, 5, 6], [-7, 8, 9]])
print(result)"
Design a function in Python to convert a Celsius temperature to a Fahrenheit temperature.,32,"def convert_celsius_to_fahrenheit(celsius):
    fahrenheit = celsius * 9/5 + 32
    return fahrenheit

celsius = 32
fahrenheit = convert_celsius_to_fahrenheit(celsius)
print('{} degree Celsius is {} degree Fahrenheit.'.format(celsius, fahrenheit))"
Implement a solution in Python that finds the number of strings from the given set whose sum of ASCII values is divisible by 3,"{""wonder"",""woman"",""man""}","def count_strings_by_sum_of_ascii(strings):
    count = 0
    for string in strings:
        ascii_sum = 0
        for char in string:
            ascii_sum += ord(char)
        if ascii_sum % 3 == 0:
            count += 1
    return count"
Re-write a given Python code snippet using list comprehensions.,"squares = []
for n in range(10):
    squares.append(n**2)",squares = [n**2 for n in range(10)]
Translate the following pseudocode into Python code.,"i = 0
while i < 10
    print i
    i = i + 1","i = 0
while i < 10:
    print(i)
    i += 1"
Write a Python program to parse a string of JSON data and display each entry on the command line.,"{""name"": ""John"", ""age"": 30, ""city"": ""New York""}","import json

data = '{""name"": ""John"", ""age"": 30, ""city"": ""New York""}'

data_dict = json.loads(data)

for key, value in data_dict.items():
    print(f'{key}: {value}')"
"Write a Python program that takes a number n and generates a dictionary that contains (i, i*i) such that n is greater than or equal to i >= 1 and",n = 8,"def generate_dict(n):
    d = {}
    for i in range(1, n+1):
       d[i] = i*i
    return d"
Create a python program to remove characters from a string that's not a letter or symbol.,"string = ""ABC%@#XYZ""","string = ""ABC%@#XYZ""
new_string = ''.join(c for c in string if c.isalnum())
print(new_string) # output: ABCXYZ"
"Given a string, write a Python function to lowercase all vowels.",String = 'Hello World',"def lower_vowels(str):
 vowels = ""aeiouAEIOU""
 new_str = """"
 
 for c in str:
  if c in vowels: 
   new_str += c.lower()
  else:
   new_str += c
 return new_str"
Write a python statement to print out the elements of the given list.,"my_list = [1, 2, 3]",print(my_list)
Modify the below Python code to print the type of a given input.,input_value = 4,"input_value = 4

print(type(input_value))"
Create a python program for checking whether a number is a palindrome or not.,12321,"def is_palindrome(num):
  rev = 0
  tmp = num
  
  while tmp > 0:
    rev = rev * 10
    rev = rev + (tmp % 10)
    tmp = tmp // 10

  return num == rev
  
num = 12321
if (is_palindrome(num)):
  print(""Number is a palindrome"")
else:
  print(""Number is not a palindrome"")"
"Given the following array of numbers, write a Python program to find the maximum element.","numbers = [1, 43, 78, 3, 92, 42]","#import max from the built-in library
from max import max

#initialize array of numbers
numbers = [1, 43, 78, 3, 92, 42]

#find maximum element
print(max(numbers))

#output
92"
Design a sorting algorithm in Python that uses two lists.,"list1 = [3, 2, 5, 4, 1]
list2 = [0, 1, 1, 0, 1]","def sort_two_lists(list1, list2):
    """"""Function to sort two lists by the order of list2""""""
    zipped_lists = zip(list1, list2)
    zipped_lists = sorted(zipped_lists, key=lambda x: x[1])
    sorted_list1, sorted_list2 = zip(*zipped_lists)
    return list(sorted_list1), list(sorted_list2)"
"In Python, define a function that takes two arguments and returns the maximum of the two.","6, 8","def max_value(a, b):
    # Return the maximum of two numbers
    if a > b:
        return a
    else:
        return b

# Example usage
a = 6
b = 8
print(max_value(a, b)) # 8"
Create a python code to format a given string as an email,"""John Doe jdoe@example.com""","""""""
This code formats a given string to an email address
""""""

def format_string(s):
    s = s.split("" "")
    name = s[0] + "" "" + s[1]
    email = s[2]
    return name + "" <"" + email + "">""

if __name__ == '__main__':
    string = ""John Doe jdoe@example.com""
    print(format_string(string))"
Create a python program to select the maximum and minimum element from a list of integers,"[2, 3, 5, 4, 1]","def get_max_min(numbers):
    max_val = numbers[0]
    min_val = numbers[0]
    for n in numbers:
        if n > max_val:
            max_val = n
        if n < min_val:
            min_val = n
    return (max_val, min_val)"
Write a function in Python to calculate the sum of all the values in a list of dictionaries using list comprehension.,"[
  {'key1': 3, 'key2': 4},
  {'key3': 10, 'key4': 16},
  {'key5': 3, 'key6': 9}
]","def sum_values(list_of_dicts): 
  return sum([v for d in list_of_dicts for v in d.values()])"
Compose a function in Python to delete all checkbox items in the list.,"['Apples', 'Orange', 'Bananas', 'Cherries', 'Checkbox']","def delete_checkbox_items(items):
    new_list = [item for item in items if item != 'Checkbox']
    return new_list

items_list = ['Apples', 'Orange', 'Bananas', 'Cherries', 'Checkbox']
result = delete_checkbox_items(items_list)
print(result)"
Generate a Python program to read in an array of integers and print out the largest two integers.,"[2, 10, 5, 8, 1]","array = [2, 10, 5, 8, 1]  
array.sort()

print(""The largest two integers are:"")
print(array[-1], array[-2])"
Generate a function in Python that takes in an array and returns an array of the same length with each element multiplied by 2.,"[1, 2, 3, 4, 5]","def double_array(arr):
    return [element * 2 for element in arr]"
Create a Python program that takes a list of strings as input and prints them in alphabetical order.,"['apple', 'mango', 'banana']","def sort_strings(strings):
    strings.sort()
    for string in strings:
        print(string)

sort_strings(['apple', 'mango', 'banana'])"
Write a Python program using the SciPy library to solve the given equation.,3x - 2y + z = 5,"from scipy.optimize import fsolve

#define the equation
def equation(p):
    x, y, z = p
    return (3*x - 2*y + z - 5)

#solve the equation
result =  fsolve(equation, (1, 1, 1)) 

#Print the result 
print(result)"
Create a function in Python to find all the indices of a given item in a list.,"list = [1,2,3,4,5,2]
item = 2","def find_all_indices(list, item):
    result = []
    for index, i in enumerate(list):
        if i == item: result.append(index)
    return result

list = [1,2,3,4,5,2]
item = 2

#find all indices of the item
indices = find_all_indices(list, item)

#print the indices
print(indices) # [1, 5]"
Create a Python function that takes a list of names as input and returns a list of numbers representing the length of the names.,"names=[""Alice"", ""John"", ""Steve""]","def nameLengths(names):
 lengths = []
 for name in names:
 lengths.append(len(name))
 return lengths

# Example
nameLengths([""Alice"", ""John"", ""Steve""]) # [5, 4, 5]"
Generate a solution in python that takes a string containing letters and numbers and returns the frequency of each character.,"""helloWorld12345""","def count_frequency(string):
    counts = {}
    for char in string:
        if char in counts:
            counts[char] += 1
        else:
            counts[char] = 1
    return counts"
Create a Python function that calculates the factorial of a given number,x = 4,"def factorial(x):
    result = 1
    for num in range(1,x+1):
        result *= num
    return result"
Rewrite the following C++ function to Python.,"int multiply(int a, int b)
{
    int result = a * b;
    return result;
}","def multiply(a, b):
    result = a * b
    return result"
Convert the following Python code into equivalent C code.,"def avg(nums):
    return sum(nums) / len(nums)","#include <stdio.h>
#include <stdlib.h>

float avg(int nums[], int len) {
    float sum = 0;
    for (int i = 0; i < len; i++) {
        sum += nums[i];
    }
    return sum / len;
}

int main() {
    int nums[] = {1, 2, 3};
    int len = 3;
    printf(""Average = %f\n"", avg(nums, len));
    return 0;
}"
Convert the following python code which uses sets to one which uses lists.,"s = set([2, 3, 4])
for n in s:
    print(n)","l = [2, 3, 4]
for n in l:
    print(n)"
Optimize the Python code snippet (below) for performance efficiency.,"def process_data(data):
    processed_data = []
    for item in data:
        if item % 10 == 0:
            processed_data.append(item)
    return processed_data","def process_data(data):
    processed_data = []
    for item in data:
        if (item % 10) == 0:
            processed_data.append(item)
    return processed_data

def process_data_fast(data):
    return [item for item in data if item % 10 == 0]"
Code a function in Python that takes an array of strings as parameter and returns the longest string.,"[""apple"", ""banana"", ""orange""]","def longest_string(arr):
    max_length = 0
    max_string = """"
    
    for s in arr:
        if len(s)> max_length:
            max_length = len(s)
            max_string = s
            
    return max_string"
"Given the list of numbers, create a Python program that counts the number of even numbers in the list.","[1,2,3,4,5]","def count_evens(nums):
    count = 0
    for n in nums:
        if n % 2 == 0:
            count += 1
    return count

nums = [1,2,3,4,5]
print(count_evens(nums)) # prints 2"
Translate the following code from JavaScript to Python,"function add(a, b){
    return a + b;
}","# Translate the following function from JavaScript to Python
def add(a, b):
    return a + b"
Design a Python Program to convert a given DNA sequence into its RNA equivalent.,"DNA = ""ATCGATCG""","def convert_to_rna(DNA):
    rna = """"
    # iterate through each character
    for char in DNA:
        # check character
        if char == ""A"":
            rna += ""U""
        elif char == ""T"":
            rna += ""A""
        elif char == ""C"":
            rna += ""G""
        elif char == ""G"":
            rna += ""C""
    return rna"
Generate code to identify the type of data stored in a given variable in Python.,"val1 = [""Hello"", 10, 3.14]","# Identify the type of data stored in given variable

def identify_data_type(val):
    for item in val:
        data_type = type(item).__name__
        print(f""Data type of {item} is {data_type}"")

val1 = [""Hello"", 10, 3.14] 
identify_data_type(val1)

# Output
# Data type of Hello is str
# Data type of 10 is int
# Data type of 3.14 is float"
Create a Python script that normalizes a given list of strings.,"Input List: ['Red', 'red', 'WhITE', 'white', 'bLUE', 'blue']","""""""
Normalize a given list of strings
""""""

def normalize(lst):
    output = []
    for item in lst:
        output.append(item.lower())
    return output
    
if __name__ == '__main__':
    input_list = ['Red', 'red', 'WhITE', 'white', 'bLUE', 'blue']
    print(normalize(input_list))"
Convert this SQL query to Python.,"SELECT *
FROM customers
WHERE customer_name LIKE '%John%'","import pydb

def query_customer_name(name):
    query = """"""
    SELECT *
    FROM customers
    WHERE customer_name LIKE %s""""""
    name_wildcard = '%' + name + '%'
    query_result = pydb.query(query, name_wildcard)
    return query_result
    
if __name__ == '__main__':
    query_customer_name('John')"
"Given a list of numbers in an array, use the Python slice operator to return the last five elements of the array.","[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
b = a[-5:]
print(b)  # [6, 7, 8, 9, 10]"
Generate a valid Python dictionary containing student names as keys and their age as values.,"John: 18
Maria: 20
Alex: 24","student_dict = {
    'John': 18,
    'Maria': 20,
    'Alex': 24
}"
Write a Python code that takes in data points in time-series and returns the average of the data points for the given period.,"[1, 3, 4, 5, 3, 9, 6]","def average_of_period(arr):
    return sum(arr) / len(arr)

result = average_of_period([1, 3, 4, 5, 3, 9, 6])
print(result)"
Build a program in Python to print out the first n prime numbers.,The value of n: 10,"def n_primes(n):
    count = 0
    number = 2

    while count < n:
        is_prime = True

        for i in range (2, number): 
            if number % i == 0:
                is_prime = False
        
        if is_prime: 
            print(number, end="" "")
            count += 1

        number += 1


n_primes(10)"
Write a Python program to find the missing number from a given list.,"[2, 3, 1, 5]","def find_missing_number(list_of_numbers):
    max_number = max(list_of_numbers)
    total_sum = (max_number * (max_number + 1)) // 2
    actual_sum = 0
    
    for number in list_of_numbers:
        actual_sum += number
    return total_sum - actual_sum

list_of_numbers = [2, 3, 1, 5]
missing_number = find_missing_number(list_of_numbers)
print(""Missing number: "", missing_number)"
Write a Python program to solve a system of linear equations.,"2x+3y=8
5x-1y=-10","def solve_linear_system(A, b):
    
    # Find the solution of the linear system
    x = np.linalg.solve(A, b)
    
    # Print the solution
    print('Solution: x = ' + str(x[0]) + ', y = ' + str(x[1]))
    

A = [[2, 3], [5, -1]]
b = [8, -10]
solve_linear_system(A, b)"
Create a Python program to calculate the total of integers within a given range.,"2,6","# Find the sum of numbers within a range
def sum_range(start, end):
 sum = 0
 for i in range(start, end + 1):
  sum = sum + i
 return sum

print(sum_range(2, 6))"
Write a Python program to calculate the Gini coefficient of the following data set.,"data = [14, 17, 20, 21, 32]","def gini(data):
    n = len(data)
    data.sort()
 
    gini_coef = 0
    for k in range(n):
        i = n - k - 1
        gini_coef += (2 * i + 1 - n) * data[i]
    gini_coef = gini_coef / (n * sum(data))
 
    return gini_coef

print(gini(data))
# Output: 0.32"
Translate the following code written in Python to Java.,"x = ""Hello World""","String x = ""Hello World"";"
Write a Python function to replace all occurrences of a given substring with another substring.,"Hello World, Hello","def replace_substring(string, old_substring, new_substring):
 return string.replace(old_substring, new_substring)

result = replace_substring(""Hello World, Hello"", ""Hello"", ""Hi"")
print(result)"
Create a Python function to parse an XML document and extract all the <tag> elements.,An XML file,"import xml.etree.ElementTree as ET

def extract_tags(xml):
    root = ET.fromstring(xml)
    tags = root.findall('tag')

    # Create list to store tag elements
    tag_list = []
    for tag in tags:
        tag_list.append(tag.text)

    # Return list of tags
    return tag_list"
Write a function in Python to reverse the order of words in a sentence.,"sentence = ""hello world how are you""","def reverse_words(sentence):
    words = sentence.split(' ')
    reversed_words = words[::-1]
    return ' '.join(reversed_words)

sentence = ""hello world how are you""
print(reverse_words(sentence)) # output - you are how world hello"
"Create a function in Python that takes in a list of words and a target word, and prints out the first word that is alphabetically larger than the target.","words = [""Bob"", ""Cat"", ""Happy"", ""Lemon"", ""Texas"", ""Zebra""], target = ""Lemon""","# Function to find the first word alphabetically larger than the target
def find_next_word(words, target):
    for word in words:
        if word > target:
            return word
    return None"
Write a piece of python code to multipy each element in a list by 10.,"[1,2,3,4]","lst=[1,2,3,4]
for i in range(len(lst)):
    lst[i] = lst[i]*10
print(lst)"
Create a function in Python that takes in a list of numbers and returns true if the list of numbers is strictly increasing; false otherwise.,"numbers = [3, 4, 5, 6, 7]","def is_strictly_increasing(numbers):
 for i in range(len(numbers) - 1):
 if numbers[i] >= numbers[i + 1]:
 return False
 return True

numbers = [3, 4, 5, 6, 7]
result = is_strictly_increasing(numbers)
print(result) # returns True"
Create a network application in Python that sends a GET request to an API and parses the JSON response.,URL of API endpoint: https://api.mydomain.com/getdata,"import requests

url = 'https://api.mydomain.com/getdata'
response = requests.get(url)

data = response.json()
print(data)"
Construct a loop in Python to add all the elements of a given list.,"mylist = [5, 12, 17, 22]","total_sum = 0
for num in mylist:
    total_sum += num
print(""The sum is"",total_sum)"
Write a Python algorithm to generate the combinations of n distinct objects taken from an array.,"arr = [1, 2, 3], n = 2","import itertools

arr = [1, 2, 3]
n = 2

result = list(itertools.combinations(arr, n))

print(result)"
Create a Python program to print out the output as shown.,"A list of numbers [1, 2, 3, 4, 5].","list = [1, 2, 3, 4, 5]
print(""The list is: "")
for i in list:
print(i, end="" "")"
Create a Python script to find the largest Fibonacci number which is less than a provided integer.,n = 10,"def largestFibonacciNumber(n):
 
 # Initialize the starting two fibonacci numbers
 a = 0
 b = 1
 
 # Iterate over every index
 while b <  n:
  temp = a
  a = b
  b = temp + b 
 
 return a
 
# Test Cases 
print(largestFibonacciNumber(10)) 
# output: 8 

print(largestFibonacciNumber(50)) 
# output: 34"
Design a Python program to convert text to Pig Latin,"Hello, world!","def textToPigLatin(text):
    words = text.split()
    new_words = []

    for word in words:
        if word[0] in 'aeiou':
            new_word = word + 'ay'
        else:
            new_word = word[1:] + word[0] + 'ay'
        new_words.append(new_word)
 
    return "" "".join(new_words)

print(textToPigLatin(""Hello, world!""))"
"Create a Python script that replaces all words containing 3 or more consecutive vowels with ""*"".","""entertainment""","import re

def replaceConsecutiveVowels(word): 
    regex = re.compile(r'[aeiou]{3,}', re.IGNORECASE) 
    return regex.sub(""*"", word)

word = ""entertainment""

print(replaceConsecutiveVowels(word)) # Output: *"
Design a program in Python to find the max three numbers in a list.,"[7, 9, 15, 10, 11]","def max_three_nums(arr):
    max_three = []

    for i in range(3):
        max_element = 0 
        for j in range(len(arr)): 
            if max_element < arr[j]:
                max_element = arr[j] 
        arr.remove(max_element) 
        max_three.append(max_element) 
    return max_three 
    
arr = [7, 9, 15, 10, 11] 
print(max_three_nums(arr))"
Generate a Python code snippet to sort a given list.,"list = [5, 4, 9, 2, 1]","list.sort()
print(list)"
Write a Python program to solve the quicksort algorithm.,"Array = [10, 7, 8, 9, 1, 5]","def quicksort(arr): 
    if len(arr) <= 1:
        return arr
    pivot = arr[len(arr) // 2]
    left = [x for x in arr if x < pivot]
    middle = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]
    return quicksort(left) + middle + quicksort(right)"
Write a Python program to align two given strings with equal lines.,"x = ""X AX BB CCC""
y = ""1 AAA BBB CC""","def align_strs(x,y):
  lines_x = x.split('\n')
  lines_y = y.split('\n')
  
  max_len = max(len(lines_x),len(lines_y))
  result = """"
  for i in range(max_len):
    if i < len(lines_x):
      result += lines_x[i] + ""\n""
    if i < len(lines_y):
      result += lines_y[i] + ""\n""
    
  return result"
Create a python program for searching for a word in a text document.,"The quick brown fox jumped over the lazy dog
search: fox","import re

text = 'The quick brown fox jumped over the lazy dog'
search = 'fox'

result = re.findall(search, text)

if result:
    print('Found!');
else:
    print('Not Found!')"
Create a Python program to detect whether an input string is palindrome or not.,Example input string: 'racecar',"def is_palindrome(input_string):
 rev_string = input_string[::-1]
 return input_string == rev_string 

input_string = 'racecar'

if is_palindrome(input_string):
 print('The input string', input_string, 'is a palindrome.')
else:
 print('The input string', input_string, 'is not a palindrome.')"
Develop a Python program that merges two dictionaries together.,"dict1 = { 'a': 1, 'b': 2, 'c': 3 }
dict2 = { 'd': 4, 'e': 5, 'f': 6 }","def mergeDictionaries(dict1, dict2):
    res_dict = {**dict1,**dict2}
    return res_dict

dict1 = { 'a': 1, 'b': 2, 'c': 3 }
dict2 = { 'd': 4, 'e': 5, 'f': 6 }

print(mergeDictionaries(dict1, dict2)) # {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5, 'f': 6}"
Translate the following Python code into Java.,"def multi_sum(nums):
    """"""This function returns the sum of elements in a list""""""
    result = 0
    for num in nums:
        result += num
    return result","public static int multi_sum(int[] nums) {
    int result = 0;
    for (int num : nums) {
        result += num;
    }
    return result;
}"
Create a basic web scraper in Python that takes a URL as input and returns the text content of that URL.,https://www.example.com,"import requests
from bs4 import BeautifulSoup

url = 'https://www.example.com'
response = requests.get(url)
soup = BeautifulSoup(response.text, 'html.parser')

text = soup.get_text()

print(text)"
Create a script in Python to print out the 5 most frequent words in a given input string.,"input=""Python is a great programming language""","from collections import Counter

input = ""Python is a great programming language""
words = input.split()

counts = Counter(words)

for word, count in counts.most_common(5):
    print(word, count)"
Create a Python program to search an element in a list using Binary Search,"[2, 8, 10, 17, 19, 25, 28]","def binary_search(arr, x): 
    low = 0
    high = len(arr) - 1
      
    while low <= high: 
        mid = (high + low) // 2
        if arr[mid] < x: 
            low = mid + 1
        elif arr[mid] > x: 
            high = mid - 1
        else: 
            return mid 
  
arr = [2, 8, 10, 17, 19, 25, 28]
x = 19
result = binary_search(arr, x)
print(result)"
Create a function in Python that returns the unique elements in a given array.,"[1, 4, 2, 1, 5, 4]","def unique(arr): 
  unique_arr = [] 
  for i in arr: 
    if i not in unique_arr: 
      unique_arr.append(i) 
  return unique_arr"
Create a function that capitalizes the first letter of any given word,"""python""","def capitalize_first_letter(word):
    return word[0].upper() + word[1:]

# main
word = ""python""
capitalized = capitalize_first_letter(word)
print(capitalized)"
Write a Python program to search for a particular string in a given paragraph.,"The given paragraph is ""Juggling is the height of skill and it needs serious practice"".
The search string is ""height""","def search_string (paragraph, search_string):
    if search_string in paragraph:
        print(""Found the string '"" + search_string + ""'"")
    else:
        print(""Sorry, string not found"")
search_string(paragraph, 'height')"
"Write a Python script that takes a list of strings, finds the longest string, and prints it out.","['dog', 'cat', 'zebra','elephant']","def find_longest_string(string_list):
    longest_string = """"
    for i in string_list:
        if len(i) > len(longest_string):
            longest_string = i
    print(longest_string)


find_longest_string(['dog', 'cat', 'zebra', 'elephant'])"
Create a new Python list containing the square of the values in the given list.,"[2, 4, 6]","new_list = [4, 16, 36]"
"Using the skeleton code provided, finish the code and make it a valid python script.","#!/usr/bin/env python
# skeleton.py

# TODO: Write code here...

if __name__ == ""__main__"":
    pass","#!/usr/bin/env python
# skeleton.py

def functionA():
    pass

def functionB():
    pass

def main():
    functionA()
    functionB()

if __name__ == ""__main__"":
    main()"
Write a python function to take a list of numbers as input and return the largest number.,"[5, 7, 2, 4, 9]","def find_largest_number(numbers):
  largest_number = numbers[0]
  for number in numbers:
    if number > largest_number:
      largest_number = number
  return largest_number"
Create a Python program to download and save a web page using the Requests library.,https://www.example.com,"import requests

url = 'https://www.example.com'

response = requests.get(url)

with open('example.html', 'wb') as file:
 file.write(response.content)"
Implement an algorithm in Python that finds the most frequently occuring element in a list.,"[3, 5, 4, 3, 2, 1, 4, 3, 4]","def most_frequent(list): 
	count = 0
	element = None
	for i in list: 
		curr_element = i 
		curr_count = list.count(i) 
		if curr_count > count: 
			element = curr_element 
			count = curr_count 
	
	return element, count

most_frequent_element, frequency = most_frequent([3, 5, 4, 3, 2, 1, 4, 3, 4]) 
print(most_frequent_element)  	
# Output: 4"
Create a Python program to iterate through a dictionary and print out all the values.,"{""a"":1, ""b"":2, ""c"":3, ""d"":4}","my_dict = {""a"":1, ""b"":2, ""c"":3, ""d"":4}

for key, value in my_dict.items():
    print(value)"
Port a Python code snippet to Java.,"def add(a, b):
    return a + b","public class Add {
    public static int add(int a, int b) {
        return a + b;
    }
}"
Write a code snippet in Python to compute the maximum of an array of numbers.,"[2, 4, 6, 8]","def find_max(nums): 
  max_num = nums[0] 
  for num in nums: 
    if num > max_num: 
      max_num = num 
  return max_num 

print(find_max([2, 4, 6, 8]))"
Convert the following code code from C# to Python,"int age = 32;
if (age > 18 && age < 65)
  Console.WriteLine(""You are an adult!"");","age = 32
if age > 18 and age < 65:
    print('You are an adult!')"
Design a Python program to compute the sum of the digits of a number.,123,"def sum_of_digits(n):
    r = 0
    while (n > 0):
        r += n % 10
        n //= 10
    return r

print(sum_of_digits(123)) # 6"
Create an AIX application using Python that takes in user text and returns an appropriate response.,"User input text: ""I'm feeling sad.""","import gpt_2_simple as gpt2

# Load the GPT-2 model
sess = gpt2.start_tf_sess()
gpt2.load_gpt2(sess, run_name='run1')

# Generate a response text
generated_text = gpt2.generate(sess,
 temperature=0.7,
 prefix=""I'm feeling sad."",
 length=30,
 return_as_list=True
)[0]

# Print the response
print(generated_text)"
Create a function in Python that takes a number n and returns the sum of its digits.,378,"def sum_of_digits(n):
    sum = 0
    while n:
        sum += n % 10
        n //= 10
    return sum

print(sum_of_digits(378))"
Develop a computer vision system for a specific application.,Design a computer vision system that can detect the presence of a person in a given room.,Create a Python script that can recognize the presence of a person in a given frame of an image/video. The script should incorporate a trained computer vision model that can detect human faces or other characteristics that can be used to differentiate a person from other objects.
Design a program in Python to identify and delete the duplicate elements from a given list of numbers.,"[1, 2, 4, 2, 3, 4, 5]","def deleteDuplicateElements(arr):
    uniqueList = []
    for elem in arr:
        if elem not in uniqueList:
            uniqueList.append(elem)
    return uniqueList
  
result = deleteDuplicateElements([1, 2, 4, 2, 3, 4, 5])
print(result)"
"Beginning with a Python list of two names, edit the list code to include a third name.","names = [""John"", ""Mary""]","names = [""John"", ""Mary"", ""Lucas""]"
Write a function in Python to check if an integer is prime or not.,37,"def is_prime(number):
  if number < 2:
    return False
  else:
    for x in range(2, number):
      if number % x == 0:
        return False
    return True

n = 37
print (is_prime(n)) # Output: True"
Calculate the area of a circle using a Python program,radius = 7,"import math

def areaOfCircle(radius):
    area = round(math.pi * (radius ** 2), 2)
    return area

area = areaOfCircle(7)
print(area)"
Design a Python program to remove a specified element from a list.,"4, [1, 2, 3, 4, 5]","def remove_element(list, element):
  return [ el for el in list if el != element]
	 
list = [1, 2, 3, 4, 5]
	
list = remove_element(list, 4)
	
print(list)"
"Given a list of strings, write a python program to check if all of the strings are palindromes.","strings = ['abba', 'bob', 'acca']","def palindrome_checker(strings):
    is_palindrome = True
    for string in strings:
        if string  != string[::-1]:
            is_palindrome = False
            break
    return is_palindrome

strings = ['abba', 'bob', 'acca']

print(palindrome_checker(strings))"
Write an algorithm in Python to find the exponentiation of a given base and an exponent.,"base = 2
exponent = 4","def pow(base, exponent): 
    result = 1
    for i in range(exponent): 
        result = result * base 
    return result 

base = 2
exponent = 4
print('The result of {}^{} is {}'.format(base, exponent, pow(base, exponent)))"
Write a Python function that takes a list as an input and returns the largest element.,"[8, 5, 2, 4, 9]","def maximum(list):
    return max(list)

list = [8, 5, 2, 4, 9]
result = maximum(list)
print(result)"
Write a python program to concatenate strings within a given list and join them using a space.,"[""Hello"", ""World""]","''.join(str(x) for x in [""Hello"", ""World""])"
"Given the following array of strings, write a Python code snippet to remove all punctuation marks.","['hello!', 'hey,', 'where, are, you?', 'I am here']","strings = ['hello!', 'hey,', 'where, are, you?', 'I am here']
strings = [s.replace("","", """").replace(""?"", """").replace(""!"", """") for s in strings]
print(strings)"
Find the index of a given element from a list in Python,"[1,2,3,4]","def index_of(arr, ele):
    for i in range(len(arr)):
        if arr[i] == ele:
            return i
    return -1"
Generate a function in Python to get the most frequent element in an array.,"[1, 15, 6, 1, 6, 15]","def most_frequent(arr):
    max_count = -1
    max_elem = -1
    count_dict = {}
    for ele in arr:
        if ele in count_dict:
            count_dict[ele] += 1
        else:
            count_dict[ele] = 1
        if count_dict[ele] > max_count:
            max_count = count_dict[ele]
            max_elem = ele
    return max_elem"
Write a Python program to find all possible anagrams from a given set of words.,"words = [""eat"", ""tea"", ""tan"", ""ate"", ""nat"", ""bat""]","from itertools import permutations 

def possible_anagrams(words): 
    anagrams = set() 
    for word in words: 
        perm_words = [''.join(perm) for perm in permutations(word)] 
        for perm_word in perm_words: 
            if perm_word in words: 
                anagrams.add(perm_word) 
    return anagrams 

possible_anagrams(words)"
"Create a simple Python script that takes a single command-line parameter and prints out ""Hello <parameter>"" to the console.",John,"import sys

name = sys.argv[1]
print(""Hello {}"".format(name)) # Output: Hello John"
Create a Python function that takes two arrays of numbers and calculates their dot product.,"[2, 4, 6], [3, 4, 5]","def dot_product(list1, list2):
 result = 0
 for i in range(len(list1)):
  result += list1[i] * list2[i] 
 return result

list1 = [2,4,6]
list2 = [3,4,5]
dot = dot_product(list1, list2)
print('Dot product of two lists =', dot) # Dot product of two lists = 46"
"Fix the errors in this piece of Python code to make this correctly output ""1 2 3 4 5"".","the_list = [1,2,3,4,5]

for i in range (len(the_list); i++)
    print(the_list[i])","the_list = [1,2,3,4,5]

for i in range (len(the_list)):
    print(the_list[i])"
Develop a Python program that takes in an URL and extracts all the text content from the page.,'https://www.example.com/',"import requests
from bs4 import BeautifulSoup

url = 'https://www.example.com/'

page = requests.get(url)
html = BeautifulSoup(page.content, 'html.parser')

texts = []
for txt in  html.find_all('p'):
    texts.append(txt.text)

print(texts)"
Write a Python program to compare two lists and return the differences as a new list.,"list1 = [1, 3, 4, 5] 
list2 = [2, 4, 6, 8]","list1 = [1, 3, 4, 5] 
list2 = [2, 4, 6, 8]

diff = []

for item in list1: 
 if item not in list2: 
 diff.append(item) 

for item in list2: 
 if item not in list1: 
 diff.append(item) 

print(diff) # [1, 3, 6, 8]"
Create a program in Python that outputs the kth smallest element in a given list of numbers.,"list = [15, 28, 12, 7, 9]
k = 4","list = [15, 28, 12, 7, 9] # List of numbers
k = 4 # kth smallest element

sorted_list = sorted(list) # sorting the list of numbers

print(""The {}th smallest element is {}"".format(k, sorted_list[k-1])) # print the kth smallest element in the sorted_list using the index (k-1)"
Write a Python function that computes the average of 3 numbers.,"1, 2, 3","def average(a, b, c):
    return (a + b + c) / 3.0

print(average(1,2,3)) # Output: 2.0"
Write a python script to flatten a given nested list.,"[[1,2,3], [4,[5,6]]]","def flatten_list(input_list):
    flattened_list = []
    for i in input_list:
        if isinstance(i, list):
            flattened_list.extend(flatten_list(i))
        else:
            flattened_list.append(i)
    return flattened_list

input_list = [[1,2,3], [4,[5,6]]]
flattened_list = flatten_list(input_list)
print(flattened_list)"
Generate a Python program to print out the even numbers from a given list.,"[1, 2, 3, 4, 5, 6, 7, 8, 9]","list = [1,2,3,4,5,6,7,8,9] 

for num in list: 
    if num % 2 == 0: 
       print(num, end = "" "")"
Evaluate a given mathematical expression using Python.,2 + (3 * 5),"def eval_expr(expr):
  return eval(expr)

print(eval_expr(""2 + (3 * 5)""))

# Output
# 17"
Create a python function that takes in a list of strings and returns a list with all the strings stripped of unwanted whitespace.,"lst = [""  hello  "", ""    world  "", ""hi   ""]","def strip_whitespace(lst):
    return [string.strip() for string in lst]"
"Compose an editor program, in Python code, to remove all the duplicate words from a given sentence.","sentence = ""This is a a random sentence with with repeated words""","def remove_duplicates(sentence): 
    words = sentence.split() 
    words_without_duplicates = [] 
    for i in words: 
        if i not in words_without_duplicates: 
            words_without_duplicates.append(i) 
  
    return "" "".join(words_without_duplicates)"
Generate a Python function to parse a JSON data structure.,"data = {
 ""name"": ""John"",
 ""age"": 18,
 ""occupation"": ""Software Engineer""
}","import json

def parse_json(data):
 data = json.loads(data)
 return data['name'], data['age'], data['occupation']

name, age, occupation = parse_json(data)
print(name, age, occupation)
# Output: John 18 Software Engineer"
Write a Python program to find all numbers divisible by sixteen from a given list of numbers.,"[20, 16, 5, 6, 26, 48]","list_numbers = [20, 16, 5, 6, 26, 48]

divisible_numbers = []
for number in list_numbers:
    if number % 16 == 0:
        divisible_numbers.append(number)

print(divisible_numbers)"
Write a Python program to print the maximum number from a given list.,"[5, 4, 2, 7, 12]","def max_num(nums):
    max = nums[0]
    for num in nums[1:]:
        if num > max:
            max = num
    return max

nums = [5, 4, 2, 7, 12]
print(max_num(nums))"
Write a Python program to generate a dictionary that holds the count of each character present in a given string.,"""Programming""","def char_count(str): 
 result = {}
 for char in str: 
  if char in result:
  result[char] += 1
  else:
  result[char] = 1
 return result

result = char_count(""Programming"")
print(result)"
"Create a Python script that takes in a list of numbers and calculates the sum, mean, and median.","[1, 2, 3, 4, 5]","my_list = [1, 2, 3, 4, 5]

sum_list = sum(my_list)
mean_list = sum_list / len(my_list)

my_list.sort()
middle_index = int(len(my_list) / 2)

if len(my_list) % 2 == 0:
 median_list = (my_list[middle_index] + my_list[middle_index - 1]) / 2
else:
 median_list = my_list[middle_index+1]

print('sum', sum_list)
print('mean', mean_list)
print('median', median_list)"
Come up with a python script to retrieve the last occurrence of an element in a list,"Find the last occurence of 5 in [3, 4, 5, 5, 9, 6, 5]","def last_occurence(arr, x):
    last_index = -1
    for i in range(len(arr)):
        if arr[i] == x:
            last_index = i
    return last_index

print(last_occurence([3, 4, 5, 5, 9, 6, 5], 5))"
Create a Python function that takes a string and a number as arguments. The function replaces all digits in the string with the supplied number.,"str = ""I am 8 years old.""
num = 3","def replace_digit(str, num):
    new_str = """"
    for char in str:
        if char.isnumeric():
            new_str += str(num)
        else:
            new_str += char
    
    return new_str

new_str = replace_digit(str, num)
print(new_str)"
Write a function in Python to check if a given string is a palindrome.,"String : ""racecar""","def is_palindrome(input):
 s = input.lower()
 return s == s[::-1]

print(is_palindrome(""racecar"")) # True"
Create a script in Python to apply Principal Component Analysis (PCA) on a given dataset.,"dataset = [[1,2,3],[4,5,6],[7,8,9]]","from sklearn.decomposition import PCA

# define a 3x3 matrix 
matrix_data = dataset 
pca = PCA(n_components=2) 

# transform 3x3 matrix into 2x2 matrix 
transformed_data = pca.fit_transform(matrix_data) 

print(transformed_data)"
Edit the following Python program to implement try and except,"a = 10
b = 0
c = a/b","try:
 a = 10
 b = 0
 c = a/b
except ZeroDivisionError:
 print(""Error: Cannot divide by zero"")"
"Given a list of numbers in an array, write a Python program to find the sum of the elements of the array.","[1, 2, 3, 4, 5]","def sum_elements(arr):
 result = 0
 for i in arr:
 result += i
 return result

print(sum_elements([1,2,3,4,5]))"
Create a Python program that takes in a list of strings and prints out the items that appear more than once.,"[""red"", ""green"", ""blue"", ""red"", ""yellow""]","from collections import Counter

def duplicates(items):
    c = Counter(items)
    for k, v in c.items():
        if v > 1:
            print(k)

items = [""red"", ""green"", ""blue"", ""red"", ""yellow""]
duplicates(items)"
Write a function in Python to search for a character in a given string.,"String: “Hello”
Character: ‘l’","def serach_char(input_str, char):
  for char in input_str:
    if char == input_char:
      return True
  return False"
Solve the given Roman numerals equation using your preferred programming language.,Equation: MMVII - MDCCLIV,"Python:
romans = {'I':1, 'V':5, 'X':10, 'L':50, 'C':100, 'D':500, 'M':1000}

def solve_roman(eq):
    result = 0
    for char in eq:
        result += romans[char]
    return result

print(solve_roman(""MMVII"" - ""MDCCLIV""))

Output: 823"
Develop a program using Python to replace all the non-alphanumeric characters in a given string with an asterisk ('*')?,"""Hello* World_$!"",","import re

def replaceNonAlphanum(s):
    pattern = r""[^a-zA-Z0-9]""
    return re.sub(pattern, ""*"", s)

s = ""Hello* World_$!""
print(replaceNonAlphanum(s))
// Output: Hello** World**$*"
Rewrite the following Python program that calculates the factorial of a given number n into Java.,"def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n-1)","public class Factorial {
    public static int factorial(int n) {
        if (n == 0) {
            return 1;
        } else {
            return n * factorial(n-1);
        }
    }
    
    public static void main(String[] args) {
        System.out.println(factorial(5));
    }
}"
Generate a script in Python that takes in a collection of numbers and returns a collection of the same numbers sorted in ascending order.,"[2, 7, 10, 1]","def sortCollection(arr):
    sortedArr = arr.sort()
    return sortedArr"
Write a Python program to find the longest string in a list of strings.,"[""Hello"", ""Hi"", ""What's up"", ""Hey"", ""Good morning""]","longest_string = """"
for string in string_list:
    if len(string) > len(longest_string):
        longest_string = string

print(longest_string)"
You have a list of numbers. Write a function in Python that multiplies each number by 2.,"[1, 2, 3, 4]","def multiplyBy2(nums):
 return [num * 2 for num in nums]"
Create a Python program to calculate the total cost of a shopping cart given the prices of different items and their quantity.,"prices = [12, 10, 5, 8] 
quantities = [1, 2, 3, 4]","prices = [12, 10, 5, 8] 
quantities = [1, 2, 3, 4]
 
total_cost = 0

for i in range(len(prices)):
    total_cost += prices[i] * quantities[i]

print(total_cost)"
Use regex in Python to extract all the words in a string and calculate the total number of words in the string.,This is an example string,"import re

text = ""This is an example string""
words = re.findall(r'\w+', text)
print(""Total words: "" + str(len(words)))"
Create a Python lambda expression to return all strings that longer than 5 characters long.,"[""hello"", ""world"", ""foobar""]","words = [""hello"", ""world"", ""foobar""] 
filtered_words = list(filter(lambda x: len(x) > 5, words)) 
print(filtered_words) # ['world', 'foobar']"
"Can you modify the provided code in Python to prompt the user to enter their name, and then greet the user?","name=""Bob""","name = input(""Please enter your name: "")

print(""Hello "" + name + ""!"")"
Generate a Python function that takes an array of integers as input and returns an array of integers with the positive numbers appearing before the negative numbers.,"[-5, 2, 7, -3, 4, 9]","def sort_positives_negatives(arr):
  positives = []
  negatives = []
  for x in arr:
    if x < 0:
      negatives.append(x)
    else:
      positives.append(x)
  return positives + negatives

result = sort_positives_negatives([-5, 2, 7, -3, 4, 9])
print(result)"
"Given a text string, write a Python program to count the number of words in the string.","string = ""Python is a powerful programming language""","def count_words(string):
  words = string.split()
  return len(words)

string = ""Python is a powerful programming language""
print(count_words(string))"
Write a function in Python that takes two arguments—a string and a positive integer n—and returns a list of size n containing the string repeated n times.,"string = ""Hello""
n = 4","def repeat_string(string, n):
     return [string]*n
     
# example
print(repeat_string(""Hello"", 4)) 
# Output: ['Hello', 'Hello', 'Hello', 'Hello']"
Write a Python program to sort a given list in ascending order of the length of each element.,"numbers = [4, 8, 1, 16, 9, 7]","def sortList(numbers): 
    numbers.sort(key = len) 
    return numbers 

numbers = sortList(numbers) 
print(numbers)

# Output: [4, 8, 1, 7, 9, 16]"
Modify the following Python script to prevent timing attack.,"def login(username, password):
    if username in users and users[username] == password:
        return True
    else:
        return False","def login(username, password):
    hashed_password = hashlib.sha256(password.encode('utf-8')).hexdigest()
    if username in users and users[username] == hashed_password:
        return True
    else:
        return False"
Write a Python program to print the given list after removing even numbers from it.,"[3, 5, 7, 4, 8, 10]","list_odd = [] 
for num in [3, 5, 7, 4, 8, 10]:
    if num %2 != 0:
        list_odd.append(num)
        
print(list_odd)"
Create a function in Python to convert a string to a list of words.,"""Hello, World!""","def convert_to_list(string):
    return string.split()

string = ""Hello, World!""
words_list = convert_to_list(string)
print(words_list)"
"Create a class in Python that inherits from the given base class, and implements the given interface.","BaseClass: Animal
Interface: eat(food)","class Animal:
    def __init__(self, name):
        self.name = name

class Cat(Animal):
    def eat(self, food):
        print(""{} is eating {}!"".format(self.name, food))"
Write a Python program to filter out unique elements from an array.,"arr = [3, 6, 3, 2, 7, 5, 6]","arr = [3, 6, 3, 2, 7, 5, 6]

def unique_elements(arr):
  return list(set(arr))

unique_arr = unique_elements(arr)
print(unique_arr)"
Write a script in Python to sort a given list of numbers according to their occurrence in the list.,"unsorted_list = [1, 4, 2, 4, 8, 1, 2, 8, 2]","def sort_by_occurrence(unsorted_list):
    d = {}
    for num in unsorted_list:
        d[num] = d.get( num, 0 ) + 1
    sorted_list = sorted(d, key=d.get, reverse=True)
    return sorted_list"
"Write a function in Python that will take two input strings, concatenate them, and return the reversed string.","string1 = 'Hello'
string2 = 'World'","def reverseString(s1, s2):
 s = s1 + s2
 return s[::-1]

reverseString(string1, string2)
# Result: dlroW olleH"
Determine the type of the following python object.,"[1, 2, [3, 4]]",list
Create a Python script to remove specific items from a given list of strings.,"strings = [""apple"", ""orange"", ""banana"", ""grape""]
words_to_remove = [""apple"", ""grape""]","strings = [""apple"", ""orange"", ""banana"", ""grape""]
words_to_remove = [""apple"", ""grape""]

# Using list comprehension
filtered_list = [word for word in strings if word not in words_to_remove] 

# Output
print(filtered_list)

# Output
['orange', 'banana']"
Translate the following code snippet from Java to Python.,"public void helloWorld() {  
   System.out.println(""Hello World!"");  
}","def helloWorld():
    print(""Hello World!"")"
Generate a database schema for a given set of sample data.,"[{""Name"": ""John"", ""Skills"": ""Python, HTML, CSS"", ""Location"": ""Europe""}, {""Name"": ""Jim"", ""Skills"": ""Java, Bash, Go"", ""Location"": ""Asia""}]","CREATE TABLE IF NOT EXISTS users (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  name TEXT NOT NULL,
  skills TEXT NOT NULL,
  location TEXT NOT NULL
);

INSERT INTO users (name, skills, location)
VALUES ('John', 'Python, HTML, CSS', 'Europe'),
('Jim', 'Java, Bash, Go', 'Asia');"
Optimize the following python program such that it reaches an O(logN) complexity,"def power(x, n): 
 if (n == 0): 
 return 1
 elif (n % 2 == 0): 
 return power(x, n / 2) * power(x, n / 2) 
 else:
 return x * power(x, n / 2) * power(x, n / 2)","def power(x, n): 
 if (n == 0): 
 return 1
 elif (n % 2 == 0): 
 y = power(x, n / 2) 
 return y * y
 else:
 y = power(x, (n - 1) / 2) 
 return x * y * y"
Devolop a Python code to remove the duplicates from a given list and sort them in ascending order.,"[2, 8, 5, 2, 6, 3, 4]","my_list = [2, 8, 5, 2, 6, 3, 4]
my_list = list(dict.fromkeys(my_list))
my_list.sort()
print(my_list) # [2, 3, 4, 5, 6, 8]"
Design a python program that reads a list of numbers and prints the number of even numbers,"[1, 2, 3, 4, 5, 6, 7, 8]","# Get list of numbers
numbers = [1, 2, 3, 4, 5, 6, 7, 8]

# Initialize a count
count = 0

# Iterate through the list of numbers and count the even numbers
for num in numbers:
    if num % 2 == 0:
        count += 1

# Print the result
print(f""The number of even numbers is: {count}"")"
Write a Python function to return the GCD (Greatest Common Denominator) of two integers.,"num_1 = 12
num_2 = 24","def gcd(num_1, num_2):
  if num_2 == 0:
    return num_1
  return gcd(num_2, num_1 % num_2)"
Generate a Python function that takes in a string x and returns a substring of x that is the longest palindrome.,x = 'abacdbcdbafeaccba',"def longest_palindrome(x):
    longest = ''
    for i in range(len(x)):
        j = i + len(longest) + 1
        while j <= len(x):
            substring = x[i:j]
            if substring == substring[::-1] and len(substring) > len(longest):
                longest = substring
            j = j + 1
    return longest"
Take a given Python dictionary and transform it to a standardized format using JSON.,"my_dict = {
 'name': 'John Doe',
 'age': 42,
 'occupation': 'Programmer'
}","import json

my_dict = {
 'name': 'John Doe',
 'age': 42,
 'occupation': 'Programmer'
}

# Transform to JSON
my_json = json.dumps(my_dict)

print(my_json) # Output: {""name"":""John Doe"",""age"":42,""occupation"":""Programmer""}"
Develop a sorting algorithm in Python that can sort an array of integers in ascending order.,"[2, 3, 1, 7, 5, 4]","def sort(arr):
  for i in range(len(arr)):
    for j in range(i+1, len(arr)):
      if arr[i] > arr[j]:
        arr[i], arr[j] = arr[j], arr[i]
  return arr

sort([2, 3, 1, 7, 5, 4])
# Output: [1, 2, 3, 4, 5, 7]"
Classify whether a given number is even or odd using Python.,1,"def is_even(n):
    if n % 2 == 0:
        return True
    else:
        return False"
Create a Python script to read a given PDF document.,file = ‘document.pdf’,"import PyPDF2

# open and read the pdf file
file = open('document.pdf', 'rb')
reader = PyPDF2.PdfFileReader(file)

# read complete document
for page in range(reader.numPages):
    print(reader.getPage(page).extractText())

file.close()"
Write a Python code snippet to create a user account with the given name and password.,"Name: John
Password: J0hnP455w0rd","import bcrypt

name = ""John""
password = ""J0hnP455w0rd""
password_hash = bcrypt.hashpw(password.encode('utf-8'), bcrypt.gensalt())

# Create user account in the database
# with the given name and hashed password
# ----------
# Code to store username and 
# hashed password in the database 
# ----------"
Write a Python program that takes a sentence as an input and outputs a list of words in it in reverse order.,This is a test.,"def reverse(sentence): 
    words = sentence.split("" "")   
    rev_words = words[::-1] 
    rev_sentence =' '.join(rev_words)  
    return rev_sentence"
Develop an optimized function to sort a list of elements using algorithms in Python,"The list contains [3, 9, 1, 4, 5]","def sort_list(arr):
    # Insertion sort algorithm
    for i in range(1, len(arr)):
        key = arr[i] 
        j = i-1
        while j >=0 and key < arr[j] : 
            arr[j+1] = arr[j] 
            j -= 1
        arr[j+1] = key 
    return arr

sorted_arr = sort_list([3, 9, 1, 4, 5])"
Generate a list of all permutations of the letters in a given word using Python.,word = 'ABC',"import itertools

set_ABC = set(list('ABC'))
all_permutations = list(itertools.permutations(set_ABC))

# print all obtained permutations
{print(''.join(words)) for words in all_permutations}"
Construct a Python program to find the maximum of three numbers.,"3, 4, 5","def find_max(a, b, c):
    max_num = a
    if b > max_num:
        max_num = b
    if c > max_num:
        max_num = c
    return max_num"
Create a Python script that checks whether a given string is a palindrome.,"""malayalam""","def isPalindrome(str): 
    # Run loop from 0 to len/2 
    for i in range(0, len(str)//2): 
        if str[i] != str[len(str)-i-1]: 
            return False
    return True
  
# main
myStr = ""malayalam""

ans = isPalindrome(myStr) 
  
if ans: 
    print(""The given string is a palindrome"") 
else: 
    print(""The given string isn't a palindrome"")"
Generate a Python program to implement the following sorting algorithm,Bubble Sort,"def bubble_sort(arr):
    n = len(arr)
    for i in range(n - 1):
        for j in range(i + 1, n):
            if arr[j] < arr[i]:
                arr[i], arr[j] = arr[j], arr[i]
    return arr"
Optimize the following python code using best practices,"def linear_search(arr, x):
    for i in range(len(arr)):
        if arr[i] == x:
            return i
    return -1","def linear_search(arr, x):
    for index, item in enumerate(arr):
        if item == x:
            return index
    return -1"
Build a Python program to print out the 3 largest odd numbers in a given list.,"[4, 7, -1, 2, 8, 5]","list_of_nums = [4, 7, -1, 2, 8, 5]

largest_odd_numbers = []

for num in list_of_nums:
    if num % 2 != 0 and len(largest_odd_numbers) < 3:
        largest_odd_numbers.append(num)

largest_odd_numbers.sort()
print (largest_odd_numbers)"
Create a Python program to calculate the grade for a student.,"Maths = 85
English = 70
Science = 90","Maths = 85
English = 70
Science = 90

# Calculate the average 
average = (Maths + English + Science) / 3

# Check the grade
if average >= 80:
    grade = 'A'
elif average >= 70:
    grade = 'B'
elif average >= 60:
    grade = 'C'
elif average >= 50:
    grade = 'D'
else:
    grade = 'F'

# Print the grade
print(grade)"
Program a function in Python 3 that takes a list of integers and returns a list with only the non-duplicate values.,"[1, 2, 4, 1, 5, 7, 8, 2]","def uniqueVals(arr):
  uniqueValsArr = []
  for x in arr:
    if x not in uniqueValsArr:
      uniqueValsArr.append(x)
  return uniqueValsArr

mylist = [1, 2, 4, 1, 5, 7, 8, 2]
print(uniqueVals(mylist))

# Output: [1,2,4,5,7,8]"
Generate a Python script to generate all combinations of a list.,"[1, 2, 3]","import itertools

def combinations(list):
 comb = itertools.combinations(list, 2)
 return [list(x) for x in set(comb)]

list = [1, 2, 3]

result = combinations(list)

print(f'The list of combinations is {result}')"
Re-write the following SQL query into Python code.,"SELECT *
FROM table
WHERE column1 = 'value1' AND column2 = 'value2'.","# define the parameters for the query
column1 = 'value1'
column2 = 'value2'

# execute the query
result = table.objects.filter(column1=column1, column2=column2)"
Construct a regular expression in Python to find all consecutive digits in a sentence.,"There are 3 sets of consecutive numbers in this sentence: 12, 22 and 33.","import re 

str = ""There are 3 sets of consecutive numbers in this sentence: 12, 22 and 33.""

num_list = re.findall(r'\d+', str)
print(num_list)
# Output: ['3', '12', '22', '33']"
Generate a Python program to classify the types of letters contained in a string.,'abcdefghijklmnopqrstuvwxyz',"def classify_letter_types(string):
    lowercase_letters = []
    uppercase_letters = []
  
    for letter in string:
        if letter.isupper():
            uppercase_letters.append(letter)
        else:
            lowercase_letters.append(letter)
    return {
        'lowercase_letters': lowercase_letters, 
        'uppercase_letters': uppercase_letters
    }"
Write a function in Python that takes two strings s1 and s2 and returns s2 repeated s1 times.,s1 = '3'; s2 = 'hello',"def repeat(s1, s2):
 n = int(s1)
 return s2 * n

print(repeat('3','hello'))
# Output: hellohellohello"
"Create a Python module that takes a given number and produces an output array with the numbers 0 to the given number, excluding the given number.",Number: 10,"def exclude_number(n):
  return [i for i in range(0,n) if i < n]"
Edit a Python program so that it calculates the sum of two integers.,"# Program to add two numbers
num1 = 3
num2 = 5
print(3 + 5)","# Program to add two numbers
num1 = 3
num2 = 5
print(num1 + num2)"
Rewrite the code below to use Python data structures.,"let numbersArray = [5, 9, 3, 2, 6, 10];
let numbersArrayIndex = 0;
let currentNumber = numbersArray[numbersArrayIndex];

while (numbersArrayIndex < numbersArray.length) {
  console.log(currentNumber);
  numbersArrayIndex++;
  currentNumber = numbersArray[numbersArrayIndex];
}","numbers_array = [5, 9, 3, 2, 6, 10]

for current_number in numbers_array:
 print(current_number)"
Strengthen the following python code to make sure the input is a valid integer.,"def input_num():
    num = int(input(""Insert a number:""))","def input_num():
    while True:
        try:
            num = int(input(""Insert a number:""))
            break
        except ValueError:
            print(""Please enter a valid integer."")
    return num"
Construct an algorithm in Python for calculating the median of a given list of numbers.,"[2, 4, 3, 5, 7]","def calculateMedian(numbers):
    n = len(numbers)
    if n % 2 == 0:
        num1 = numbers[n//2]
        num2 = numbers[n//2 - 1]
        median = (num1 + num2)/2
    else: 
        median = numbers[n//2]
    return median
        
numbers = [2, 4, 3, 5, 7]
median = calculateMedian(numbers)
print(""Median of list is:"", median)"
Create a Python program to create a dictionary whose keys are all of the unique characters in a text and the value is the number of times each character appears.,"text = ""Hello world!""","def character_count(text):
    char_dict = {}
    for char in text:
        if char in char_dict:
            char_dict[char] += 1
        else:
            char_dict[char] = 1
    return char_dict

result = character_count(text)
print(result)"
Optimize the given code using any of the data structure available in Python.,"def add(array):
    sum = 0
    
    for i in range(len(array)):
        sum = sum + array[i]
    return sum","def add(array):
    sum = 0
    
    for element in array:
        sum = sum + element
    return sum"
Design a Python program that takes a list of numbers and prints out the number with the highest value.,"[1, 2, 300, 4, 5]","def find_max(nums):
    max_num = nums[0]
    for num in nums:
        if num > max_num:
            max_num = num

    return max_num

nums = [1, 2, 300, 4, 5]

print(find_max(nums)) # 300"
Create a python code to remove all elements from a list using a for loop?,"list = [4, 5, 7, 1, 3]","def remove_elements(lst):
    for element in lst:
        lst.remove(element)"
Rewrite the given Python code to use list comprehension.,"arr = [3, 1, 2, 5, 4]
new_arr = []
for element in arr:
    if element % 2 == 0:
        new_arr.append(element)","arr = [3, 1, 2, 5, 4]
new_arr = [element for element in arr if element % 2 == 0]"
"Create a Python script to generate random passwords. The script should take one parameter, an integer representing the length of the password, and should return a random string of the specified length.",Length: 8,"import string
import random

def generate_password(length):
 password = ''
 for i in range(length):
 password += random.choice(string.ascii_letters + string.digits)
 return password

print(generate_password(8))"
"Create a Python method which takes a String and two integers as parameters, and returns the String with the characters between the integers reversed.","String: ""Hello world""
1st Integer: 0
2nd Integer: 5","def reverse_substring(sentence, start, end):
    reversed = sentence[end:start-1:-1]
    return sentence[:start] + reversed + sentence[end+1:]

result = reverse_substring(""Hello world"", 0, 5)
print(result)"
Create a Python program that prints out a message if a given number is divisible by 7.,num = 49,"num = 49

if num % 7 == 0:
    print(""The number %d is divisible by 7!"" %num)"
Create a web API in Python Flask to compare two numerical values and return the greater one.,"value1 = 10
value2 = 20","from flask import Flask, jsonify, request

app = Flask(__name__)

@app.route('/compare', methods=['POST'])
def compare():
    data = request.get_json()
    value1 = data['value1']
    value2 = data['value2']

    greater_value = max(value1, value2)

    return jsonify({'greater_value': greater_value})

if __name__ == '__main__':
    app.run(debug=True)"
Python code to find out if a linked list has a loop,"Head of link list
|
v
1 -> 2 -> 3 -> 4
 ^         |
 |_________|","def hasLoop(self): 
    if self.head is None: 
        return False 
  
    slow = fast = self.head 
    while(slow and fast and fast.next): 
        slow = slow.next
        fast = fast.next.next
        if slow == fast: 
            return True  
          
    return False"
Create a python library to generate a bar chart from a given set of data points.,"Data points: [5, 8, 9, 10, 12]","import matplotlib.pyplot as plt
 
# Data points
data = [5, 8, 9, 10, 12]
 
# Create bar chart
plt.bar(range(len(data)), data)
 
# Show bar chart
plt.show()"
"Create a Python script that parses a JSON string and complete the following tasks: (1) convert the string to an object, (2) sort the object by keys, and (3) print the object in a formatted way.","{""a"": 3, ""b"": 1, ""c"": 2}","import json 

# Convert the string to an object 
data = json.loads('{""a"": 3, ""b"": 1, ""c"": 2}')

# Sort the object by keys 
sorted_data = {k: data[k] for k in sorted(data.keys())}

# Print the object in a formatted way 
print(json.dumps(sorted_data, indent=4))"
Generate a python program that takes in a list and an integer and prints the element at index in the list,"list = [""a"", ""b"", ""c"", ""d""] and integer = 2","def print_element(lst, index):
    print(lst[index])"
"Write a function that takes in two strings, compares them, and returns the longer string.","String 1: Python
String 2: C++","def compareLongestString(str1, str2):
 
  if len(str1) > len(str2):
   longestString = str1
  elif len(str2) > len(str1):
   longestString = str2
  else:
   longestString = ""Strings have the same length""

  return longestString

print(compareLongestString(""Python"", ""C++""))"
Convert a given dictionary in Python to a list of tuples.,"{'a': 1, 'b': 2, 'c': 3}","my_dict = {'a': 1, 'b': 2, 'c': 3}
my_list = list(my_dict.items())

# Test
print(my_list) # [('a', 1), ('b', 2), ('c', 3)]"
Generate a correct python program to output the number of seconds in the future and in the past,60 minutes,"def calculate_seconds(minutes):
    return minutes * 60

future_seconds = calculate_seconds(60)
print(""The number of seconds in the future is "" + str(future_seconds))
past_seconds = calculate_seconds(-60)
print(""The number of seconds in the past is "" + str(past_seconds))"
Generate a Python script that updates all elements of a 1D numerical array by adding 10.,"arr = [1, 2, 3, 4, 5]","def updateArray(arr): 
    for i in range(len(arr)):
        arr[i] += 10
    return arr

arr = [1, 2, 3, 4, 5]
arr = updateArray(arr)
print(arr)"
Generate a Python Program to generate a Bar Chart from a given list of data,"data=[2,4,6,7]","import matplotlib.pyplot as plt

def generate_bar_chart(data):
    plt.bar(list(range(len(data))), data)
    plt.xlabel('x')
    plt.ylabel('y')
    plt.title('Bar Chart')
    plt.show()

if __name__ == '__main__':
    generate_bar_chart(data)"
Write a Python program to validate a given email address. The program should ensure that the given email follows valid email syntax.,example@example.com,"import re

def is_valid_email(email):
 email_regex = re.compile(r""^[\w\.\+\-]+\@[\w]+\.[a-z]{2,3}$"")
 return email_regex.match(email)

email = ""example@example.com""
if is_valid_email(email):
 print(""Valid email address"")
else:
 print(""Invalid email address"")"
Reverse a given list using Python,"[1,2,3,4,5]","def reverse_list(arr):
    return arr[::-1]"
Create a program in Python to find the maximum value from a dictionary.,"my_dict = {'data1':100,'data2':-54,'data3':247}","# Get the maximum value in the dictionary
max_value = max(my_dict.values())

# Print the maximum value
print (max_value)"
Develop a class in Python to keep track of stock prices,Symbol: AAPL,"class Stock:
  def __init__(self, symbol):
    self.symbol = symbol
    self.prices = []
 
  def add_price(self, price):
    self.prices.append(price)
 
  def get_prices(self):
    return self.prices
      
AAPL = Stock('AAPL')
AAPL.add_price(191.43)
AAPL.add_price(193.57)
AAPL.add_price(190.08)
AAPL.get_prices()"
Convert this Python function to JavaScript.,"def string_to_num_list(string):
    numbers = []
    for letter in string:
        numbers.append(ord(letter))
    return numbers","function stringToNumList(string) {
    let numbers = [];
    for (let letter of string) {
        numbers.push(letter.charCodeAt(0));
    }
    return numbers;
}"
Construct a python code to convert a number in base 10 to binary,No input.,"def convert_base10_to_binary(num):
    binary_num = []
    while (num > 0): 
        binary_num.append(num % 2)
        num //= 2
  
    binary_num.reverse() 
    return binary_num"
Write a code block in Python to compute the dot product of two vectors.,"u = [1, 2, 3]
v = [4, 5, 6]","def dot_product(u, v):
    if len(u) != len(v):
        raise ValueError(""Vectors u and v must be of the same length!"")

    result = 0
    for i in range(len(u)):
        result += u[i] * v[i]
    return result

u = [1, 2, 3]
v = [4, 5, 6]

print(""Dot product of u and v is:"" , dot_product(u, v))"
Create a Python function to edit a given string by changing the order of some of its characters.,"string: ""hello world""","def edit_string(string):
 characters = list(string)
 np.random.shuffle(characters)
 edited_string = """".join(characters)
 return edited_string"
Create a Python code to expand a given integer range.,03-Nov,"def expand_range(value):
  return [x for x in range(int(value[0]), int(value[2]) + 1)]"
Create a Python program that shuffles an array of integers.,"[1, 5, 9, 4, 2]","import random

def shuffle(arr):
    random.shuffle(arr)
    return arr 

my_arr = [1, 5, 9, 4, 2]

print(shuffle(my_arr))"
Write a function to calculate the average of a Python list of integers.,"numbers = [2, 4, 5, 7, 8]","def calculate_average(numbers):
  return sum(numbers)/len(numbers)

numbers = [2, 4, 5, 7, 8]
print(calculate_average(numbers)) # Output: 5.6"
Calculate the average of a list of numbers using a Python function.,"numbers = [5, 10, 15, 20]","def calculateAverage(numbers):
 total = 0
 for num in numbers:
 total += num
 return total / len(numbers)

numbers = [5, 10, 15, 20]

print(calculateAverage(numbers)) // 12.5"
Design a Python program to take a list of integers and return the sum of the even numbers in the list.,"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","def sum_even_numbers(numbers):
 
 result = 0
 
 for number in numbers:
  if number % 2 == 0:
   result += number
 
 return result
 
print(sum_even_numbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))"
Write a Python program that takes an input string and reverses all of its words.,hello world,world hello
Generate an algorithm in Python to determine the count of each occurrence of a given character in a string,"string: ""abracadabra""
character: 'a'","def count_characters(string, character):
    count = 0
    for c in string:
        if c == character:
            count += 1
    return count

count_characters(""abracadabra"", 'a')  # 5"
Write a python code to complete the following.,Sequentially fill a numpy array of size 4 with numbers from 0 to 3,"import numpy as np
arr = np.zeros(4, dtype=int)
 
for i in range(len(arr)):
    arr[i] = i"
Develop an algorithm using Python that determines if a number is a prime number or not.,12,"def is_prime(n):
    if n <= 1: 
        return False
    for i in range(2, n): 
        if n % i == 0: 
            return False
    return True"
Change the following Python program such that you can pass any number of strings in the function.,"def print_strings(s1, s2):
    print(s1)
    print(s2)","def print_strings(*strings):
    for s in strings:
        print(s)

print_strings(""Hello"", ""World"")"
Create an algorithm in Python which prints out the number of even numbers in an array.,"[1, 2, 3, 4, 5, 6, 7, 8]","def count_even(arr):
  evenNumbers=0
  for x in arr:
      if x % 2 == 0:
          evenNumbers += 1
  return evenNumbers
  
print(count_even([1, 2, 3, 4, 5, 6, 7, 8]))"
Write a Python program to merge two given lists into a single list.,"list1 = [1, 2, 3]
list2 = [4, 5, 6]","def merge_two_lists(list1, list2):
 return list1 + list2"
Write a python code to check if the string has unique characters.,String: “abcdefg”,"def unique_string(string):
    return len(string) == len(set(string))

if __name__ == '__main__':
    string = 'abcdefg'
    print(unique_string(string))"
Generate a correct Python program for plotting bar chart for the following data.,"x-axis: [""Honda"", ""Ferrari"", ""Ford""]
y-axis: [50, 100, 150]","import matplotlib.pyplot as plt

x = [""Honda"", ""Ferrari"", ""Ford""]
y = [50, 100, 150]

plt.bar(x, y)

plt.title(""Car Comparison"")
plt.xlabel(""Cars"")
plt.ylabel(""Value"")

plt.show()"
Implement a function in Python that will take in an arbitrary list of numbers and output the average of the list.,"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","def average(nums):
 total = 0
 for num in nums:
 total += num
 return total/len(nums)"
Create a function in Python that takes an ID and returns a list of all the numbers in its range.,ID = 5,"def get_numbers(id):
    nums = []
    for i in range(id + 1):
        nums.append(i)
    return nums

numbers = get_numbers(5)
print(numbers)"
Write a python program to print out the character frequency of a given string.,String: hello world!,"string = 'hello world!'

freq = {} 
for i in string: 
    if i in freq: 
        freq[i] += 1
    else: 
        freq[i] = 1

print (""count of all characters in hello world! is :\n ""
                    +  str(freq))

# Output would be 
count of all characters in hello world! is :
 {'h': 1, 'e': 1, 'l': 3, 'o': 2, ' ': 1, 'w': 1, 'r': 1, 'd': 1, '!': 1}"
Create a function in Python to validate the syntax of the given code.,"code:
def myFunc(param1, param2):
    statement1
    statement2","def validate_syntax(code):
    try: 
        compile(code, '<string>', 'exec')
        return True
    except SyntaxError: 
        return False"
Write a Python script to input a string and display it in reverse.,Hello world!,!dlrow olleH
Develop a Python program for randomly generating a 3-D object of n cubes,n = 8,"from random import random

def generate_cubed_object(n):
    objects = []
    for i in range(n):
        x = random()
        y = random()
        z = random()
        objects.append([x, y, z])
    return objects

print(generate_cubed_object(8)) # [[0.4, 0.2, 0.3], [0.5, 0.6, 0.7], ....]"
Create a python function that takes a list of integers as input and returns the list with the numbers sorted in descending order.,"[5, 4, 3, 2, 1]","def sortList(nums): 
 
    # sort the list in descending order 
    nums.sort(reverse = True) 
   
    # return the sorted list 
    return nums 
   
# driver code 
list = [5, 4, 3, 2, 1] 
print(sortList(list))"
Create logic in your Python application to handle any corner cases in the user input.,<no input>,"def handle_corner_cases(input_string):
    input_string = input_string.lower()
    if 'heavy' in input_string or 'big' in input_string:
        return 'Heavy/Big objects detected!'
    elif 'light' in input_string or 'small' in input_string:
        return 'Light/Small objects detected!'
    else:
        return 'Input not recognized!'"
Optimize the following Python program as much as possible,"def func(string): 
    list_out = [] 
    for s in string: 
        list_out.append(s.upper()) 
    return list_out 
  
list_out = func(""hello"")","def func(string): 
    return [s.upper() for s in string]

list_out = func(""hello"")"
Design a program in Python that takes a list of numbers as input and returns the average.,"Input list: [1,2,3,4,5,6,7]","# Function to return average
def average(lst):
    
    # Calculate sum of list
    sum_num = 0
    for x in lst:
        sum_num += x
        
    # Return average 
    return sum_num / len(lst)

# Sample List
lst = [1, 2, 3, 4, 5, 6, 7]

# Calling average function
print(average(lst))"
Create a function in Python to make a list that contains the sum of each pair of elements in two different lists.,"list1 = [1, 8, 3, 10] 
list2 = [2, 3, 4, 5]","def list_sums(lst1, lst2):
    pairs = list(zip(lst1, lst2))
    sums = [i1+i2 for (i1, i2) in pairs]
    return sums"
"Convert the given code to a comprehensible, more readable form that follows PEP 8 and Python best practices.","number_list = [-5, 0, 4, 78, -3]
 result = [] 
 for i in number_list:
  if i >= 0:
   result.append(i ** 2)","number_list = [-5, 0, 4, 78, -3]
result = [num ** 2 for num in number_list if num >= 0]"
Generate a Python function to generate an equation with given coefficients and variables.,"coefficients: [2, 3, 1], variables: [""x"", ""y"", ""z""]","def generate_equation(coefficients, variables):
 equation = """"
 for i, coeff in enumerate(coefficients):
  equation += str(coeff) + variables[i] + "" + ""
 equation = equation[:-3]
 return equation"
Optimize the following Python code for runtime and memory performance.,"def factorial(n):
    if n == 1:
        return 1
    else:
        return n * factorial(n-1)","def factorial(n):
    if n == 0:
        return 1

    res = 1
    for i in range(2, n+1):
        res *= i
    return res"
Generate a Python program that takes an array as an input and prints each element of the array in a new line.,"[10, 20, 30, 40]","arr = [10, 20, 30, 40]

for num in arr:
    print(num)"
Create a basic Python program to split a given string in words and save them in an array.,"String = ""This is a sentence.""","string = ""This is a sentence.""
words = string.split("" "")
print(words)
# Output: ['This', 'is', 'a', 'sentence.']"
"Using Python, write a program to tokenize a given string.","""This is a sentence""","import re

def tokenize(s):
    tokens = re.findall(r'\w+|[^\w\s]', s, flags=re.UNICODE)
    return tokens

print(tokenize(""This is a sentence""))"
Can you write a python code that extracts the upper case character from a given string?,Input String: Foobar,"input_string = 'Foobar'

upper_case_characters = []

for char in input_string:
    if char.isupper():
        upper_case_characters.append(char)

print(upper_case_characters)"
Rearrange this python code to make it shorter.,"a = 0
b = 1
for i in range(10):
   a, b = b, a + b","a, b = 0, 1
for _ in range(10):
 a, b = b, a + b"
Create a Python function that returns the longest string from a given list.,"[""my"", ""cat"", ""is"", ""lazy""]","def longest_string(strings):
  max_length = 0
  longest_string = """"
  
  for s in strings:
    if len(s) > max_length:
      max_length = len(s)
      longest_string = s
  
  return longest_string

result = longest_string([""my"", ""cat"", ""is"", ""lazy""])
print(result)"
Optimize the following piece of code written in Python,"def add(a, b):
    c = a + b
    return c","def add(a, b):
    return a + b  # remove unnecessary intermediate variable 'c' and return the result directly."
Create a Python function to check if a given number is abundant or not. An abundant number is a number which is less than the sum of its proper divisors.,number = 24,"def is_abundant(number):
    sum = 0
    for i in range(1, number):
        if number % i == 0:
            sum += i
    return sum > number"
Create a python function that given an input array of integers produces a new array that contains the unique integers of the input array.,"[1, 1, 2, 2, 3]","def unique_list(input_list):
    uniques = []
    for i in input_list:
        if i not in uniques:
            uniques.append(i)

    return uniques"
Create a function in Python that prints out the largest value from a given list of numbers.,"list = [2, 4, 1, 6]","def get_max_value(numbers): 
    return max(numbers)

print(get_max_value(list))  # 6"
Write a Python program to add numbers from different columns of a multi-dimensional array.,"[[1, 2, 3], 
[4, 5, 6], 
[7, 8, 9]]","arr = [[1, 2, 3], 
[4, 5, 6], 
[7, 8, 9]] 

# Initialize result 
result = 0

# Iterate every element in the array 
for row in arr: 
  for col in row:
    # Adding elements of each row 
    result = result + col  

# Displaying sum 
print(result)

# Output: 45"
Create a function in Python that takes two numbers as arguments and returns their average.,"2, 3","def average(a, b): 
    return (a + b) / 2

print(average(2, 3))"
Produce a chart of linear equations in Python.,"Equations:
y = 5x + 2
y = -3x + 6","import matplotlib.pyplot as plt

x = [i for i in range(-10, 10)]
y1 = [5*i + 2 for i in x]
y2 = [-3*i + 6 for i in x]

plt.plot(x, y1, label='y = 5x + 2')
plt.plot(x, y2, label='y = -3x + 6')
plt.legend()
plt.show()"
Write a Python program to sort a list according to user's desired order.,"sortList = [4, 2, 6, 3, 5]","def sort_list(lst, order):
    sorted_list = sorted(lst, reverse = order)
    return sorted_list"
"Given a list of words and a target word, write a function in Python that finds the index of target word in the list.","words = [""hello"", ""world"", ""another""], target_word = ""world""","def find_word_index(words, target_word):
    for i, word in enumerate(words):
        if word == target_word:
            return i
    return -1

word_index = find_word_index(words, target_word)
print(word_index)"
"Using a for loop and if block, write a Python program to print numbers divisible by 5.","Start: 1
End: 20","for num in range(1, 20): 
    if num % 5 == 0: 
        print(num)"
Create a Python program to convert a given string in a sentence case.,THIS IS A STRING.,"CaseString = ""THIS IS A STRING.""

def sentence_case(CaseString):
    return CaseString.capitalize()

print(sentence_case(CaseString))"
"Given a string ""Hello World"", write a Python program to generate an encrypted version of the string.",Hello World,"encrypted_string = ''
for c in 'Hello World':
 encrypted_string += chr(ord(c) + 3)

print(encrypted_string) # Khoor Zruog"
Suggest a Python library to monitor the performance of this system,A distributed system that processes large amounts of data on multiple nodes,The Python library 'celery' can be used to monitor the performance of a distributed system. It provides scalability and concurrency capabilities to handle large amounts of data by distributing tasks across multiple nodes. It also offers task monitoring and management through custom metrics and performance logs.
Create a web scraper in Python to crawl a website and collect data about a particular topic.,The URL of the website to be crawled.,"import requests
import bs4

web_url = '<input URL>' # Insert URL here

def scrape(url):
    response = requests.get(url)
    soup = bs4.BeautifulSoup(response.text, 'lxml')

    output = []

    # Scrape the web page to get the required data
    ...

    return output

if __name__ == '__main__':
    print(scrape(web_url))"
Create a program in Python for finding the greatest common divisor of two numbers.,"Number1: 20
Number2: 45","def gcd(a, b):
    while b != 0:
        temp = a
        a = b
        b = temp % b
    return a

print(gcd(20,45))"
"Create a Python program that takes in a list of strings, sorts them, and then prints each string in sorted order.","[""banana"", ""apple"", ""orange"", ""pear""]","def sortStrings(arr):
    arr.sort()
    
    for string in arr:
        print(string)

#Test
arr = [""banana"", ""apple"", ""orange"", ""pear""]
sortStrings(arr) # Outputs: apple banana orange pear"
Develop a Python script that prints the lowest temperature in a given sequence.,"[87, 97, 75, 104]","temps = [87, 97, 75, 104]

min_temp = temps[0]

for temp in temps:
    if temp < min_temp:
        min_temp = temp

print('Lowest temperature: ', min_temp)"
"Given a value for the parameter ""numRows"" and a Python list of lists as input data, write a Python program that prints out a valid HTML table.","numRows: 3
Data: [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","numRows = 3
data = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

print('<table border=""1"">')

for i in range(numRows):
    print('<tr>')
    for j in range(len(data[i])):
        print('<td>' + str(data[i][j]) + '</td>')
    print('</tr>')

print('</table>')"
Write a Python program to predict a value for a given input.,"Input data: [5.1, 3.3, 1.7, 0.5]","from sklearn import datasets 
from sklearn.linear_model import LinearRegression 
  
# load the diabetes datasets 
diabetes = datasets.load_diabetes() 
  
# fit a linear regression model to the data 
model = LinearRegression() 
model.fit(diabetes.data, diabetes.target) 
  
# make prediction 
value = model.predict([[5.1, 3.3, 1.7, 0.5]])
print(value)"
Generate a Python program to find all pythagorean triplets up to a given limit.,limit = 20,"def pythagorean_triplets(limit):
    for a in range(1, limit):
        for b in range(a, limit):
            for c in range(b, limit):
                if (a**2 + b**2) == c**2:
                    yield [a, b, c]

limit = 20
triplets = pythagorean_triplets(limit)
for triplet in triplets: 
    print(triplet)"
Create a Python program to generate a report of a user's sales data.,A list of dictionaries containing sales data.,"import csv

# A list of dictionaries containing sales data
sales_data = [
 { 'name': 'John', 'quantity': 2, 'price': 10.0 },
 { 'name': 'Jane', 'quantity': 3, 'price': 15.0 },
 { 'name': 'Mike', 'quantity': 4, 'price':"
Write a Python program to create a function that takes two strings as parameters and returns true if the first string contains the second string.,"String 1 = ""Hello World!""
String 2 = ""World""","def contains(s1, s2):
 return s2 in s1

string1 = ""Hello World!""
string2 = ""World""

print(contains(string1, string2)) # True"
Calculate the greater of two numbers using Python.,"5, 7","if (5 > 7):
    greater = 5
else:
    greater = 7

print(""The greater number is: "", greater)"
Write a FOR loop to create a Pascal Triangle of size N in Python.,N = 5,"def pascal_triangle(n): 
    trow = [1] 
    y = [0] 
    for x in range(max(n,0)): 
        print(trow) 
        trow=[l+r for l,r in zip(trow+y, y+trow)] 
  
# Driver program to test the above function 
n = 5
pascal_triangle(n)"
"Edit the following Python code such that the function produces output in the format ""<Name> said: '<Message>'.","def generate_message(name, message):
    print(name + ' said: ' + message)","def generate_message(name, message):
    print(name + ' said: ' + ""'"" + message + ""'"")"
Create a correct python code to combine two lists into one.,"listA = [1, 2, 3]
listB = [4, 5, 6]","listA = [1, 2, 3]
listB = [4, 5, 6]

combined_list = listA + listB
print(combined_list)"
Develop a Python program to calculate the sum of all the elements in an array.,"Array = [1,2,3,4,5]","def calculateSum(arr, n): 
	# Initialize result 
	sum = 0
	
	# using foreach loop to find sum 
	for i in arr: 
		sum += arr[i] 
	
	return sum

# Driver code 
arr = [1,2,3,4,5]
n = len(arr) 

print(""Sum is"",calculateSum(arr, n))"
Create a python function for encrypting information that takes a string and a key.,"String = ""This is a secret message""
Key = ""12345678""","import secrets

def encrypt(string, key):
 cipher = ''
 for i in range(len(string)):
 cipher += chr(ord(string[i]) + ord(key[i % len(key)]))
 return cipher

encrypt(""This is a secret message"", ""12345678"") 
# prints ""\x18\x01\x15\x05\x1a\x12\x1b\x1f\x1f\x1e\x10\x04\x1f\x1f\x19\x0f\x02\x03\x07\x08"""
Design a function in Python that takes an array of strings as input and returns all the strings in reversed order.,"data = [""Hello"", ""World"", ""Foo"", ""Bar""]","def reverseStrings(data):
 return [string[::-1] for string in data]

 reversedStrings = reverseStrings(data)
 print(reversedStrings) # [""olleH"", ""dlroW"", ""ooF"", ""raB""]"
Create a Python script that prints a square pattern of * characters with a given size.,size = 5,"# size is the dimension of the square
size = 5

# loop through the rows
for row in range(size):

 # loop through the columns
 for col in range(size):
 print('*', end='') # end='' prevents line break

 print() # prints new line"
"Given two integers, write a Python function to find their greatest common divisor (GCD).","num1 = 24
num2 = 18","def find_gcd(num1, num2):
    gcd = 1
    while num2 != 0:
        temp = num2
        num2 = num1 % num2
        num1 = temp
        gcd = num1
    return gcd"
Develop a machine learning algorithm in Python to identify apples from bananas.,No Input,"import numpy as np
import matplotlib.pyplot as plt
from sklearn.svm import SVC

# Load data
X = np.array([[1,2,3], [-1,2,5], [-1,2,7], [5,5,5], [3,3,3], [5,5,7]])
y = np.array([0, 0, 0, 1, 0, 1])

# Initialize classifier
clf = SVC(kernel='linear')

# Fit data
clf.fit(X, y)

# Test classifier
x_test = np.array([[2,2,2], [4,4,4]])

prediction = clf.predict(x_test)
print(prediction)"
Create a python command line interface to search a given array.,"Six colors: red, orange, yellow, green, blue, purple","def search_colors():
    colors = [""red"", ""orange"", ""yellow"", ""green"", ""blue"", ""purple""]
    query = input(""What color would you like to search for? "")
    if query in colors:
        print(""The color exists in the list."")
    else:
        print(""The color does not exist in the list."")"
Design an algorithm in Python for linear search.,"[3, 1, 5, 8], 8","def linear_search(arr, target):    
    for i in range(len(arr)):
        if arr[i] == target:
            return i
    return -1"
"Using the input as a guide, modify the following Python code to generate a new list containing integers which are divisible by 5 in the input list.","lst = [5, 10, 15, 20, 25, 30]","lst = [5, 10, 15, 20, 25, 30]

divisible_by_5 = [num for num in lst if num%5 == 0]
print(divisible_by_5)"
Write a loop in Python to iterate through a list and print all elements that have an even length.,"List: [""apples"", ""oranges"", ""bananas"", ""pineapples""]","list_x = [""apples"", ""oranges"", ""bananas"", ""pineapples""]
for item in list_x:
 if(len(item) % 2 == 0):
  print(item)
#output: apples, oranges, pineapples"
Edit an existing Python program to calculate the area of a circle.,"import math
def area(radius):
    return math.pi * radius ** 2","import math
def area(radius):
    area = math.pi * radius ** 2
    return area"
Design and write a Python program to extract all public email addresses from a given string,"""My email is john@example.com and yours is john@gmail.com.""","import re

def extract_emails(text):
  emails = re.findall(r""[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+"", text)
  return emails

extracted_emails = extract_emails(""My email is john@example.com and yours is john@gmail.com"")
print(extracted_emails)"
Generate a code snippet in Python to split a given string into substrings based on a specific delimiter.,"""1, 2, 3, 4""","str = ""1, 2, 3, 4""
list = str.split(', ') 
print(list) # Output is ['1', '2', '3', '4']"
Write a function in Python to sort a given list according to the second element of the sublists.,"[[1,2], [2,3], [3,1]]","def sort_by_second_element(arr):
    def get_second_element(item):
        return item[1]
    return sorted(arr, key = get_second_element)

arr = [[1,2], [2,3], [3,1]]
result = sort_by_second_element(arr)
print(result)"
Rewrite a Python script in Swift to generate random string of length n.,Length: 8,"import Foundation

func randomString(length: Int) -> String {
    let letters = ""abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789""
    return String((0..<length).map { _ in letters.randomElement()! })
}

let str = randomString(length: 8)
print(str)"
Generate a random password using the Python function provided in the input.,"def randomString(stringLength=8):
    letters = string.ascii_lowercase
    return ''.join(random.choice(letters) for i in range(stringLength))",print(randomString())
Design a Python program to search for a substring in a given string.,"str = ""This is a string"";
substr = ""is""","def searchSubstring(str, substr):
  for i in range(len(str)):
    if str[i:i+len(substr)] == substr:
      return i

    return -1"
Create a function in Python that takes a list of numbers and returns the cumulative sum.,"1, 2, 3","def cum_sum(lst):
 result = []
 cumulative = 0
 for num in lst:
  cumulative += num
  result.append(cumulative)
 return result"
Build a decision tree classifier in Python that classfies the given data points.,"[[2,1,1], [2,2,0], [2,0,1], [1,1,1], [1,0,1], [1,2,0], [0,2,0], [0,1,1], [0,0,1]]","import numpy as np
from sklearn.tree import DecisionTreeClassifier

X = np.matrix('2 1 1; 2 2 0; 2 0 1; 1 1 1; 1 0 1; 1 2 0; 0 2 0; 0 1 1; 0 0 1')
Y = np.array([1, 0, 1, 1, 1, 0, 0, 1, 1])

model = DecisionTreeClassifier().fit(X,Y)"
Convert the JavaScript code snippet to Python.,"```
function sum(a, b) {
  return a + b;
}
```","def sum(a, b):
    return a + b"
Come up with a correct approach to optimize the following python program.,"numbers = [1, 2, 3, 4, 5, 6]

for x in numbers:
    print(x)","numbers = [1, 2, 3, 4, 5, 6]

print(*numbers, sep='\n')"
Create a command line utility in Python that takes as input a search query and outputs a list of relevant webpages for the query.,"Search query: ""What is code generation?""","import requests

query = input('Search query: ')
url = 'https://www.google.com/search?q=' + query

r = requests.get(url)

if r.status_code == 200: 
    print('Search results:')
    for item in r.json()['items']:
        print(item['title'] + ' - ' + item['url'])
else:
    print('An error occurred!')"
Write a Python function to print the first n rows of Pascal's triangle.,5,"def pascal_triangle(rows): 
 triangle = [[1]] 
 for i in range(rows - 1): 
 last_row = triangle[-1]
 new_row = [1] 
 for j in range(len(last_row) - 1): 
 new_row.append(last_row[j] + last_row[j+1]) 
 new_row.append(1) 
 triangle.append(new_row)
 
 for row in triangle: 
 print(row)

pascal_triangle(5)"
Edit the following python code to ensure that it is free from exceptions.,"def div(x, y):
    return x / y","def div(x, y):
    if y == 0:
        raise ValueError(""Cannot divide by 0"")
    return x / y"
Develop a python program to feature scale an input array,"[1,2,3,4,5]","# feature scaling function
def feature_scale(arr):
    min_arr = min(arr)
    max_arr = max(arr)
    y = (arr-min_arr)+1
    scaled = y/(max_arr-min_arr)
    return scaled

# example usage
arr = [1,2,3,4,5]
scaled_arr = feature_scale(arr)
print(scaled_arr) # Output: [0.  0.2 0.4 0.6 0.8]"
Write a machine learning model in Python to detect the sentiment of a text document.,"The text document is ""This movie was horrible and I never want to watch it again.""","def sentiment_model(text):
 pred = model.predict([text])
 
 if pred == 0:
  sentiment = 'Positive'
 elif pred == 1:
  sentiment = 'Negative'
 
 return sentiment

sentiment = sentiment_model(""This movie was horrible and I never want to watch it again."")
print(sentiment) # Output: Negative"
Write a Python program to pad a 3D array along its first two axes.,"arr = [[[1, 2, 3], [4, 5, 6]],
       [[7, 8, 9], [10, 11, 12]]]","import numpy as np

arr = np.array([[[1, 2, 3], [4, 5, 6]],
                [[7, 8, 9], [10, 11, 12]]])

# Pad the array with 0s along its first two axes

arr_pad = np.pad(arr, ((1, 1), (1, 1), (0, 0)), 'constant', constant_values=0)"
Design a function in Python that accepts a string and prints the number of occurrences of each letter in the string.,"""Hello, World!""","def count_letters(text):
    letters_count = dict()

    for char in text:
        if char not in letters_count:
            letters_count[char] = 1
        else:
            letters_count[char] += 1

    return letters_count

if __name__ == '__main__':
    text = 'Hello, World!'
    print(count_letters(text))"
Write a Python program to count and display the number of positive numbers from a given list of integers.,"[-2, 3, 4, -7, 6]","def countPositive(nums):
    count = 0
    for num in nums:
        if num > 0:
            count += 1
    print(""Number of positive numbers:"", count)

nums = [-2, 3, 4, -7, 6]
countPositive(nums)

# Output: Number of positive numbers: 3"
Write a function in Python to find the kth smallest element in an unsorted array.,"input_array = [7, 2, 5, 9, 6], k = 4","def kth_smallest(input_array, k):
    input_array.sort()
    return input_array[k-1]"
Write a Python program to print all the numbers from the given list which are divisible by 7.,"[7, 14, 21, 28, 35, 42, 49]","def divisible_by_seven(number_list):
    for i in number_list:
        if i % 7 == 0:
            print(i)"
Design a Python script to access a REST API.,`https://example.com/api/v1/data`,"import requests

url = 'https://example.com/api/v1/data'

response = requests.get(url)
data = response.json()

# process the data here
# ..."
Develop an algorithm to generate a random integer between 0 and n in Python.,n = 6,"import random

def random_number(n):
  return random.randint(0, n)

random_num = random_number(6)
print(random_num)"
Re-write the following Python code using list comprehensions.,"lst = []
for each in range(5):
  x = each*each
  lst.append(x)",lst=[each*each for each in range(5)]
Write a function in Python for finding the maximum subarray sum of an array.,"arr = [4,2,1,4,5,-7,2,4]","def max_subarray_sum(arr):
	max_so_far = 0
	max_ending_here = 0	
	
	for i in range(0, len(arr)): 
		max_ending_here = max_ending_here + arr[i] 
		if max_ending_here < 0: 
			max_ending_here = 0	 
		if (max_so_far < max_ending_here): 
			max_so_far = max_ending_here 
			
	return max_so_far 

result = max_subarray_sum(arr)
print(result)"
Write a Python program to classify a given set of inputs into clusters using k-means algorithm,"data_points = [[2, 2], [5, 5], [2, 4], [5, 4], [6, 2], [7, 3]]","from sklearn.cluster import KMeans 
import numpy as np 

data_points = np.array(data_points) 

kmeans = KMeans(n_clusters=2,random_state=0).fit(data_points) 
clusters = kmeans.labels_ 
  
print(clusters)"
Write a Python script to compress a directory using the gzip library.,source directory: example_dir,"import gzip
import os

# Walk through the source directory
for root, dirs, files in os.walk('example_dir'):
    # Gzip each file
    for file in files:
        with open(os.path.join(root, file), 'rb') as f_in:
            with gzip.open(os.path.join(root, file + '.gz'), 'wb') as f_out:
                f_out.writelines(f_in)"
Write a Python program for a program that checks if two strings are palindromes.,"Input strings: “radar”, “dad”","def is_palindrome(str1, str2):
 # Reverse str1
 reverse_str1 = str1[::-1]

 # Check if str1 is the same as the reversed version of str2
 if reverse_str1 == str2:
 return True
 else:
 return False

# Sample input
str1 = 'radar'
str2 = 'dad'

# Check if the strings are palindromes
print(is_palindrome(str1, str2)) # Output: True"
Optimize this piece of code in Python to minimize the runtime complexity.,"def find_pair(arr, target):
    for i in range(len(arr)):
        for j in range(len(arr)):
            if arr[i] + arr[j] == target:
                return True
    return False","def find_pair(arr, target): 
    myset = set() 
    for x in range(len(arr)): 
        if target-arr[x] in myset: 
            return True 
        myset.add(arr[x]) 
          
    return False"
Write a Python program to find the maximum of a given array.,"arr = [10, 9, 11, 12, 5]","def find_max(arr):
    max = arr[0]
    for i in arr: 
        if i > max: 
            max = i 
  
    return max
  
# Driver Code  
arr = [10, 9, 11, 12, 5]
maximum = find_max(arr) 
print(""Maximum element is:"", maximum)"
Create a python program to detect the languages of the given text,"A text sample such as ""Hello, my name is John Smith""","def detect_language(txt):
    '''This function will detect the language of the given text.'''
    import langdetect
    lang = langdetect.detect(txt)
    return lang

if __name__ == ""__main__"":
    txt = ""Hello, my name is John Smith""
    print(detect_language(txt))"
Transform a given string to uppercase.,"string = ""Python Programming""","def to_upper(string):
    return string.upper()

string = ""Python Programming""
print(to_upper(string))"
"Construct a Python function that takes two integers ""a"" and ""b"" and returns the sum of their squares.",2 and 3,"def sum_sqr(a, b):
    return a*a + b*b

print(sum_sqr(2, 3))"
Generate a shell script to install a specific version of Python and two modules.,"version=3.6.2
 modules=matplotlib, Django","#!/bin/bash

# Download and install Python
wget https://www.python.org/ftp/python/${version}/Python-${version}.tgz
tar -xvzf Python-${version}
cd Python-${version}/
./configure
make
make install

# Install modules
pip install ${modules[0]}
pip install ${modules[1]}"
Convert a given Python program into pseudocode.,"# Python program to print even numbers in a list 
numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

for num in numbers:
    if num % 2 == 0:
        print(num)","// pseudocode
numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
FOR num IN numbers
    IF num modulus 2 is equal to 0
        PRINT num"
Create a Node.js script for returning the longest string in an array.,"[""javascript"", ""ruby"", ""python"", ""java""]","const arr = [""javascript"", ""ruby"", ""python"", ""java""];

const longestString = (arr) => {
 let longest = arr[0];
 for (let i = 1; i < arr.length; i++) {
 if (arr[i].length > longest.length) {
 longest = arr[i];
 }
 }
 return longest;
};

const longestStr = longestString(arr);

console.log(longestStr); // Output: ""javascript"""
"Using the input, write a Python code to find the armstrong number.",153,"def is_armstrong_number(number):
    result = 0
    n = len(str(number))
    for num in str(number):
        result += int(num)**n
    return result == number

result = is_armstrong_number(153)
print(result)"
Write a Python program to convert a given string to all uppercase letters.,hello world,"string = ""hello world""
string_upper_characters = string.upper()
print(string_upper_characters)"
Optimize a recursive Fibonacci sequence program written in Python.,"def Fibonacci(n):
    if n <= 0:
        return 0
    elif n == 1:
        return 1
    else:
        return Fibonacci(n-1)+Fibonacci(n-2)","def Fibonacci(n):
    if n <= 0:
        return 0
    elif n == 1:
        return 1
    else:
        a = 0
        b = 1
        for i in range(2,n+1):
            c = a + b
            a = b
            b = c
        return b"
Create a Python function that takes a dictionary as input and returns a list containing the values sorted by the key.,"dictionary = {
 'John': 23,
 'Alice': 27,
 'Bob': 17,
 'Eve': 33
}","def sort_dict_by_key(dictionary):
 sorted_list = []
 for key in sorted(dictionary):
 sorted_list.append(dictionary[key])
 return sorted_list

# Example
mydict = {
 'John': 23,
 'Alice': 27,
 'Bob': 17,
 'Eve': 33
}

print(sort_dict_by_key(mydict))
# Output: [17, 23, 27,33]"
Write a Python program to filter out strings from a list of strings containing specific characters.,"list_of_strings = [""Hello"", ""World"", ""1"", ""0"", ""This is a string.""]","def filter_strings(list_of_strings):
    return list(filter(lambda x: x.isalpha(), list_of_strings))

print (filter_strings(list_of_strings)) # Output: ['Hello', 'World', 'This is a string.']"
Create a sorting algorithm in Python that takes in an array of integers and sorts it in ascending order.,"[4, 2, 7, 1, 3]","def sort_ascending(arr):
    swapped = True
    while swapped:
        swapped = False
        for i in range(len(arr)-1):
            if arr[i] > arr[i+1]:
                arr[i], arr[i+1] = arr[i+1], arr[i]
                swapped = True
    return arr

print(sort_ascending([4, 2, 7, 1, 3]))"
Create a Python script that counts the number of vowels from a given string.,"""This is an example string""","def count_vowels(string):
    count = 0
    for char in string:
        if char in ""aeiouAEIOU"":
            count += 1
    return count

string = ""This is an example string""
vowels = count_vowels(string)

print(f""Number of vowels in the given string: {vowels}"")"
Create a class in Python that takes an array as an argument and reverses the elements.,"[1, 2, 3, 4]","class ReverseArray:
 def __init__(self, array):
 self.array = array
 
 def reverse(self):
 self.array.reverse()
 
 # To test with given input
 array = [1, 2, 3, 4]
 rev_array = ReverseArray(array)
 rev_array.reverse()
 print(array) # Output: [4, 3, 2, 1]"
Develop an algorithm in Python for clustering a set of data points.,"Input Data (x, y, z): [(1, 2, 3), (4, 5, 6), (7, 8, 9)]","from sklearn.cluster import KMeans
import numpy as np

# Create array of the data points
data_points = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])

# Calculate clusters
kmeans = KMeans(n_clusters=3).fit(data_points)

# Get labels for each point
labels = kmeans.predict(data_points)

# Print clusters
print(labels) # Output: [0, 1, 2]"
Generate a Python program to find the nearest prime number greater than an inputted number,26,"#import libraries
import sympy

# define the input
num = 26

# set the flag to True
flag = True

# check for prime numbers
while flag:
    num += 1
    if sympy.isprime(num):
        flag = False

# print the output
print(num)"
"Write a Python script to print all prime numbers between two numbers, a and b (where a<b).","a = 11
b = 20","for num in range(a, b+1): 
   if num > 1: 
       for i in range(2, num): 
           if (num % i) == 0: 
               break
       else: 
           print(num)"
Generate a python program to collect all elements of a given list that are of even length.,"list = [""a"", ""bb"", ""ccc"", ""dddd"", ""eee""]","def even_length_elements(my_list):
  even_length_list = list()
  for elem in my_list:
     if (len(elem) % 2 == 0):
        even_length_list.append(elem)
  return even_length_list"
Generate a Python function to check whether a given list contains a given integer.,"[2, 4, 6], 4","def check_for_int(lst, int):
    if int in lst:
        return True
    else:
        return False
    
lst = [2, 4, 6]
int = 4

is_found = check_for_int(lst, int)
print(is_found)"
Create a python program to reverse a string passed as input.,Hello World!,"def reverse_string(stringToReverse):
    reversedString = """"
    for i in reversed(stringToReverse):
        reversedString += i
    return reversedString
    
stringToReverse = input(""Enter string to reverse: "")
result = reverse_string(stringToReverse)
print(result)"
Create a python function that prints out the largest element in an array.,"[1,4,7,12,-1]","def findLargestElement(arr):
    largest_element = arr[0]
    for element in arr:
        if element > largest_element:
            largest_element = element
    return largest_element

arr = [1,4,7,12,-1]
print(findLargestElement(arr))"
Optimize the following python code array to get the maximum value from it in one pass.,"[-5, 2, 3, 4, 6, -8]","def find_max(arr):
  max_so_far = arr[0]
  current_max = arr[0]
  
  for i in range(1, len(arr)):
    current_max = max(arr[i], current_max + arr[i])
    max_so_far = max(max_so_far, current_max)
  
  return max_so_far

arr = [-5, 2, 3, 4, 6, -8]
max_val = find_max(arr)

print(max_val) # 10"
Create a Python program that takes in two strings and returns an integer indicating the number of common substrings between the two strings.,"s1 = ""abcd"", s2 = ""bae""","def num_common_substrings(s1, s2):
    count = 0
    for i in range(len(s1)):
        for j in range(len(s2)):
            if s1[i] == s2[j]:
                count += 1
    return count

result = num_common_substrings(""abcd"", ""bae"")
print(result)"
Write a Python program to create an array of N zeros.,N = 5,"import numpy

def create_zeros_array(N):
  return numpy.zeros(N)

result = create_zeros_array(N)
print(result)"
"Create a Python program that takes a list of numbers, and finds a pair of numbers in the list whose sum equals the given number","[2, 3, 4, 5], 5","def find_pair_with_sum(nums, target):
  seen = set()
  for num in nums:
    if target - num in seen:
      return [target - num, num]
    seen.add(num)

print(find_pair_with_sum([2, 3, 4, 5], 5))"
"Write a function in Python to convert a given time in hours, minutes and seconds, to a total number of seconds.","hours: 2
minutes: 3
seconds: 4","def time_to_seconds(hours, minutes, seconds): 
     return (hours * 3600) + (minutes * 60) + seconds
 
result = time_to_seconds(2, 3, 4) 
print(result)"
Design a function in Python that removes any characters from a given string that appears 2 or more times.,"""aabcdbb""","def remove_duplicates(string): 
    res = """" 
    for ch in string: 
        if string.count(ch) < 2: 
            res += ch 
    return res

string = ""aabcdbb""
print(remove_duplicates(string))  # prints acdb"
Write a function in Python that reads in a 2D list of size NxM and returns a list of list of size MxN.,"[[1, 2, 3],
 [4, 5, 6],
 [7, 8, 9]]","def transposeMatrix(list2D):
 return list(map(list, zip(*list2D)))"
Develop a python code to find out the frequent items from a given list.,"list1 = [1,2,3,4,5,6,7,2,2,2,2,8,8,8,8,9,9,9]","from collections import Counter
list1 = [1,2,3,4,5,6,7,2,2,2,2,8,8,8,8,9,9,9]

# Most common items in the list
data = Counter(list1) 
  
# Printing most common items 
print(data.most_common()) # Output: [(2, 4), (8, 4), (9, 3), (1, 1), (3, 1), (4, 1), (5, 1), (6, 1), (7, 1)]"
Modify the following python script to generate outputs in reverse chronological order.,"timetable = [""Tuesday"", ""Wednesday"", ""Thursday"", ""Friday""]

for day in timetable: 
    print(day)","timetable = [""Tuesday"", ""Wednesday"", ""Thursday"", ""Friday""]

for day in reversed(timetable): 
    print(day)"
Write a Python function to generate a list of all prime numbers to a given maximum,max = 100,"def generate_primes(max): 
    primes_list = [2] 
    for i in range(3, max + 1): 
        curr = True 
        for p in primes_list: 
            if i % p == 0: 
                curr = False 
        if curr: 
            primes_list.append(i) 
    return primes_list"
Create a python code to check if all characters are unique in a given string,string = 'abcdefeb',"def is_unique(string):
    chars = set()
    for char in string:
        if char in chars:
            return False
        else:
            chars.add(char)
    return True

print(is_unique(string))"
Write a Python program to find the middle element of a list.,"[1,3,5,7,9,11]","def middle_element(list):
    mid = len(list) // 2
    return list[mid]

result = middle_element([1,3,5,7,9,11])
print(result)"
Generate a python program that creates a new list by appending an element to the last of an existing list.,"[1, 2, 3]","def appendElementToList(list, element):
     list.append(element)
     return list

list = [1, 2, 3]
element = 4
print(appendElementToList(list, element))"
Design a Python algorithm to find the largest element in a list.,"lst = [3, 45, 18, 5, 9]","def find_largest_element(lst):
   largest_element = None
   for elem in lst:
      if largest_element is None or largest_element < elem:
         largest_element = elem
  return largest_element

largest_element = find_largest_element(lst)
print(largest_element) # 45"
Optimize a given Python program such that it runs efficiently in fewer lines of code.,"def add_two_numbers():
    a = 5
    b = 7
    sum = a + b
    return sum","def add_two_numbers():
    return 5 + 7"
Rewrite this python function to make it more concise.,"def calculate_average(scores):
    total = 0 
    for score in scores:
        total += score
    return total/len(scores)","def calculate_average(scores):
    return sum(scores)/len(scores)"
Write a Python loop that prints out a list of random numbers between 0 and 100.,Number of random numbers: 5,"import random

random_numbers = []

for i in range(5):
 number = random.randint(0,100)
 random_numbers.append(number)
 print(random_numbers)"
Produce a program in python which takes a given list of numbers and creates a dictionary where each number is the key and its multiple of the given number is the value.,"my_list = [3, 5, 7]","def create_dictionary(my_list):
    res = {num: num * 2 for num in my_list}
    return res

# run the code
my_list = [3, 5, 7]

res = create_dictionary(my_list)
print('The dictionary is ' + str(res))"
Develop an algorithm in Python for sorting the following array in ascending order.,"[9, 8, 11, 5]","def bubble_sort(arr):
    n = len(arr)
    for i in range(n):
        for j in range(0, n - i - 1):
            if arr[j] > arr[j + 1]:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]

array = [9, 8, 11, 5]
bubble_sort(array)
print(array)"
Create a python code snippet to count the frequencies of words in a given string,"string = ""This is a test string""","def countFrequencies(string):
    words = string.split()
    freq_dict = {}
    for word in words:
        if word not in freq_dict:
            freq_dict[word] = 1
        else:
            freq_dict[word] += 1
    return freq_dict

# example
result = countFrequencies(""This is a test string"")"
"Using Python, write a script to detect any outliers in the given dataset.","Data points: [3, 5, 7, 8, 9, 2, 10, 11, 12, 60]","import numpy as np 
def detect_outliers(data): 
    outliers = [] 
    data = np.array(data) 
    mean = np.mean(data) 
    std = np.std(data) 
    for i in data: 
        z_score = (i - mean) / std
        if np.abs(z_score) > 3:
            outliers.append(i) 
    return outliers"
Create a Python function that takes a string and finds the longest word in it.,"sentence = ""This is an example of a sentence with some words""","def longestWord(sentence): 
    longestWord = ''
    maxLength = 0
    for word in sentence.split(' '):
        if len(word) > maxLength:
           maxLength = len(word)
           longestWord = word
    return longestWord

longest_word = longestWord(sentence)
print('The longest word is: '+ longest_word)"
Create a Python program to remove punctuations from the given sentence,"He loves to eat Italian; pizza, pasta, and gelato","import string

def remove_punctuations(sentence):
    translator = str.maketrans('', '', string.punctuation)
    return sentence.translate(translator)

print(remove_punctuations(""He loves to eat Italian; pizza, pasta, and gelato""))"
Design a code generator to convert a Python code into Javascript code.,"def hello_world():
 print(""Hello World"")","function helloWorld() {
 console.log(""Hello World"");
}"
Generate a Python program for extending a list with strings. The program should take a string as input and create a new list containing the string and all the strings from the input list.,"inputList = [""Hello"", ""World""]
newString = ""Hi""","inputList = [""Hello"", ""World""]
newString = ""Hi""

outputList = []

for string in inputList:
    outputList.append(string)

outputList.append(newString)

print(outputList)"
Generate a Python code that prints the Fibonacci numbers up to n.,10,"def Fibonacci(n): 
    a = 0
    b = 1
  
    if n == 1: 
        print(a) 
    else:
        print(a) 
        print(b)
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
            print(b)

Fibonacci(10)"
Write a Python program to print the square root of a given number input from the user.,"""64""","import math

num = float(input(""Enter a number: ""))

# checking if the number is negative
if num < 0:
    print(""The square root of the given number cannot be computed"")
else:
    print(""The square root of the given number is:"",math.sqrt(num))"
Rewrite the following if/else statement in one line of Python code,"if condition:
    do_this()
else:
    do_that()",do_this() if condition else do_that()
Write a Python program to find the maximum and minimum numbers from a non-empty list.,"[5, 6, 10, -9, 3, 21]","# Initializing the list
list1 = [5, 6, 10, -9, 3, 21]

# Maximum and Minimum in a List

max = list1[0]
min = list1[0]

# Print all the list elements
for i in range(0, len(list1)):
    if list1[i]>max:
        max = list1[i]
    if list1[i]<min:
        min = list1[i]

print(""The max value is:"", max)
print(""The min value is:"", min)"
Generate a Python program to find the frequency of an element in a list.,"lst = [1, 2, 3, 4, 1, 2, 1]","def find_frequency(lst, element):
    return lst.count(element)

lst = [1, 2, 3, 4, 1, 2, 1]
print(find_frequency(lst, 1))"
Write an algorithm to sort an array of integers in Python.,"[2,1,3,4,6,5]","def bubble_sort(nums):
    size = len(nums)
    for i in range(size):
        for j in range(size-1):
            if nums[j] > nums[j+1]:
                temp = nums[j]
                nums[j] = nums[j+1]
                nums[j+1] = temp
    return nums

print(bubble_sort([2,1,3,4,6,5]))"
Develop a python program that detects and corrects spelling mistakes in a given string.,"String: ""The quik brown foox jumped oevr the lasy dog.""","import re

def spell_check(s):
 corrected = re.sub(r'\bfoox\b', 'fox', s)
 corrected = re.sub(r'\boevr\b', 'over', corrected)
 corrected = re.sub(r'\blasy\b', 'lazy', corrected)
 return corrected

print spell_check(""The quik brown foox jumped oevr the lasy dog."")"
Write a Python script to split a string into a list based on the given delimiter.,"string: ""The,quick,brown,fox"" ; delimiter: "",""","def split_string(string, delimiter):
    return string.split(delimiter)"
Test the following Python code and identify a bug,"not_a_number = 'A123'
number = int(not_a_number)","This code will result in a `ValueError` because `int()` cannot convert the string 'A123' into an integer. To fix this, you can use `try/except` statements to catch the error and handle it appropriately.

try: 
 number = int(not_a_number)
except ValueError as e:
 print(f'Error converting {not_a_number} to an integer: {e}')"
Write an efficient algorithm to optimize the given code in Python.,"def my_process(data):
    result = [] 
    for item in data: 
        processed_data = do_process(item) 
        result.append(processed_data) 
    return result","def my_process(data):
    result = [] 
    for item in data: 
        processed_data = do_process(item) 
        result.append(processed_data) 
    return result

def my_optimized_process(data):
    return [do_process(item) for item in data]"
Create a Python function to calculate the sum of all numbers from 0 to the input number.,5,"def sum_to(num):
    sum = 0
    for i in range(num+1):
        sum += i
    return sum
 
num = 5
print(sum_to(num))   # 15"
Integrate the following logic into a python program,"Read a number and print ""OK"" if the number is greater than 10, and print ""Not OK"" otherwise.","num = int(input(""Enter a number: ""))
if num > 10:
    print(""OK"")
else:
    print(""Not OK"")"
Write a Python program to print the elements of a list from the last to the first.,"_list = [1,2,3,4,5]","_list = [1,2,3,4,5]

# Iterate through the list in reverse order
for i in range(len(_list) - 1, -1, -1): 
    print(_list[i]) 
  
# Output: 
# 5 
# 4 
# 3 
# 2 
# 1"
Create a Python function that takes two strings and returns true if the first string is a subsequence of the second.,"String 1: abc
String 2: qaxbcy","def is_subsequence(str1, str2):
    i = 0
    j = 0

    while(i < len(str1) and j < len(str2)):
        if str1[i] == str2[j]:
            i += 1
        j += 1

    return i == len(str1)"
"Write a function in Python that takes a single argument, an unsigned integer, and returns the binary representation of that argument as a string.",number = 5,"def IntToBinString(number):
    if number == 0:
        return ""0""
    ret = """"
    while number > 0:
        if number % 2 == 1:
            ret = ""1"" + ret
        else:
            ret = ""0"" + ret
        number //= 2
    return ret"
Write a Python program to calculate the Root Mean Square Error (RMSE) error value for a given prediction.,"y_predicted = [1, 2, 3] 
y_actual = [2, 3, 4]","from sklearn.metrics import mean_squared_error

def calculate_rmse(y_predicted, y_actual):
    error = mean_squared_error(y_predicted, y_actual)
    rmse = error**0.5
    return rmse

y_predicted = [1, 2, 3]
y_actual = [2, 3, 4]
rmse = calculate_rmse(y_predicted, y_actual)
print(rmse) # Output: 1.0"
Suggest a valid Python syntax to calculate the sum of two variables using lambda,"a = 3, b = 4","sum = lambda a, b : a + b
print(sum(3,4))"
Combine 2 strings and reverse the result in Python.,"words = ""Hello ""
words2 = ""world!""","words = ""Hello ""
words2 = ""world!""

combined = words + words2
result = combined[::-1]

print(result)"
Implement a machine learning model in Python for predicting the price of a house given some features.,"X = [[3, 1200, 8], [4, 1800, 8], [5, 1100, 9]]
Y = [150000, 175000, 180000]","from sklearn.linear_model import LinearRegression

X = [[3, 1200, 8], [4, 1800, 8], [5, 1100, 9]]
Y = [150000, 175000, 180000]

model = LinearRegression()
model.fit(X, Y)

prediction = model.predict([[7, 2000, 10]])
print(prediction)"
Write a 50 lines of code snippet in Python that implements linear search algorithm.,"A list of integers: [1, 4, 3, 2, 5]","def linear_search(arr, target):
 for i in range(len(arr)):
 if arr[i] == target:
 return i
 
 return -1

# Test array 
arr = [1, 4, 3, 2, 5] 
target = 3

# Function call 
result = linear_search(arr, target) 
  
if result != -1: 
 print (""Element is present at index"", result) 
else: 
 print (""Element is not present in array"")"
Generate a code in Python to find the index of the smallest element in a given list of numbers.,"[4, 2, 5, 12, 7]","def index_min(arr):
    min_index = 0
    for i in range(1,len(arr)):
        if arr[i] < arr[min_index]:
            min_index = i
    return min_index"
Implement a customized Linear Search algorithm in Python,No input,"#Function to implement Linear Search 
def linear_search(arr, x): 
    for i in range(len(arr)): 
        if arr[i] == x: 
            return i
    return -1
  
#Test 
arr = [1, 2, 3, 4, 5, 6] 
x = 4
  
#Function call 
result = linear_search(arr, x) 
  
if result != -1: 
    print ""Element is present at the index"", result 
else: 
    print ""Element is not present in the array"""
Create a visualization in Python using Matplotlib that displays the top 5 most popular programming languages.,"x_values = [""Python"", ""Java"", ""C++"", ""Javascript"", ""C#""]
y_values = [45, 25, 15, 10, 5]","import matplotlib.pyplot as plt

x_values = [""Python"", ""Java"", ""C++"", ""Javascript"", ""C#""]
y_values = [45, 25, 15, 10, 5]

plt.bar(x_values, y_values)

plt.title(""Popular Programming Languages"")
plt.ylabel(""Percentage of Use"")
plt.xlabel(""Languages"")

plt.show()"
Create a Python program to search through a given dictionary and output the values of given keys.,"Input dictionary = {'name': 'John', 'age': 30, 'height': 170}
Input keys = ['name','age']","def search_dictionary(dictionary, keys):
    output = []
    for key in keys:
        output.append(dictionary[key])
    return output"
Generate a correct Python program to print out the sequence of numbers in ascending order from a given list.,"[10, 5, 2, 8, 12]","for i in sorted([10, 5, 2, 8, 12]):
        print(i)"
Perform a linear-time search on a given list of numbers in Python.,"lst=[5,3,7,2,1]
x = 3","def linear_search(lst, x):
    for i in range(len(lst)):
        if lst[i] == x:
            return i
    return -1

print(linear_search([5,3,7,2,1], 3))"
Develop a program in Python to find the largest number divisible by 3 from a given list.,"The list of numbers is [8, 5, 12, 15, 9].","def divisibleByThree(lst):
 result = 0

 for num in lst:
 if (num % 3 == 0) and (num >= result):
 result = num
 
 return result

lst = [8, 5, 12, 15, 9]

print(divisibleByThree(lst))
# Output: 15"
"Generate a Python script that filters a list of strings, keeping only those that have a length greater than 5 characters.","words = [""hello"", ""world"", ""example"", ""test""]","def filter_words(words): 
    filtered_words = [] 
    for word in words: 
        if len(word) > 5: 
            filtered_words.append(word) 
    return filtered_words 

words = [""hello"", ""world"", ""example"", ""test""]

filtered_words = filter_words(words) 

print(filtered_words)  # Output: ['example', 'test']"
Generate a Python program to classify emails as either spam or not given a list of words,"emails = [""how are you?"", ""buy now!"", ""save 50%""]","def classify_emails(emails):
    result = []
    for email in emails:
        words = email.split("" "")
        is_spam = False
        for word in words:
            if word in ['buy', 'now', 'save']:
                is_spam = True
                break
        result.append(is_spam)
    return result"
Create a web scraper using Python and BeautifulSoup to extract the prices of a product from an online store,https://example.com/product/123,"import requests
from bs4 import BeautifulSoup

url = 'https://example.com/product/123'
response = requests.get(url)
soup = BeautifulSoup(response.text, 'html.parser')

price_block = soup.find('div', class_='price')
prices = [float(price.text) for price in price_block.find_all('span')]

print(f""Prices for {url} are {prices}"")"
Combine the given lists in Python and sort the result in ascending order.,"list1 = [10, 20, 40, 60, 70, 80]
list2 = [5, 15, 25, 35, 45, 60]","# combine the two lists
combined_list = list1 + list2

# sort the list in ascending order
combined_list.sort() 
print(combined_list)"
edit the given Python program to delete an elements at a given position,"def delete(list,N):
    first_part = list[:N] 
    last_part = list[N+1:]
    list = first_part + last_part
    return list","def delete(list,N):
    first_part = list[:N] 
    last_part = list[N+1:]
    list = first_part + last_part
    return list
 
list1 = [1,2,3,4,5]
N = int(input('Enter the index of the element to be deleted: '))
list1 = delete(list1,N)
print(list1)"
Optimize a given Python function to run faster.,"def lower_string(string):
    return string.lower()","def lower_string(string):
    return string.strip().lower()"
Write a Python program to identify numbers from a comma-separated string.,"mystring = ""1,2,3,4,5,6,7,8,9""","mystring = ""1,2,3,4,5,6,7,8,9""

numbers = mystring.split("","")
for num in numbers:
    print(int(num))"
Generate a Python script to sort a list of integers,"Input: [3, 8, 1, 5, 6]","def sort_list(my_list):
    my_list.sort()
    return my_list

print(sort_list([3,8,1,5,6]))"
Write a Python script to calculate the circumference of a circle when the radius of the circle is given.,4,"def calc_circle_circumference(radius):
    circumference = 2 * 3.14 * radius
    return circumference

circle_circumference = calc_circle_circumference(4)
print(circle_circumference)"
Create a function in Python that prints the first n Fibonacci numbers.,6,"def fibonacci(n):
  fib_list = [0, 1]
  for i in range(2, n):
    fib_list.append(fib_list[i-2] + fib_list[i-1])
  return fib_list[:n]

fibonacci_list = fibonacci(6)
print(fibonacci_list)"
Generate a Python program to implement basic authentication.,No input.,"import base64

def basic_auth(username, password):
    user_pass = username + ':' + password
    encoded_user_pass = base64.b64encode(user_pass.encode('UTF-8'))

    return ""Basic "" + encoded_user_pass.decode('UTF-8')

# Example usage
user = 'my_username'
pass = 'my_password'
auth_header = basic_auth(user, pass)"
Write a Python program to sort a list of tuples according to its second parameter in ascending order.,"list = [(""yellow"", 28), (""blue"", 30), (""black"", 25), (""pink"", 45)]","def sort_tuples(list): 
    """"""Function to sort tuples according to their second parameter"""""" 
    list.sort(key = lambda x : x[1]) 
    return list

#Example:
print(sort_tuples(list))"
Create a Python code snippet to remove all elements within a list with value 0.,"my_list = [0, 2, 3, 0, 4]","my_list = [0, 2, 3, 0, 4]
my_list[:] = [val for val in my_list if val != 0]
print(my_list)"
Write a Python program to find the maximum length of consecutive 1s in a binary array.,"Array = [1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0]","def find_max_consecutive_1s(Array):
    max_count = 0
    count = 0
    for i in Array:
        if i == 1:
            count += 1
            max_count = max(max_count, count)
        else:
            count = 0
    return max_count"
Use Python to convert a single number from binary to decimal,10011,"def binary2decimal(binary):
	dec = 0
	for i in range(len(binary)):
		digit = binary[i]
		dec += int(digit)*(2**(len(binary)-1-i))

	return dec

print(binary2decimal(""10011"")) # 19"
Create a function in Python to filter a list of numbers by a given criteria.,"[2, 3, 4, 5, 6, 7], criteria: divisible by 3","# Filter a list with a given criteria
def filter_list(input_list, criteria):
    filtered_list = []
    for num in input_list:
        if num % criteria == 0:
            filtered_list.append(num)
    return filtered_list

result = filter_list([2, 3, 4, 5, 6, 7], 3)
print(result)"
Design a Python script to print out the names and ages of people in a given list.,"[{""name"": ""John"", ""age"": 30}, {""name"": ""Mary"", ""age"": 25}, {""name"": ""Greg"", ""age"": 28}]","def print_names_and_ages(people):
    for person in people:
        print(""Name: {}\nAge: {}"".format(person['name'], person['age']))"
Generate a Python program to compute the sum of values of a given dictionary.,"data = {'a':1, 'b':2, 'c':3}","def sum_values(data):
    return sum(data.values())"
Create a Python script to parse a dictionary using a list comprehension and create a new dictionary with the keys and values swapped.,"{'a':1, 'b':2, 'c':3}","{v:k for k, v in d.items()}"
Modify the following python code to take in an argument to carry out a specific operation and print it out.,"def operation():
    result = 2*2
    print(result)","def operation(op):
    result = eval(op)
    print(result)

operation('2*2') # prints 4"
Create a string manipulation program in Python that takes a user input string and outputs a version of the string with all characters in upper-case.,Hello World,"userString = input(""Enter a string: "")
uppercasedString = userString.upper()
print(uppercasedString)"
"Using Python, create a function called `print_list` that prints out the elements of a list.","L = [1, 2, 3, 4, 5]","def print_list(L):
    for item in L:
        print(item)

L = [1,2,3,4,5]
print_list(L)"
Write a Python function to replace all occurrences of a pattern in a string with a specific string?,"String: ""Today is a beautiful day""
Pattern: ""a""
Replacement: ""the""","def replace_all(orig_str, pattern, replacement):
	return orig_str.replace(pattern, replacement)

print(replace_all(orig_str=""Today is a beautiful day"", pattern=""a"", replacement=""the""))"
Write a python program to calculate a person's BMI (body mass index).,"Height: 1.75m
Weight: 80kg","# Calculate BMI
height = 1.75 # meters
weight = 80 # kilograms
bmi = weight / (height * height)
print(""BMI: "", bmi)"
Analyze the sentiment of a given text using Python,I love writing code!,"from nltk.sentiment.vader import SentimentIntensityAnalyzer

#init sentiment analyzer
analyzer = SentimentIntensityAnalyzer()

#analyze sentiment
sentiment_scores = analyzer.polarity_scores(""I love writing code!"")

if sentiment_scores['pos'] > sentiment_scores['neg']:
    print (""The sentiment of the text is positive"")
else:
    print (""The sentiment of the text is negative"")"
Develop a program in Python to classify the elements in an array as even or odd.,"An array with 10 elements [1,2,3,4,5,6,7,8,9,10]","evenArray = []
oddArray = []
for i in array:
  if i % 2 == 0:
    evenArray.append(i)
  else:
    oddArray.append(i)"
Manipulate a python dictionary to print the duplicate keys in a key-value pair.,"dictionary = {'a': 1, 'c': 3, 'b': 2, 'd': 4, 'a': 1}","for key, value in dictionary.items():
    if dictionary.count(key) > 1:
        print(key)"
Create a regex pattern that matches two different words and prints out the second word if found.,"text = ""Learn Python now or learn Java later","pattern = r""learn (Python|Java) (\w+)"" 
match = re.search(pattern, text) 
if match: 
    print(match.group(2)) # Prints ""now"" or ""later"""
"Create a Python program to reformat a JSON string, preserving indentation and enforcing the order in which members appear.","json_string = '{""fruit"": [""apple"", ""banana"", ""cherry""], ""vegetable"": [""carrot"", ""potato"", ""onion""]}'","import json
 
def reformat_json(json_string):
    return json.dumps(json.loads(json_string), indent=4, sort_keys=True)"
Write a Python code that takes a string as input and removes all punctuation and non-alphabetic characters.,"string = ""This!, &is. %string# 1""","def remove_non_alphabetic(string):
    new_string = """"
    for char in string:
        if char.isalpha():
            new_string += char
    return new_string

print(remove_non_alphabetic(string)) # prints Thisisstring"
Create a simple Python program to sum the values of two variables.,<input>,"x = 5
y = 4

total = x + y

print(total) # Output: 9"
Please transform this Python list comprehension into a for loop.,"list_1 = [x for x in range(1, 10) if x % 2 == 0]","list_1 = []
for x in range(1, 10):
    if x % 2 == 0:
        list_1.append(x)"
Write a Python function that takes two dimensional array and transposes it.,"[[1,2,3],[4,5,6]]","def transpose_matrix(matrix):
    transposed_matrix = []
    for i in range(len(matrix[0])):
        row = []
        for j in range(len(matrix)):
            row.append(matrix[j][i])
        transposed_matrix.append(row)
    return transposed_matrix

my_matrix =[[1,2,3],[4,5,6]]
transposed_matrix = transpose_matrix(my_matrix)
print(transposed_matrix)"
Create a Python script to format a JSON string.,"json_str = ‘{”name”:”Robert”, ”age”:30, ”city”:”New York”}’","# import json library
import json

# parse input string as JSON
json_data = json.loads(json_str)

# format the json string
formatted_json = json.dumps(json_data, indent=4)

# print the formatted json string
print(formatted_json)"
Create a program in Python to solve the Tower of Hanoi problem.,3 discs,"def moveTower(height,fromPole, toPole, withPole):
    if height >= 1:
        moveTower(height-1,fromPole,withPole,toPole)
        moveDisk(fromPole,toPole)
        moveTower(height-1,withPole,toPole,fromPole)

def moveDisk(fp,tp):
    print(""Moving disk from"",fp,""to"",tp)

moveTower(3,""A"",""B"",""C"")"
Create a Python program that sorts the given list in ascending order.,"unsorted_list = [5, 8, 2, 1, 3, 10]","unsorted_list = [5, 8, 2, 1, 3, 10]

sorted_list = sorted(unsorted_list)

print(sorted_list)"
Create a Python script which takes in a list of integers and outputs a list of odd numbers in descending order.,"[14, 21, 8, 5, 46]","def odd_descending(lst):
    lst = [x for x in lst if x % 2 != 0]
    return sorted(lst, reverse=True)

list = [14, 21, 8, 5, 46]
print(odd_descending(list))"
Design a compiler to identify the language and the keywords used in a given source code.,"Source code:
    for i in range(10):
    	print(i)
Language: Python","def isPython(code):
    keywords = ['for', 'in', 'range', 'print']

    # check for each keyword
    for keyword in keywords:
        if keyword not in code:
            return False

    return True

code = '''
for i in range(10):
	print(i)
'''

print(isPython(code))
# Output: True"
"Generate a Bash script that runs a Python program. The Python program should receive a string as input, print its size, and then sort the string in alphabetical order.","Sample string: ""Hello, world""","#!/bin/bash
# Script to run Python program

input_string=""Hello, world""

python <<END

input_string=""$input_string""

print(""Input string:"", input_string)
print(""Size of string:"", len(input_string))
print(""Sorted string:"", ''.join(sorted(input_string)))

END"
Develop a Python program that prints the maximum and minimum numbers from a given list.,"[1, 3, 7, 4, 9, 0]","list_num = [1, 3, 7, 4, 9, 0]

min_num = min(list_num)
 max_num = max(list_num)

print('Minimum is:', min_num) 
 print('Maximum is:', max_num)"
Modify an existing Python program to make it more efficient.,"# Program to find the sum of all elements in an array

def sum_arr(arr):
    s = 0
    for n in arr:
        s += n
    return s","# Program to find the sum of all elements in an array

def sum_arr(arr):
    # faster sum using numpy
    return np.sum(arr)"
Reverse a Python list without using any in-built functions,"list_ = [1, 2, 3, 4]","def reverse_list_without_function(list_):
    result = []
    for i in range(len(list_)-1,-1,-1):
        result.append(list_[i])
    return result

list_ = [1,2,3,4]
print(reverse_list_without_function(list_)) # => [4, 3, 2, 1]"
Create a script in Python that prints a matrix of size n x m containing random numbers.,"n=3, m=2","import random

def random_matrix(n, m):
    matrix = []
    for i in range(n):
        row = []
        for j in range(m):
            row.append(random.randint(1,100))
        matrix.append(row)
    return matrix

res = random_matrix(3, 2)
print(res)"
Create a way to encrypt a message using a key in Python.,"message = ""Hello world!""
key = ""secret""","import hashlib

def encrypt(message, key):
    encrypted_msg = """"
    for char in message:
        encrypted_msg += chr(ord(char) + ord(key[0]))
    return encrypted_msg

encrypted_msg = encrypt(message, key)
print(encrypted_msg)"
Create a function in Python that takes an array of integers and returns an array of their squares.,"[1, 2, 3]","def square_array(nums): 
    return [n**2 for n in nums] 

result = square_array([1, 2, 3])
print(result)"
Create an API endpoint in Python Flask to add two numbers. This API should accept two numbers as Formula Parameters and should return the addition of those two numbers.,"num1 = 4
num2 = 5","from flask import Flask, request
app = Flask(__name__)

@app.route('/add', methods=['GET'])
def add():
 num1 = float(request.args.get('num1'))
 num2 = float(request.args.get('num2'))

 sum = num1 + num2

 return str(sum)

if __name__ == '__main__':
 app.run(debug=True)"
Utilize array sorting to sort an array in Python.,"arr = [10, 7, 8, 4, 2, 9]","arr.sort() 
print(arr)"
Design a Python program to find the minimum difference between any two elements in a given collection.,"arr = [2, 9, 6, 5, 4, 9, 8]","def minimumAbsDifference(arr):
    arr.sort()
    min_diff = float('inf')
    
    for i in range(1, len(arr)): 
        diff = arr[i] - arr[i - 1]
        min_diff = min(min_diff, diff)
    
    return min_diff 

arr = [2, 9, 6, 5, 4, 9, 8]
min_diff = minimumAbsDifference(arr)
print(min_diff)"
"Using Python, can you create a function that sorts a list of strings into alphabetical order?","['apple', 'banana', 'pear', 'mango']","def sort_strings(s):
    return sorted(s)

print(sort_strings(['apple', 'banana', 'pear', 'mango']))"
Generate a python program to check if the string is a palindrome or not.,"string = ""madam""","def is_palindrom(string):
    reverse_string = string[::-1]
    if string == reverse_string:
        return True
    else:
        return False"
Create a Python program to compare two given list variables and create a third list variable containing all the common elements between the two lists.,"list1 = [2, 3, 4, 5, 6] 
list2 = [5, 6, 7, 8, 9]","list1 = [2, 3, 4, 5, 6]
list2 = [5, 6, 7, 8, 9]

common_elements = []

for ele in list1:
    if ele in list2:
        common_elements.append(ele)

print(common_elements)"
Create a Python algorithm that finds the maximum value of an array,"a = [5, 9, 8, 2, 1, 3]","def maxValue(array):
    max = array[0]
    for num in array:
        if num > max:
            max = num
    return max

a = [5, 9 ,8, 2, 1, 3]
print(maxValue(a))"
Develop an algorithm in Python to separate odd and even number from a given list of integers.,"[2, 4, 7, 8, 11, 9]","def separate_odd_even(numbers):
  even = []
  odd = []

  for number in numbers:
    if number % 2 == 0:
      even.append(number)
    else:
      odd.append(number)

  return even, odd

numbers = [2, 4, 7, 8, 11, 9]

even, odd = separate_odd_even(numbers)

print(""Even numbers: "", even)
print(""Odd numbers: "", odd)"
Develop a Python script to sort a collection of numbers in descending order.,"A collection of numbers: [1, 9, 4, 6, 3, 7]","def sort_numbers(nums):
  # sort the numbers in descending order
  sorted_nums = sorted(nums, reverse=True)
  
  # print the sorted list
  print(sorted_nums)
  
  # return the sorted list
  return sorted_nums

nums = [1, 9, 4, 6, 3, 7]
sort_numbers(nums) # output: [9, 7, 6, 4, 3, 1]"
Write a function to delete the last item from a list in Python.,"[1,2,3,4,5]","def delete_last_item(lst):
  lst.pop()
  return lst

print(delete_last_item([1,2,3,4,5]))"
Create a Python script which automates the process of making API requests to a given URL.,https://example.com,"import requests

url = 'https://example.com'

# Make get request
r = requests.get(url)

# Check the response status
if r.status_code == 200:
 print('success')

# Make post request
r = requests.post(url, data = {'key':'value'})

# Check the response status
if r.status_code == 200:
 print('success')"
Write a sorting algorithm in Python to sort a set of strings based on the length of each string.,"['banana', 'apple', 'mango', 'pear']","def sort_strings(string_list):
  return sorted(string_list, key=len)

# Usage example
string_list = ['banana', 'apple', 'mango', 'pear']
print(sort_strings(string_list))  # Outputs ['apple', 'pear', 'mango', 'banana']"
Create an array from the following list in Python.,"List: [""a"", ""b"", ""c"", ""d""]","arr = [""a"", ""b"", ""c"", ""d""]"
"Write a Python program that takes a string and a number as input, and returns the string repeated the given number of times.","String: xyz
Number: 3","def repeatString(string, num):
    return string * num

result = repeatString(""xyz"", 3)
print(result)"
Create a function to optimize a given python code using the Numba library.,"def calculate_pi():
    c = 0.0
    for k in range(1000):
        for j in range(1000):
            c += k ** -2 + j ** -3
    return c","import numba

@numba.jit
def calculate_pi():
    c = 0.0
    for k in range(1000):
        for j in range(1000):
            c += k ** -2 + j ** -3
    return c"
"Concatenate two strings in Python using the ""+"" operator.","string1 = ""Hello""
string2 = ""World""","string1 = ""Hello""
string2 = ""World""
concatenated_string = string1 + string2"
Create a program that sorts a list of strings in alphabetical order.,"['python', 'javascript', 'java', 'go']","""""""
Create a program that sorts a list of strings in alphabetical order.
""""""

def sort_list(lst):
    """"""
    This function sorts a list of strings in alphabetical order.
    """"""
    lst.sort()
    return lst
 
if __name__ == '__main__':
    lst = ['python', 'javascript', 'java', 'go']
    print(sort_list(lst))"
Create a Python web scraper to scrape a list of business email addresses from a web page.,Website: www.example.com,"import requests 
from bs4 import BeautifulSoup

# make a request to the website
r = requests.get('www.example.com')

# parse the content
soup = BeautifulSoup(r.content, 'html.parser')

# find all elements with the class ""business-email""
emails = soup.find_all(class_=""business-email"")

# extract the email from each element
emails = [e.text for e in emails]"
"Write a python program which reads a given temperature in Celcius, and converts it to Fahrenheit.",Celcius = 25°,"celcius = 25
fahrenheit = 77
print (""{0}° celcius is {1}° fahrenheit"".format(celcius, fahrenheit))"
You need to optimize a Python program for faster performance.,"def sort_number(arr):
    for i in range(len(arr)):
        for j in range(i + 1, len(arr)):
            if arr[i] > arr[j]:
                temp = arr[i]
                arr[i] = arr[j]
                arr[j] = temp","def sort_number(arr):
    arr.sort()"
Write a Python script that takes a long string and prints each word on a new line.,"string = ""Hello World this is a Test""","#!/usr/bin/env python

text = ""Hello World this is a Test""
words = text.split()

for word in words:
 print(word)"
Create a function in Python to determine if a number is divisible by another number.,"6, 3","def isDivisible(num1, num2):
    # check if num1 is divisible by num2
    if (num1 % num2) == 0:
        return True
    else:
        return False

num1 = 6
num2 = 3

result = isDivisible(num1, num2)
print(result)"
"In Python, create a function that takes a list of strings and capitalizes the first letter of each word.","['hello', 'world']","def capitalize_each_word(string_list):
  """"""Capitalizes the first letter of each word in a list of strings.""""""
  capitalized_strings = []
  for s in string_list:
    capitalized_strings.append(s.title())

  return capitalized_strings

if __name__ == ""__main__"":
  string_list = ['hello', 'world']
  print(capitalize_each_word(string_list))"
Develop an algorithm in Python to find the numbers that are divisible by 3 and 5 from a given array.,"[5, 15, 20, 7, 10]","def divisible_by_3_5(array):
    result = []
    for num in array:
        if (num % 3 == 0) and (num % 5 == 0):
            result.append(num)
    return result

print(divisible_by_3_5([5, 15, 20, 7, 10])) # [15]"
"Provide a Python program that takes a number as input, and calculates the factorial of that number.",5,"def factorial(num):
    if num == 0:
        return 1
    else:
        return num * factorial(num-1)
 
num = int(input(""Enter a number:""))
print(factorial(num))"
Write a Python function to calculate the sum of all numbers in a list.,"[1, 2, 3, 4, 5, 6, 7, 8, 9]","def sum_nums(nums):
  sum = 0
  for num in nums:
    sum += num
  return sum

sum_nums([1, 2, 3, 4, 5, 6, 7, 8, 9]) # returns 45"
"In Python, find the index of a character in a given string.","string = ""Hello World""
character = 'l'","string = ""Hello World""
character = 'l'

index = string.index(character)
print(index)"
Can you modify this Python program to store strings in a dictionary instead of lists?,"data = [['a', 1], ['b', 2], ['c', 3], ['a', 4]]","data = {'a': [1, 4], 'b': [2], 'c': [3]}"
Write a function to sort the given list of tuples in Python according to the second element of the tuple.,"tuple_list = [(1, 10), (2, 7), (3, 5), (4, 8)]","def sort_by_second_elem(tuple_list):
    return sorted(tuple_list, key=lambda x: x[1])"
Edit a Python program to modify a numpy array into a pandas Dataframe.,Numpy Array,"import numpy as np
import pandas as pd

# Load the data
data = np.load('data.npy')

# Create the pandas DataFrame
df = pd.DataFrame(data)"
Create an algorithm in Python to count all the even numbers in a given list of numbers,"[1, 2, 3, 4, 5, 6]","def count_even(array):
    count = 0
    for num in array:
        if num % 2 == 0:
            count += 1
    return count

arr = [1, 2, 3, 4, 5, 6]
print(count_even(arr)) # Output: 3"
"Given 2 integers, write a Python program to check whether the numbers are divisible.","Number1: 5
Number2: 10","def is_divisible(num1, num2):
  if num1 % num2 == 0:
    return True
  else:
    return False

check_result = is_divisible(5, 10)

if check_result == True: 
  print(""The numbers are divisible"")
else:
  print(""The numbers are not divisible"")"
"Given a sentence and a word, extract the POS tag of the word using nltk library in Python.","Sentence: He is enjoying the warm weather
Word: enjoying","import nltk

sentence = ""He is enjoying the warm weather""
word = ""enjoying""

tokens = nltk.word_tokenize(sentence)
tagged = nltk.pos_tag(tokens)

for (token, tag) in tagged:
   if token == word:
     print(""POS Tag of the word:"", tag)"
Construct a program in Python to stack and scale input data,A list of 10 data points consisting of a mix of integers and floats,"import numpy as np

def preprocess(data):
    # Stack the data
    data = np.stack(data)

    # Scale the data
    data = (data - np.min(data)) / (np.max(data) - np.min(data))
    return data"
Create a Python program to display a matrix of characters.,"any given matrix of characters (eg. [[""X"", ""O"",""X""], [""X"", ""O"",""X""]])","def printMatrix(matrix):
 for row in matrix:
 for char in row:
 print("" {}"".format(char), end="""")
 print()

matrix = [
  [""X"", ""O"",""X""],
  [""X"", ""O"",""X""]
]

printMatrix(matrix)"
Create a function in Python that takes in a list and returns the median value of the list.,"List: [2, 7, 3, 8, 5]","def median(nums):
    nums.sort()
    mid = len(nums) // 2
    
    if len(nums) % 2 == 0:
        return (nums[mid] + nums[mid-1]) / 2
    else:
        return nums[mid]"
Determine the maximum possible profits by writing a Python program to optimize the given input.,"Quantities: [0, 19, 14, 18, 12, 13] 
Price Table : 
		Qty 	Price 
0 		$1 
1-5 	$3 
6-9 	$6 
10-15 	$5 
16-20  $4",$164 
Generate a correct python script to identify string elements whose length is even,"my_list = [""House"", ""Car"", ""Tree"", ""Planet"", ""Satellite""]","my_list = [""House"", ""Car"", ""Tree"", ""Planet"", ""Satellite""]

def find_even_length(lst):
    even_list = []
    for l in lst:
        if len(l) % 2 == 0:
            even_list.append(l)
    return even_list

even_list = find_even_length(my_list)
print(even_list)"
Python Script to normalize a list of numbers.,"[-1, 0.2, 5.66, -2.344, 0]","def normalize(numbers):
  min_num = min(numbers)
  max_num = max(numbers)

  for i in range(0, len(numbers)):
    numbers[i] = (numbers[i] - min_num) / (max_num - min_num)

  return numbers

print(normalize([-1, 0.2, 5.66, -2.344, 0]))"
Create a Python program to group a list of numbers into two lists according to their parity (even/odd) in the most efficient way.,"[1, 4, 5, 3, 2, 6, 7]","even_list = []
odd_list = []

for num in input_list:
 if num % 2 == 0:
 even_list.append(num)
 else:
 odd_list.append(num)

print('Even list:', even_list)
print('Odd list:', odd_list)"
Could you please craft a Python solution to find the total number of days between two dates?,"date1 = ""29 June 1999""
date2 = ""29 July 1999""","import datetime

def diff_in_days(date1, date2):
    d1 = datetime.datetime.strptime(date1, ""%d %B %Y"")
    d2 = datetime.datetime.strptime(date2, ""%d %B %Y"")
    delta = d2 - d1
    return delta.days

date1 = ""29 June 1999""
date2 = ""29 July 1999""

difference = diff_in_days(date1, date2)
print(""Difference is"", difference, ""days"")"
Create a function in Python to find the smallest positive number which is not present in a given unsorted array.,"[3, 1, 2, 6, 0, -2, -1]","def smallestMissingPositiveNumber(arr): 
    s = set() 
    for i in arr: 
        s.add(i) 
  
    for i in range(1, len(arr) + 1): 
        if i not in s: 
            return i 
  
    return len(arr)+1
  
arr = [3, 1, 2, 6, 0, -2, -1]
missing = smallestMissingPositiveNumber(arr)
print(missing) # 4"
Generate a Python program to filter a given list of names based on user search input.,"Names: [""Taylor"", ""Hilton"", ""John"", ""Jack"", ""Justin""]
User search input: ""J""","names = [""Taylor"", ""Hilton"", ""John"", ""Jack"", ""Justin""]

search_input = input(""Enter a name to search: "")

filtered_names = []
for name in names:
 if search_input in name:
  filtered_names.append(name)
print(filtered_names)"
Edit the given Python code to add a try-except block.,"x = 5
y = 0
z = x/y

print(z)","try:
  x = 5
  y = 0
  z = x/y
  print(z)
except ZeroDivisionError as e:
  print('Cannot divide by zero!')"
Create a Python program which will take a number n as input and prints the nth fibonacci number in the series,8,"def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    # First Fibonacci number is 0 
    elif n==1: 
        return 0
    # Second Fibonacci number is 1 
    elif n==2: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2) 
  
# Driver Program 
print(Fibonacci(8))"
Debug and fix the following Python program that calculates a list of square roots.,"nums = [1, 4, 9, 16] 
for num in nums:
  print(num ** 0.5","nums = [1, 4, 9, 16] 
for num in nums:
  print(num ** 0.5)"
Convert the following JavaScript code to Python,"const days = [""Monday"", ""Tuesday"", ""Wednesday"", ""Thursday"", ""Friday""];
days.forEach((day) => {
  console.log(day);
});","days = [""Monday"", ""Tuesday"", ""Wednesday"", ""Thursday"", ""Friday""]

for day in days:
    print(day)"
Write a Python script to convert a string containing temperatures in Celsius to Fahrenheit,"string celsius = '25, 15, 32'","def convertCelsiusToFahrenheit(celsius):
 temperature_fahrenheit = []

 for c in celsius.split(','):
 temperature_fahrenheit.append(float(c)*1.8 + 32)

 return temperature_fahrenheit

fahrenheit = convertCelsiusToFahrenheit(celsius)
print(fahrenheit)"
Find the most expensive item from the given list using Python.,"[{'item': 'rice', 'price': 22.20}, {'item': 'bread', 'price': 15.00}, {'item': 'milk', 'price': 18.60}, {'item': 'butter', 'price': 34.40}]","most_expensive_item = max(list_of_items, key=lambda x: x['price'])"
Generate a class in Python with the given properties and methods.,"Class Name: Student
Properties:
Name - String
Age - Integer
Methods:
getInfo() - Returns a string with student's name and age","class Student:
    def __init__(self, name, age):
        self.name = name
        self.age = age

    def getInfo(self):
        return ""Name: {}, Age: {}"".format(self.name, self.age)"
Write a Python program to detect if a given string contains any of the given keywords.,"String: I love ice cream
Keywords: [""chocolate"", ""vanilla""]","def keyword_detector(string, keywords):
 for i in keywords:
 if i in string:
 return True
 return False

print(keyword_detector(""I love ice cream"", [""chocolate"", ""vanilla""]))"
Create an algorithm in Python to check if a given string contains valid parentheses.,"""[[{{}}]]""","def isValid(s):
    stack = []
    dict = {""]"":""["", ""}"":""{"", "")"":""(""}
    for char in s:
        if char in dict.values():
            stack.append(char)
        elif char in dict.keys():
            if stack == [] or dict[char] != stack.pop():
                return False
        else:
            return False
    return stack == []

print(isValid('[[{{}}]]'))"
Create a Python script to display a table of values given a range of x and y coordinates.,"x range: 0 to 50
y range: 0 to 10","import pandas as pd
import numpy as np

x = np.arange(0, 50, 1)
y = np.arange(0, 10, 1)

xytable = []

for xi in x:
    for yi in y:
        xytable.append([xi, yi, xi*yi])

table = pd.DataFrame(xytable, columns=['X', 'Y', 'Product'])

print(table)"
Create a python program to filter a list of words by length.,"[""Apple"", ""Banana"", ""Orange"", ""Grapes""]","def filter_words_by_length(word_list, length):
    return [word for word in word_list if len(word) == length]"
Create a Python program to print out the elements of a list in reverse order.,"mylist = [1, 2, 3, 4, 5]","# Creating a new reversed list
reversed_list = mylist[::-1]

# Iterating through the list and printing each element
for num in reversed_list:
    print(num)"
Develop a linear search algorithm in Python to find an element in an array.,"[1, 5, 8, 10], 8","def linearSearch(arr, x): 
    for i in range(len(arr)): 
        if arr[i] == x: 
            return i 
    return -1
  
# Driver Code 
arr = [1, 5, 8, 10] 
x = 8
  
# Function call 
result = linearSearch(arr, x) 
  
if(result == -1): 
    print(""Element is not present in the array"") 
else: 
    print(""Element is present at index"", result)"
Create a Python script to remove all occurrences of duplicate elements from a given list.,"mylist = [1,1,2,3,4,4,5,6]","mylist = [1,1,2,3,4,4,5,6]

unique_list = []
for element in mylist:
    if element not in unique_list:
        unique_list.append(element)

print(unique_list)"
Generate a Python program to find the minimum number of operations required to convert a given number into 1.,18,"def minOperations(n): 
  
    if n==0: 
        return 0
    elif n==1: 
        return 1
  
    x = n 
  
    for i in range(2, n): 
        if i>x: 
            break
  
        if n%i == 0: 
            x = minOperations(int(n/i)) +  i 
  
    return x 
  
result = minOperations(18)
print(result)"
"Given a sorted array of n elements, write a Python program to search for a target element.","n = 7
target = 3
sorted_ary = [1, 2, 3, 5, 8, 9, 11]","def linear_search(sorted_ary, n, target):
	for i in range(0,n):
		if sorted_ary[i] == target:
			return i
	return -1

result = linear_search(sorted_ary, n, target)

if result == -1:
   print(""Element is not present in array"")
else:
   print(""Element is present at index"", result)"
Write a Python program to generate a mock version of the given data set.,"data_set = [('John', 32, 'Male'), ('Mary', 31, 'Female')]","import random

mock_data_set = []
for row in data_set:
    name = row[0] + str(random.randint(1,100))
    age = random.randint(1, 100)
    gender = random.choice(['Male', 'Female'])
    new_row = (name, age, gender)
    mock_data_set.append(new_row)

print(mock_data_set)"
Construct an algorithm in Python that calculates the factorial of a number,n = 5,"def factorial(number):
    factorial = 1
    for i in range(1, number + 1):
        factorial = factorial * i
    return factorial

n = 5
result = factorial(n)
print(result) # 120"
Create a recursive function in Python that prints the values from 0 to n.,5,"def print_values(n):
    if n == 0:
        return
    else:
        print(n)
        print_values(n-1)

print_values(5)"
Generate a Python script for computing the sum of the numbers of a given list.,"nums_list = [1, 3, 5, 7, 9]","def sum_nums(nums_list):
  result = 0
  for num in nums_list:
    result += num
  return result

print(sum_nums(nums_list))

# Output
25"
Create a Python code to calculate the Slope of the line when two points are given.,"(5, 9) and (15, 40)","#Calculate the Slope of the line
def findSlope(x1, y1, x2, y2):
    m = (y2-y1)/(x2-x1)
    return m

x1 = 5
y1 = 9
x2 = 15
y2 = 40

result = findSlope(x1, y1, x2, y2)
print(""The slope of the line is"", result)"
Create a Python script that takes a list of numbers as input and prints out the mean and the standard deviation of the list.,"[5, 7, 10, 8, 6]","def mean(lst):
    return sum(lst) / len(lst)

def std_dev(lst):
    avg = mean(lst)
    variance = 0
    for num in lst:
        variance += (num - avg)**2
    variance /= len(lst)
    return variance**0.5

# Driver Code
lst = [5, 7, 10, 8, 6]

print(""Mean: "", mean(lst))
print(""Standard Deviation: "", std_dev(lst))"
Create a function in Python to sort a dictionary by value and return the result as a list.,"my_dict = {'A': 1, 'B': 2, 'C': 3}","def sort_dictionary_by_value(my_dict): 
	sorted_list = sorted(my_dict.items(), key=lambda x: x[1])
	return sorted_list 

my_dict = {'A': 1, 'B': 2, 'C': 3}
print(sort_dictionary_by_value(my_dict))"
Write a Python program to take a list of numbers and remove all duplicates.,"[5,5,5,2,1,2,3,5]","OldList = [5,5,5,2,1,2,3,5]
NewList = []

for Num in OldList:
    if Num not in NewList:
        NewList.append(Num)

print(NewList)"
Translate the given Bash shell script to Python.,"#!/bin/bash
echo ""Hello World!""","print(""Hello World!"")"
Write a Python program to get all possible unique subsets of a given set of numbers.,"S = [1, 2, 3]","def get_subsets(S):
 subsets = [[]]
 for i in S:
 for j in range(len(subsets)):
 subsets.append(subsets[j] + [i])
 return subsets

S = [1, 2, 3]
print(get_subsets(S))
# Output: [[], [1], [2], [1, 2], [3], [1, 3], [2, 3], [1, 2, 3]]"
Edit the following Python code to include a try/except block to catch any ValueError errors that occur.,"def check_input(val):
 if type(val) != str:
 return False
 else:
 return True","def check_input(val):
 try:
 if type(val) != str:
 return False
 else:
 return True
 except ValueError:
 print('Input is not a string!')"
"In Python, write a program to find a single missing number in a sorted array of unique integers.","arr = [1,2,3,4,6,7,8]","def findMissingNumber(arr):
    n = len(arr)
    total_sum = (n+1)*(n+2)//2
    arr_sum = sum(arr)
    
    missing_number = total_sum - arr_sum
    
    return missing_number

arr = [1,2,3,4,6,7,8]

print(findMissingNumber(arr))"
"Create a class in Python that contains a property called ""name"" and a constructor to set the value of the name property.",John,"class Person:
    def __init__(self, name):
        self.name = name

person = Person(""John"")"
"Create a Python program that takes a list of numbers and a target number as input, and returns all pairs of integers whose sum is equal to the target number","[8, 3, 10, 5], 13","def two_sum(arr, target):
    result = []
    for i in range(len(arr)):
        for j in range(i+1, len(arr)):
            if (arr[i] + arr[j] == target):
                result.append((arr[i], arr[j]))
    return result

result = two_sum([8, 3, 10, 5], 13)
print(result)"
Optimize the following Python program that shows the odd numbers in a given range,"for i in range(1, 20):
    if i % 2 != 0:
        print(i)","for i in range(1, 20, 2):
    print(i)"
Write an efficient sorting algorithm in Python that will sort a list of numbers.,"[5, 3, 1, 4, 7, 2, 6]","def sort(nums):
    for i in range(len(nums)):
        min_index = i
        for j in range(i + 1, len(nums)):
            if nums[min_index] > nums[j]:
                min_index = j
        
        nums[i], nums[min_index] = nums[min_index], nums[i]
    
    return nums

print(sort([5, 3, 1, 4, 7, 2, 6]))"
Modify the following Python code for calculating the factorial of a number.,"def factorial(n):
    fact = 1
    for i in range(1,n+1):
        fact = fact*i
    return fact","def factorial(n):
    if n == 0:
        return 1
    else:
        fact = 1
        for i in range(1,n+1):
            fact = fact*i
        return fact"
Design a function in Python that takes a list of integers and returns a list of the sum of the two largest integers.,"[10, 5, 15, 20, 7]","def get_largest_sum(nums):
  nums.sort()
  return nums[-1] + nums[-2]"
"Write a correct python program to find the minimum value in an array of integers, without using in-built functions.","arr = [3, 5, 8, 2, 9, 0]","def find_min(arr):
    # Initialize the minimum value
    min_val = arr[0]

    # Iterate through the array
    for i in range(1, len(arr)):
        if arr[i] < min_val:
            min_val = arr[i]

    return min_val"
Write a Python script to sort a list of tuples by its third element.,"[(2, 3, 5), (7, 9, 8), (1, 0, 4)]","def sort_by_third_element(input_list):
    sorted_list = sorted(input_list, key = lambda x: x[2])
    return sorted_list"
Optimize a code snippet in Python that sorts the given array.,"arr = [5, 4, 3, 2, 1]","# optimized code snippet to sort the given array
arr = [5, 4, 3, 2, 1]
arr.sort()
print(arr)
# arr is now sorted in ascending order as [1, 2, 3, 4, 5]"
"Given an array of numbers, generate a Python program to find the maximum value.","[1, 4, 6, 8, 3, 9, 5]","def find_max(arr):
    max_val = arr[0]
    for el in arr:
        if el > max_val:
            max_val = el
    return max_val

arr = [1, 4, 6, 8, 3, 9, 5]
print(find_max(arr))"
Optimize this code to calculate the sum of squares of all numbers from 1 to 10 in Python.,"total = 0
for i in range(1, 11):
    total += i * i","total = sum(i**2 for i in range(1, 11))"
Write a function in Python to detect duplicate elements in an array.,"[3, 5, 6, 7, 3, 5]","def find_duplicates(arr):
    seen = set()
    duplicates = []
    for x in arr:
        if x in seen:
            duplicates.append(x)
        else:
            seen.add(x)
    return duplicates

print(find_duplicates([3, 5, 6, 7, 3, 5]))"
Edit a Python program to take input from a user.,"def hello():
 print('Hello')","def hello():
 name = input('What is your name? ')
 print(f'Hello {name}')"
Write a Python program that allows a user to enter a number and prints out the sum of the digits of the number.,1234,"num = int(input(""Enter a number: "")) 

# find sum of its digits 
sum = 0
while num > 0: 
	digit = num % 10
	sum += digit 
	num //= 10
	
# print the result 
print(""Sum of digits of the number:"", sum)"
Optimize the following Python code for improved performance.,"def factorial(n):
 if n == 0:
   return 1
 else:
   return n * factorial(n - 1)","def factorial(n):
 fact = 1
 for i in range(1, n+1):
   fact *= i
  return fact"
Program a function in Python that creates all substrings of a given string.,"The string is ""create"".","def createSubstrings(string): 
    length = len(string) 
    subString = []
    
    # Loops through the string  
    # and the length of substring to be formed 
    for i in range(length): 
        for j in range(i + 1, length + 1): 
            subString.append(string[i:j]) 
  
    return subString"
"Create a program in Python that takes a website URL as input, scrapes all the links on the page, and prints out the URLs of the links on the page.",Sample URL: https://www.example.com,"import requests
from bs4 import BeautifulSoup

url = ""https://www.example.com""   
resp = requests.get(url) 
soup = BeautifulSoup(resp.text, 'html.parser') 
links = soup.find_all('a', href=True) 

for link in links:
 print(link['href'])"
Write Python code to find the sum of the factorial of a given number.,3,"def find_sum_factorial_number(n):
    sum_num = 0
    for i in range(1, n + 1):
        sum_num += math.factorial(i)
    return sum_num

if __name__ == '__main__':
    n = int(input('Input a number: '))
    print(find_sum_factorial_number(n))"
Create a Python program for extracting text from an online book.,web address of the book (e.g. https://www.example.com/book.html),"import requests
from bs4 import BeautifulSoup

# Input web address of the book
url = 'https://www.example.com/book.html'

# Download the page
page = requests.get(url)

# Parse the HTML
soup = BeautifulSoup(page.content, 'html.parser')

# Extract the text
text = soup.find_all('p')
for p in text:
 print(p.text)"
Create a Python function to convert Pascal Case string to hyphen-separated string.,Pascal Case String: HelloWorld,"def convert_pascal_to_hyphen(string):
    output_string = """"
    for char in string:
        if char.isupper():
            output_string += ""-""+char.lower()
        else:
            output_string += char
    return output_string[1:]
    
convert_pascal_to_hyphen(""HelloWorld"")"
Write a Python code to store and print the multiplication table of a given number.,num = 5,"# Function to print the multiplication table
def print_multiplication_table(num):
    # Iterate over numbers from 1 to 10
    for i in range(1, 11):
        print('{0} x {1} = {2}'.format(num, i, num*i))

print_multiplication_table(5)"
"Classify the following snippet of Python code as data wrangling, visualization, or machine learning.","from sklearn.neighbors import KNeighborsClassifier

knn = KNeighborsClassifier(n_neighbors=5)
knn.fit(X, y)",Machine learning.
Design a python class for a shopping cart.,No input,"class ShoppingCart:
    def __init__(self):
        self.items = []
    
    def add_item(self, item):
        self.items.append(item)
    
    def remove_item(self, item):
        if item in self.items:
            self.items.remove(item)
    
    def get_total_amount(self):
        total_amount = 0
        for item in self.items:
            total_amount += item.price
        return total_amount"
Please write a code to extract the URL from a given string.,There is a website: https://example.com,"#!/usr/bin/python
import re

# input string
string = ""There is a website: https://example.com""

# regex
pattern = r'(https?://\S+)'

# match url
url = re.findall(pattern, string)[0]

# print result
print(url) # Output: https://example.com"
Write a Python script to input a numeric value and generate the output in a formatted table structure.,The table should have 5 rows and 3 columns.,"for x in range(5):
    for y in range(3):
        col = input(""Enter Value: "")
        print(col, end=""\t\t"")
    print()"
Create a Python program that takes a string and indicates whether it is a palindrome or not.,"""racecar""","def is_palindrome(s):
  s = s.lower()
  left = 0
  right = len(s) - 1
  
  while left < right:
    if s[left] != s[right]:
      return False
    left += 1
    right -= 1
  return True
  
print(is_palindrome(""racecar""))"
Develop a Python program which uses a sorting algorithm to sort the provided dataset by its second column in ascending order.,"dataset = [[""Bob"", 10], [""Alice"", 8], [""Harry"", 14]]","def sort_by_column(dataset): 
	# extract second column from dataset
	second_column = [row[1] for row in dataset] 

	# sort dataset using second column
	sorted_dataset = [row for _, row in sorted(zip(second_column, dataset))] 
	
	return sorted_dataset"
Create a program for counting the number of elements present in a user-provided array using Python.,"user_array = [1, 5, 15, 20]","def count_elements(array):
    count = 0
    for item in array:
        count += 1
    return count

user_array = [1, 5, 15, 20]
result = count_elements(user_array)
print(result) # 4"
Generate a Python program that scores words based on their length - shorter words should receive a higher score.,"""Hello World!""","def score_by_length(s):
    score = 0
    for word in s.split():
        score += len(word)**(-1)
    return score

print(score_by_length(""Hello World!"")) # Output: 1.8333333333333335"
Create a Python function to format a given ip address to IPv4 format.,192.168.1,"def ipv4_format(ip):
 octets = ip.split('.')
 octets.extend(['0', '0', '0', '0'])
 octets = octets[:4]
 return '.'.join(octets)

if __name__ == '__main__':
 ip = '192.168.1'
 print(ipv4_format(ip))"
Generate a function in Python to sort a given list of integers in increasing order using Quick Sort.,"[9, 5, 7, 3, 1, 8, 6]","def quickSort(arr): 
    if len(arr) <= 1:
        return arr
    else:
        pivot = arr[0]
        lessThanPivot = [x for x in arr[1:] if x < pivot]
        moreThanPivot = [x for x in arr[1:] if x >= pivot]
        sortedArray = quickSort(lessThanPivot) + [pivot] + quickSort(moreThanPivot)
        return sortedArray"
Create a Python program to sort a given list of integers in descending order without using a library/built-in function.,"ex_list = [5, 2, 8, 9, 4, 1]","def sort_list(lst):
    for i in range(len(lst) - 1):
        for j in range(i+1, len(lst)):
            if lst[i] < lst[j]:
                lst[i], lst[j] = lst[j], lst[i]
    return lst"
Construct a function in Python to compare the two given dictionaries and return true if both of them contains the same elements.,"dict1 = {'A':1, 'B':2, 'C':3 }
dict2 = {'A':1, 'C':3, 'B':2 }","def compare_dicts(dict1, dict2):
  # Iterate through keys in both dictionaries and compare values
  for key, value in dict1.items():
    if key not in dict2 or dict2[key] != value:
      return False
 
  # If all elements matched
  return True"
Create a function in Python to calculate the standard deviation from a given array of numbers.,"[2, 4, 4, 4, 5, 5, 7, 9]","def compute_std_dev(nums): 
	mean = sum(nums) / len(nums)
	variance = 0
	for n in nums:
		variance += (n - mean) ** 2
	variance /= len(nums)

	std_dev = variance ** 0.5
	return std_dev"
Create a Python program to estimate the number of unique words in a string of text.,"""One two three four, five. Six seven eight nine, ten.""","def count_unique_words(s):
    words = s.split()
    unique_words = set(words)
    return len(unique_words)

input_string = ""One two three four, five. Six seven eight nine, ten.""
print(""The number of unique words is"", count_unique_words(input_string))

# Output
# The number of unique words is 10"
Create a Python implementation of the bubble sort algorithm.,"[12, 11, 13, 5, 6]","def bubble_sort(arr):
    for i in range(len(arr)-1):
        for j in range(len(arr)-i-1):
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]
    return arr

result = bubble_sort([12, 11, 13, 5, 6])
print(result) # Output: [5, 6, 11, 12, 13]"
Write an algorithm in Python to find a solution to the Tower of Hanoi game.,3 discs,"def hanoi_solver(n, start, temp, end):
 if n == 1:
 print(f'Move disc 1 from {start} to {end}')
 else:
 hanoi_solver(n-1, start, end, temp)
 print(f'Move disc {n} from {start} to {end}')
 hanoi_solver(n-1, temp, start, end)

# Solve the Tower of Hanoi with 3 discs
hanoi_solver(3, 'A', 'B', 'C')"
Write a python code to get the maximum element from a given list.,"[7, -10, 5, 112, 0]","def get_max_elem(nums):
    max_elem = nums[0]
    for num in nums:
        if num > max_elem:
            max_elem = num
    return max_elem"
Write a Python program to edit a given text string and capitalize the first letter of every word.,hello world.,"def capitalize_words(string):
 words = string.split(' ')
 capitalized = [word.capitalize() for word in words]
 return ' '.join(capitalized)"
Develop a Python program to find the common elements in two lists.,"List 1: [3, 9, 15, 21, 27]
List 2: [21, 7, 13, 29, 31]","common_elements = [] 
  
# using loop 
for i in [3, 9, 15, 21, 27]:  
    for j in [21, 7, 13, 29, 31]:  
        if i == j: 
            common_elements.append(i) 
  
# printing common elements 
print(common_elements) 
# Output: [21]"
Create a Python program to generate all the possible permutations of a given array.,"[1, 2, 3]","def permutations(arr):
    if len(arr) == 0:
        return [] 
  
    if len(arr) == 1:
        return [arr]

    l = [] 
    
    for i in range(len(arr)):
       m = arr[i]
       remLst = arr[:i] + arr[i+1:]
       for p in permutations(remLst):
           l.append([m] + p)
    return l"
Construct an algorithm in Python that takes a list of numbers and returns the mean.,"[1, 2, 3, 4]","def mean(nums):
    total = 0
    for num in nums:
        total += num
    return total / len(nums)"
Create a Python function to calculate the sum of two numbers given as inputs.,"5, 6","def calculateSum(a, b):
    return a + b

sum = calculateSum(5, 6)
print(sum)"
Write a class definition in python that will initialize an object of the class with given parameters,"name, age","class Person:
    def __init__(self, name, age):
        self.name = name
        self.age = age"
Create a Python Pandas program to generate a report summarizing the total sales for each customer.,"customer_df = [
{'customer_id': '123', 'sales': 100}, 
{'customer_id': '456', 'sales': 200}, 
{'customer_id': '789', 'sales': 400}
]","import pandas as pd 

# Create dataframe
df = pd.DataFrame(customer_df)

# Group by customer and sum up sales
report = df.groupby(['customer_id'])['sales'].sum()
print(report)"
Implement a sorting algorithm in Python to sort a given list of numbers in ascending order.,"[3, 7, 1, 4, 9, 5]","def sort(list):
  for i in range(len(list)):
    min_idx = i
    for j in range(i+1, len(list)):
      if list[min_idx] > list[j]:
        min_idx = j
  list[i], list[min_idx] = list[min_idx], list[i]

  return list

list = [3,7,1,4,9,5]
sorted_list = sort(list)

print(sorted_list)"
Write a Python method that takes a list of strings as an argument and returns a list of the words which are the same length as the longest word in the list.,"my_list = [""apple"", ""kiwi"", ""banana"", ""mango""]","def same_length(words):
 longest = max([len(word) for word in words])
 longest_words = [word for word in words if len(word) == longest]
 return longest_words

print(same_length(my_list))
# Output: [""apple"", ""banana"", ""mango""]"
Develop a Python program to convert the following Fahrenheit value to Celsius.,212,"def convert_to_celsius(fahrenheit):
    celsius = (fahrenheit - 32) / 1.8

    return celsius

fahrenheit = 212
celsius = convert_to_celsius(fahrenheit)
print(celsius)"
Create a Python program to edit a given list according to a given condition,"[1,3,5,8,2,6], lambda x : x%2==0","def edit_list(l, condition):
    result = []
    for i in l:
        if condition(i):
            result.append(i)
    return result

l = [1,3,5,8,2,6]
condition = lambda x : x%2==0

print(edit_list(l, condition))"
Generate a Python code to convert a given number from decimal format to its binary equivalent.,num = 25,"def decToBin(num):
    if num > 1:
        decToBin(num//2) 
    print(num % 2,end = '')
  
# Driver code to test above
if __name__ == '__main__': 
    num = 25
    decToBin(num)"
Construct a Python script to find the sum of all odd numbers between 1 to n.,n=10,"def sum_odd_numbers(n):
    sum = 0
    for i in range(1,n+1):
        if i % 2 != 0:
            sum += i
    return sum

odd_sum = sum_odd_numbers(10)
print(odd_sum)"
Design a function in Python that takes in a list and returns its reverse.,"[1, 2, 3, 4]","def reverse_list(list):
    return list[::-1]

result = reverse_list([1,2,3,4])
print(result)"
Create a Python function that sorts a list of strings in descending order of length.,"['Math', 'English', 'Computer Science', 'Physics']","def sort_by_length_descending(list_of_strings):
    list_of_strings.sort(key=len, reverse=True)
    return list_of_strings

result = sort_by_length_descending(['Math', 'English', 'Computer Science', 'Physics'])
print(result)"
Develop a python program that takes a paragraph as input and outputs a list of words in descending order of frequencies.,This is a sample sentence to try out the program.,"from collections import Counter

def word_frequency(paragraph): 
  words = paragraph.split()
  counts = Counter(words)
  return counts.most_common()

paragraph = ""This is a sample sentence to try out the program.""
print(word_frequency(paragraph))"
Create an algorithm in Python for removing duplicates from an array of integers.,"[1, 2, 4, 5, 6, 2, 7, 4]","def remove_duplicates(arr):
    s = set()
    result = []
    for i in arr:
        if i not in s:
            s.add(i)
            result.append(i)
    return result

arr = [1, 2, 4, 5, 6, 2, 7, 4]

print(remove_duplicates(arr))
# Output: [1, 2, 4, 5, 6, 7]"
Write a Python program that checks whether two given strings are anagrams or not.,"String1: bad
String2: dab","def is_anagram(s1, s2):
    s1_dict = {}
    s2_dict = {}

    for char in s1:
        if char in s1_dict:
            s1_dict[char] += 1
        else:
            s1_dict[char] = 1

    for char in s2:
        if char in s2_dict:
            s2_dict[char] += 1
        else:
            s2_dict[char] = 1

    return s1_dict == s2_dict"
"Using Python, create an algorithm to count the number of vowels in a given string.","String: ""Hello, World!""","def countVowels(string):
    string = string.lower()
    count = 0
    vowels = 'aeiou'

    for char in string:
        if char in vowels:
            count += 1
    return count

string = 'Hello, World!'
vowelCount = countVowels(string)
print(""Number of vowels is:"", vowelCount)"
Create a python program to display the numbers divisible by 3 in the given range,from 1 to 20,"for num in range(1, 21):
    if num % 3 == 0:
        print(num)"
Modify the following Python code to print the length of a given string.,"string = ""Hello World!""

def print_length(string):
    print(string)","string = ""Hello World!""

def print_length(string):
    print(len(string))"
Create a function in Python to remove all characters which are not alphanumeric from a given string.,"text = ""This is a $tring with #ymbols""","def remove_nonalphanum(text):
  new_string = """"
  for char in text:
    if char.isalnum():
      new_string += char
  return new_string

cleaned_string = remove_nonalphanum(text)
print(cleaned_string) #prints ""ThisisaStringwithymbols"""
Generate a Python program that determines the largest number in the given array.,"[7, 12, 5, 9]","arr = [7, 12, 5, 9]

def find_max(arr):
    max_num = arr[0]
    for num in arr:
        if num > max_num:
            max_num = num
    return max_num

print(""The largest number is:"", find_max(arr))"
Analyze the given python code and suggest any possible optimizations.,"n = int(input())
arr = [int(x) for x in input().split()]
x = int(input())

for i in range(n):
    if arr[i] > x:
        print(arr[i])","n = int(input())
arr = [int(x) for x in input().split()]
x = int(input())

j = 0
for i in range(n):
    if arr[i] > x:
        print(arr[i])
        j = i
        break

for i in range(j+1, n):
    if arr[i] > x and arr[i] < arr[j]:
        print(arr[i])
        j = i"
Write a Python program to compute the probability of an event based on the input data.,"data = {'success': 833, 'failure': 917}","def probability_calc(data):
    total = data['success'] + data['failure']
    return data['success']/total"
Write a Python class that prints the mean and median of a given list.,"[2, 4, 6, 8, 10]","class MeanMedianCalculator:
    def __init__(self, data):
        self.data = data
    
    def mean(self):
        return sum(self.data) / len(self.data)
    
    def median(self):
        self.data.sort()
        return self.data[(len(self.data)-1) // 2]

calculator = MeanMedianCalculator([2, 4, 6, 8, 10])
print(""Mean is {}, Median is {}"".format(calculator.mean(), calculator.median()))"
Create a Python program that predicts the next value from a given list of integer numbers.,"[7, 3, 5, 9, 4]","def predict_next_value(nums):
  # calculate average
  avg = sum(nums) / len(nums)

  # predict next value
  return avg
  
# test  
print(predict_next_value([7, 3, 5, 9, 4])) # prints 6.0"
Combine the given lists using the zip method in Python.,"list1 = [1, 2, 3, 4] 
list2 = [5, 6, 7, 8]","list3 = list(zip(list1, list2))
print(list3) 
# Output: [(1, 5), (2, 6), (3, 7), (4, 8)]"
Write a Python program to process an array of strings. The program should print out the characters in each string in reverse order.,"[ ""Hello"", ""World"" ]","# Input array
arr = [""Hello"", ""World""]

# Loop through each string
for s in arr:
 # Print the string in reverse order
 print(s[::-1])

# Output
olleH
dlroW"
Write a Python program to generate a random key of a given length containing characters from the given set of characters.,"6, ""ACGT""","import random

def generate_random_key(length,characters):
    key = """"
    for _ in range(length):
        key += random.choice(characters)
    return key

length = 6
characters = ""ACGT""

print(generate_random_key(length,characters)) # GTGGCA"
Come up with a Python program to aggregate a list of strings based on the number of character occurrences in each string.,"List of strings = [""Apple"", ""Orange"", ""Banana"", ""Pineapple""]","from collections import defaultdict

strings = [""Apple"", ""Orange"", ""Banana"", ""Pineapple""]

dictionary = defaultdict(list)
for string in strings:
    char_count = len(string)
    dictionary[char_count].append(string)

print(dictionary)"
Create a python program to check if a list is palindromic.,"list1 = [1,2,3,2,1]","def is_palindrome(lst):
  if len(lst) < 2:
    return True
  if lst[0] != lst[-1]:
    return False
  return is_palindrome(lst[1:-1])"
Create a Python script that takes two integers as input and prints out their greatest common divisor.,"30, 54","def gcd(a, b): 
    if b == 0:
        return a 
    else:
        return gcd(b, a % b)

if __name__ == ""__main__"":
        a = int(input(""Enter first integer: ""))
        b = int(input(""Enter second integer: ""))
        result = gcd(a, b)
        print(""The GCD of {} and {} is: {}"".format(a, b, result))"
Write a Python program to determine the sum of even elements in a given array.,"[1, 2, 3, 4, 5, 6]","def sum_even_elems(arr):
    sum_of_even = 0
    for elem in arr:
        if elem % 2 == 0:
            sum_of_even += elem
    return sum_of_even

arr = [1,2,3,4,5,6]
print(sum_even_elems(arr))"
Write a Python program to scrape the HTML content of a website and extract all links.,Website URL: http://example.com,"import requests
from bs4 import BeautifulSoup

url = 'http://example.com'

r = requests.get(url)
soup = BeautifulSoup(r.text, 'html.parser')

links = [link.get('href') for link in soup.find_all('a')]
print(links)"
Write a function in Python to remove all punctuation and special characters.,"'Hello, World!!!'","import string

def removePunctuation(input_string):
    punctuations = string.punctuation
    output_string = """"
    for char in input_string:
        if char not in punctuations:
            output_string += char
    return output_string

print(removePunctuation(""Hello, World!!!""))  # Output: Hello World"
Produce a Python script to display the first n Fibonacci numbers,n = 5,"def printFibo(n):
    first = 0
    second = 1

    print(first)
    print(second)

    for i in range(2, n):
        next = first + second
        print(next)
        first = second
        second = next

#Test
printFibo(5)"
Write a Python program to optimize the sorting of a given list of items.,"['chair', 'lamp', 'books', 'table']","def optimize_sort(items):
  sorted_items = sorted(items)
  return sorted_items"
Create a Python function to detect a specific sequence,"Given a list of integers, list_a = [1, 6, 3, 7, 4], find the index of the sequence [3, 7]","def find_sequence(list_a, pattern):
    result = []
    for i in range(len(list_a)-len(pattern)+1):
        if list_a[i:i+len(pattern)] == pattern:
            result.append(i)
    return result"
Replace the for-loop in the following Python function with an equivalent while loop.,"def count_down(value):
    ret = 1
    for i in range(value, 0, -1):
        ret *= i
    return ret","def count_down(value):
    ret = 1
    while value > 0:
        ret *= value
        value -= 1
    return ret"
Create a program in Python to calculate the sum of the digits in a number using recursion.,number = 1234,"def sum_of_digits(number):
 if len(str(number)) == 1:
  return number
 else:
  return number % 10 + sum_of_digits(number // 10)

# example
sum_of_digits(1234)
# returns 10"
Write a Python program to check whether an element exists within a given list.,"list_a = [1, 2, 3, 4]
target = 3","def is_element_in_list(list_a, target):
 return target in list_a

is_element_in_list(list_a, target)"
Create a Python class for a student with the following attributes.,"Name, Age, Address","class Student(object):

    def __init__(self, name, age, address):
        self.name = name
        self.age = age
        self.address = address"
Generate a Python program to calculate the Fibonacci number at a given position.,n = 10,"def fibonacci(n):
    if n == 0:
        return 0
    elif n == 1:
        return 1
    else:
        return fibonacci(n-1) + fibonacci(n-2)

n = 10
print(fibonacci(n))"
Write a Python program to filter out all the strings longer than 10 characters in a list of strings.,"my_list = [""Hello"", ""World"", ""Welcome to the world!"", ""Hi!""]","def filter_long_strings(my_list):
  long_strings = []
  for i in my_list:
    if len(i) > 10:
      long_strings.append(i)
  return long_strings"
Write a Python program to remove the duplicates in a list and print the list in ascending order.,"[10,7,9,12,11,7,9,10]","""""""
Write a Python program to remove the duplicates in a list and print the list in ascending order
""""""

def remove_duplicates_ascending(l):
    return sorted(list(set(l)))

if __name__ == ""__main__"":
    l = [10,7,9,12,11,7,9,10]
    res = remove_duplicates_ascending(l)
    print(res) # [7, 9, 10, 11, 12]"
Create a python class object for the following data:,"A customer has name, age, emailid and phone number as attributes.","class Customer:
    def __init__(self, name, age, emailid, phone_number):
        self.name = name
        self.age = age
        self.emailid = emailid
        self.phone_number = phone_number"
Debug the following python code,"def compute_sum(x, y):
return x + y","def compute_sum(x, y):
    return x + y # Added a missing indentation to the return statement."
Create a Python code to calculate the speed of an object at a given time.,"position = 50
time = 10","def calculate_speed(position, time): 
    speed = position / time 
    return speed

if __name__ == '__main__':
    position = 50
    time = 10
    speed = calculate_speed(position, time)
    print(speed)"
Create a Python program to retrieve data from a given URL.,"url = ""https://example.com/index.html""","# Import the built-in ""requests"" package
import requests

# Set the URL
url = ""https://example.com/index.html""

# Retrieve the data
data = requests.get(url)

# Output the retrieved data
print(data.text)"
Create a Python script that extracts the text from a webpage,URL: https://www.example.com,"import requests
from bs4 import BeautifulSoup

url = ""https://www.example.com""

page = requests.get(url)

soup = BeautifulSoup(page.content, 'html.parser')

text = soup.find_all(text=True)

for t in text:
    print(t.strip())"
Edit the following Python program to print all the even numbers from 0 to 10.,"for i in range(10):
    print(i)","for i in range(11):
  if i % 2 == 0:
    print(i)"
Evaluate the accuracy of a machine learning model.,A classification model trained on a dataset of 10000 images.,Create a python script to evaluate the performance of the classification model. The script should measure the accuracy of the model by measuring the accuracy score on a held-out test set. The test should compare the model's predictions to the true labels for the image samples.
Design a Python program to convert minutes to hours and minutes.,Total minutes = 150,"def convert_minutes(minutes):
    hours = minutes // 60
    remaining_minutes = minutes % 60
    return hours, remaining_minutes

hours, minutes = convert_minutes(150)
print(hours, minutes)"
Develop a Python function that can detect the spoken language of a user’s input.,Bonjour,"def detect_language(text):
 """"""Detect the language of a given text.

 Args:
  text (str): The text to detect the language of.

 Returns:
  str: The detected language of the text.
 """"""

 language = detect(text)
 return language"
Write a Python program that takes a URL and downloads the HTML page as a string.,"url = ""https://www.example.com""","import requests

def get_html_page(url):
 response = requests.get(url)
 return response.text"
Identify the complexity of the following python sorting algorithms.,"numbers = [10, 5, 8, 7, 2, 9, 1]","[Selection Sort]: O(n^2)
[Insertion Sort] : O(n^2)
[Merge Sort]: O(nlogn)
[Quick Sort]: O(nlogn)
[Heap Sort]: O(nlogn)"
Convert the following java program to python.,"public class Main {
public static void main(String[] args) {
    int number = 10;
    int square = number * number;
    System.out.println(""Square of given number is: ""+square);
}
}","# Converting from Java to Python

number = 10
square = number * number
print(""Square of given number is: ""+str(square))"
Write a Python program to identify the largest number in the given list.,"[1000, 506, 299, 620, 35]","max_num = 0 

for num in lst : 
    if num > max_num : 
        max_num = num 

print(max_num)"
Design a Python program to predict output given input,"Given two numbers x and y, predict the division output given x/y.","def predict_divison_output(x, y):
    return x / y"
Create a Python program to sort a dictionary according to the values.,"{""John"": 90, ""Mary"": 95, ""Aaron"": 80}","def sort_dict(d):
    sorted_dict = {}
    for k, v in sorted(d.items(), key=lambda x: x[1], reverse=True):
        sorted_dict[k] = v
    return sorted_dict

input_data = {""John"": 90, ""Mary"": 95, ""Aaron"": 80}
sorted_dict = sort_dict(input_data)
print(sorted_dict)  # Output: {""Mary"": 95, ""John"": 90, ""Aaron"": 80}"
Rewrite the current function using Python 3.x code instead of Python 2.7.,"def sum(a, b):
     return a + b","def sum(a, b):
    return a + b"
Write a Python program to print out the grade of a student based on the given marks,60,"def get_grade(marks):
    if marks >= 90:
        grade = ""A+""
    elif marks >= 80 and marks < 90:
        grade = ""A""
    elif marks >= 70 and marks < 80:
        grade = ""B+""
    elif marks >= 60 and marks < 70:
        grade = ""B""
    elif marks >= 50 and marks < 60:
        grade = ""C+""
    else:
        grade = ""F""
    
    print(""Grade: %s"" %grade)

marks = 60
get_grade(marks)"
Create a function in Python that takes a list and sorts its elements in ascending order.,"numbers = [5, 2, 8, 7, 1]","def sortAsc(numbers):
    numbers.sort()
    return numbers"
Generate a program in Python that takes a list of numbers and prints out the average value.,"[3, 5, 7, 9]","def find_average(nums):
  sum = 0
  for num in nums:
    sum += num
  return sum/len(nums)"
Generate the output for the following Python code.,"List = [1, 2, 3, 4, 5, 6]

for num in List:
  if (num % 2 == 0):
    print (num, ""is even"")
    break",2 is even
Create a Python program that takes the average of all numbers in a list.,"[10, 15, 20, 25]","def averageList(numbers):
    total = 0
    for num in numbers:
        total += num
    return total / len(numbers)

print(averageList([10, 15, 20, 25]))"
Create a function in Python to find the most common elements in a list.,"[2, 4, 1, 4, 5, 6, 4, 8]","def most_common_element(lst):
    max_count = 0
    most_common = None
    
    for num in lst:
        count = lst.count(num)
        if count > max_count:
            most_common = num
            max_count = count
    return most_common

most_common_element([2, 4, 1, 4, 5, 6, 4, 8])"
Create a python program to replace specific words in a given input string with a custom word.,"Input string: I love robots
Replace: love -> hate","def replace_word(inp, src, target):
    inp = inp.split()
    for i in range(len(inp)):
        if inp[i] == src:
            inp[i] = target
    return ' '.join(inp)"
Reverse the words in this sentence using Python.,"""This is a sentence.""","""sentence. a is This"""
Create a Python function that takes in a list of words and check if every word in the list is a palindrome.,"[""abcd"", ""anna"", ""mom"", ""live""]","def is_all_palindrome(words):
    for word in words:
        if word == word[::-1]:
            continue
        else:
            return False
    return True

words = [""abcd"", ""anna"", ""mom"", ""live""]

print(is_all_palindrome(words))"
Create a Python program to compare two strings and generate a string with all characters that are present in both strings.,"first_string = ""hello""
second_string = ""world""","def compare_strings(first_string, second_string):
    string_list = set(list(first_string)) & set(list(second_string))
    common_string = ''.join(string_list)
    return common_string

print(compare_strings(""hello"", ""world""))"
Create a method in Python to sort all the elements in the given dictionary in descending order of the values.,"dictionary = {""A"": 30, ""B"": 40, ""C"": 20}","def sortByValue(dictionary):
    sorted_dict = dict(sorted(dictionary.items(), key=lambda x: x[1], reverse=True))
    return sorted_dict

dictionary = {""A"": 30, ""B"": 40, ""C"": 20}
result = sortByValue(dictionary)
print(result) # prints {'B': 40, 'A': 30, 'C': 20}"
Write a Python function that takes a list of numbers and prints out a list of their squares.,"[1, 2, 3]","def squares(arr):
  res = []
  for i in arr:
    res.append(i**2)
  return res

arr = [1, 2, 3]
res = squares(arr)
print(res)"
Write a Python program to compare two dictionaries to check if they are equal.,"d1 = {'a':1, 'b':2, 'c':3}
d2 = {'a':1, 'b':2, 'c':4}","def compare_dicts(dict1, dict2):
    if dict1 == dict2:
        return True
    return False

result = compare_dicts(d1, d2)
print(result)"
Write a Python program that takes a list of strings as input and returns a string containing all the strings joined together in alphabetical order.,"['apple', 'banana', 'orange']","def alphabetize_list(arr):
  arr.sort()
  return ' '.join(arr)

data = ['apple', 'banana', 'orange']
result = alphabetize_list(data)
print(result)"
Create a Python program to generate a new dictionary from an existing dictionary given a set of key-pair values.,"dct = {
 ""name"": ""John"",
 ""age"": 20,
 ""species"": ""Human""
}
desired_pairs = {""name"": ""Alex"", ""species"": ""AI""}","dct = {
 ""name"": ""John"",
 ""age"": 20,
 ""species"": ""Human""
}
desired_pairs = {""name"": ""Alex"", ""species"": ""AI""}

# Generate the new dictionary
new_dct = {**dct, **desired_pairs}

print(new_dct)

# Output: {'name': 'Alex', 'age': 20, 'species': 'AI'}"
Write a Python program to remove duplicate items from a list.,"[1, 2, 3, 4, 3, 2, 4]","def remove_duplicate(inlist):
    outlist = []
    for item in inlist:
        if item not in outlist:
            outlist.append(item)
    return outlist

result = remove_duplicate([1, 2, 3, 4, 3, 2, 4])
print(result)"
Offer a suggestion for increasing the performance of the following Python Script,"def function(arg):
    for i in range(len(arg)):
        print(i)","def function(arg):
    for i in arg:
        print(i)"
Write a Python code to update the values in a table.,"Table name: orders
Table Schema:

order_id INT
customer_name VARCHAR
price INT

Input Data:
order_id = 2345
customer_name = ‘John Smith'
price = 59.99","cur.execute(""UPDATE orders SET customer_name = %s, price = %s WHERE order_id = %s"", (customer_name, price, order_id))
conn.commit()"
Create a Python script to generate a histogram from an input dataset.,"[1, 2, 3, 4, 5, 6, 7, 8, 9]","import numpy as np
import matplotlib.pyplot as plt

data = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])

# histogram the data
plt.hist(data)

# labels
plt.xlabel('Value')
plt.ylabel('Frequency')

plt.show()"
Generate a Python code to create a class which creates an empty dictionary with the given keys.,"""name, age""","class EmptyDictionary:
    def __init__(self, keys):
        self.keys = [k.strip() for k in keys.split("","")]
        self.dictionary = {k: None for k in self.keys}
            
    def get_dictionary(self):
        return self.dictionary"
Create a Python function to return the elements of two lists as a dictionary.,"list_one = [1, 2, 3]
list_two = ['a', 'b', 'c']","list_one = [1, 2, 3]
list_two = ['a', 'b', 'c']

def list_to_dict(list_one, list_two):
  if len(list_one) != len(list_two):
    return None
  d = {}
  for i in range(len(list_one)):
    d[list_one[i]] = list_two[i]
  return d
  
dictionary = list_to_dict(list_one, list_two)
print(dictionary)"
Execute the following python program,"# Sum of elements of the given list 
def sumEle(lst): 
    sum = 0
    for ele in lst: 
        sum += ele 
    return sum",The output of the code is 12.
Implement a Python function to swap two values in a list.,List: 4 8 1 5,"def swapPositions(list, pos1, pos2): 
  
    first_ele = list[pos1] 
    list[pos1] = list[pos2] 
    list[pos2] = first_ele 
  
    return list
  
# Driver function 
list = [4, 8, 1, 5] 
pos1, pos2  = 0, 3
  
print(swapPositions(list, pos1, pos2))"
Generate a bash script to run a given python code.,"filename: fib

content:

def fib(n): 
    # F(n) = F(n-1) + F(n-2) 
    if n<0: 
        print(""Incorrect input"") 
    # First Fibonacci number is 0 
    elif n==0: 
        return 0
    # Second Fibonacci number is 1 
    elif n==1: 
        return 1
    else: 
        return fib(n-1)+fib(n-2)","#!/bin/bash
if [[ $1 -lt 0  ]]
   then echo ""Incorrect input""
fi
python3 fib.py $1"
Create a web scraper in Python to access the data in a given url,https://www.example.com/,"import requests
from bs4 import BeautifulSoup

url = 'https://www.example.com/'
resp = requests.get(url)
soup = BeautifulSoup(resp.content, 'html.parser')

# Scraping code goes here"
Convert this JavaScript code to Python.,"const a = 1;
const b = 2;
const c = a + b;
console.log(c);","a = 1
b = 2
c = a + b
print(c)"
Write a Python program to sort a dictionary by its values and return the sorted list?,"{""Red"":120,""Blue"":90,""Yellow"":50,""Purple"":75}","unsortedDict = {""Red"":120,""Blue"":90,""Yellow"":50,""Purple"":75}

sortedList = sorted(unsortedDict.items(), key=lambda x: x[1])
print(sortedList)"
Write a Python program to merge two given dictionaries and update the values of common keys.,"Dictionary 1: {'a': 10, 'b': 20, 'c': 30}
Dictionary 2: {'a': 15, 'd': 40}","def merge_dicts(dict1, dict2):
 result = {**dict1, **dict2}
 for key in result:
  if key in dict1 and key in dict2:
   result[key] = dict1[key] + dict2[key]

 return result

dict1 = {'a': 10, 'b': 20, 'c': 30}
dict2 = {'a': 15, 'd': 40}

merge_dicts(dict1, dict2)
# {'a': 25, 'b': 20, 'c': 30, 'd': 40}"
Generate a function in Python to replace every character in a string with the character that follows it in the alphabet.,"string = ""abc""","def replace_char(string):
    encoded = """"
    for char in string:
        if char == 'z':
            encoded += 'a'
        else:
            encoded += chr(ord(char) + 1)
    return encoded"
Create a Python program that calculates the factorial of a number.,n=5,"def factorial(n):
    if n == 0:
        return 1
    
    return n*factorial(n-1)

fact = factorial(5)
print('Factorial of 5 is ' + str(fact))"
You need to write a Python program for computing the factorial of a number.,5,"def factorial(num):
    if num == 0:
        return 1
    else:
        return num * factorial(num - 1)

print(factorial(5))"
Write a Python program to print the numbers of a specified list after removing even numbers from it.,"data_list = [12, 17, 24, 29, 18, 11, 16]","def remove_even_numbers(data_list):
    return [x for x in data_list if x%2 != 0]

print(remove_even_numbers(data_list))"
Generate a function in Python that takes a list of integers and returns a boolean indicating whether or not there are any duplicates in the input list.,"[1, 2, 3, 1]","def contains_duplicates(list):
 
 seen = set()
 
 for element in list:
 if element in seen:
 return True
 seen.add(element)
 
 return False"
Rewrite the following Python code avoiding nested if-statements.,"def check_integer(x):
  if x > 0:
    if x*x > 10:
      return True
    else:
      return False
  else:
    return False","def check_integer(x):
  if x <= 0:
    return False
  if x*x > 10:
    return True
  return False"
Create a Python program to perform currency conversion.,Exchange rate of USD/EUR = 0.86,"def currency_converter(amount, rate):
 return amount * rate

# US Dollars to Euro
print(currency_converter(10, 0.86))  # Output: 8.6

# Euro to US Dollars 
print(currency_converter(10, 1.16))  # Output: 11.6"
Build a web scraper with Python to extract the text of a website.,Link to a website.,"import requests
from bs4 import BeautifulSoup

# Copy the link to the website
url = 'https://www.example.com/'

# Make a request for the page
r = requests.get(url)

# Parse the response using BeautifulSoup
soup = BeautifulSoup(r.text, 'html.parser')

# Extract the text from the page
text = soup.find_all(text=True)

# Output the text
for t in text:
 print(t.strip())"
write a python program for its purpose,Compute the factorial of a given number,"""""""
Compute the factorial of a given number
""""""

def factorial(n): 
	if n == 1: 
		return 1
	else: 
		return n * factorial(n-1) 

if __name__ == '__main__': 
	num = int(input()) 
	print(factorial(num))"
Develop a Python script to calculate the sum of the squares of all elements in a given array.,"[1, 2, 3]","def sum_of_squares(arr):
    sum = 0 
    for num in arr:
        sum += num*num
    return sum

arr = [1,2,3]
sum_of_squares = sum_of_squares(arr)
print(sum_of_squares)"
"Write a python program to count how many times the word ""the"" appears in a given text.",The quick brown fox jumps over the lazy dog,"def count_the(text):
    count = 0
    words = text.split()
    for word in words:
        if word == ""the"":
            count += 1
    return count

if __name__ == '__main__':
    text = ""The quick brown fox jumps over the lazy dog""
    print(count_the(text))"
Compare two strings to check if they are anagrams or not in Python.,"“silent”, “listen”","def is_anagram(w1, w2):
    # Check if lengths are equal
    if len(w1) == len(w2):
        # Sort the strings
        s1 = sorted(w1)
        s2 = sorted(w2)
        # Check if sorted strings are equal
        if s1 == s2:
            return True
    return False

# Example
w1 = ""silent""
w2 = ""listen""

print(is_anagram(w1, w2)) #Output: True"
Optimize a Python algorithm that computes the maximum value in a given array.,"list = [23, 45, 67, 89, 13, 99, 19, 20]","def max_value(list):
    max_val = list[0]
    for val in list[1:]:
        if val > max_val:
            max_val = val
    return max_val

list = [23, 45, 67, 89, 13, 99, 19, 20]
print(max_value(list)) # 99"
Build a command-line tool in Python 3 that will print a table of Prime Numbers up to a specified number (argument).,Max number: 100,"#!/usr/bin/env python3

import sys

maximum = int(sys.argv[1])

print('Prime numbers up to {}:'.format(maximum))
print('----------------------------')

for num in range(2, maximum+1):
    prime = True
    for i in range(2, num):
        if num % i == 0:
            prime = False
            break

    if prime:
        print(num, end=' ')"
Suggest a modification to the following python code to optimize its runtime performance,"def get_sum(numbers):
  sum = 0
  for i in numbers:
    sum += i
  return sum","def get_sum(numbers):
  sum = 0
  for i in range(len(numbers)):
    sum += numbers[i]
  return sum"
Write a Python script that takes an integer as input and outputs the Fibonacci number corresponding to that index.,7,"# Input number
num = int(input())

# Numbers
a = 0
b = 1

for i in range(num):
     # Sum of all preceding numbers
     c = a + b
     # Set the second number as the first number
     a = b
     # Set the new sum as the second number
     b = c

# Print the nth Fibonacci number
print(a)"
Write a Python program to take in a list of phrases and generate a string with the each phrase followed by its length.,"phrases = [""A bird in the hand"", ""is worth two in the bush""]","result = ""A bird in the hand (17)is worth two in the bush (25)""
 
code:
input_phrases = [""A bird in the hand"", ""is worth two in the bush""]
 
result = """"
for phrase in input_phrases:
 result += phrase + ' (' + str(len(phrase)) + ')'
 
print(result)"
Optimize a Python script to filter all strings of length 5.,"[""Hello"", ""Hello World"", ""World"", ""Python"", ""Coding""]","def filter_length(words):
    new_words = []
    for word in words:
        if len(word) == 5:
            new_words.append(word)

    return new_words

words = [""Hello"", ""Hello World"", ""World"", ""Python"", ""Coding""]
 print(filter_length(words))"
Read the following data structure and generate a Python program to sort the list by name alphabetically.,"student_list = [{""name"": ""John"", ""age"": 20}, {""name"": ""Emily"", ""age"": 18}, {""name"": ""James"", ""age"": 21}]","sorted_list = sorted(student_list, key=lambda k: k[""name""])
 
for student in sorted_list:
    print(student[""name""])"
Generate a Python script to delete the duplicate element from an array.,"[3, 8, 4, 3, 2, 8]","def removeDuplicates(arr): 
    final_list = [] 
    for num in arr: 
        if num not in final_list: 
            final_list.append(num) 
    return final_list 
          
# Driver Code 
arr = [3, 8, 4, 3, 2, 8]  
print(removeDuplicates(arr))"
Write a Python script that takes a list of numbers as an input and outputs their average.,"[3, 5, 7, 9, 12]","def average(arr):
    return sum(arr) / len(arr)

mylist = [3, 5, 7, 9, 12]

print(""Average of mylist is:"", average(mylist))"
Write a Python code to check if a given list contains all unique elements.,"list = [3, 1, 4, 6, 5]","def is_unique_list (numbers):
    return len(numbers) == len(set(numbers))"
Create a web scraper using Python to scrape the title of all articles on a given website and store them in a list.,"URL: ""http://example.com/articles""","import requests
from bs4 import BeautifulSoup

url = ""http://example.com/articles""
r = requests.get(url)
html = r.text
soup = BeautifulSoup(html, ""html.parser"")

titles = []
for art in soup.find_all(""h2""):
 titles.append(art.get_text())

print(titles)"
Code up a web scraper in Python for a particular website.,The website is https://www.example.com,"import requests
from bs4 import BeautifulSoup

url = 'https://www.example.com'
page = requests.get(url)

soup = BeautifulSoup(page.text, 'html.parser')

all_divs = soup.find_all('div')

for div in all_divs:
    try:
        print(div['class'])
    except:
        print(div.text)"
Generate a for loop in Python for iterating an array.,"[2, 5, 9, 8]","arr = [2, 5, 9, 8]
for num in arr:
    print(num)"
You need to edit an existing Python program. The program to accept and print a sentence.,"str1 = ""Hello World""","str1 = ""Hello World""

print(str1)"
"Write a Python script that takes a list of integers, and returns a list of tuples that contain the index and square of each number in the original list.","nums = [1, 2, 3, 4, 5]","def square_index(nums):
    return [(index, num ** 2) for index, num in enumerate(nums)]

square_index(nums)
# Output: [(0, 1), (1, 4), (2, 9), (3, 16), (4, 25)]"
Create a Python program that calculates the total cost of an online purchase.,"ProductName: Powerbank, Quantity: 3, PriceEach: $15","def calculate_total_cost(product_name, quantity, price):
    return quantity * price

total_cost = calculate_total_cost(""Powerbank"", 3, 15)
print(""Total cost of the purchase is $"" + str(total_cost))"
Please construct a function in Python that constructs and returns a dictionary containing all unique characters in a given string.,"Example String: ""missisippi""","def unique_characters(string):
    unique_chars = {}
    for char in string:
        if char in unique_chars:
            continue
        else:
            unique_chars[char] = True
    return unique_chars

result = unique_characters('missisippi')
print(result) # Output: {'m': True, 'i': True, 's': True, 'p': True}"
Edit a given Python program to add error handling to it.,"def read_csv(filename):
    with open(filename, 'r') as f: 
        data = f.readlines()
    return data","def read_csv(filename):
    try:
        with open(filename, 'r') as f: 
            data = f.readlines()
            return data
    except FileNotFoundError: 
        print(""File not found. Please provide a valid filename"")"
Develop a Python script for calculating the Fibonacci numbers for a given input.,8,"def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    # First Fibonacci number is 0 
    elif n==1: 
        return 0
    # Second Fibonacci number is 1 
    elif n==2: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2) 

# Driver Program 
  
print(Fibonacci(8))"
Generate a python script to extract a random subset of size 100 from a given list of items.,"li = [1,2,3,4,5,6,7,8,9,10]","import random

def extract_random_subset(li, size=100): 
    subset = [] 
    while len(subset) < size: 
        rand_ele = random.choice(li)
        if rand_ele not in subset: 
            subset.append(rand_ele) 
    return subset"
Sort a list of strings in Python alphabetically.,"string_list = [""apple"",""banana"", ""orange"", ""kiwi""]","def sort_list(string_list):
  sorted_list = sorted(string_list)
  return sorted_list"
Generate a python code that adds a delimiter string between every list item.,"[""apple"", ""orange"", ""mango""]","def join_list_items(my_list, delimiter):
    joined_list = delimiter.join(my_list)
    return joined_list

list_string = join_list_items([""apple"", ""orange"", ""mango""], "", "")
print(list_string)
# Output: apple, orange, mango"
"Write a Python program to create a list that contains the elements of the previous list, but with all duplicates removed.","list_with_duplicates = [2, 3, 4, 4, 5, 5, 6, 6]",no_duplicates_list = list(set(list_with_duplicates))
"Develop a Python script that prints the unique words in a string, along with their respective counts.","""The quick brown fox jumped over the lazy dog.""","from collections import Counter

string = ""The quick brown fox jumped over the lazy dog.""
words = string.split()
word_counts = Counter(words)

unique_words = set(words)

for word in unique_words:
    print(f""{word:15} {word_counts[word]:3}"")"
Create a python program to calculate the sum of odd numbers within a given range.,"range(1, 10)","total = 0
for i in range(1, 10):
    if i % 2 != 0:
        total += i
print(total)"
"Create a Python program that takes in a positive integer, then uses a while loop to output the numbers counting down to 1.",6,"num = int(input(""Enter a positive integer: ""))

while num > 0:
    print(num)
    num -= 1

print(""Done!"")"
Generate a Python function to return the index of a given item in a list.,"lst = [1, 2, 3, 4];","def findIndex(lst, item):
 for i, v in enumerate(lst):
 if v == item:
 return i
 return -1

findIndex(lst, 4) // 3"
Optimize this Python program for better efficiency.,"def add_two_lists(l1, l2):
    res = []
    for i in range(len(l1)):
        res.append(l1[i] + l2[i])
    return res","def add_two_lists(l1, l2):
    return [x + y for x, y in zip(l1, l2)]"
Create a python program that modifies a given string to remove all spaces.,"my_string = ""This is a string with spaces""","def remove_spaces(my_string):
    return my_string.replace(' ', '')

#test
my_string = ""This is a string with spaces""
no_spaces_string = remove_spaces(my_string)
print(no_spaces_string) # Output: Thisisastringwithspaces"
Convert a given list of numbers into a Python dictionary using a for loop.,"list_of_nums = [1, 2, 3, 4, 5]","list_of_nums = [1, 2, 3, 4, 5]

dictionary = {}
for num in list_of_nums:
 dictionary[num] = num

print(dictionary)

# Output {1: 1, 2: 2, 3: 3, 4: 4, 5: 5}"
Construct a Python program that takes a string as input and creates a new string with the first character of each word in the given string,"""This is a sample string""","def first_letter_string(input_str):
    output_str = """"

    for w in input_str.split():
        output_str += w[0]

    return output_str

input_str = ""This is a sample string""
print(first_letter_string(input_str))"
Create a Python program to detect and print the number of vowels in a given string.,Hi everyone,"def number_of_vowels(s):
    count = 0
    for char in s:
        if char in 'aeiouAEIOU':
            count += 1
    return count

s = 'Hi everyone'
print('The number of vowels in the given string is :', number_of_vowels(s))"
Create a Python program to calculate the electric bill for a customer based on kilowatt hour of electricity used.,x = 500,"def calculate_electric_bill(kw_usage):
  rate = 0.15
  bill = kw_usage * rate
  return bill

x = 500
bill = calculate_electric_bill(x)
print(""Your bill is:"", str(bill))"
Optimize the following Python code to be as efficient as possible.,"def fun(N):
 result = 0
 for i in range(1, N+1):
  for j in range(1, N+1):
   result += i + j
 return result","def fun(N):
 result = (N*(N+1))/2
 result *= (2 * N + 1)
 result /= 3
 return int(result)"
Compute the sum of a list of numbers using a for loop in Python.,"[1, 2, 3, 4]","total = 0

nums = [1, 2, 3, 4]

for num in nums:
    total += num

print(total)"
"Create a function in Python that takes a given number, removes all its digits and returns an integer.",x = 356,"def removeDigits(x):
    str_x = str(x)
    without_digits = int("""".join([i for i in str_x if not i.isdigit()]))
    return without_digits

x = 356
print(removeDigits(x))"
Create a Python code snippet to print the number of elements in an array,"arr = [1, 2, 3, 4]","arr = [1, 2, 3, 4]

print(len(arr))"
Write a Python function to calculate the sum of a list of numbers after transforming them using a given function.,"numbers = [1, 2, 3]
transform_function = lambda x: x**2","def transform_sum(numbers, transform_function):
 transformed_numbers = [transform_function(x) for x in numbers]
 return sum(transformed_numbers)"
Create a web scrapper in Python that extracts the number of subscribers from a YouTube Channel.,https://www.youtube.com/user/mahalo,"import requests
from bs4 import BeautifulSoup

url = 'https://www.youtube.com/user/mahalo'
page = requests.get(url)
soup = BeautifulSoup(page.content, 'html.parser')
subs = soup.find(id='subscriber-count').text

subscribers = int(subs.replace(',', '').split(' ')[0])
print('Number of subscribers: ', subscribers)"
Develop a Python program to perform this operation.,"Find the sum of the digits of an integer.

Input: 323","def sum_digits(n):
    sum = 0
    while n > 0:
        sum += n % 10
        n = n // 10
    return sum

result = sum_digits(323)
print(result)"
Write a function in Python to delete duplicates from a list.,"[1,1,3,4,4,5]","def remove_duplicates(lst): 
	return list(set(lst)) 
remove_duplicates([1,1,3,4,4,5])"
Develop a Python algorithm to detect an anagram in a given sentence.,"sentence = ""The eyes""
anagram = ""theyes""","def isAnagram(sentence, anagram):  
    sentence = ''.join(sentence.split())
    anagram = ''.join(anagram.split())

    if(sorted(sentence) == sorted(anagram)): 
        return True  
    else: 
        return False

if isAnagram(sentence, anagram): 
    print(""The given strings are anagrams!"")
else: 
    print(""The given strings are not anagrams."")"
Create a Python program to generate a bar chart of a given data set.,"data_points = [50, 45, 55]","import matplotlib.pyplot as plt

plt.bar(range(len(data_points)), data_points)
plt.title('Bar Chart')
plt.xlabel('index') 
plt.ylabel('value')
plt.show()"
Write a Python program to generate a list containing all permutations of the characters of a given string.,string = 'ABC',"from itertools import permutations

def generate_permutations(string):
    return list(permutations(string))

string = 'ABC'
print(generate_permutations(string))
# Output: [('A', 'B', 'C'), ('A', 'C', 'B'), ('B', 'A', 'C'), ('B', 'C', 'A'), ('C', 'A', 'B'), ('C', 'B', 'A')]"
Write a Python program that takes a list of numbers as input and returns a list of all numbers in the original list which are divisible by 7.,"[14, 21, 49, 28, 35, 56, 16]","def divisible_by_seven(numbers): 
    return [number for number in numbers if number % 7 == 0]

numbers = [14, 21, 49, 28, 35, 56, 16]
print(divisible_by_seven(numbers))

# Output  [14, 21, 28, 56]"
"Write a Python program that takes in an email address, checks it is valid and then prints the domain.","email = ""test@example.com""","import re 
  
def validate_email(email): 
  
    regex = '^[a-z0-9]+[\._]?[a-z0-9]+[@]\w+[.]\w{2,3}$'
  
    if(re.search(regex,email)):  
        domain = email.split('@')[1] 
        print(""Domain name:"", domain)      
    else:  
        print(""Invalid Email"")  
  
  
email = ""test@example.com""
validate_email(email)"
Write a class that implements the singleton pattern in Python.,No input,"class Singleton:
    instance = None

    @staticmethod
    def get_instance():
        if Singleton.instance is None:
            Singleton.instance = Singleton()
        return Singleton.instance"
Create a Python program to calculate the sum of series 1 + ½ + ⅓ + ... + 1/n.,n = 5,"def seriesSum(n):
    # set the initial sum to 0
    total = 0

    # loop over the range
    for i in range(1, n+1):
        total += 1 / i

    return total

print(seriesSum(5))"
Come up with a code in Python to find the union of two lists.,"List 1: [1, 2, 3, 4, 5]
List 2: [3, 4, 5, 6, 7]","list1 = [1, 2, 3, 4, 5]
list2 = [3, 4, 5, 6, 7]

def unionList(list1, list2):
    return set(list1 + list2)

result = unionList(list1, list2)
print(result)"
Improve the following code by simplifying it using Python's built-in functions.,"def add_two_nums(a, b):
 result =0 
 for i in range(a):
  result = result + b
 return result","def add_two_nums(a, b):
 return a * b"
Write a function in Python that takes in a size n and returns the n-th prime number.,n = 5,"def nth_prime_number(n):
    prime_numbers = [2]
    i = 3
    while len(prime_numbers) < n:
        for number in prime_numbers:
            if i % number == 0:
                break
        else:
            prime_numbers.append(i)
        i+= 2
    return prime_numbers[-1]


# test 
prime_number = nth_prime_number(5)
print(prime_number) # Output: 11"
Implement a linear search using Python.,"[1, 2, 3, 4 ,5], 4","def linearSearch(arr, x): 
    for i in range(len(arr)): 
  
        if arr[i] == x: 
            return i 
  
    return -1
  
arr = [1, 2, 3, 4, 5] 
x = 4
  
result = linearSearch(arr, x) 
if result == -1:
    print('There is no element with value {}'.format(x))
else:
    print(""The element {} is found at index {}"".format(x, result))"
Write a function in Python to compute the mean of a list of numbers.,"[1, 3, 4, 8, 5]","def compute_mean(nums):
    sum = 0
    for num in nums:
        sum += num
    return sum/len(nums)

a = [1, 3, 4, 8, 5]
print(""Mean ="", compute_mean(a)) # Output: Mean = 4.4"
Generate a python function that takes an array and returns its maximum element.,"[5, 25, 10, 9]","def maxElement(arr): 
    max = arr[0] 
    for i in arr: 
        if i > max: 
            max = i 
    return max 
 
arr = [5, 25, 10, 9]
out = maxElement(arr) 
print(out)"
Develop a Python script to generate an array of given size filled with random numbers.,int size = 10,"import random

def arr_of_random_numbers(size):
    arr = []
    for i in range(size):
        arr.append(random.randint(1, 100))
    return arr

size = 10
arr = arr_of_random_numbers(size)
print(arr)"
Write a Python script for splitting a given string into a list of words.,"my_sentence = ""This is my sentence""","sentence_words = my_sentence.split("" "")
print(sentence_words)"
Produce an algorithm in Python to calculate the total area of a polygon given its side lengths?,"[2, 3, 4, 5, 6]","def polygon_area(sides):
	x = sum(sides) / 2
	n = len(sides)
	
	area = (x * (x-sides[0]) * (x-sides[1]) * (x-sides[2]) * ... * (x-sides[n-1])) ** 0.5
	
	return area

total_area = polygon_area([2, 3, 4, 5, 6])
print(total_area)"
Write a Python program to sort a list of dictionaries using a custom key.,"lst = [{'name': 'Tim', 'age': 20}, {'name': 'Bob', 'age': 10}, {'name': 'Chris', 'age': 30}]","sorted_list = sorted(lst, key = lambda x: x['name'])
print(sorted_list)"
Construct a Python script to search a text for a given string and returns the number of iterations found.,"string= ""Hello World!"", search=""l""","def search_string(string, search):
    count = 0 
    for i in range(len(string)):
        if string[i] == search:
            count += 1
    return count

searched_string = search_string(""Hello World!"", ""l"") 
print(searched_string)"
Generate an optimized Python data structure for sorting a large list of numbers.,"[32, 66, 1, 4, 88, 29]","def optimized_sort(numbers):
    # Create a heap
    heap = []

    # Insert each element into the heap
    for num in numbers:
        heapq.heappush(heap, num)

    # Pop elements from the heap and append to result list
    sorted_nums = []
    while heap:
        sorted_nums.append(heapq.heappop(heap))

    return sorted_nums"
Write a code to perform Principal Component Analysis (PCA) in Python.,Data set: <noinput>,"from sklearn.decomposition import PCA

# create PCA object
pca = PCA(n_components=None)

# fit the object with the data
pca.fit(data)

# transform the data into lower dimension
pca_data = pca.transform(data)

# variance of each PC
pca.explained_variance_ratio_"
You need to write a program in Python that takes a string and replaces all the vowels in it with underscores.,"""Hello World""","def replace_vowels(str):
    result = """"
    for c in str:
        if c.lower() in ['a', 'e', 'i', 'o', 'u']:
            result += '_'
        else:
            result += c
    return result

result = replace_vowels(""Hello World"")
print(result)"
Write a Python program to read a list of numbers and return the sum of elements in the list.,"[1,2,3,4,5]","def sum_list(nums):
    if not nums: 
        return 0
    return nums[0] + sum_list(nums[1:])

sum_list([1,2,3,4,5]) # 15"
Generate a python function that takes in a string and replaces certain characters,"Input string: ""hello world""
Characters to replace: ""l""
Replacement character: ""a""","def replaceChar(s, charToReplace, replacementChar): 
    newStr = """"
    for char in s:
        if char == charToReplace:
            newStr += replacementChar
        else: 
            newStr += char
    return newStr

print(replaceChar(""hello world"", ""l"", ""a"")) # Output: ""heaaao worad"""
Create a Python script which takes in a sentence and prints the 2nd and 5th words.,The quick brown fox jumped over the lazy dog,"sentence = ""The quick brown fox jumped over the lazy dog"" 
words = sentence.split(' ') 
  
# 2nd and 5th words 
print(words[1] + "" "" + words[4])"
Create a basic Python program to generate a string of unique random characters.,Length of the string: 10,"import random
import string

def generateRandomString(length):
 characters = string.ascii_lowercase + string.ascii_uppercase + string.digits

 return ''.join(random.choice(characters) for _ in range(length))

print(generateRandomString(10))"
Write a Python program to take a list of numbers and reverse the order of the elements in the list in place.,"[1, 2, 3, 4, 5]","def reverse_list(numbers):
 # get the length of the list
 n = len(numbers)

 # loop through the list
 for i in range(n // 2):
 # swap the elements
 numbers[i], numbers[n - i - 1] = numbers[n - i - 1], numbers[i]

numbers = [1, 2, 3, 4, 5]
reverse_list(numbers)
print(numbers) # [5, 4, 3, 2, 1]"
Write Python code to count the number of nodes in a BST.,"4 
   /   \ 
  2     6 
 / \   / \ 
1   3  5   7","def countNodes(root): 
    if root is None: 
        return 0
    
    return (1 + countNodes(root.left) + 
            countNodes(root.right))"
Implement a basic algorithm in Python to calculate the nth Fibonacci number.,6,"def fibonacci(n):
 if n == 0:
 return 0
 elif n == 1:
 return 1
 else:
 return fibonacci(n - 1) + fibonacci(n - 2)
 
print(fibonacci(6)) // 8"
Create a program in Python to grade an essay.,"The student’s essay should be graded on a scale of 0-10, with 10 being the highest score.","def grade_essay(essay):
 score = 0
 # Score based on content
 # Score based on grammar
 # Score based on spelling
 # Score based on punctuation
 # Score based on style
 
 # Final score should be in range of 0-10
 if score < 0:
    score = 0
 elif score > 10:
    score = 10
 
 return score"
Build a Python script to optimize a given linear equation by minimizing the cost.,x + 2y = 4,"import numpy as np
from scipy.optimize import minimize

def cost_function(X): 
    x = X[0]
    y = X[1]
    return x + 2*y - 4

X = minimize(cost_function, [0, 0])

x_opt = X.x[0]
y_opt = X.x[1]

# the optimal solution is x = 2, y = 1"
Generate an array of random numbers in Python.,size: 10,"import numpy as np

size = 10
random_array = np.random.randint(0, 100, size)
print(random_array)"
Identify the programming language embedded in the following code snippet,"x = 0
for i in range(1,5):
    if i == 3:
        break
    x += i
print(x)",Python
Create a Python code that generates a combination of elements from a given array.,"arr = [a, b, c, d], n = 2","def combinations(arr, n):
    for i in range(len(arr)):
        for j in range(i + 1, len(arr)):
            print(arr[i], arr[j])
combinations(arr, n)"
Create a Python program to list all the integers between a given range input.,"Start: 3
End:10","def list_integers(start, end):
    integers_list=[]
    while (start <= end):
        integers_list.append(start)
        start = start + 1
    return integers_list
  
print(""The list of integers in the given range is:"")
result = list_integers(3,10)
print(result)"
"Create a Python function clamp that takes a number, a lower bound and an upper bound and clamps the value between the two bounds.","number=12, lower=3, upper=15","def clamp(number, lower, upper):
    if number < lower:
        return lower
    elif number > upper:
        return upper
    else:
        return number"
Create a function in Python for evaluating a given polynomial expression.,Expression: 4x4 + 7x3 + 5x2 + 8x,"def evaluate_polynomial(expression):
  expression = expression.strip()
  tokens  = expression.split(""+"")
  result = 0
  for term in tokens:
    term = term.strip()
    coefficient, exponent = term.split(""x"")
    result += float(coefficient) * float(expoent)

  return result"
Design a function in Python that takes a string and a number and removes the characters at the specified positions from that string.,"str = ""Hello World!""
index = [0, 5, 9]","def remove_chars_at_indices(str, indices):
    new_str = """"
    for i in range(len(str)):
        if i not in indices:
            new_str += str[i]
    return new_str

str = ""Hello World!""
index = [0, 5, 9]
result = remove_chars_at_indices(str, index)
print(result)"
Create a Python function that takes two strings and checks if the second string is a substring of the first.,"string1 = ""Hello world!""
string2 = ""world""","def check_substring(string1, string2):
    if string2 in string1:
        return True
    else:
        return False

# example
result = check_substring(""Hello world!"", ""world"")
print(result)"
Create a Python function which will take a list of numbers as input and return a list but with each value doubled.,"[1, 2, 3, 4, 5]","def double_list(lst):
    new_list = []
    for num in lst:
        new_list.append(num * 2)
    return new_list

my_list = [1, 2, 3, 4, 5]

double_list(my_list) #[2, 4, 6, 8, 10]"
Optimize a python program that prints out all the even numbers in a list using list comprehension.,"numbers = [1,2,3,4,5,6,7,8,9,10]","even_numbers = [x for x in numbers if x % 2 == 0]

print(even_numbers)"
Generate a Python program that uses a recursive function to reverse a given string combining with loops and conditionals.,thequickbrownfox,"def reverseString(s): 
    if len(s) == 0: 
        return s 
    else: 
        return reverseString(s[1:]) + s[0] 
  
# Driver code 
s = ""thequickbrownfox""
  
print (""The original string  is : "",end="""") 
print (s) 
  
print (""The reversed string(using recursion) is : "",end="""") 
print (reverseString(s))"
Generate a Python program which takes a list of numbers and returns only the even numbers,"[1, 2, 3, 4, 5, 6]","def get_even_numbers(list_of_numbers):
    even_nums = []
    for num in list_of_numbers:
        if num % 2 == 0:
            even_nums.append(num)
    return even_nums

list_of_nums = [1, 2, 3, 4, 5, 6]
result = get_even_numbers(list_of_nums)
print(result)"
Create an algorithm in Python 3 to identify the characters in a given string.,"""Abe erotically jitters""","def identify_characters(s): 
    characters = []
        
    for char in s:
        if char not in characters:
            characters.append(char)
        
    return characters
 
print(identify_characters('Abe erotically jitters')) #['A', 'b', 'e', ' ', 'r', 'o', 't', 'i', 'c', 'a', 'l', 'y', 'j', 'i', 't', 's']"
"Write a Python script that takes a list of strings as an input and creates a dictionary containing the unique letters in each string, and their respective counts.","string_list = [""apple"",""banana"",""carrot""]","char_dict = {}

for string in string_list:
 for char in string:
 if char in char_dict:
 char_dict[char] += 1
 else:
 char_dict[char] = 1

print(char_dict)

# Output:
# {'a': 3, 'p': 2, 'l': 1, 'e': 1, 'b': 1, 'n': 2, 'c': 1, 'r': 2, 'o': 1, 't': 1}"
Write a Python program to join two given lists with a specific separator.,"list_1 = [""Hello"", ""World""]
list_2 = [""Python"", ""Programming""]
separator = "",""","list_1 = [""Hello"", ""World""]
list_2 = [""Python"", ""Programming""]
separator = "",""

result = separator.join(list_1 + list_2)
print(result)"
How would you check if a string ends with a given substring in Python?,"Input String = ""Test string""
Substring = ""string""","if InputString.endswith(Substring):
    print('The input string ends with the given substring.')
else:
    print('The input string does not end with the given substring.')"
Create a unique list of items from a given list in Python.,"given_list = [2, 2, 4, 5, 5, 6, 8, 8]","# Unique list
unq_list = list(set(given_list))

#Print unique list
print(unq_list)"
Analyse the sentiment of the given sentence using python.,Sentence: I am so excited that I was chosen for the job.,"from textblob import TextBlob

# Get the sentiment of the sentence
sentence = 'I am so excited that I was chosen for the job.'
blob = TextBlob(sentence)
sentiment = blob.sentiment
print('Polarity:', sentiment.polarity)  # Output: Polarity: 0.8"
Provide a valid Python class definition that uses the below given values.,"Class_name = 'Automobile'
 attributes  = 'speed' , 'color'
 methods = 'set_speed', 'set_color'","class Automobile:
    def __init__(self, speed, color):
        self.speed = speed
        self.color = color

    def set_speed(self, speed):
        self.speed = speed
    
    def set_color(self, color):
        self.color = color"
Create a function in Python that takes in two dates and returns the number of days between them.,"today = ""2020/05/20""
tomorrow = ""2020/05/21""","def compute_days_between_dates(date1, date2):
    today_datetime = datetime.datetime.strptime(date1, '%Y/%m/%d')
    tomorrow_datetime = datetime.datetime.strptime(date2, '%Y/%m/%d')
    return (tomorrow_datetime-today_datetime).days

print(compute_days_between_dates(""2020/05/20"", ""2020/05/21""))"
Write a Python program to check if a given list of strings consists only of unique elements.,"my_list = ['cat', 'dog', 'cat']","def check_unique_list(my_list):
    unique_list =[]
    for i in my_list:
        if i not in unique_list:
            unique_list.append(i)
    if len(unique_list) == len(my_list):
        return True
    else:
        return False"
Create a Python 2 program to print the following pattern.,"Pattern to display:

1
2 3
4 5 6
7 8 9 10","for i in range(1, 11):
    for j in range(1, i+1):
        print(i+(j-1)*i, end="" "")
    print()"
Edit the Python code to print the sum of two given numbers.,"a = 1
b = 2","a = 1 
b = 2
sum = a + b 
print(sum) # 3"
Write a Python program to create a dictionary with numbers from 0 to 4 as keys and corresponding values as given below.,"[1, 2, 3, 4]","d = {0:1, 1:2, 2:3, 3:4, 4:4}"
"Write a Python program to create a dictionary from two lists. Make the dictionary keys from the first list, and the value from the second list.","Tractors, 100
Cars, 50","dictionary = { ""Tractors"": 100, ""Cars"": 50 }"
"Given the input, create a Python program which prints out all the words inside the input in alphabetical order.",I like cats and playing the piano,"def print_words_in_order(string):
    """"""Print out all the words in the input in alphabetical order""""""
    words = string.split()
    words.sort()
    for word in words:
        print(word)"
Generate a Python program to calculate the minimum cost of a given shopping cart.,"cartItems = {""Apple"": 10,
			""Banana"": 5,
			""Orange"": 2,
			""Grapes"": 15
            }","def minimum_cost(cart): 
    min_cost = 0
    for item, cost in cart.items():
        min_cost += int(cost) 
    return min_cost

print(minimum_cost(cartItems))"
"Create a Python generator to iterate over the strings in the list ['cat', 'dog', 'bird'].","['cat', 'dog', 'bird']","def string_generator(strings):
  for string in strings:
    yield string

for string in string_generator(['cat', 'dog', 'bird']):
  print(string)"
Write a Python program that prints all prime numbers between two given numbers.,"2, 20","for num in range(2, 20):
    if num > 1: 
        for i in range(2, num): 
            if (num % i) == 0: 
                break
        else: 
            print(num)"
Create a function in Python that takes an integer and prints all its factors.,60,"def find_factors(num):
  factors = []
  for i in range(2, num):
    if (num % i == 0):
      factors.append(i)
  print(f""Factors of {num}: {factors}"")

find_factors(60)"
Write a python program to retrieve the value at a given index of a list.,"Lists = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
Index = 1","def getValueAtIndex(my_list, index):
    return my_list[index]

result = getValueAtIndex([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 1) 
print(result)"
Create a dictionary in Python containing the following key-value pairs:,"{""name"":""John"", ""age"":30, ""occupation"":""teacher""}","my_dict = {""name"":""John"", ""age"":30, ""occupation"":""teacher""}"
Create a function in Python to normalize a vector.,"vector = [1, 5, 2, 8, 9, 4]","def normalize(vector):
    norm = np.linalg.norm(vector)
    normalized = []
    for i in vector:
        normalized.append(i/norm)
    return normalized

vector = [1, 5, 2, 8, 9, 4]

normalized_vector = normalize(vector)
print(normalized_vector) # [0.10938925979875006, 0.5469462984987499, 0.21877851959750005, 0.8750559279949998, 1.0000000000000002, 0.43693269989949995]"
"Given an array of integers, write a Python function to find the index of the largest element in that array.","nums = [10, 50, 20, 7, 55]","def find_largest_element_index(nums):
        largest = nums[0]
        largest_element_index = 0
        for i in range(0, len(nums)):
            if nums[i] > largest:
                largest = nums[i]
                largest_element_index = i
        return largest_element_index"
Write a Python code to find the number of odd and even numbers in a given array.,"arr = [8, 5, 6, 3, 9]","arr = [8, 5, 6, 3, 9]

odd = 0
even = 0

for num in arr: 
    if num % 2 == 0: 
        even += 1
    else: 
        odd += 1

print(""Number of odd numbers in the array: "", odd)
print(""Number of even numbers in the array: "", even)"
Generate an algorithm to calculate the sum of two numbers entered by the user using Python.,"int n1 = 5
int n2 = 7","def sum(n1, n2): 
 return n1 + n2

n1 = 5
n2 = 7
print(""Sum of {0} and {1} is {2}"".format(n1, n2, sum(n1, n2)))"
Rewrite a JavaScript code to an equivalent Python code.,"function isOddNumber(num) {
  if (num % 2 !== 0) {
    return true;
  }
}","def is_odd_number(num):
    if num % 2 != 0:
        return True
    else:
        return False"
Create a Python program to randomly generate a mixture of two Gaussian distributions.,"mean1 = 0, mean2 = 5, stddev1 = 0.5, stddev2 = 1  
N = 10","import random 
import math

def random_mixture(mean1, mean2, stddev1, stddev2, N):
    data = []
    for _ in range(N):
        if random.random() < 0.5:
            data.append(random.normalvariate(mean1, stddev1))
        else:
            data.append(random.normalvariate(mean2, stddev2))
    return data"
Automate an online registration process with Python.,"A sample registration form that asks for first name, last name, email address, and phone number.","import requests

# input
form_data = {
 'firstname': 'Jane', 
 'lastname': 'Doe', 
 'email': 'janedoe@example.com', 
 'phone': '123-456-7890'
}

# process
url = 'https://example.com/register'
response = requests.post(url, data=form_data)

# output
if response.status_code == 200:
 print('Registration was successful!')"
Update the Python function below so that it sorts the given list of numbers in ascending order.,"[2, 4, 5, 1, 3]","def sort_list(numbers):
    numbers.sort()
    return numbers

result = sort_list([2, 4, 5, 1, 3])
print(result)"
Generate a Python code to print the symmetric differences between two sets.,"Set1 = {1, 3, 4, 8} 
Set2 = {2, 3, 5, 6}","# Define sets
Set1 = {1, 3, 4, 8} 
Set2 = {2, 3, 5, 6}

# Compute the symmetric difference
difference = Set1.symmetric_difference(Set2) 
  
# Print the symmetric differences 
print(""The symmetric differences between the two sets :"", difference)"
Create a basic web scraper using Python to retrieve the content of a web page.,URL: https://www.example.com,"import requests
from bs4 import BeautifulSoup

url = ""https://www.example.com""

page = requests.get(url)

soup = BeautifulSoup(page.text, 'html.parser')

content = soup.find_all('p')

print(content)"
Write a Python code which will print out the number of words in a string.,Example string,"def wordCount(str): 
    count = len(str.split()) 
    return count 

print(wordCount(""Example string"")) 

# Output: 2"
"Write a Python program to find the number of ways to express n as the sum of 1, 3, and 4.",5,"def num_ways_sum(n):
    # base case
    if n == 0 or n == 1:
        return 1

    # recursive case
    return num_ways_sum(n - 1) + num_ways_sum(n - 3) + num_ways_sum(n - 4)

# example
print(num_ways_sum(5))"
Optimize an existing Python program for computing the reverse of a string.,"def reverse_string(string):
  return string[::-1]","def reverse_string(string):
  return """".join(reversed(string))"
Create a sorting algorithm in Python that sorts a list of numbers from low to high.,"[10, 6, 8, 4]","def bubble_sort(lst):
    for i in range(len(lst) - 1): 
        for j in range (0, len(lst) - i - 1): 
            if lst[j] > lst[j + 1] : 
                lst[j], lst[j + 1] = lst[j + 1], lst[j] 
    return lst

sorted_list = bubble_sort([10, 6, 8, 4])
print(sorted_list)"
Write a function in Python to return the top 3 most frequent words in a given string.,This is a sample string,"from collections import Counter

def top_3_words(str):
  word_list = list(str.split())
  word_dict = Counter(word_list)
  sorted_words = sorted(word_dict.items(), key=lambda kv: kv[1], reverse=True)
  top_3 = sorted_words[:3]
  return [word for word, count in top_3]

top_3_words('This is a sample string')"
Edit the following Python code to calculate the average of three values given by the user.,"a = int(input(""Enter first value: "")
b = int(input(""Enter second value: "")
c = int(input(""Enter third value: "")

print(""The average is: "" + a)","a = int(input(""Enter first value: ""))
b = int(input(""Enter second value: ""))
c = int(input(""Enter third value: ""))

average = (a + b + c) / 3
print(""The average is: "" + str(average))"
Create a python function to count the number of unique elements from a given list.,"arr = [1, 4, 2, 1, 5, 4, 3]","def count_unique_elements(arr):
    unique_elements = set(arr)
    return len(unique_elements)
    
if __name__ == '__main__':
    arr = [1, 4, 2, 1, 5, 4, 3]
    print(count_unique_elements(arr))"
Suggest a way to shuffle a python list of integers,"my_list = [1,2,3,4,5]","import random

def shuffle_list(lst):
    random.shuffle(lst)
    return lst

my_list = [1,2,3,4,5]
shuffled_list = shuffle_list(my_list)
print(shuffled_list)"
Create a Python program to rearrange the elements of an array in the maximum possible order,"arr = [1,2,3]","arr = [1,2,3]

def rearrange(arr):
    i = 1
    while i < len(arr):
        key = arr[i]
        j = i - 1
        while j >= 0 and arr[j] < key:
            arr[j+1] = arr[j]
            j -= 1
        arr[j+1] = key
        i += 1
    return arr"
Create a Python function to remove all the elements in a list that are greater than a specified value.,"[1, 2, 3, 4, 5], 3","def remove_greater_than(arr, value):
    new_arr = []
    for item in arr:
        if item <= value:
            new_arr.append(item)
    return new_arr

result = remove_greater_than([1, 2, 3, 4, 5], 3)
print(result)"
Develop a Python program that takes an array of integers and returns the largest element.,"[2, 4, 8, 9, 10]","def find_max(arr):
    
    max_val = arr[0]
    
    for num in arr:
        if num > max_val:
            max_val = num
            
    return max_val

print(find_max([2, 4, 8, 9, 10]))"
Edit the following Python code to remove the syntax errors.,"print('Please enter a number:"")
n = int(input())","print('Please enter a number:')
n = int(input())"
"Edit the existing Python code to forward declare a function called ""compute"" that takes two arguments, ""a"" and ""b"", and returns the result of ""a + b"".","def func1():
    result = compute(2,3)
    print(result)","def compute(a,b):
    return a + b

def func1():
    result = compute(2,3)
    print(result)"
Can you write a Python script to search an input string for a specific character and return its position in the string?,"string = ""Python""
search_char = 'y'",pos = string.find(search_char) # 2
"Write a Python function to classify a given animal as a mammal, bird, reptile, or fish.",lion,"def classify_animal(animal): 
 if animal == ""lion"": 
  return ""mammal"" 
 elif animal == ""eagle"": 
  return ""bird"" 
 elif animal == ""crocodile"": 
  return ""reptile"" 
 elif animal == ""salmon"": 
  return ""fish"" 
 else: 
  return ""unknown"""
Create a python function which sorts an array of integers into ascending order.,"[3, 7, 8, 1, 5, 4]","def sort_int_asc(arr):
    arr.sort()
    return arr

print(sort_int_asc([3, 7, 8, 1, 5, 4]))"
Design a numerical algorithm in Python that takes an input set of numbers and returns the maximum of this set.,"[8, 15, 7, 6, 16]","def find_max(arr): 
  
  max_value = arr[0] 
  
  for i in range(1, len(arr)): 
      if arr[i]> max_value: 
          max_value = arr[i] 
          
  return max_value 
  
#Test Array 
arr = [8, 15, 7, 6, 16] 

#Function call 
maxvalue = find_max(arr) 

print(""Maximum value:"",maxvalue)"
Create a Python program that takes a 3-word string and prints individual words in the same order on separate lines.,Hooray! Great!,"sentence = ""Hooray! Great!""
words = sentence.split(' ')
for word in words:
 print(word)"
Generate a python method to solve the given system of linear equations.,2x - 3y = 6 ; 3x + 4y = 12,"def solve_linear_eq(a,b,c,d):
    x = (b*d - c*a) / (b*d - c*a)
    y = (d*a - b*c) / (b*d - c*a)
    return x, y"
Create a Python program to accept two values from the user and calculate the greatest common divisor.,"val1 = 4
val2 = 12","# Function for calculating the 
# greatest common divisor
def gcd(a, b): 
    if (a == 0): 
        return b 
    return gcd(b%a, a) 

# Take input from the user 
val1 = int(input(""Enter the first value: "")) 
val2 = int(input(""Enter the second value: "")) 
  
# Calculate the gcd 
result = gcd(val1, val2) 
print(""The GCD of"",val1,""and"",val2,""is"",result)"
"Write a python program to generate a random password given a set of letters, numbers, and characters.",No input,"import random 
  
  
# All the possible characters 
# that could go into the password 
string = ""abcdefghijklmnopqrstuvwxyz01234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%^&*()?""
  
# Using the choice function of the 
# random module choose any 
# character randomly from the set of characters 
password =  """".join(random.sample(string, 8)) 
print(password)"
"Design a Python Program to calculate the harmonic mean of two numbers, given their product and sum.","product = 12
summation = 8","def harmonic_mean(product, summation):
    # calculate denominator by subtracting sum from product
    denominator = product - summation
    # calculate harmonic mean by dividing sum by denominator 
    harmonic_mean = summation/denominator
    return harmonic_mean"
Construct a Python program that takes a number as an input and prints all its divisors.,num = 48,"def find_divisors(num):
    divisors = []
    for i in range(2,num+1):
        if num % i == 0:
            divisors.append(i)
    return divisors

num = 48
divisors = find_divisors(num)
print(""The divisors of {} are: {}"".format(num, divisors))"
Create an algorithm to check if a sentence is a palindrome in Python.,"Sentence: ""Rise to vote, Sir""","def is_sentence_palindrome(sentence):
    sentence = sentence.lower().replace("" "", """")
    return sentence == sentence[::-1]

is_sentence_palindrome(""Rise to vote, Sir"")  # False"
Create a method in Python to flatten a 2-Dimentional array.,"array = [[1, 2], [3, 4], [5, 6]]","def flatten(arr):
  flat_list = []
  for sublist in arr:
    for item in sublist:
      flat_list.append(item)
  return flat_list

flatten(array)"
Edit the given Python program to handle a KeyError.,"my_dict = {
 'key1' : 'value1',
 'key2': 'value2'
 
}

value2 = my_dict['key3']","my_dict = {
 'key1' : 'value1',
 'key2': 'value2'
 
}

try:
 value2 = my_dict['key3']
except KeyError:
 print(f""The key 'key3' does not exist in the dictionary."")"
Write code in Python that takes a given dictionary and returns the difference of the maximal and minimal values of the dictionary.,"{'a': 5, 'b': -2, 'c': 3}","def calculate_difference(input_dict):
    max_val = max(input_dict.values())
    min_val = min(input_dict.values())
    return max_val - min_val

input_dict = {'a': 5, 'b': -2, 'c': 3}
difference = calculate_difference(input_dict)
print(difference)"
Create a search algorithm using Python to find an item in a list of tuples.,"arr = [('a', 2), ('b', 4), ('c', 6), ('d', 7)]
key = 'd'","def search(arr, key): 
    for item in arr: 
        if item[0] == key: 
            return item[1] 
    return ""Not found""
  
# Driver code 
arr = [('a', 2), ('b', 4), ('c', 6), ('d', 7)] 
key = 'd'
  
print(search(arr, key))"
Write a Python program to sort a list of dictionaries by a given key,"[{'name': 'Alice', 'age': 26}, {'name': 'Bob', 'age': 24}], 'age'","def sort_dicts(list_dicts, key):
    list_dicts.sort(key=lambda x: x[key])
    return list_dicts

print(sort_dicts([{'name': 'Alice', 'age': 26}, {'name': 'Bob', 'age': 24}], 'age'))"
Write a Python program to generate the powerset of a given set of elements.,"[1, 2, 3]","def powerset(arr):
    result = [[]]
    for ele in arr:
        result.extend([subset + [ele] for subset in result])
    return result

print(powerset([1, 2, 3]))"
Find the number of ways to reach nth step in a staircase if a person can take 1 or 2 steps at a time in Python.,n = 6,"def stairs(n): 
    step = [0] * (n + 2) 
    step[1] = 1
    step[2] = 2
  
    for i in range(3, n + 2): 
        step[i] = step[i - 1] + step[i - 2] 
  
    return step[n] 
      
n = 6
print(stairs(n))"
Construct a single line of code in python to get the last element of a list,"[1, 8, 3, 10, 5]","last_element = [1, 8, 3, 10, 5][-1]"
Create a Python program to print the numbers in descending order.,"[10, 3, 5, 8, 7]","lst = [10, 3, 5, 8, 7]

lst.sort(reverse=True)

for n in lst:
    print(n)"
Identify the programming language in the given code snippet.,"def f(x):
 return x + 2",Python
Create a basic program in Python that takes in two numbers and calculates the product.,"int a = 5;
int b = 10;","def product(a, b):
 	return a * b
 
print(product(5, 10))"
Incorporate AI into an existing Python program to sort a list of integers.,"list=[4,3,7,8,2,1,6]","def AI_sort(list):
  sorted_list = sorted(list) 
  return sorted_list

list = [4,3,7,8,2,1,6]
print(""Sorted list is :"", AI_sort(list))"
Write a python program to repeatedly ask the user for a string and print the number of vowels in the string.,Example string: hello,"while True:
    s = input(""Enter a string: "")
    count = 0
    for i in s:
        if(i=='a' or i=='e' or i=='i' or i=='o' or i=='u'):
            count+=1
    print(""The number of vowels in the string:"", count)"
Write a function in Python that takes in a list of integers. The function should return a list of integers such that the result is made up of the elements of the original list sorted in descending order.,"[3, 5, 2, 1]","def sorted_descending(list_of_ints):
  result = sorted(list_of_ints, reverse=True)
  return result"
Create a Python script to compare two sets of data and print the differences.,"set1 = [1, 2, 3, 4, 5]
set2 = [2, 4, 6, 8, 10]","set1 = [1, 2, 3, 4, 5]
set2 = [2, 4, 6, 8, 10]

difference = []
for i in set1:
 if i not in set2:
 difference.append(i)
 
print(f""The difference between set1 and set2 is: {difference}"")"
Optimize this Python code for finding the maximum value in an array.,"def find_max(arr):
    max_value = 0
    for x in arr:
        if x > max_value:
            max_value = x
    return max_value","def find_max(arr): 
    return max(arr)"
Create a python script to find the last element of a given list.,"list = [1, 2, 3, 4, 5]","def last_element(list):
    """"""Find the last element of a given list.""""""
    return list[-1]

# Usage Example 
list = [1, 2, 3, 4, 5]
last_element = last_element(list)
print(last_element)  # 5"
Write a Python program to allow a user to input a sentence and print the words in the sentence in reverse order.,This is my sentence.,"def reverse_words_in_sentence(sentence):
    words_list = sentence.split()
    words_list.reverse()
    reversed_sentence = "" "".join(words_list)
    return reversed_sentence

sentence = ""This is my sentence.""
result = reverse_words_in_sentence(sentence)
print(result)"
Develop an algorithm in Python to sort a list of numbers using an insertion sort.,"[7, 8, 5, 4, 1, 9, 6, 3, 2]","def insertion_sort(nums):
    for i in range(1,len(nums)):
        key = nums[i]
        j = i-1
        while j >= 0 and key < nums[j]:
            nums[j + 1] = nums[j]
            j -= 1
        nums[j + 1] = key

nums = [7, 8, 5, 4, 1, 9, 6, 3, 2]
print(""Unsorted Array:"", nums)
insertion_sort(nums)
print(""Sorted Array:"", nums)"
Develop a Python Program to determine if two given strings are an anagram or not.,"string1 = ""abcd""
string2 = ""cbad""","def is_anagram(string1, string2):
    # check if strings have equal length 
    if len(string1) != len(string2): 
        return False 
    sorted1 = sorted(string1); 
    sorted2 = sorted(string2); 
    # check if sorted strings are the same 
    if sorted1 == sorted2:
        return True 
    return False"
Write a function in Python that takes a list of strings and returns a dictionary of counts for each string.,"list_of_strings = [""apple"", ""banana"", ""apple"", ""orange"", ""kiwi""]","def count_list_items(list_of_strings):
 counts = {}
 
 for item in list_of_strings:
 if item not in counts:
 counts[item] = 1
 else:
 counts[item] += 1
 
 return counts
 
print(count_list_items(list_of_strings))
# Output: {""apple"": 2, ""banana"": 1, ""orange"": 1, ""kiwi"": 1}"
Generate a Python script to filter a list of words by length.,"words = ['cat', 'dog', 'elephant', 'bear', 'dragon']","def filter_by_length(words, length):
    return [word for word in words if len(word) == length]"
"Given a list of numbers and a target number, write a python code to find two integer elements in the list whose sum equals the target.","umbers_list = [2, 4, 6, 11, 15, 20]
target_num = 22","def find_sum_in_list(numbers_list, target_num):
 for num1 in numbers_list:
 for num2 in numbers_list:
 if num1 + num2 == target_num:
 return (num1, num2)

find_sum_in_list(numbers_list, target_num)"
"Edit the following Python program so that it prints out a list of numbers from 50 to 100, exclusive.","lst = [1,2,3,4]

for n in lst:
 print(n)","lst = list(range(50, 100))

for n in lst:
 print(n)"
"Generate a Python function that takes in a list of numbers, and creates a new list with each number doubled.","[1, 2, 3, 4]","def double_numbers(numbers):
    # use list comprehesion to double each number
    doubled_numbers = [num * 2 for num in numbers]
    return doubled_numbers

numbers = [1, 2, 3, 4]
doubled_numbers = double_numbers(numbers)
print(doubled_numbers) # [2, 4, 6, 8]"
Write a Python program to compare two integers and prints if one is greater then another.,"int1=1, int2=2","# compare two integers
int1=1
int2=2
if int1 > int2:
    print(""int1 is greater than int2"")
elif int2 > int1:
    print(""int2 is greater than int1"")
else:
    print(""int1 and int2 are equal"")"
Create a program that takes a name as input and prints the length of the name using Python.,Jane,"def nameLength(name): 
    return len(name) 

name = ""Jane""
print(""Length of the name is:"", nameLength(name))"
Automatically analyze and optimize the given Python code snippet.,"def factorial(n):
 if n == 1:
 return 1
 else:
 return n*factorial(n-1)","def factorial(n):
 return 1 if n in (0, 1) else n * factorial(n - 1)"
Create a function in Python to find the greatest common divisor of two given numbers.,7 8,"def get_gcd(num1, num2):
    for i in range(max(num1, num2), 0, -1):
        if num1 % i == 0 and num2 % i == 0:
            return i

result = get_gcd(7, 8)
print(result)
# Output: 1"
Generate a Python program to process an array of strings and count the number of times each string is repeated in the array.,"const inputArray = [""a"", ""b"", ""a"", ""a"", ""b"", ""c"", ""a"", ""d""]","occurence_map = {}

for item in inputArray:
 if item not in occurence_map:
  occurence_map[item] = 1
 else:
  occurence_map[item] += 1

print(occurence_map) # Output: {'a': 4, 'b': 2, 'c': 1, 'd': 1}"
"Given a list of strings, write a python program to sort the list alphabetically and print it.","strings = [""ada"", ""javascript"", ""c++"", ""python""]","strings = [""ada"", ""javascript"", ""c++"", ""python""]

strings.sort()

print(strings)
# Output: ['ada', 'c++', 'javascript', 'python']"
"Given two strings, write a Python function to check if they are anagrams of each other.","""schoolmaster"", ""the classroom""","def is_anagram(s1, s2):
    s1 = s1.lower().replace("" "", """")
    s2 = s2.lower().replace("" "", """")
    return sorted(s1) == sorted(s2)

result = is_anagram(""schoolmaster"", ""the classroom"")
print(result)"
Create a Python Program to sort a list of strings according to the length of their elements.,"list = [""apple"", ""cat"", ""banana"", ""dog""]","def ascending_sort(list):
    list.sort(key=len)
    return list

list = [""apple"", ""cat"", ""banana"", ""dog""]
result = ascending_sort(list)
print(result)"
Convert a given text into speech using Python,Text: Hello world!,"import pyttsx3

engine = pyttsx3.init()
engine.say(""Hello world!"")
engine.runAndWait()"
Create a Python program that calculates the total cost of goods based on their prices and quantity.,"Prices: [3, 5, 2, 1], Quantities: [2, 4, 3, 5]","def calculate_costs(prices, quantities): 
    total = 0
    
    for price, quantity in zip(prices, quantities): 
        total += price * quantity 
        
    return total

prices = [3, 5, 2, 1]
quantities = [2, 4, 3, 5]

print(calculate_costs(prices, quantities))"
Optimize a Python code snippet to make it run faster.,"import random

def generate_numbers(n):
 numbers = []
 for _ in range(n):
 numbers.append(random.randint(1, 1000))

 return numbers","import random

def generate_numbers(n):
 numbers = [random.randint(1, 1000) for _ in range(n)]

 return numbers"
Write a Python program which prints the first n terms of the Fibonacci sequence.,n = 10,"def print_fibonacci(n): 
    a = 0
    b = 1
    if n < 0: 
        print(""Incorrect input"")
    elif n == 0: 
        return a 
    elif n == 1: 
        return b 
    else: 
        print(a)
        print(b)
        for i in range(2,n): 
            c = a + b 
            a = b 
            b = c 
            print(c)
    
print_fibonacci(10)"
Write a Python program to convert a given temperature from Celsius to Fahrenheit using a given formula.,Temperature in Celsius: 30,"def celsius_to_fahrenheit(celsius):
 fahrenheit = (celsius * 9/5) + 32
 return fahrenheit

celsius_to_fahrenheit(30) # returns 86.0"
Create a program in Python which will return the index of the maximum value in a given array.,"[2, 10, 4, 8, 1]","def find_max(arr):
  max_val = max(arr)
  for i in range(len(arr)):
    if arr[i] == max_val:
      return i"
Generate a numerical sequence in a given range using Python.,"start = 3
end = 15","def generate_sequence(start, end):
 nums = []
 for i in range(start, end+1):
 nums.append(i)
 return nums

nums = generate_sequence(3, 15)
print(nums) // [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]"
Generate a code snippet to parse JavaScript Object Notation (JSON) with the Python programming language.,"The JSON data is given below

{
 ""name"": ""John Doe"",
 ""age"": 25,
 ""city"": ""New York""
}","import json

# parse file
data = json.loads(json_string)

# get values
name = data[""name""]
age = data[""age""]
city = data[""city""]"
Develop a class in Python to optimize the existing code.,"def display_message(message):
  print(message)

display_message('Hello World!')","class Display():
  def __init__(self, message):
    self.message = message
    
  def display_message(self):
    print(self.message)
    
message = input('Enter a message: ')
display_obj = Display(message)
display_obj.display_message()"
Convert this Java code sample to Python.,"public int sumOfArray(int[] array) {
    int sum = 0; 
    for (int i = 0; i < array.length; i++) {
        sum += array[i];
    }
    return sum;
}","def sum_of_array(array):
    sum = 0 
    for i in range(len(array)):
        sum += array[i]
    return sum"
Create a Python program which reads a list of numbers and stores them in an array.,"[1, 2, 3, 4, 5]","my_list = [1, 2, 3, 4, 5]

my_array = []

for number in my_list:
    my_array.append(number)

print(my_array)"
Create a Python script that takes a URL as an input and outputs the website title and description.,https://www.example.com,"import requests
from bs4 import BeautifulSoup 

url = 'https://www.example.com'

r = requests.get(url)
soup = BeautifulSoup(r.content, 'html.parser')

title = soup.title.string
description = soup.find('meta', attrs={'name': 'description'})['content']

print('Title:', title)
print('Description:', description)"
"Given a list of strings, write a Python program to calculate the maximum length of a string.","list_of_strings = [""dog"", ""cat"", ""elephant"", ""bird""]","max_length = 0

for string in list_of_strings:
    max_length = max(max_length, len(string))

print(max_length)"
Design a Python program to create a set of unique elements from a given list,"[1, 5, 1, 8, 6, 5]","def unique_list(nums):
  return list(set(nums))"
What function will you use to count the number of words in a string?,"'Hello world, this is a sentence.'","There are 5 words in the given string. 

To count the number of words in a string, you can use the `len()` or `count()` functions in Python. 

For example: 
```
num_words = len(string.split())
```
or 
```
num_words = string.count("" "") + 1
```"
Create a function in Python to compute the sum of all the natural numbers in a given range.,"start = 1
end = 10","def sum_natural_numbers(start, end):
    """"""
    Computes the sum of all natural numbers in a given range.
    
    Parameters:
    start (int): start of the range
    end (int): end of the range
    
    Returns:
    int: the sum of the natural numbers in the range
    """"""
    total = 0
    for i in range(start, end+1):
        total += i
    return total"
Generate a function in Python to edit a given string and capitalize a given character at a specific position.,"""Hello World!"" and 5","def capitalizeCharacter(s, pos): 
    # Grab single characters from the string  
    # starting from the given index 
    result = s[:pos] + s[pos].upper() + s[pos + 1:] 
    return result"
Edit the python code to add try-except blocks for any potential error.,"def function(num1, num2):
 result = num1/num2;
 return result;","def function(num1, num2):
 try:
 result = num1/num2;
 return result;
 except ZeroDivisionError:
  print(""Division by 0 not allowed"")"
Create a Python dictionary which contains a list of key-value pairs of word counts.,"words = [""cat"", ""apple"", ""dog"", ""banana""]","word_count = {
  'cat': 1, 
  'apple': 1,
  'dog': 1,  
  'banana': 1
}"
Modify the code below to slice a 2 dimensional array in python.,"data = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","def get_slice(data, start, end):
    return [row[start:end] for row in data]"
Write a Python program to generate a random password of length 8 with the following requirements:,"The password must include the following – at least one lowercase letter, one uppercase letter, one numeric digit, one special character","import string
import random

def generate_password(length):
    chars = string.ascii_uppercase + string.ascii_lowercase + string.digits + string.punctuation
    password = ''.join(random.choice(chars) for _ in range(length))
    return password"
Create a program in Python that extracts titles of all YouTube videos from a URL.,https://www.youtube.com/user/Thexvid/videos,"import requests
import re

url = ""https://www.youtube.com/user/Thexvid/videos""

r = requests.get(url)
titles = re.findall('<a href=""/watch\?v=([^""]+)"">(.+?)<\/a>',r.content.decode('utf-8'))

for title in titles:
 print(title[1])"
Could you create a function in Python for reaching an element in a given list with a specific index?,"[2, 3, 5, 7, 11], index = 3","def get_element(lst, index):
    return lst[index]"
"In Python, write a program to find and count the occurrences of all alphabets in the given string.","String: ""The Quick Brown Fox Jumps Over the Lazy Dog""","from collections import Counter

def count_alphabets(str):
    return Counter(str.lower())

my_str = ""The Quick Brown Fox Jumps Over the Lazy Dog""
alphabet_count = count_alphabets(my_str)

print(alphabet_count)"
Generate a code snippet to find the duplicate words in a string.,"""Python is a programming language programming used widely""","s = ""Python is a programming language programming used widely""
words = s.split(' ')

duplicate_words = []

for i in range(len(words)):
    for j in range(i + 1, len(words)):
        if words[i] == words[j]:
            duplicate_words.append(words[i])
            
print(duplicate_words)"
Generate a Python script to iterate through a list and print each element.,"lst = [""hello"", ""how"", ""are"", ""you""]","for item in lst:
  print(item)"
Write a script in Python to get the largest and smallest number from a given list.,"[9, 10, -12, 0, 5]","# Solution
# First, let's define our list of numbers
my_list = [9, 10, -12, 0, 5]

# Now, let's get the largest and the smallest numbers
max_val = max(my_list)
min_val = min(my_list)

# Finally, we can print out the results
print(""Largest number:"", max_val)
print(""Smallest number:"", min_val)"
Convert the following loop code into a recursive function in Python.,"n = 10
s = 0
for i in range(n):
    s += i","def sum_of_n_natural_numbers_recursive(n, s=0):
    if n == 0:
        return s
    
    s += n
    return sum_of_n_natural_numbers_recursive(n-1, s)

result = sum_of_n_natural_numbers_recursive(10)
print(result)"
Create a python program to calculate the average of the numbers in a list (not including null values).,"An example list of integers: [30, 28, 40, 10, 0, null, 33, null]","# Calculate the average
def avg(lst): 
    sum = 0
    count = 0
    for num in lst:
        if num is not None:
            sum += num
            count += 1
    return sum / count

# Create list of numbers
lst = [30, 28, 40, 10, 0, None, 33, None]

# Print average
print(avg(lst))

# Output: 25.5"
"Given an array of integers, write a Python program to classify each number as even or odd.","[10, 27, 32, 11]","def classify_number(arr): 
 result = []
 for num in arr: 
 if num % 2 == 0: 
 result.append(""even"")
 else: 
 result.append(""odd"")
 return result 

print(classify_number([10, 27, 32, 11]))"
Create a Python program to sort a dictionary by value,"d = {'z': 1, 'b': 2, 'a': 4, 'c': 3}","def sort_dict_by_value(input_dict):
    output_list = []
    for item in sorted(input_dict.items(), key=lambda x: x[1]):
        output_list.append(item)
    return output_list

d = {'z': 1, 'b': 2, 'a': 4, 'c': 3}
result = sort_dict_by_value(d)
print(result)"
"Using the input as a guide, modify the following Python code to add a new feature of sorting the dictionary by value.","names_and_points = {
  ""Dave"": 20,
  ""John"": 40,
  ""Rachel"": 55
}","from operator import itemgetter

names_and_points = {
  ""Dave"": 20,
  ""John"": 40,
  ""Rachel"": 55
}

sorted_dict = sorted(names_and_points.items(), key=itemgetter(1))

print(sorted_dict)"
Convert the following Python code into C++.,"def greet(name):
    print(""Hello, "" + name)","#include <iostream>

void greet(std::string name)
{
    std::cout << ""Hello, "" << name << std::endl;
}"
Generate Python code to print out the number of times each character appears in a string.,string = 'mississippi',"from collections import Counter

string = 'mississippi'
c = Counter(string)
for char, count in c.most_common():
    print(f""{char}: {count}"")"
Write a function in Python that calculates the maximum value in a 2-dimensional array.,"[
    [1, 4, 8],
    [7, 9, 6]
]","def find_max_val(arr):
    max_val = 0

    for lst in arr:
        for num in lst:
            if num > max_val:
                max_val = num
    return max_val

print(find_max_val([[1, 4, 8], [7, 9, 6]])) # Output: 9"
Write a Python program which takes in a sentence and lists out all the words sorted by length.,"""He had seen too many terrible things""","sentence = ""He had seen too many terrible things""
words = sentence.split()
sorted_words = sorted(words, key=len)
print(sorted_words) 
# Output: ['He', 'had', 'too', 'many', 'seen', 'things', 'terrible']"
Generate a dictionary of objects in Python from a list of words given by the user.,"words = [""hello"", ""world"", ""foo"", ""bar""]","words_dict = {
 ""hello"": {},
 ""world"": {},
 ""foo"": {},
 ""bar"": {}
}"
Can you provide a Python program to remove all punctuation from a given sentence?,"""This is a sentence; with, punctuation.""","import string

def remove_punctuation(sentence):
    translator = str.maketrans('', '', string.punctuation)
    return sentence.translate(translator)

#Test
print(remove_punctuation(""This is a sentence; with, punctuation.""))"
Write a Python program that takes a list and a search query as input and returns the indices of all elements in the list which match the search query.,"list = [""apple"", ""banana"", ""peach"", ""orange"", ""grape""]
search_query = ""apple""","def search_list(list, search_query):
    result = []
    for i in range(len(list)):
        if list[i] == search_query:
            result.append(i)
    return result

search_list(list, search_query) # returns [0]"
Write a Python program to convert a set of strings to a single dictionary.,"[""apple"", ""bat"", ""cat""], [""red"", ""grey"", ""black""]","my_dict = dict(zip([""apple"", ""bat"", ""cat""], [""red"", ""grey"", ""black""]))

#Print the dictionary
print(my_dict)"
Create a function in Python to replace all spaces in a given string with an underscore.,The quick brown fox,"def replace_space(string):
    return string.replace("" "", ""_"")

replace_space(""The quick brown fox"") # Outputs: The_quick_brown_fox"
Create functions in Python for validating if a number is prime or not.,n = 12,"def is_prime(n):
    if n == 1:
        return False
    for i in range(2,int(n**(1/2))+1):
        if n%i == 0:
            return False
    return True

if is_prime(12):
    print(""Prime"")
else:
    print(""Not Prime"")"
Write a Python script to find the second highest number in a list of numbers.,"[12, 2, 6, 8, 19, 15]","list_nums = [12, 2, 6, 8, 19, 15] 
  
# sorting the list in ascending order
list_nums.sort() 
  
# printing the second last element 
print(""Second highest number is:"", list_nums[-2])"
Modify a Python program to accept input from a user.,"def printMessage(): 
    print(""Hello World!"")","def printMessage(): 
    message = input(""Type your message here: "")
    print(message)"
Modify the existing Python code below so that it returns the sum of odd numbers less than the input n.,"n = 10

def sum_odd_numbers(n):
    result = 0","def sum_odd_numbers(n):
    result = 0
    for i in range(n):
        if i % 2 != 0:
            result += i
    return result"
Remove the duplicates from a given array using Python,"data = [1, 3, 3, 4, 5, 6, 6, 7]","def remove_duplicates(data):
    result = []
    for element in data:
        if element not in result:
            result.append(element)
    return result

print(remove_duplicates([1, 3, 3, 4, 5, 6, 6, 7]))"
Write a Python function that takes two lists as input and returns true if all the elements in List 1 are available in List 2.,"list1 = [21, 54, 8, 54]
list2 = [21, 24, 8, 16]","def check_if_all_in_list_2(list1, list2):
    for item in list1: 
        if item not in list2: 
            return False
    return True"
Create a Python function that takes an array as input and returns a dictionary with each element as the key and its frequency as the value.,"[1, 1, 2, 3]","def getElementFrequency(arr):
    frequency = {}
    for item in arr:
        if item in frequency:
            frequency[item] += 1
        else:
            frequency[item] = 1
    return frequency

print(getElementFrequency([1, 1, 2, 3]))"
Rewrite this Python function to be as efficient as possible.,"def get_values(dictionary):
    values = []
    for key, value in dictionary.items():
        if value > 0:
            values.append(value)
    return values","def get_values(dictionary):
    return [value for key, value in dictionary.items() if value > 0]"
Create an algorithm in Python for the classification of numbers into even or odd.,3,"def classifyNumber(num): 
    if num % 2 == 0: 
        return ""even""
    else: 
        return ""odd"" 
  
print(classifyNumber(3))"
Optimize a Python program to calculate factorials.,factorial(5),"def factorial(n):
  if n <= 1:
    return 1
  else:
    return n * factorial(n-1)

print(factorial(5)) # 120"
Create a web crawler in Python to get all web page URLs from a given website.,https://en.wikipedia.org/wiki/Web_crawler,"import requests
from bs4 import BeautifulSoup

url = 'https://en.wikipedia.org/wiki/Web_crawler'
request = requests.get(url)
soup = BeautifulSoup(request.content, 'html.parser')
for link in soup.find_all('a', href=True):
  print(link['href'])"
"Refactor the following code to use the most Pythonic approach:

```
for i in range(0, list_items_len):
    if list_items[i] == target_item:
        index = i
        break
```","list_items = ['a', 'b', 'c', 'd', 'e']
target_item = 'c'","list_items = ['a', 'b', 'c', 'd', 'e']
target_item = 'c'

index = list_items.index(target_item) if target_item in list_items else None"
Write a for-loop in Python to find the average of 5 numbers.,"5 numbers:  10, 15, 20, 25, 30","total = 0
for num in [10, 15, 20, 25, 30]:
    total += num

average = total / 5
print(average)"
Translate the given Python program into C++ code.,"def say_hello(name=""""):
    if name == """":
        print(""Hello World"")
    else:
        print(""Hello, "" + name + ""!"")","#include <iostream>
#include <string>

void say_hello(std::string name="""") {
    if (name.empty()) {
        std::cout << ""Hello World"" << std::endl;
    } else {
        std::cout << ""Hello, "" << name << ""!"" << std::endl;
    }
}

int main() {
    say_hello();
    say_hello(""John"");
    return 0;
}"
"Write a Python program to edit a given string to replace each vowel with its following character as defined below.
Vowel-> next character
a->e
e->i
i->o
o->u
u->a","string=""geeks""","def edit_vowels(string): 
    vowels = 'aeiou'
    next_chars = 'eioua'
    result_string = ''
    for char in string:
        if char in vowels:
            result_string += next_chars[vowels.index(char)]
        else:
            result_string += char
    return result_string"
Create an algorithm in Python to calculate the maximum profit that one can achieve from stock purchasing.,"15, 12, 13, 10, 11, 16","def max_profit(prices):
   max_profit = 0
   for i in range(len(prices) - 1): 
      for j in range(i + 1, len(prices)): 
         if prices[j] - prices[i] > max_profit: 
            max_profit = prices[j] - prices[i]
   return max_profit 

prices = [15, 12, 13, 10, 11, 16] 
print(""Maximum profit :"", max_profit(prices))"
Create a Python script that prints an inverted pyramid pattern.,Number = 5;,"# Create an empty list 
pattern = [] 
# Add the elements to the list for the desired pattern 
rows = 5
for i in range(1, rows+1): 
    rows = rows - i 
    pattern.append(""*""*i +  "" ""*rows) 
   
# print the pattern 
for i in pattern[::-1]: 
    print(i)"
Create a Python program for finding the second highest number in a list.,"[1, 2, 3, 4, 5]","def findSecondHighest(lst): 
  max = float(""-inf"")
  sec_max = float(""-inf"")
	
  for num in lst: 
    if (num > max): 
      sec_max = max 
      max = num 
    elif (num > sec_max): 
      sec_max = num	
  return sec_max

print(findSecondHighest([1, 2, 3, 4, 5]))"
Generate a Python code to find the sum of natural numbers up to n.,n = 10,"def findSum(n): 
    sum = 0
    for num in range(0, n+1):
        sum += num 
    return sum

n = 10
sum_of_natural_num = findSum(n)
print(sum_of_natural_num)"
Write a Python program to group two lists of numbers into a dictionary. The keys would be the first list and the values would be the second list.,"list_a = [1,2,3,4,5]
list_b = [6,7,8,9,10]","list_a = [1,2,3,4,5]
list_b = [6,7,8,9,10]

d = dict(zip(list_a, list_b)) 

print(d) // {1: 6, 2: 7, 3: 8, 4: 9, 5: 10}"
Create a python program which takes a list and returns the elements which appear twice.,"input_list = [1, 2, 3, 7, 8, 2, 4, 7]","def find_duplicates(input_list):
    seen = set() 
    duplicates = [] 
  
    for i in input_list: 
        if i not in seen: 
            seen.add(i)
        else: 
            duplicates.append(i) 
    return duplicates"
Create a function in Python which will return the maximum and minimum elements from a given list of numbers.,"[3, 4, 7, 1, 9]","def max_min(lst):
  return max(lst), min(lst)"
Write a Python program to check whether two strings are anagrams or not.,"s1 = ""listen""
s2 = ""silent""","def is_anagram(s1, s2):
 s1 = s1.replace("" "", """")
 s2 = s2.replace("" "", """")
 if len(s1) != len(s2):
 return False
 s1_count = Counter(s1)
 s2_count = Counter(s2)
 for i in s1_count:
 if s1_count[i] != s2_count[i]:
 return False
 return True

s1 = ""listen""
s2 = ""silent""
print(is_anagram(s1, s2))
# Output: True."
Design a Python code to extract the characters from from a given string in reverse order.,"string = ""hello""","def reverseCharacters (string):
    reverseStr = """"
    for i in range(len(string)-1, -1, -1):
        reverseStr += string[i]
    return reverseStr"
Construct a Python program to convert degrees Celsius to Fahrenheit.,C = 32,"#Program to convert Celsius to Fahrenheit

#user input
C = 32

#Celsius to Fahrenheit conversion
F = (C*9/5)+32

#print the result
print('%0.2f degree Celsius is equal to %0.2f degree Fahrenheit' %(C, F))"
Generate Python code to visualize this data using a bar chart.,"Data: {
    'Boys': [50, 80, 100, 90],
    'Girls': [60, 70, 90, 95]
}","import matplotlib.pyplot as plt 

# Create data
labels = ['Boys', 'Girls']  
values =[50, 80, 100, 90, 60, 70, 90, 95]
  
# naming the x-axis 
plt.xlabel('Category') 
# naming the y-axis 
plt.ylabel('Score') 
# plot title 
plt.title('Bar Plot') 
  
# plot the generated values  
plt.bar(labels, values) 
# function to show the plot 
plt.show()"
Write a function in Python to count the occurrences of a given character in a string.,"string: ""hello world"", character: 'l'","def count_char(s, c):
    count = 0
    for ch in s:
        if ch == c:
            count += 1
    return count

print(count_char('hello world', 'l'))"
Write a Python program to query Twitter to get the most recent tweets from a user.,username: @elonmusk,"import tweepy

# Authenticate to Twitter
auth = tweepy.OAuthHandler(""CONSUMER_KEY"", ""CONSUMER_SECRET"")
auth.set_access_token(""ACCESS_TOKEN"", ""ACCESS_TOKEN_SECRET"")
# Create API object
api = tweepy.API(auth)

# Get the most recent tweets from the given user
tweets = api.user_timeline(screen_name=""@elonmusk"")

for tweet in tweets:
 print(tweet.text)"
"Given a JSON object, write a Python program to list out all the keys present in the object","json_object = {""Stud1"": {""Roll No"": 1, ""Class"": 10}, ""Stud2"": {""Roll No"": 2, ""Class"": 11}}","keys = [""Stud1"", ""Roll No"", ""Class"", ""Stud2""]"
Write a function in Python to remove duplicates from a list.,"[2, 2, 3, 4, 5, 5]","def remove_duplicates(nums):
    # create a set to remove duplicates
    unique_list = set(nums)
    # convert the set back to a list
    nums = list(unique_list)
    return nums

input_list = [2, 2, 3, 4, 5, 5]
result = remove_duplicates(input_list)
print(result)"
Develop a function that returns the sum of three numbers,"three integers a, b, c","# Python3 program to return the sum of three numbers

def sum_three(a,b,c): 
    return a + b + c"
Translate the given program from Python to C.,"def calculate_area(r):
    pi = 3.14
    area = pi * r * r
    return area","#include<stdio.h>
#define PI 3.14

float calculate_area(float r)
{
    float area = PI * r * r;
    return area;
}"
Turn the given input string into a valid Python statement.,"Input string:
""Function to print hello world.""","def printHelloWorld():
    print(""Hello world"")"
Design a python program which will return the maximum element of a given list.,"data = [10, 20, 50, 27, 11, 1]","def find_max_element(arr):
    max_element = arr[0]
    for num in arr[1:]:
        if num > max_element:
            max_element = num
    return max_element"
Write a Python program to check if it contains the specified substring.,"my_string = ""Hello World""","my_string = ""Hello World""
if ""World"" in my_string:
    print(""Yes, the specified substring is found."")
else:
    print(""No, the substring is not found."")"
Write a Python code snippet to reverse the order of words in a sentence.,"Sentence: ""Hello, World!""","def reverseWords(sentence):
  words = sentence.split()
  words.reverse()
  newSentence = ' '.join(words)
  print(newSentence)
reverseWords(""Hello, World!"")"
Debug this python code to find and fix any issues it contains.,"def check_anagrams(s1, s2):
    s1 = s1.lower()
    s2 = s2.lower()
    return sorted(s1) == sorted(s2)","def check_anagrams(s1, s2):
    s1 = s1.lower().replace("" "", """")
    s2 = s2.lower().replace("" "", """")
    return sorted(s1) == sorted(s2)"
Develop a python code to calculate the number of overlapping elements in two unsorted arrays.,"Array 1: [1, 2, 2, 4] 
Array 2: [2, 3, 4]","def overlap_count(a1, a2):
    a1_set = set(a1)
    a2_set = set(a2)
    overlap_set = a1_set.intersection(a2_set)
    return len(overlap_set)

arr1 = [1, 2, 2, 4]
arr2 = [2, 3, 4]

print(overlap_count(arr1, arr2)) # 3"
Sort a list of dictionaries in Python by a given key.,"[{'food': 'apple', 'color': 'red'}, {'food': 'banana', 'color': 'yellow'}, {'food': 'pear', 'color': 'green'}]","list_of_dicts = [{'food': 'apple', 'color': 'red'}, {'food': 'banana', 'color': 'yellow'}, {'food': 'pear', 'color': 'green'}]

# Sort list by given key
sorted_list = sorted(list_of_dicts, key=lambda item:item['color'])

print(sorted_list)"
Write a function in Python that takes an integer and returns an array of digits of the number except the last two digits.,8765,"def remove_last_two_digits(num):
    num = str(num)
    return [int(x) for x in num[:-2]]"
Write a python function to generate the power set for a given set.,"A = {1, 2, 3}","def powerset(A):
    result = []
    for i in range(len(A)+1):
        for subset in itertools.combinations(A,i):
            result.append(subset)
    return result

A = {1, 2, 3}
print(powerset(A))

#Output:
#[(), (1, ), (2, ), (3, ), (1, 2), (1, 3), (2, 3), (1, 2, 3)]"
Create a Python script to remove certain characters given in a set from a string.,"ABCDEFGHIJKLMNOPQRSTUVWXYZ
set = {'A', 'C', 'D', 'E'}","string = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ""
remove_chars = set(['A', 'C', 'D', 'E'])
 
result = """".join(char for char in string if char not in remove_chars)

print(result)"
Write a Python program to find the index of an item in a list.,"my_list = [1,2,3,4]
item = 3","def find_index(lst,item):
  for i in range(len(lst)):
    if item == lst[i]:
      return i

index = find_index(my_list, item)
print(index) # 2"
"Given Python code, fix the bug.","def my_function(n):
    while n > 1000 :
        n = n/10
    return n

n = 2000
print(my_function(n))","def my_function(n):
    while n > 1000 :
        n = n//10
    return n

n = 2000
print(my_function(n))"
Create a program in python to find the sum of all multiples of 3 and 5 below a given number.,num = 20,"def sumMultiples(num):
    sum = 0
    for i in range(1, num):
        if (i % 3 == 0 or i % 5 == 0):
            sum += i
    return sum

# Driver Code
num = 20
print(sumMultiples(num))"
Create a program in Python that takes a text and tokenizes it into words.,"text = ""This is an example of tokenization""","import re 

#Replace special characters with space 
text = re.sub(r'[^\w\s]',' ',text)
#Split text 
tokens = text.split() 

print(tokens)
#Output: ['This', 'is', 'an', 'example', 'of', 'tokenization']"
Write a Python program to enter two integers as arguments and calculate the sum of them.,Two integers,"def calculate_sum(num1, num2):
    sum = num1 + num2
    return sum

num1 = int(input('Enter first number: '))
num2 = int(input('Enter second number: '))

result = calculate_sum(num1, num2)
print('The sum of the two numbers is:', result)"
Write a Python script to filter a list of text strings by removing all strings that contain a certain substring.,"word_list = ['hello', 'apple', 'this', 'is', 'a', 'word']
keyword = 'a'","filtered_list = [x for x in word_list if keyword not in x]
# filtered_list = ['hello', 'this', 'word']"
"Given a list of numbers, create a Python script to print all the elements greater than 50.","[2, 60, 5, 4, 78, 32, 99]","nums = [2, 60, 5, 4, 78, 32, 99]

for num in nums:
    if num > 50:
        print(num)"
Create a python program to find the power of a number without using the built-in functions.,"2, 5","def power_of(x, n):
    result = 1
    for i in range(n):
        result = result * x
    return result

power = power_of(2, 5)
print(power)"
Write a Python program to calculate the total sales revenue for a list of item prices and quantities.,"item_prices = [1.99, 3.00, 2.50]
item_quantities = [5, 10, 8]","# Calculate total sales

item_prices = [1.99, 3.00, 2.50]
item_quantities = [5, 10, 8]

total_sales = 0

for price, quantity in zip(item_prices, item_quantities):
 total_sales += price * quantity

print(total_sales)"
Write a Python function to check whether a number is in the given range.,"number: 4, range: [2, 4]","def is_in_range(num, a, b):
    if num >= a and num <= b:
        return True
    else:
        return False

result = is_in_range(4, 2, 4)
print(result)"
Develop a Python program to find the distance between two points on the x-axis.,"Point 1: -3
Point 2: 4","# Calculate distance between two points
def findDistance(x1, x2):
 return abs(x2 - x1)

x1 = -3
x2 = 4
distance = findDistance(x1, x2)

print(""Distance:"", distance)"
Develop a Python script which sorts a list of names in alphabetical order,"John, Anna, David, Bob, Alex","names = [""John"", ""Anna"", ""David"", ""Bob"", ""Alex""]
  
# sorting the names 
names.sort() 
  
# printing the first name in the sorted list 
print(""The first name in the sorted list is:"") 
print(names[0])"
Develop an algorithm in Python to optimize a given set of integers.,"nums = [2, 4, 6, 10, 12]","def optimize_ints(nums): 
    left = 0
    right = len(nums) - 1

    while left < right: 
        min_num = min(nums[left], nums[right]) 
        nums[right] = nums[left] = min_num + 
                                 nums[left] - nums[right] 
        left += 1
        right -= 1
    return nums

nums = [2, 4, 6, 10, 12]
print(optimize_ints(nums))"
Can you provide a script to remove any dot (.) in an URL string?,"URL String: ""https://www.google.com/example/?q=python.""","url_string = ""https://www.google.com/example/?q=python.""

def remove_dot(url_string):
    url_string = url_string.replace('.', '')
    
    return url_string

modified_url_string = remove_dot(url_string)
print(modified_url_string)
# https://wwwgooglecom/example/?q=python"
"Given a list of numbers with one missing, create a Python program to find the missing number.","[1, 2, 4, 6, 7, 8]","def find_missing_number(lst): 
    n = len(lst) 
    total = (n + 1)*(n + 2)/2
    sum_of_lst = sum(lst) 
    missing_number = total - sum_of_lst 
    return missing_number 
  
lst = [1, 2, 4, 6, 7, 8] 
missing_number = find_missing_number(lst) 
print(missing_number)"
Generate a Python program to find the nth Fibonacci number.,5,"def fibonacci(n): 
    # base condition
    if n == 0 or n == 1: 
        return n
    
    # calculate Fibonacci number for n
    return fibonacci(n-1) + fibonacci(n-2)

# test 
print(fibonacci(5))

Output:
5"
Write a function in Python to sort a given list according to the second element in the sublist,"list = [['B', 'b'], ['A', 'a'], ['C', 'c']]","def sort_by_second_element(list):
    list.sort(key= lambda x : x[1])
    return list

list = [['B', 'b'], ['A', 'a'], ['C', 'c']]

print(sort_by_second_element(list)) # [['A', 'a'], ['B', 'b'], ['C', 'c']]"
Edit this Python program to print a concatenated string of two given strings with a space between them?,"""Hello"" and ""World""","string1 = ""Hello""
string2 = ""World""

# Concatenate two strings
concatenated_string = string1 + "" "" + string2 

# Print the result
print(concatenated_string)"
Find the maximum number in an array of integers using a Python program.,"[12, 5, 23, 1, 11]","def max_number(array):
    max = array[0]
    for num in array:
        if num > max:
            max = num
    return max

maximum = max_number([12, 5, 23, 1, 11])
print(maximum) # prints: 23"
Create a function in Python which takes a list and returns a list of unique elements in ascending order.,"[15, 2, 4, 15, 46, 4, 3, 21]","def unique_list(list): 
  new_list = list(set(list)) 
  new_list.sort() 
  return new_list

print (unique_list([15, 2, 4, 15, 46, 4, 3, 21]))"
Write a Python program which,Replaces all occurrences of a given substring in a string,"def replace_substring(string, substring, replacement):
    res = """"
    for i in range(len(string)):
        if string[i:i+len(substring)] == substring:
            res += replacement
            i += len(substring)
        else:
            res += string[i]
    return res"
Create a Python program to find the average of any list of numbers.,"[2, 4, 6, 8]","def get_average(numbers):
    # take the sum and divide by number of elements
    return sum(numbers)/len(numbers)

input_list = [2, 4, 6, 8]
result = get_average(input_list)
print(result)"
Create a program to detect a palindrome string in Python.,"original_string = ""radar""","# Function to check if a string is a palindrome
def is_palindrome(original_string):  
    reversed_string = original_string[::-1]  
    if original_string == reversed_string:
        return True 
    else:
        return False  
  
# Print result
print(is_palindrome(original_string))"
Can you develop a function in Python to iteratively sum all the numbers in a list of numbers?,"[4, 9, 13, 5]","def sum_list(list): 
  total = 0
  for num in list:
    total += num  
  return total

print(sum_list([4, 9, 13, 5])) # Output: 31"
"Cut and paste the following code into Python, then fix the errors:","print(""Hello World"")","print(""Hello World!"")"
Create a Python program to check if two strings are anagrams.,"leg, gel","def is_anagram(s1, s2): 
    # Convert both strings to lower case 
    s1 = s1.lower() 
    s2 = s2.lower() 

    # Sort both strings 
    s1 = sorted(s1) 
    s2 = sorted(s2) 

    if s1 == s2: 
        return True 
    else: 
        return False"
Generate a python code to sort a dictionary in descending order by its values,"d = {""a"": 23, ""b"": 70, ""c"": 10}","sorted_d = dict(sorted(d.items(), key = lambda kv:(kv[1], kv[0]), reverse = True))
print(sorted_d)"
"For a given list of numbers, generate a python code that finds the largest number in the list.","[7, 5, 2, 9, 1]","def find_max(arr):
    max_number = 0

    for i in arr:
        if i > max_number:
            max_number = i
    return max_number"
Generate a correct Python program to build an inverted index.,A text file contains a list of words,"def build_inverted_index(filename):
    inverted_index = {}

    with open(filename) as fin:
        for line in fin:
            for word in line.split():
                if word in inverted_index:
                    inverted_index[word].append(fin.tell())
                else:
                    inverted_index[word] = [fin.tell()]

    return inverted_index"
"Write a Python program to generate an array of random numbers in the range [0,99], with the length given as input.",length = 10,"import random

def generate_random_array(length):
    return [random.randint(0, 99) for _ in range(length)]"
Create a Python program to group words that are anagrams into a list.,"['eat', 'tea', 'tan', 'ate', 'nat', 'bat']","def group_anagrams(words): 
    result = {} 
      
    for word in words: 
        key = ''.join(sorted(word)) 
        if key in result.keys(): 
            result[key].append(word) 
        else: 
            result[key] = [word] 
  
    return list(result.values()) 

words = ['eat', 'tea', 'tan', 'ate', 'nat', 'bat'] 
print(group_anagrams(words))"
Edit the following Python code to improve its speed.,"def find_missing_numbers(arr):
    n = len(arr)
    complete_sum = n*(n+1)/2 
    arr_sum = sum(arr)
    return complete_sum - arr_sum

print(find_missing_numbers([1,2,3,4,5,7,8,9]))","def find_missing_numbers(arr):
    complete_sum = (arr[-1]*(arr[-1]+1))//2
    arr_sum = 0
    for i in arr:
        arr_sum += i
    return complete_sum - arr_sum

print(find_missing_numbers([1,2,3,4,5,7,8,9]))"
Build a solution using the given resources. The end result should present the user with a search bar to query a database.,"Frontend: React
Backend: Python
Database: MongoDB","Create a React application that sends user queries to a Python backend, which runs the queries against a MongoDB database. The backend will communicate results back to the React application. The React application will then display the results to the user."
Create a Python program that takes a list as input and sorts it using bubble-sort algorithm.,"[3,2,5,6,1,4]","def bubble_sort(lst): 
    for i in range(len(lst)): 
        for j in range(0, len(lst)-i-1): 
            if lst[j] > lst[j+1] : 
                lst[j], lst[j+1] = lst[j+1], lst[j]
 
list = [3,2,5,6,1,4]
bubble_sort(list)
print('Sorted list is: ', list)"
Create a Python script to filter a list and return all elements which are divisible by a given number (i.e. create a filter function).,"num_list = [1, 2, 3, 4, 5, 6]
divisor = 2","def filter_list(num_list, divisor):
    return list(filter(lambda n: n % divisor == 0, num_list))

num_list = [1, 2, 3, 4, 5, 6]
divisor = 2

divisible_nums = filter_list(num_list, divisor)
print(divisible_nums) # [2, 4, 6]"
Write a Python program that takes in a list containing 100 integers and finds the number of occurrences of each number in the list.,"[1, 2, 3, 4, 4, 2, 3, 2, 1, 3, 4, 2, 1]","from collections import Counter
 
def findOccurrences(arr):
    counter = Counter(arr)
    for i in counter:
        print('Number', i, 'occurs', counter[i], 'time(s).')
 
arr = [1, 2, 3, 4, 4, 2, 3, 2, 1, 3, 4, 2, 1]
findOccurrences(arr)"
Develop an algorithm in Python to identify the majority element in an unsorted array.,"[3,9,3,3,3,1,3,3]","def find_majority_element(array):
    count = 0
    majority_element = None

    for element in array:
        if count == 0:
            majority_element = element

        count += (1 if element == majority_element else -1)

    return majority_element"
Develop a function in Python that takes in a string of sentences and removes all the punctuations.,"""This is a sample string!""","import string

def remove_punctuations(s):
    return s.translate(str.maketrans('', '', string.punctuation))

if __name__ == '__main__':
    sentence = ""This is a sample string!""
    print(remove_punctuations(sentence))"
Generate Python code to find the smallest and largest numbers from a list of numbers.,"[2, 5, 3, 8, 10, 11, 9]","# Finding smallest number
list_of_nums = [2, 5, 3, 8, 10, 11, 9]
smallest_num = min(list_of_nums)
print('The smallest number is:', smallest_num)

# Finding largest number
list_of_nums = [2, 5, 3, 8, 10, 11, 9]
largest_num = max(list_of_nums)
print('The largest number is:', largest_num)"
"Given a list, write a Python function to separate the odd numbers from the even numbers.","numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]","def separate_odd_even(numbers):
    odd_numbers = []
    even_numbers = []
    for num in numbers:
        if num % 2 == 0:
            even_numbers.append(num)
        else:
            odd_numbers.append(num)
    
    return odd_numbers, even_numbers"
Develop a Python script to calculate the standard deviation of a list of numbers.,"[3, 8, 19, 24, 7, 50]","import statistics

# Store the list of numbers 
number_list = [3, 8, 19, 24, 7, 50]
 
# Calculate the standard deviation  
stdev = statistics.stdev(number_list) 
 
# Print the standard deviation 
print(stdev)"
Generate a Python script to calculate the total cost of items in a grocery list.,"list = {""banana"": 2.5, ""apple"": 3.7, ""orange"": 4.2, ""tomato"": 1.2}","# Calculating the total cost of items in a grocery list

list_cost = 0
list_items = {""banana"": 2.5, ""apple"": 3.7, ""orange"": 4.2, ""tomato"": 1.2}

for item, price in list_items.items():
    list_cost += price
    
print('The total cost of the items in the list is {}'.format(list_cost)"
"You are provided an English sentence, please write the corresponding code in Python.",Sentence: Print a hello world statement,"print(""Hello world!"")"
Create a Python program to convert Celsius temperatures to Fahrenheit temperatures.,tempCelsius = 15,"def celsius_to_fahrenheit(tempCelsius):
    """"""Convert temperature from Celsius to Fahrenheit.

    Args:
        tempCelsius (int): Temperature in Celsius

    Returns:
        float: Temperature in Fahrenheit
    """"""
    return (tempCelsius * 1.8) + 32

tempCelsius = 15
tempFahrenheit = celsius_to_fahrenheit(tempCelsius)
print(f""{tempCelsius}°C = {tempFahrenheit}°F"")"
Create a Python program to calculate the sum of the digits for a number that is provided as input.,num = 1234,"# Function to find the sum of digits
def sum_digits(num):
 # Variable to store the sum of digits
 sum = 0
 
 while num > 0:
  digit = num % 10
  sum = sum + digit
  num = num // 10
 
 return sum
 
num = 1234
sum = sum_digits(num)
print(""Sum of digits of %d is %d"" % (num, sum))
# Output: Sum of digits of 1234 is 10"
Create a Python function to sort a list of tuples by the second item in the tuple.,"my_list = [('a', 3), ('b', 2), ('c', 1)]","def sort_by_second_item(my_list): 
    return sorted(my_list, key = lambda x: x[1])"
Solve this system of equations using Python:,"3x + y - 9z = 15
x + 10y + 5z = 55
2x + 5y - z = 0","a = np.array([[3, 1, -9], [1, 10, 5], [2, 5, -1]])
b = np.array([15, 55, 0])
x = np.linalg.solve(a, b)

print(x)
# Output 
#[2. 4. 8.]"
Write a Python program to print out all even numbers in a given range.,"1, 10","def print_even_numbers(start, end):
    for i in range(start, end + 1):
        if i % 2 == 0:
            print(i)

if __name__ == '__main__':
    print_even_numbers(1, 10)

# Output
2
4
6
8
10"
Write a code to find the number of distinct words in a string.,"""I love to code in Python""","def count_distinct_words(string):
    words = string.split()  
    distinct_words = set(words)  
    return len(distinct_words)

if __name__ == '__main__':
    string = ""I love to code in Python""
    print(""Number of distinct words:"", count_distinct_words(string))"
Create a function in Python that will take a list of elements and return the sum of their cube.,"[2, 3, 4]","def cube_sum(nums): 
  sum = 0 
  for num in nums: 
    sum += num*num*num 
  return sum"
Create a Python program to calculate the distance between two points given their x and y coordinates.,"x1 = 0
y1 = 0
x2 = 10
y2 = 10","def calculateDistance(x1, y1, x2, y2):
 distance = ((x2 - x1)**2 + (y2 - y1)**2)**(1/2)
 return distance

# main
x1 = 0
y1 = 0
x2 = 10
y2 = 10

dist = calculateDistance(x1, y1, x2, y2)

print(""Distance between the two points is"", dist)"
Write a code snippet in Python to print the last 3 characters of a given string,"string = ""Hello, World!""",print(string[-3:])
Write a function in Python to identify all the keywords present in a given sentence.,Sentence: I like to eat apples,"def find_keywords(sentence):
 keywords = set()
 words = sentence.split(' ')
 for word in words:
  if word.iskeyword():
   keywords.add(word)
 return list(keywords)"
Write a Python script to create a dictionary with each values doubled.,"dictionary = {1:'a', 2:'b', 3:'c'}","dictionary = {1:'a', 2:'b', 3:'c'}

doubled = {}
for key, value in dictionary.items():
 doubled[key] = value * 2

print(doubled) # {1: 'aa', 2: 'bb', 3: 'cc'}"
Create a function in Python that takes a list as an argument and returns the sum of all the numbers in the list.,"[1, 2, 3, 4]","def sum_list(nums):
    total = 0
    for num in nums:
        total += num
    return total"
Construct a while loop in Python to iterate through a list of items.,"list_items = ['apple', 'banana', 'pear', 'strawberry']","list_items = ['apple', 'banana', 'pear', 'strawberry']

index = 0
while index < len(list_items):
   item = list_items[index]
   print(item)
   index += 1"
Write a Python program to filter a list of strings according to a given pattern.,"Pattern: asterisks
Strings: [""daisy"", ""sunflower"", ""asterisk"", ""cat"", ""monkey""]","def filter_strings(pattern, strings):
    filtered_strings = [x for x in strings if pattern in x]
    return filtered_strings

result = filter_strings('asterisks', [""daisy"", ""sunflower"", ""asterisk"", ""cat"", ""monkey""])
print(result)"
Build a Python program to print the smallest number in a list.,"[3, 5, 2, 8, 1]","def smallest_list(list_numbers):
    smallest = list_numbers[0]
    for i in list_numbers[1:]:
        if i < smallest:
            smallest = i
    return smallest"
Make a Python program that takes a list of strings as input and returns a dictionary whose keys are the strings and values are the length of the string.,"['help', 'me', 'please']","def get_string_lengths(list_strings):
    res = {}
    for string in list_strings:
        res[string] = len(string)
    return res

test_strings = ['help', 'me', 'please']
result = get_string_lengths(test_strings)
print(result)"
Write a function in Python to filter out duplicates from a list.,"[1,2,3,4,5,1,2,3,4]","def remove_duplicates(List): 
  return list(set(List))"
Write a Python function that takes a list of integers as an argument and returns a list of the squares of all the elements in the input list.,"[1, 2, 3, 4, 5]","def squareList(inputList): 
	# Returns a list of the squares of all the elements in inputList
	squaredList = [] 

	for num in inputList:
		squaredList.append(num ** 2) 

	return squaredList

# Example 
inputList = [1, 2, 3, 4, 5] 

squaredList = squareList(inputList) 

print(squaredList)

# Output: [1, 4, 9, 16, 25]"
Serialize a list of dictionaries in Python,"[{'name':'John', 'age':30},
{'name':'Paul', 'age':22}]","import json

data = [{'name':'John', 'age':30},
{'name':'Paul', 'age':22}]

serialized_data = json.dumps(data)
print(serialized_data)"
Create a function in Python to calculate the square root of a number.,num = 16,"def cal_sqrt(num):
    return num ** 0.5

num1 = 16
sqrt_of_num1 = cal_sqrt(num1)
print(sqrt_of_num1) # 4.0"
Develop a function in Python to swap the first and last elements of a given input list.,"list = [1, 2, 3, 4, 5]","def swap(list):
    # swapping first and last elements 
    temp = list[0] 
    list[0] = list[-1] 
    list[-1] = temp 

list = [1, 2, 3, 4, 5]
swap(list)

print(list)"
Generate a Python program to transform a given list of integers into a dictionary with each list element as the key and its square root as the value.,"[4, 9, 16, 25]","def to_dict(lst): 
    # Initialize a new dictionary 
    new_dict = {}
      
    # Iterate over the list and assign the square root of each element as value  
    for item in lst:
        new_dict[item] = item**0.5
      
    # Return the dictionary  
    return new_dict"
Compute the mean value of an array of integers using Python.,"[1, 2, 3, 4, 5]","def calculate_mean(values):
    total_sum = 0

    for num in values:
        total_sum += num

    return total_sum / len(values)

values = [1, 2, 3, 4, 5]

mean = calculate_mean(values)
print(""Mean Value:"", mean)"
Write Python code to include exception handling in this code.,"a = 1
b = 0
c = a / b
print (c)","try:
    a = 1
    b = 0
    c = a / b
    print(c)
except ZeroDivisionError:
    print(""Cannot divide by zero"")"
Write a code in Python to find out how long a given string is.,"""Hello""","def get_length(string):
    return len(string)

length = get_length(""Hello"")
print(length)"
Write a python program to convert the given temperature from Celsius to Fahrenheit.,0°C,"""""""
Convert the given temperature from Celsius to Fahrenheit
""""""

def celsius_to_fahrenheit(celsius):
    fahrenheit = (celsius * 9/5) + 32
    return fahrenheit

if __name__ == '__main__':
    celsius = 0
    print(celsius_to_fahrenheit(celsius))"
Can you design a Python program to sort a list of tuples?,"[(4,20) , (3,-5), (10, 0)]","def sort_tuples(lst): 
    return sorted(lst, key = lambda x : x[1]) 
  
# Driver code 
tuple_list = [(4, 20), (3, -5), (10, 0)] 
print(sort_tuples(tuple_list))"
Combine two lists into a dictionary using Python.,"list1 = [1, 2, 3]
list2 = ['a', 'b', 'c']","""""""
Combine two lists into a dictionary using Python
""""""

list1 = [1, 2, 3]
list2 = ['a', 'b', 'c']

dict = dict(zip(list1, list2))

print(dict) # Output {1: 'a', 2: 'b', 3: 'c'}"
Write a Python function to find the maximum of three numbers.,"3, 4, 5","def max_of_three(a, b, c):
    if a > b and a > c:
        return a
    elif b > a and b > c:
        return b
    else:
        return c

result = max_of_three(3, 4, 5)
print(result)"
Write a function in Python for calculating the sum of squares of a list of elements.,"[3, 5, 7]","def calculateSumSquare(lst):
    sum = 0
    for element in lst:
        sum += element**2
    return sum

lst = [3, 5, 7]
print(calculateSumSquare(lst))"
"Write a Python program to calculate the sum of two given integers, if the two values are equal then return the triple of their sum.","2, 2","def calculate_sum(a, b):
    if a == b:
        return (a + b) * 3
    else:
        return a + b
    
a = 2
b = 2
result = calculate_sum(a, b)
print(result)"
Create a basic Python program that includes a function to find the greatest common divisor (GCD) of two numbers.,int num1 = 21; int num2 = 15,"def gcd(x, y): 
    while(y): 
        x, y = y, x % y 
  
    return x 
  
# Driver code
num1 = 21
num2 = 15
  
print(""The GCD is"", gcd(num1, num2))"
Find a way to split the string below into an array of length 3.,"string = ""Python is a great language""","string = ""Python is a great language""
arr = string.split(' ', 3) 
print(arr)"
Analyze the following Python function to detect any potential errors.,"def expand_list(list):
    for item in list:
        list *= 2","The function is attempting to modify the list while iterating over it. This can lead to unexpected behavior and should be avoided. To fix the code, the list should be copied before the iteration takes place: 

def expand_list(list):
    list_copy = list[:]   # make a copy of the list
    for item in list_copy:
        list *= 2"
Implement a Python program to find the maximum and minimum of a list.,"[3, 2, 8, 9, 5]","# Function to find the maximum and minimum of a list
def find_max_min(nums):
    max = nums[0]
    min = nums[0]
    for num in nums:
        if num > max:
            max = num
        if num < min:
            min = num
    return (max, min)

# Test program
nums = [3, 2, 8, 9, 5]
max, min = find_max_min(nums)
print('Maximum:', max)
print('Minimum:', min)"
Develop a Python program to calculate the slope of a line using two given points,"point1 = (1, 0) 
point2 = (0, 1)","def slope(point1, point2):
    x1, y1 = point1
    x2, y2 = point2
   
    if x2 - x1 == 0:
        return None
    else:
        return (y2 - y1) / (x2 - x1)

point1 = (1, 0)
point2 = (0, 1)
slope = slope(point1, point2)
print(slope)"
"Code a Python program to classify elements in a provided array into two categories, odd and even.","[1, 2, 3, 4, 5, 6]","def classify_elements(arr):
    odd = []
    even = []
    for x in arr:
        if x % 2 == 0:
            even.append(x)
        else:
            odd.append(x)
    return (odd, even)

elements = [1, 2, 3, 4, 5, 6]
result = classify_elements(elements)

print(""Odd Elements:"")
print(result[0])

print(""Even Elements:"")
print(result[1])"
Create a Python function to print every character in a given string.,"string = ""Hello World!""","# Python Function
def printChars(string): 
    # Iterate over the string 
    for i in range(len(string)):  
        print(string[i]) 
  
# Test
string = ""Hello World!""
printChars(string)"
Write a Python program to divide a given string into pairs such that each pairs has 2 characters.,"""abcd""","def split_into_pairs(inputString):
    resultList = []
    counter = 0
    
    while counter < len(inputString):
        resultList.append(inputString[counter:counter + 2])
        counter += 2
    
    return resultList

pairs = split_into_pairs(""abcd"")

print(pairs)"
"Please generate a Python function that takes a string as input and prints every character in the string contained between ""a"" and ""e"" in a newline.","""Airport""","def extract_abce(string):
  output = """"
  for char in string:
                    if ord(char) >= 97 and ord(char) <= 101:
                                    output += char + ""\n""
  print(output)"
Design a program in Python to find the greatest of three numbers.,"25, 39, 12","def greatest_num(num1, num2, num3):
    greatest = 0
    if num1 > num2 and num1 > num3:
        greatest = num1
    elif num2 > num1 and num2 > num3:
        greatest = num2
    else:
        greatest = num3
    print(""The greatest of the three numbers is:"", greatest)
    
# Here we call the function with the three numbers 
greatest_num(25, 39, 12)"
Generate a function in Python which takes two values and returns the largest one.,"38, 64","def max_of_two_values(val1, val2):
    if val1 > val2:
        return val1
    else:
        return val2

# Function call with two arguments
largest_one = max_of_two_values(38, 64)

# Print the largest number
print('The largest one is:', largest_one)"
Write a Python script to remove all repeated characters from a string.,"string = ""aaabbccddeeff""","def removeRepeatedChars(str):
    result = """"
    for c in str:
        if c not in result:
            result += c
    return result

print(removeRepeatedChars(""aaabbccddeeff""))"
Create a program in Python to find the second highest number in a list of numbers.,"[8, 5, 11, 6, 9, 15]","# Create an array of numbers
nums = [8, 5, 11, 6, 9, 15]

# Sort the array in descending order
nums.sort(reverse=True)

# Get the second highest number
second_highest = nums[1]

# Output the result
print(""The second highest number is"", second_highest)"
Generate a function in Python that takes an integer value from a dictionary and returns its value as a string.,"{""number1"": 8, ""number2"": 16, ""number3"": 20}","def get_string_value(input_dict):
  """"""Return string value in the input dictionary""""""
  output_value = """"
  for key, value in input_dict.items():
      output_value = str(value)
  return output_value"
Sum up all the elements of a given list in Python.,"my_list = [10,20,30,40]","my_list = [10,20,30,40]

total = 0
for num in my_list:
    total += num

print(""The sum of all elements in the list is: "" + str(total))"
Create a program in Python that rotates an array right by one place,"arr = [1,2,3,4,5]","def rotateArrayRight(arr): 
    temp = arr[len(arr) - 1] 
    
    for i in range(len(arr)-1, 0, -1): 
        arr[i] = arr[i-1] 
          
    arr[0] = temp 
    return arr

arr = [1, 2, 3, 4, 5]

print(rotateArrayRight(arr))"
Generate a Python program to convert a given binary string into its equivalent decimal number.,"Binary String: ""1101""","# Convert the given binary string to an integer number
binary_string = ""1101""
decimal_number = int(binary_string, 2)

# Print the result
print(decimal_number) # 13"
Write a code snippet to convert a Python object to a JSON string.,"obj = {
  ""name"": ""John"",
  ""age"": 42
}","import json

obj = {
  ""name"": ""John"",
  ""age"": 42
}

json_string = json.dumps(obj)"
Rewrite the following Python program using recursion to sum the numbers in a list.,"[2, 4, 6, 8]","# Using recursion to sum the numbers in a list
def recursive_sum(arr):
    if len(arr) == 0:  
        return 0   # Base case 
    else:
        return arr[0] + recursive_sum(arr[1:])   # Recursive case

print(""Sum of the list:"", recursive_sum([2, 4, 6, 8]))"
Create a Python function that returns the longest string in a list of strings.,"list_strings = [""abc"", ""def"", ""ghij""]","def get_longest_string(list_strings):
 longest_string = list_strings[0]
 for item in list_strings:
 if len(item) > len(longest_string):
 longest_string = item
 return longest_string

list_strings = [""abc"", ""def"", ""ghij""]
print(get_longest_string(list_strings)) # prints ""ghij"""
Write a Python script to check whether a given number is in between two given values.,"num = 10, lowerBound = 9, upperBound = 11","if lowerBound <= num <= upperBound:
    print(""The number is inside the limit."")
else:
    print(""The number is outside the limit."")"
Generate a Python program which determines if a given number is divisible by 7,28,"def is_divisible_by_7(num):
    if num % 7 == 0:
        return True
    else:
        return False

result = is_divisible_by_7(28)
print(result)"
Design aPython program to replace the last element in a list with another list.,"list1 = [1,3,5,2], list2 = [10,20,30]","def replace_last_element(list1, list2): 
    list1[-1:] = list2 
    return list1"
Develop a Python program that tells how many characters are there in a given string.,My name is John,"# Python program to count the number of characters in a string

string = input('Enter a string: ')

count = 0
for char in string:
    count += 1

print(f'The string contains {count} characters.')"
"Develop a Python function to calculate the maximum, minimum and average of a given list.","numbers = [3, 4, 5, 6]","def calculate_stats(numbers):
    maximum = max(numbers)
    minimum = min(numbers)
    average = sum(numbers)/len(numbers)
    return (maximum, minimum, average)"
Write a Python program to get the largest number from a list.,"nums = [1, 3, 5, 7, 2, 4, 6, 8]","def get_largest_number(nums):
  return max(nums)"
Generate code that optimizes a Python program so it runs faster.,"n = 30

result = 0
for i in range(n):
    for j in range(n):
        result += i * j","import numpy as np

n = 30

# Optimized code using numpy
result = np.sum(np.multiply(np.arange(n), np.arange(n)))"
Create a python program to remove duplicate entries in a list and return the unique items.,"[1, 1, 2, 3, 4, 4]","def remove_duplicate(list): 
	return list(set(list)) 

remove_duplicate([1,1,2,3,4,4]) #returns [1, 2, 3, 4]"
"Create a Python method that takes a list and a value as arguments, and returns the index of the value if it exists in the list.","list = [2, 4, 6, 8]
value = 6","def find_index(list, value):
 for i in range(len(list)):
 if list[i] == value:
 return i
 return -1"
Implement a class in Python called “Multiplier” with a constructor function that takes an argument “factor”. The class should have a method called “multiply” which takes a number as an argument and returns this multiplied by “factor”.,factor = 5,"class Multiplier:
    def __init__(self, factor):
        self.factor = factor
 
    def multiply(self, num):
        return num * self.factor"
Convert the given Python code to Java.,"def search(arr, x): 
    n = len(arr) 
    for i in range (0, n): 
        if (arr[i] == x): 
            return i; 
    return -1;","public static int search(int[] arr, int x) { 
        int n = arr.length; 
        for (int i = 0; i < n; i++) { 
            if (arr[i] == x) { 
                return i; 
            } 
        } 
        return -1; 
    }"
Create a Python script for scraping a website and extracting a list of URLs from it.,https://example.com,"import requests
from bs4 import BeautifulSoup

url = 'https://example.com'

response = requests.get(url)
soup = BeautifulSoup(response.content, 'html.parser')

urls = []

for link in soup.find_all('a', href=True):
 if link['href'].startswith('http'):
 urls.append(link['href'])

print(urls)"
Write a Python program to calculate the total number of days between two given dates.,"First date: 20 Dec 2020 
Second date: 10 Jan 2021","from datetime import date 

def daysDifference(date1, date2): 
    return (date2-date1).days 

date1 = date(2020, 12, 20) 
date2 = date(2021, 1, 10) 
print(daysDifference(date1, date2))"
Write an optimal code to calculate the sum over a range of numbers,"""<noinput>""","# Python 3 program to find sum over a range
# A recursive function to find the sum of given range
def rangeSum(start, end):
  
    # If range consists of only one number
    if (start == end):
        return start
    return start + rangeSum(start + 1 , end)
  
# Driver code
start = 1
end = 5
print(rangeSum(start, end))"
Create a simple Python program that finds the number of even numbers in a given list.,"list1 = [1, 4, 5, 6, 3, 2]","def count_even_numbers(list1):
    count = 0
    for item in list1:
        if item % 2 == 0:
            count += 1
    return count

print(count_even_numbers(list1))"
"Given a list of integers, write a code in Python to find a sublist whose sum is divisible by 7.","list = <5,-1,2,10,20, 4, 7, 8>","def find_sublist_divisible_by_7(list):
    for i in range(len(list)):
        sum_so_far = 0
        for j in range(i, len(list)):
            sum_so_far += list[j]
            if sum_so_far % 7 == 0:
                return list[i:j+1]
    return None"
Optimize a Python program to reverse the elements of a list.,"my_list = [1, 2, 3, 4, 5]","def reverse_list(l): 
    return [ele for ele in reversed(l)] 
  
my_list = [1, 2, 3, 4, 5]
 
print(reverse_list(my_list))"
Generate a code in Python to sort an array using insertion sort.,"[1, 3, 5, 2, 4]","def insertion_sort(arr):
    for j in range(1, len(arr)):
        key = arr[j]
        i = j - 1
        while i >= 0 and arr[i] > key:
            arr[i + 1] = arr[i]
            i -= 1
        arr[i + 1] = key
    return arr

# Main program
input_array = [1, 3, 5, 2, 4]
output_array = insertion_sort(input_array)
print(output_array)"
Create a Python script that fills in the missing data with median values.,"[1, None, 4, 5, None, 10]","import numpy as np

def fillWithMedian(data):
    data = np.array(data)
    median_val = np.nanmedian(data)
    data[np.isnan(data)] = median_val 
    return data

data = [1, None, 4, 5, None, 10]
print(fillWithMedian(data))"
Write a basic web scraper in Python using the requests and BeautifulSoup libraries to extract the titles of articles from a given URL.,https://en.wikipedia.org/wiki/Python_(programming_language),"import requests
from bs4 import BeautifulSoup

url = 'https://en.wikipedia.org/wiki/Python_(programming_language)'
r = requests.get(url)
soup = BeautifulSoup(r.content, 'html.parser')

articles = soup.find_all('h1', class_='firstHeading')
for article in articles:
 print(article.text)"
Create an algorithm in Python to detect an Anagram.,"a = 'listen'
b = 'silent'","def isAnagram(a, b):
a = a.lower()
b = b.lower()

# remove spaces and sort letter
a_sorted = ''.join(sorted(a.replace(' ', '')))
b_sorted = ''.join(sorted(b.replace(' ', '')))

# check if they are equal
if a_sorted == b_sorted:
 return True
return False

a = 'listen'
b = 'silent'
print(isAnagram(a, b))

# Output: True"
Generate a python program to output the largest element in a list.,"Given a list x = [7, 9, 5, 8, 3, 11].","def largest_element(x):
    max_element = x[0]
    for number in x:
        if number > max_element:
            max_element = number
    return max_element"
What should this Python program do?,"def is_palindrome(s):
    '''Write your code here.'''","def is_palindrome(s):
    '''This function returns True if the string s is a palindrome and False if it isn't.''' 
    return s == s[::-1]  # Checks if s is the same as its reverse."
Generate a python script which sorts a series of numbers from lowest to highest.,"7, 2, 5, 1, 3","unsorted_list = [7, 2, 5, 1, 3]
def bubblesort(unsorted_list):
    length = len(unsorted_list)
    for i in range(length):
        for j in range(length - i - 1):
            if unsorted_list[j] > unsorted_list[j + 1]:
                unsorted_list[j], unsorted_list[j + 1] = unsorted_list[j + 1], unsorted_list[j]
    return unsorted_list
print(bubblesort(unsorted_list))"
Fix the syntax error in the provided Python function.,"def add_numbers(x, y)
    return x + y","def add_numbers(x, y):
    return x + y"
"Create a Python program to display the Fibonacci sequence up to the nth term, as specified by the user.",n = 20,"def fibonacci(n): 
 # Fibonacci numbers are 0, 1, 1, 2, 3, 5,... 
 a = 0
 b = 1
 if n < 0: 
 print(""Incorrect input"") 
 elif n == 0: 
 return a 
 elif n == 1: 
 return b 
 else: 
 for i in range(2,n): 
 c = a + b 
 a = b 
 b = c 
 return b 

print(fibonacci(n))"
Design a program in Python that takes a list of strings and returns a list containing the length of each of the strings.,"['hello', 'world']","def string_lengths(arr):
    lengths = [len(s) for s in arr]
    return lengths

result = string_lengths(['hello', 'world'])
print(result)"
Create a REST API call in Python that sends a GET request and displays the response.,https://reqres.in/api/users,"import requests

# Send GET request
r = requests.get('https://reqres.in/api/users')

# Get response
if r.status_code == 200:
 print(r.text)"
Design a program in Python to classify data into one of two categories,"data = [4, 5, 8, 1, 9]","def classify_data(data):
    if data[0] <= 5:
        return 'Category A'
    else:
        return 'Category B'

x = classify_data([4, 5, 8, 1, 9])
print(x)"
Develop an algorithm in Python that finds the minimum element from a given array.,"[14, 7, 25, 16]","def findMin(arr): 
     
    # Initialize minimum element as first 
    # element of array 
    min = arr[0] 
  
    # Loop through the array and get 
    # the current element 
    for i in range(len(arr)): 
        if arr[i] < min: 
            min = arr[i] 
  
    return min

arr = [14, 7, 25, 16]

print(findMin(arr))"
Write a Python program to find the number of uniquely identifiable countries in the list given below.,"['GB', 'CH', 'GB', 'US', 'CH', 'CN', 'ES', 'CN']","def unique_countries(lst): 
    return len(set(lst))"
"Construct a program in Python to compute the sum of square numbers in a given range, including the start and end numbers.",Range: 10-20,"def sumOfRanges(start, end):
 sum = 0
 
 for i in range(start, end+1):
 sum += i*i
 
 return sum

sumOfRanges(10,20) #673"
Create a function in Python to return the index of the largest value in given array.,"arr = [3, 8, 4, 5, 9]","def max_index(arr):
    max_value = arr[0]
    max_index = 0

    for i in range(1, len(arr)):
        if arr[i] > max_value:
            max_index = i
            max_value = arr[i]
    
    return max_index"
Create a python program that reads a list of numbers and returns the average of the numbers in the list.,"[1, 5, 7, 10]","def compute_average(numbers):
    total = 0
    for num in numbers:
        total += num
    return total / len(numbers)

if __name__ == '__main__':
    numbers = [1, 5, 7, 10]
    print(compute_average(numbers)) # 6.0"
Code a Python script to find the sum of the digits in a given number.,Number: 452,"def find_sum_of_digits(n):
    sum = 0
    while(n > 0):
        rem = n % 10
        sum += rem
        n = n // 10
    return sum"
Generate a python program to find the most frequent element in a given array.,"Given array: [1, 2, 2, 3, 3]","def most_frequent(arr):
    max_val = 0
    max_count = 0
    counts = {}
    for i in arr:
        if i in counts:
            counts[i] += 1
        else:
            counts[i] = 1
        if counts[i] > max_count:
            max_val = i
            max_count = counts[i]
    return max_val"
Combine two strings using Python.,"string1=""Hello ""
string2=""World""","string1 = ""Hello ""
string2 = ""World""

new_str = string1 + string2

print(new_str)"
Write a code snippet in Python to split a string by its whitespaces.,"string = ""This is a sample string""","string = ""This is a sample string""
str_list = string.split()
print(str_list)"
Create a function in Python using list-comprehension to turn all the strings in the list to lowercase.,"words = [""Hello"", ""My"", ""Name"", ""IS"", ""John""]","def to_lowercase(words):
    return [word.lower() for word in words]"
Create a python program to concatenate n strings and return the concatenated string,"input_strings = [""Hello"", ""World"", ""!""]","def concatenate_strings(input_strings):
    output_string = """"
    for string in input_strings:
        output_string += string
    return output_string"
Generate code to create a REST API in Python that parses JSON and returns the values of a nested object.,"{
  ""data"": {
    ""name"": ""John Doe"",
    ""age"": 25
  }
}","@app.route('/parseJSON', methods=['POST'])
def parse_json():
    data = request.get_json()
    name = data['data']['name']
    age = data['data']['age']

    response = {
        ""name"": name,
        ""age"": age
    }
    return jsonify(response)"
Optimize this program in Python to find the highest peak in a given array.,"def find_highest_peak(arr):
  highest_peak = 0
  for i in range(len(arr)):
    if i == 0:
      highest_peak = arr[i]
    else:
      if arr[i] > highest_peak:
        highest_peak = arr[i]  
  return highest_peak","def find_highest_peak(arr):
  highest_peak = arr[0]
  for i in range(1, len(arr)): 
    highest_peak = max(highest_peak, arr[i]) 
  return highest_peak"
Write a Python program to remove all duplicate items from a list.,"[1, 2, 2, 4, 5]","def remove_duplicates(lst): 
	return list(dict.fromkeys(lst)) 

result = remove_duplicates([1, 2, 2, 4, 5]) 
print(result)"
Edit this Python code to execute the following tasks:,"for i in range(1, 11):
    print(i)","for i in range(1, 11):
    print(str(i) + "" squared is "" + str(i ** 2))"
Write a Python code snippet to calculate the average of the given numbers.,"[5, 10, 15, 20, 25]","def calc_avg(nums):
    total = 0
    for n in nums:
        total += n
 
    return total/len(nums)
 
avg = calc_avg([5, 10, 15, 20, 25])
print(avg)"
Generate a Python program to find the sum of all even numbers in an array,"[1, 5, 9, 11, 2, 8]","def sumEven(array):
    sum = 0
    for x in array:
        if x % 2 == 0:
            sum += x
    return sum

print(sumEven([1, 5, 9, 11, 2, 8]))"
"Create a python program that takes two numbers as input, and outputs the result of multiplying them.",3 and 5,"def multiply(a, b):
    return a * b

ans = multiply(3, 5)
print(ans) # 15"
Write a Python function to sort a list of numbers in ascending order.,"[2,4,3,1,5]","def sort_list(list): 
  list.sort() 
  return list
  
print(sort_list([2,4,3,1,5]))"
Compute the nearest prime number less than the given number using a python program.,173,"def nearest_prime(num):
    if num <= 2:
        return -1
    for i in range(num-1,2,-1):
        for j in range(2,i):
            if i % j == 0:
                break
        else:
            return i

print(nearest_prime(173))"
Create a Python program which takes a given list of temperatures (in Celsius) and converts them to Fahrenheit.,"[21, 12, -4]","def c2f(c):
 return (c * 9 / 5) + 32

celsius = [21, 12, -4]

fahrenheit = []
for temp in celsius:
 fahrenheit.append(c2f(temp))

print(fahrenheit) 
# Output: [69.8, 53.6, 24.8]"
Rewrite a python program to take input from the user,"n1 = 10
n2 = 20","n1 = int(input(""Enter first number: ""))
n2 = int(input(""Enter second number: ""))"
Write a Python program to check given temperature is between two numbers.,"temperature = 23
low_limit = 20
high_limit = 30","if (temperature >= low_limit and temperature <= high_limit):
    print(""Temperature is in range"")
else:
    print(""Temperature is out of range"")"
Develop a function in Python that will find the sum of all prime numbers in a given range.,"upper = 10
lower = 1","def primeSum(lower, upper): 
    sum = 0
    for num in range(lower, upper + 1): 
        if num > 1: 
            for i in range(2, num): 
                if (num % i) == 0: 
                    break 
            else: 
                sum += num 
  
    return sum"
"Using the comment as a guide, replace the ""TODO"" comment with the necessary code for a decision tree classifier in Python.",# TODO: define a decision tree classifier,"import pandas as pd
from sklearn.tree import DecisionTreeClassifier

# Define X and y
X = pd.DataFrame(columns=['feature1', 'feature2', 'feature3'])
y = pd.DataFrame(columns=['target'])

# Train the decision tree classifier
clf = DecisionTreeClassifier().fit(X, y)"
Create a Python program to encrypt a given string using ROT13 string encoding.,"str = ""Hello World!""","import string
 
def rot13(str):
  rot13 = str.maketrans(
    ""ABCDEFGHIJKLMabcdefghijklmNOPQRSTUVWXYZnopqrstuvwxyz"", 
    ""NOPQRSTUVWXYZnopqrstuvwxyzABCDEFGHIJKLMabcdefghijklm"")
  return str.translate(rot13)

print(rot13(str))"
Write a Python function for converting an array of strings into a list of integers,"Array of strings: [""1"", ""2"", ""3"", ""4""]","def convert_strings_to_int(arr): 
  return list(map(int, arr))
  
list_of_integers = convert_strings_to_int([""1"", ""2"", ""3"", ""4""]) # [1, 2, 3, 4]"
Compare a given set of strings and sort them in descending order using Python.,"['Python', 'Java', 'C++', 'C']","strings = ['Python', 'Java', 'C++', 'C']

strings.sort(reverse=True)

print(strings) # ['Python', 'Java', 'C++', 'C']"
Generate a Python program to calculate the Fibonacci sequence up to a certain number.,num = 10,"def fibonacci_sequence(num): 
    result = [0, 1] 
    if num < 0: 
        return None
    elif num == 0 or num == 1: 
        return 0
    elif num == 2: 
        return result 
    else: 
        for i in range(2,num): 
            next_num = result[i-1] + result[i-2] 
            result.append(next_num) 
        return result 

print(fibonacci_sequence(num))"
Code an optimization problem using Python that finds the maximum of a function with two optimization variables and a given constraint.,"f(x, y) = 3x + 2y
 Constraint: x + y ≤ 10","from scipy.optimize import minimize

def f(x):
 return 3*x[0] + 2*x[1]

def con(x):
 return x[0] + x[1] - 10

cons = ({'type': 'ineq', 'fun': con})

result = minimize(f, [0, 0], method='SLSQP', constraints=cons)
x = result.x

print('Solution:', x)
print('Maximum value:', result.value)"
Generate a code snippet to convert a string to an integer in Python.,"str = ""145""","num = int(str)
print(num) # Prints 145"
Optimize the given Python program and reduce its time complexity.,"def find_duplicates(arr): 
    duplicates = [] 
    for index, value in enumerate(arr): 
        if value in arr[index + 1:]: 
            duplicates.append(value) 
    return duplicates","def find_duplicates(arr): 
    seen = set() 
    duplicates = []
    for value in arr:
        if value in seen:
            duplicates.append(value)
        else:
            seen.add(value)
    return duplicates"
Can you write a Python program to find all prime numbers between two given numbers?,"n1 = 20, n2 = 50","def checkPrime(num):
    if (num == 1): 
        return False
    for i in range(2, num):
        if (num % i == 0): 
            return False
    return True

n1 = 20
n2 = 50

for num in range(n1, n2 + 1):
    if (checkPrime(num)):
        print(num)"
Write a Python script to check how many words with length 5 are in the given string,The quick brown fox jumped over the lazy dog.,"def count_words_length(string):
    count = 0
    words = string.split("" "")
    for word in words:
        if len(word) == 5:
            count += 1
    return count

string = ""The quick brown fox jumped over the lazy dog.""
print(count_words_length(string))"
Write a Python program to sort a given list of numbers in ascending order.,"[3, 4, 7, 1, 6, 9, 2]","list = [3, 4, 7, 1, 6, 9, 2] 
list.sort() 
print(""Ascending :"",list)"
Generate code using Python to find the largest and smallest number in a given list.,"[2, 3, 5, 8, 1, 9, 4]","def min_max(array):
    min_val = array[0]
    max_val = array[0]
    for element in array:
        if(element > max_val):
            max_val = element
        if(element < min_val):
            min_val = element
    return (min_val, max_val)"
Generate a Python code to calculate average temperatures from a list of temperatures.,"[22.5, 18.7, 30.1]","def get_average(temps):
    sum = 0
    for temp in temps:
        sum += temp
    avg = sum / len(temps)
    return avg
    
temperatures = [22.5, 18.7, 30.1]
average_temp = get_average(temperatures)
print(""Average temperature:"", average_temp)"
Create a python program to find the fibonacci series up to n-th number.,8,"def fibonacci(n):
    if n == 0:
        return 0
    elif n == 1:
        return 1
    
    fib = [0, 1]
    for i in range(2, n + 1):
        fib.append(fib[i - 1] + fib[i - 2])
    return fib[-1]

result = fibonacci(8)
print(result) # 13"
Create a Python program to remove all trailing zeroes from a given number.,123.45,"def remove_trailing_zeros(num): 
  num = str(num) 
  return float(num.rstrip('0').rstrip('.')) 
  
result = remove_trailing_zeros(123.4500) 
print(result)"
"Using a while loop, write a Python program to reverse a given sentence.","""Hello there my friend""","# Initialize an empty string 
revString = """"

# Set 'idx' to point to the end of the string 
idx = len(sent) - 1
 
# Iterate in reverse through the string 
while idx >= 0:
    # Append each individual character to the result string
    revString += sent[idx]
    # Decrement the index
    idx -= 1

# Output the reversed result
print(revString)"
"Create a function in Python to generate an array of numbers, each element in the array being twice the value of its previous one.",Size of Array: 10,"def generate_double_array(size):
	arr = [1]
	for i in range(1, size):
		arr.append(arr[i - 1] * 2)
	return arr"
Write a python code that takes in a list of integers and removes all the duplicate elements from it.,"[1, 2, 3, 2, 4, 5, 6, 3]","final_list = [] 
for num in list_of_integers: 
    if num not in final_list: 
    	final_list.append(num) 
print(final_list)"
Convert the following JSON string to a valid Python dictionary.,"'{""name"": ""John"", ""age"": 32, ""city"": ""New York""}'","data = json.loads('{""name"": ""John"", ""age"": 32, ""city"": ""New York""}')"
Your client has asked you to convert an existing Java program into a Python program. The Java program takes a list of integers and returns the maximum value.,"listOfIntegers = [1, 3, 8, 2, 9]","def get_max_value(listOfIntegers):
 maxValue = listOfIntegers[0]
 for num in listOfIntegers:
 if num > maxValue:
 maxValue = num
 return maxValue

print(get_max_value(listOfIntegers))"
Can you make a function in Pyhton that takes in two strings and returns a new string with all the letters from the second string which are not in the first string?,"“Python”, “Programming”","def new_string(s1, s2):
    new_str = """"
    for char in s2:
        if char not in s1:
            new_str += char

    return new_str

print(new_string(""Python"", ""Programming"")) # Output: ""roammig"""
Find the most common words in a document using Python.,The quick brown fox jumps over the lazy dog.,"from collections import Counter

text = ""The quick brown fox jumps over the lazy dog.""
words = text.split()

word_count = Counter(words)

# print the most common words
print(word_count.most_common(3))

# Output: [('the', 2), ('quick', 1), ('brown', 1)]"
Write a Python function to multiple two matrices.,"Matrix 1: 
[[1, 2], 
 [3, 4]]
Matrix 2: 
[[5, 6], 
 [7, 8]]","def multiply_matrices(m1, m2):
    # create a 3x3 matrix to hold the result
    result = [[0, 0], [0, 0]]

    for i in range(len(m1)): 
        for j in range(len(m2[0])): 
            for k in range(len(m2)): 
                result[i][j] += m1[i][k] * m2[k][j] 

    return result

result = multiply_matrices([[1, 2], [3, 4]], [[5, 6], [7, 8]])
print(result)"
Create a program in Python which seeks for a number in a given list.,"[2, 5, 7, 8, 11, 13]
seek: 8","list = [2, 5, 7, 8, 11, 13]
seek = 8

if seek in list:
    print(""Found!"")
else:
    print(""Not Found"")"
Create a python program to extract the name and phone number from a given string.,John Doe: (+1) 555-665-8877,"# Extract the name and phone number from a given string
def extract_name_phone(input_string):
    name_phone_dict = {}
    data = input_string.split(': ')
    
    name_phone_dict['name'] = data[0]
    name_phone_dict['phone'] = data[1]
    
    return name_phone_dict

result = extract_name_phone(""John Doe: (+1) 555-665-8877"")
print(result)"
Generate a function in Python that takes a string and counts the number of capitalized letters.,"""ViVaViVaViVa""","def countCapitalized(str): 
    count = 0
    for i in range(len(str)): 
        if str[i].isupper():
            count += 1
    return count

print(countCapitalized(""ViVaViVaViVa""))"
Create a basic Python script that executes a calculation of the total cost of a purchase (price * quantity).,"price = 10
quantity = 3","#calculate the total
total_cost = price * quantity

#print the total
print(total_cost) # Output: 30"
Convert the following pseudocode into Python code.,x = x + 1,x += 1
Create a program in Python to print the greatest of three numbers.,"2, 4, 3","def get_max(x, y, z):
    if (x > y) and (x > z):
        maximum = x
    elif (y > x) and (y > z):
        maximum = y
    else:
        maximum = z

    return maximum

result = get_max(2, 4, 3)
print(result)"
Implements an algorithm in Python to find common elements in two given unsorted arrays.,"[1, 2, 3], [2, 4, 5]","def common_elements(arr1, arr2): 
    commonList = [] 
  
    for num1 in arr1: 
        for num2 in arr2: 
            if(num1 == num2): 
                commonList.append(num1) 
  
    return commonList 
  
arr1 = [1, 2, 3] 
arr2 = [2, 4, 5] 
  
print (""Common elements: "", common_elements(arr1, arr2))"
Write an algorithm in Python that takes an array of numbers and returns an array of only the even numbers.,"[2, 5, 8, 9, 10, 13, 11]","def keep_even_only(arr):
    return [n for n in arr if n%2 == 0]

arr = [2, 5, 8, 9, 10, 13, 11]
even_arr = keep_even_only(arr)

print(even_arr)

# Output:
# [2, 8, 10]"
Develop a Python script that can query a SQL database and return the total number of entries in all the tables,SQL database,"import sqlite3

conn = sqlite3.connect(""example.db"")
cur = conn.cursor()

sql = ""SELECT name FROM sqlite_master WHERE type='table';""
cur.execute(sql)
tables = cur.fetchall()

count = 0
for table in tables:
    sql = f""SELECT COUNT(*) FROM {table[0]};""
    cur.execute(sql)
    count += cur.fetchone()[0]

print(f""Number of entries: {count}"")"
Optimize the following code in Python by improving its complexity.,"def my_function(input_array):
  output_array = []
  for elem in input_array:
    if elem not in output_array:
      output_array.append(elem)
  return output_array","def my_function(input_array):
  output_array = set()
  return output_array.union(input_array)"
Create a Python program to identify whether a number is prime or not.,15,"def is_prime(num):
    if num > 1:
        for n in range(2, num):
            if (num % n) == 0:
                return False
        return True
    else:
        return False

num = int(input(""Enter a number: ""))
 
if is_prime(num):
    print(num, ""is a Prime number"")
else:
    print(num, ""is not a Prime number"")"
Design a program in Python which takes a list of strings as input and prints out the number of strings with a length equal to 3.,"['word', 'cat', 'bat', 'car', 'apple', 'dog']","def count_length_3(words):
    count = 0
    for word in words:
        if len(word) == 3:
            count += 1
    print(count)

count_length_3(['word', 'cat', 'bat', 'car', 'apple', 'dog'])"
Optimize the existing Python script to improve the performance.,"import timeit

def find_value(l):
    for v in l:
        if v >= 0:
            return v
    return -1

print(timeit.timeit('find_value([-5, 0, 4, -1, 3])', number=10000))","import timeit

def find_value(l):
    for v in l:
        if v >= 0:
            # Early exit once value is found
            return v
    return -1

print(timeit.timeit('find_value([-5, 0, 4, -1, 3])', number=10000))"
Create a program in Python that takes a website URL as input and returns the number of HTML tags in the page.,URL: https://www.example.com,"import requests
from bs4 import BeautifulSoup

def count_tags(url):
    r = requests.get(url)
    soup = BeautifulSoup(r.text, 'html.parser')
    count = len(soup.find_all())
    return count"
Edit the given Python code to return the maximum value from a list,"def max_val(nums):
    maximum = 0
    for i in range(len(nums)):
        if nums[i] > maximum:
            maximum = nums[i]
    return maximum

list = [1, 4, 8, 10]","def max_val(nums):
    maximum = nums[0]
    for i in range(len(nums)):
        if nums[i] > maximum:
            maximum = nums[i]
    return maximum

list = [1, 4, 8, 10]"
Construct a Python function to remove all instances of an element from a given list of integers.,"[2,2,3,4,5], 2","def remove_element(nums, x):
   return [y for y in nums if y != x]"
Generate a python program that takes a string and an integer as input and outputs a string repeated the given integer number of times.,"(""GPT Model"", 3)","def repeat(string, n):
    return string * n"
Optimize a given Python code to print the factorial of a number.,5,"def factorial(n): 
    factorial = 1
  
    for i in range(1, n+1): 
        factorial = factorial * i 
    print(factorial) 
  
number = 5
factorial(number)"
Design an algorithm in Python to check if an integer is a power of two.,Number: 16,"def isPowerOfTwo(n):
  if(n == 0): 
    return False
  while(n != 1): 
    if(n % 2 != 0): 
      return False
    n = n // 2
    
  return True
  
# The following call will return True
isPowerOfTwo(16)"
Design a Python program to find which number is missing between a given range of numbers.,"[1, 2, 4, 6, 7, 8, 9]","def find_missing_number(arr):
    n = len(arr)
    total = (n+1)*(arr[0] + arr[n-1]) / 2
    sum_arr = sum(arr)
    return total - sum_arr"
"Write a Python program to accept user input as a string and check if the user input is a palindrome (a word, phrase, or sequence that reads the same backward as forward).","""radar""","input_word = input(""Enter a word: "")

def is_palindrome(word):
 word = word.lower()
 reversed_word = word[::-1]

 if reversed_word == word:
 return True
 else:
 return False

print(is_palindrome(input_word))
# Output: True"
Write a Python program to extract all words from a sentence and print them.,The quick brown fox,"sentence = ""The quick brown fox""
words = sentence.split("" "")

for word in words:
 print(word)

# Output
# The
# quick
# brown
# fox"
"Write an algorithm in Python that finds the maximum sum of an array of non-negative integers, given an upper limit value.","limit = 10
array = [1, 3, 5, 4, 2, 6]","def findMaxSum(limit, array):
    maxSum = 0
    for i in range(len(array)):
        currentSum = 0
        for j in range(i, len(array)):
            currentSum += array[j]
            if currentSum <= limit and currentSum > maxSum:
                maxSum = currentSum
    return maxSum"
Optimize a Python program to run faster and use less memory.,"import math
 
# Slow loop implementation
def slow_loop(num):
    for i in range(int(num)):
        result = math.sqrt(i*i + 1)
    return result","import math
 
# Faster loop implementation
def fast_loop(num):
    result = 1
    for i in range(int(num)):
        result += math.sqrt(i*i + 1)
    return result"
Write a function in python to split an given array into two parts with equal sum.,"[1, 2, 3, 4]","def split_equal_sum(arr):
    n = len(arr) 
    leftsum = 0
    rightsum = sum(arr)
    
    for i in range(n): 
        rightsum -= arr[i]
        if leftsum == rightsum:
            return True 
        leftsum += arr[i] 
    return False"
Create a code that can be run in both Python and Java to find the sum of all the elements in a given array.,"[3, 4, 7, 2, 6]","def sumArray(arr):
    sum = 0
    for x in arr:
        sum += x
    return sum

public static int sumArray(int[] arr) {
    int sum = 0;
    for(int ele : arr) {
        sum += ele;
    }
    return sum;
}"
Build a Python program to edit a string,"Replace all spaces in the string ""Hello World"" with undescores.","def replace_spaces_with_underscore(string):
    return string.replace("" "", ""_"")"
"Create a Python program to normalize a given list of strings by removing leading and trailing whitespace, and converting all letters to lowercase.","["" HELLO  "", "" WorLD  "", ""HeLlo"", ""DELL""]","list_of_strings = ["" HELLO  "", "" WorLD  "", ""HeLlo"", ""DELL""]
normalized_strings = [s.strip().lower() for s in list_of_strings]"
Refactor the following code to use list comprehension in Python.,"double_list = []
for num in range(10):
    double_list.append(num * 2)",double_list = [num * 2 for num in range(10)]
Sort the following array from smallest to largest without using the built in sort method in Python.,"[5, 4, 2, 1, 3]","def bubbleSort(arr):
    n = len(arr) 
    for i in range(n): 
        for j in range(0, n-i-1): 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j]

arr = [5, 4, 2, 1, 3]
bubbleSort(arr) 
print (""Sorted array is:"") 
for i in range(len(arr)): 
    print (""%d"" %arr[i])"
Write a Python program to determine if a number provided by the user is prime or not.,17,"# Ask the user for a number
num = int(input('Enter a number: '))

# Set initial values
is_prime = True

# Check for prime
for i in range(2, num):
 if num % i == 0:
 is_prime = False
 break

# Output result
if is_prime:
 print(f'{num} is a prime number.')
else:
 print(f'{num} is not a prime number.')"
Upgrade a Python program to use async/await instead of time.sleep().,"import time

def do_something():
	print('starting something')
	time.sleep(2)
	print('done with something')

do_something()","import asyncio

async def do_something():
	print('starting something')
	await asyncio.sleep(2)
	print('done with something')

asyncio.run(do_something())"
Write a Python program to find the most common element in an array.,"[3, 4, 2, 3, 5, 3, 2, 3]","def most_common_element(arr):
    frequency = 0
    most_common = None

    for element in arr:
        count = arr.count(element)
        if count > frequency:
            frequency = count
            most_common = element

    return most_common

print(most_common_element([3, 4, 2, 3, 5, 3, 2, 3]))"
Generate a python list comprehension to square each item in the list.,"alist = [1, 2, 3, 4]",[i**2 for i in alist]
Create a Python script that takes the two lists that are provided and combines them together.,"list1 = [1, 2, 3]
list2 = [4, 5, 6]","def combine_lists(list1, list2):
  combined_list = list1 + list2
  return combined_list
combined_list = combine_lists(list1, list2)
print(combined_list) # [1, 2, 3, 4, 5, 6]"
Create a Python code snippet toshuffle a given list of numbers.,"[1, 2, 3, 4, 5]","import random 
  
def shuffle_list(list_nums):
    random.shuffle(list_nums)
    print(""Shuffled list :"",  list_nums)

list_nums = [1, 2, 3, 4, 5]
shuffle_list(list_nums)"
Create a Python program that takes a string and replaces all spaces with underscores.,Hello World,"def replace_spaces(string):
    return string.replace(' ', '_')

string = 'Hello World'

print(replace_spaces(string))"
Modify the following Python code to make it faster by using an appropriate data structure.,"numbers = [1, 2, 3, 4, 5]
total = 0
for i in range(len(numbers)):
    total = total + numbers[i]","numbers = [1, 2, 3, 4, 5]
total = 0

for num in numbers:
    total += num"
Create a function in Python that takes a string as an argument and capitalizes the first letter of each word.,"String s = ""hello world""","def capitalize(s):
  return ' '.join(w.capitalize() for w in s.split())"
"In a Python list, swap the items at index 3 and 4.","List: [10, 20, 30, 40, 50]","def swap(arr, idx1, idx2):
    arr[idx1], arr[idx2] = arr[idx2], arr[idx1]

arr = [10, 20, 30, 40, 50]
swap(arr, 3, 4)
print(arr)"
"Using python, modify the code provided below to add the items in the list.","list = [1,2,3,4]
sum = 0","list = [1,2,3,4]
sum = 0

for item in list:
    sum += item

print(sum)"
Create a Python program to classify inputs into one of three classes.,"[-2, 10, 11, 4, -1]","def classify_inputs(lst):
    result = []
    for num in lst:
        if num <= 0:
            result.append('negative')
        elif num > 0 and num <= 10:
            result.append('non-negative')
        else:
            result.append('positive')
    return result

print(classify_inputs([-2, 10, 11, 4, -1]))"
Edit the following Python code to find all records in the table where the age is greater than 18.,"data = cursor.execute(f""SELECT * FROM users WHERE age > {age}"")","data = cursor.execute(f""SELECT * FROM users WHERE age > 18"")"
Create an algorithm in python to sort a list of numbers using bubble sort.,<noinptut>,"def bubble_sort(nums):
    for i in range(len(nums)-1):
        for j in range(0, len(nums)-i-1):
            if nums[j] > nums[j+1]:
                nums[j], nums[j+1] = nums[j+1], nums[j]
    return nums"
Write Python code to print the following at the end of the code.,* * * * *,"for i in range(5):
    for j in range(5):
        print(""*"", end="" "")
    print()"
Generate a Python program that will convert an array of strings with comma-separated values to a comma-separated string.,"['John','Joseph','Shirley']","def to_csv(input_list):
  return ','.join(input_list)

if __name__ == '__main__':
  input_list = ['John','Joseph','Shirley']
  output_str = to_csv(input_list)
  print(f'Result: {output_str}')"
Create a Python program to print the sum of two given numbers,"2, 3","def add_two_numbers(a, b):
    return a + b"
Design a function in Python that takes two strings as parameters and combines them into a new string.,"String1: ""Hello""
String2: ""World""","def combine_strings(string1, string2):
    return string1 + "" "" + string2

combined_string = combine_strings(""Hello"", ""World"")
print(combined_string)"
Create a class in Python to store user information with the given attributes.,"Attributes- username, email, profile_picture","class UserInformation:
    def __init__(self, username, email, profile_picture):
        self.username = username
        self.email = email
        self.profile_picture = profile_picture"
Generate a function in Python that takes a web page URL and returns the page's HTML source code.,"url = ""https://www.example.com""","import requests

def get_html_source(url):
    """"""
    This function takes a web page URL and returns the page's HTML source code.
    :param url: url
    :return: html source
    """"""
    response = requests.get(url)
    return response.text"
Write a Python program to check if two strings are isomorphic.,"s1 = ""foo"", s2 = ""app""","def is_isomorphic(s1, s2):
    if len(s1) != len(s2):
        return False

    s1_dict = dict()
    for i, char in enumerate(s1):
        if char in s1_dict:
            if s1_dict[char] != s2[i]:
                return False
        else:
            s1_dict[char] = s2[i]

    return True"
Implement a python program to check if a number is powerful. A powerful number is one who has a power of 2 as any of its prime divisors.,number = 18,"def is_power(number):
    flag = False
    if number > 2:
        for i in range(2, number // 2 + 1):
            while number % i == 0:
                if number % (i ** 2) == 0:
                    flag = True
                number = number / i
    
    return flag

print(is_power(18))"
"Create a Python function that takes two inputs, a list of integers and an integer n,and returns a new list of all the integers in the first list that are larger than n.","The list: [3,4,5,6,7], n=5","def greater_than_n(nums, n):
 return [num for num in nums if num > n]

greater_than_n([3,4,5,6,7], 5)
# Returns [6,7]"
Create a function to fetch data from a web page using Python.,http://www.example.com,"import requests

def fetch_data(url):
    response = requests.get(url)
    return response.text

fetched_data = fetch_data('http://www.example.com')"
Write a Python code for converting a given sentence into pig latin.,The quick brown fox,"def convert_string_to_pig_latin(sentence):
    words = sentence.split()
    pig_latin_words = []
    for word in words:
        if word[0] in 'aeiou':
            pig_word = word + 'way'
        else:
            pig_word = word[1:] + word[0] + 'ay'
        pig_latin_words.append(pig_word)
    return ' '.join(pig_latin_words)"
Develop an algorithm in Python to generate a random permutation of a given list.,"[1, 2, 3, 4, 5]","import random

def generate_permutation(nums):
 n = len(nums)
 permutation = []

# Generate a random index and add the element at that index to the list
 for _ in range(n):
 idx = random.randint(0, len(nums) - 1)
 permutation.append(nums[idx])
 nums.pop(idx)

return permutation

# Test the function
print(generate_permutation([1, 2, 3, 4, 5]))    # Output: [4, 2, 5, 3, 1]"
Write a Python program to filter a list of strings and only return strings with two or more words.,"my_list = [""hello"", ""world"", ""how"", ""are"", ""you"", ""I am fine""]","my_list = [""hello world"", ""how are you"", ""I am fine""]

filtered_list = [i for i in my_list if len(i.split())>1]

print(filtered_list)

# Output: ['hello world', 'how are you', 'I am fine']"
Write a Python script to display the result of a mathematical expression.,(3 + 4) * 5,"# code to display the result of a mathematical expression

expr = '(3 + 4) * 5'

# Evaluate the expression
result = eval(expr)

# Print the result
print(""Result of the expression: "" + str(result))"
Write a Python program to generate all binary strings of a given length n.,3,"def generate_binary_str(n): 
    result = []
    for i in range(2 ** n): 
        s = bin(i)[2:] 
        s = (n - len(s)) * ""0"" + s 
        result.append(s) 
    return result

result = generate_binary_str(3)
print(result)

# Output: ['000', '001', '010', '011', '100', '101', '110', '111']"
Convert the following code from Python to JavaScript.,"def add_two_numbers(a,b):
    return a+b","function add_two_numbers(a,b) {
    return a + b;
}"
Optimize the following Python code by removing unnecessary lines.,"def fibonacci(n):
    result = []
    a, b = 0, 1
    while a < n:
        result.append(a)
        a, b = b, a+b
    return result","def fibonacci(n):
    a, b = 0, 1
    result = []
    while a < n:
        result.append(a)
        a, b = b, a+b
    return result"
"Generate keywords from the text ""How to build a machine learning model in Python"".",How to build a machine learning model in Python,"""keywords"": [""machine learning model"", ""build machine learning model"", ""Python"", ""machine learning"", ""machine learning Python"", ""model building machine learning"", ""build model Python""]"
Create a python program to input two numbers and then swap their values.,"x = 4
y = 3","x = 3
y = 4

temp = x 
x = y 
y = temp 

print(""x ="", x) 
print(""y ="", y)"
"Construct a program, in Python code, to calculate the histogram of the elements in a list.","example_list = [1,2,2,2,3,4,5,5,5,5,5]","def histogram_elements(example_list):
    histogram = {}
    for i in example_list:
        histogram[i] = example_list.count(i)
    return histogram"
Create a Python function that returns a nested dictionary given a list of keys and their corresponding values.,"keys = [""key_1"", ""key_2"", ""key_3""]
values = [1, 2, 3]","def create_nested_dict(keys, values): 
  my_dict = {}
  for i in range(len(keys)):
    my_dict[keys[i]] = values[i]
  return my_dict"
Create an algorithm using Python that finds the maximum and minimum in a list of numbers.,"[9,6,7,11,14,5]","def find_max_min(mylist):
  max_num = mylist[0]
  min_num = mylist[0]

  for num in mylist:
    if num > max_num:
      max_num = num
    if num < min_num:
      min_num = num
  
  return [min_num, max_num]

list1 = [9,6,7,11,14,5]

print(find_max_min(list1)) #[5, 14]"
Create a web crawler in Python which takes an URL as input and extract all the links from the page.,https://www.example.com,"import requests
from bs4 import BeautifulSoup

def extract_links(url):
 r = requests.get(url)
 soup = BeautifulSoup(r.content, 'html.parser')
 links = []
 for link in soup.find_all('a'):
  links.append(link.get('href'))
 return links

url = ""https://www.example.com""
print(extract_links(url))"
Create a Python program that takes two strings and returns the result of concatenating them.,"string1 = 'Hello'
string2 = 'World'","def concatStrings(string1, string2):
  return string1 + string2

print(concatStrings('Hello', 'World'))"
Create a Python program that returns the index of an integer in a sorted array.,"Given a sorted array arr[] = {1, 2, 3, 5, 6, 8, 9}, and an integer x = 8","def binarySearch(arr, x): 
    l = 0
    r = len(arr)-1
    while l <= r: 
        mid = l + (r - l)//2
        if arr[mid] == x: 
            return mid 
        elif arr[mid] < x: 
            l = mid + 1
        else: 
            r = mid - 1
    return -1"
Design an algorithm in Python to display the total number of odd numbers between a given range,1 and 8,"def odd_count(start, end):
    count = 0
    for i in range(start, end+1):
        if i%2 != 0:
            count += 1
    return count"
Write a Python program to parse a JSON object.,"data = {
    ""name"": ""John Doe"",
    ""age"": 45,
    ""city"": ""New York""
}","import json

data = {
    ""name"": ""John Doe"",
    ""age"": 45,
    ""city"": ""New York""
}

data_parsed = json.loads(json.dumps(data))

name = data_parsed['name']
age = data_parsed['age']
city = data_parsed['city']"
Write a function in Python that takes a sentence as an input and prints out the words in reverse order.,"Input sentence: ""This is a test sentence""","def reverse_words(sentence):
 words = sentence.split()
 reversed_words = words[::-1]
 return ' '.join(reversed_words)

print(reverse_words(""This is a test sentence""))

# Output: ""sentence test a is This"""
Use a given class to deserialize a JSON response into a Python dictionary.,"import json
from some_library import Deserializer

class MyDeserializer(Deserializer):
    pass

response = '{""data"": ""abc""}'","class MyDeserializer(Deserializer):
    def deserialize(self, response):
        return json.loads(response)

deserializer = MyDeserializer()
deserialized_data = deserializer.deserialize(response)

print(deserialized_data)"
Create a python program to output an alphabetically sorted list of strings from an input list of strings.,"[""blue"", ""red"", ""green"", ""yellow""]","def sort_words(words):
    words.sort()
    return words

print(sort_words([""blue"", ""red"", ""green"", ""yellow""]))"
Create an algorithm in Python that finds a 'magic number' in an array. A magic number is an integer in the array that is strictly greater than the number of elements before it in the array.,"[1, 2, 5, 7, 9, 10]","def find_magic_number(a):
 m = -1
 for i in range(len(a)):
 if a[i] > i:
 m = a[i]
 break

return m

print(find_magic_number([1, 2, 5, 7, 9, 10]))
# 7"
Create a Python program to convert a list of temperatures from Celcius to Fahrenheit.,"temp_list = [30,15,17,18]","temp_list = [30,15,17,18]

# Convert each element in the list to Fahrenheit
fahrenheit_list = []

for temp in temp_list:
 fahrenheit_list.append(temp*9/5 + 32)

print(fahrenheit_list)
# [86.0, 59.0, 62.6, 64.4]"
Create a Python program to calculate the average score of students in a classroom.,"[72, 84, 85, 90]","# List of student scores
scores = [72, 84, 85, 90]

# Calculating the average score
total = 0
for score in scores:
 total += score

average = total / len(scores)

print(""The average score in the class is {:.2f}"".format(average))

# Output:
# The average score in the class is 82.50"
"Write a Python script to generate a dictionary that contains (i, i*i) such that i is an integer from 1 to n (both included).",3,"n = 3
my_dict = {} 
for i in range(1, n+1): 
    my_dict[i] = i * i

print(my_dict)"
Write a function in Python that takes in a string and returns a list containing its individual words.,"""This is a test""","def string_to_list(s):
    return s.split(' ')"
Create a Python function takes a string and an integer and returns the reversed string with the first letter of each word capitalized,"String: the quick brown fox
Integer: 3","def reverse_capitalize(string, n):
    string_list = string.split() 
    reverse_list = string_list[-n:] + string_list[:-n] 
    new_string = "" "".join(reverse_list) 
    return new_string.title()

string = ""the quick brown fox""
n = 3

print(reverse_capitalize(string, n))"
Build a program in Python for finding the largest prime number in a given range.,1-100,"def largest_prime(num):
    largest_prime = 0
    for n in range (num):
        if(isPrime(n)):
            largest_prime = n
    return largest_prime

def isPrime(n):
    if(n == 1):
        return False
    elif(n == 2):
        return True
    else:
        for x in range(2,n//2+1):
            if(n % x == 0):
                return False
        return True

print(largest_prime(100))"
Convert the given algorithm written in pseudo code to Python.,"Input: Array A
1. from i=1 to i=length[A]
2.  j=i 
3.  min = A[i]
4.  for j = i+1 to length[A]
5.    if min > A[j]
6.      min = A[j] 
7.  swap A[i] with A[j]","def selection_sort(A): 
    for i in range(len(A)): 
        minimum = i 
        for j in range(i+1, len(A)): 
            if A[minimum] > A[j]: 
                minimum = j 
        A[i], A[minimum] = A[minimum], A[i]"
Design a linear search algorithm for a given list in Python.,"arr = [10, 20, 80, 30, 60, 50, 110, 100, 130, 170]
value = 110","def linearSearch(arr, value):
    
    for i in range(len(arr)):
        if arr[i] == value:
            return i
        
    return -1

arr = [10, 20, 80, 30, 60, 50, 110, 100, 130, 170]
value = 110

idx = linearSearch(arr, value)

if idx != -1:
    print(""Element is present at index"", idx)
else:
    print(""Element is not present in the array"")"
Implement a Python class to sort a given array of integers using Insertion Sort.,"[5, 2, 4, 1, 3]","class InsertionSort:
    def sort(self, arr): 
        for i in range(1, len(arr)): 
            key = arr[i] 
            j = i-1
            while j >=0 and key < arr[j] : 
                    arr[j+1] = arr[j] 
                    j -= 1
            arr[j+1] = key
        return arr

InsertionSort().sort([5, 2, 4, 1, 3])"
"Design an algorithm in Python that takes in a string and searches for a given pattern, returning it or -1 if not found.","String = ""aaaaabbbbbbcccccc""
Pattern = ""bbb""","def pattern_search(string, pattern):
    i = 0
    while i < len(string):
        j = 0
        while j < len(pattern):
            if string[i+j] != pattern[j]:
                break
            j += 1
        if j == len(pattern):
            return i
        i += 1
    return -1"
Find the maximum element in an array of integers and return its index.,"[3,8,15,2,6,10]","// Python
def findMaxElementIndex(arr):
    max_val = max(arr)
    max_index = arr.index(max_val)
    return max_index"
Write a Python program to calculate the total cost of a customer's online orders.,"orders = [
 {'item': 'Pizza', 'price': 12.00}, 
 {'item': 'Chips', 'price': 3.50}, 
 {'item': 'Coke', 'price': 2.50}
]","total_cost = 0
for order in orders: 
 total_cost += order['price']

print('Total cost is', total_cost)"
Generate a Python program to edit a given string such that it reverses the words in the string.,string = 'This is a string',"def reverse_words(string):
    words = string.split(' ')
    reversed_words = words[::-1]
    reversed_string = ' '.join(reversed_words)
    return reversed_string"
Write a Python program to determine if a given list of words are anagrams or not.,"words = [""cat"", ""tac"", ""tca""]","def is_anagram(words):
 anagram = True
 for i in range(len(words)):
 for j in range(i + 1, len(words)):
 if len(words[i]) != len(words[j]):
 anagram = False
 break
 else:
 if sorted(words[i]) != sorted(words[j]):
 anagram = False
 break
 return anagram

result = is_anagram(words)
print(result) # True"
"Design a Python program that finds the most common elements in a list""","list = [1,2,3,4,4,4,5,5,6,6,6]","from collections import Counter 
def most_common(list): 
     counter = Counter(list) 
     most_occur = counter.most_common(1)[0][0] 
     return most_occur

print(most_common(list))"
Modify the given Python code to add exception handling.,"def divide(a,b):
    return a/b","def divide(a,b):
    try:
        return a/b
    except (ZeroDivisionError) as e:
        print('Division by zero')
    except Exception as e:
        print(str(e))
        return None"
Design an algorithm in Python to traverse a 2D array top-down and left-right and output its contents as a single array.,"[[1,2,3], [4,5,6], [7,8,9]]","def traverse2DArray(arr):
    output = []
    for i in range(len(arr)):
        for j in range(len(arr[0])):
            output.append(arr[i][j])
    return output

print(traverse2DArray([[1,2,3], [4,5,6], [7,8,9]])) # [1,2,3,4,5,6,7,8,9]"
Write a Python program to format a specified string to limit the number of characters to 6.,"string = ""abcdefghijklmnopqrstuvwxyz""","def limit_string(string):
    """"""Format the specified string to limit the number of characters to 6.""""""
    return string[:6]"
"Write a Python program to filter a list of strings so that strings containingthe substring ""bad"" are removed.","list_of_string = [""good"",""bad"",""weird"",""great"",""amazing""]","list_of_string = [""good"",""weird"",""great"",""amazing""]

filtered_list = [s for s in list_of_string if ""bad"" not in s]

print(filtered_list)"
Generate a list comprehension in Python for the following operation.,"mulitply each element in (1, 2, 3, 4) by 3","[x * 3 for x in (1, 2, 3, 4)]"
"Write a Python program to convert a given list of strings to integers. If a string is not a number, then that string should be dropped from the list.","['1', '2', '3', 'four', '5']","def convert_to_ints(lst):
    result = []
    for i in lst:
        try:
            result.append(int(i))
        except:
            pass
    
    return result

result = convert_to_ints(['1', '2', '3', 'four', '5'])
print(result)"
Construct a Python program for finding the intersection of two arrays.,"Array 1: [1, 2, 3, 4]
Array 2: [3, 4, 5, 6]","def intersection(arr1, arr2):
  result = [i for i in arr1 if i in arr2]
  return result

arr1 = [1, 2, 3, 4]
arr2 = [3, 4, 5, 6]
result = intersection(arr1, arr2)
print(result)  # [3, 4]"
Generate a Python program that calculates the total number of vowels in a sentence,This sentence has five vowels,"def count_vowels(sentence):
  vowels = ['a', 'e', 'i', 'o', 'u'] 
  count = 0
  for word in sentence.split(): 
    for letter in word:
      if letter in vowels:
        count += 1
  return count

#Test 
sentence = ""This sentence has five vowels""
print(""Number of vowels:"", count_vowels(sentence))"
Write a Python program to process a list of numbers and print out the maximum and minimum values.,"[4, 19, -3, 27, -9, 5]","numbers = [4, 19, -3, 27, -9, 5]

max_num = max(numbers)
min_num = min(numbers)

print(""The maximum number in the list is {}"".format(max_num))
print(""The minimum number in the list is {}"".format(min_num))"
Write a code in Python to show a histogram distribution of data.,"[2, 3, 5, 6, 7, 8, 9, 10]","import matplotlib.pyplot as plt

# example data
data = [2, 3, 5, 6, 7, 8, 9, 10]

# create histogram
plt.hist(data)

# show plot
plt.show()"
Develop an algorithm in Python for solving the Tower of Hanoi problem.,Towers with 3 discs,"def hanoi(discs, source, aux, dest):
    if discs == 1:
        print (""Move disc 1 from {} to {}"".format(source, dest))
        return

    hanoi(discs-1, source, dest, aux)
    print (""Move disc {} from {} to {}"".format(discs, source, dest))
    hanoi(discs-1, aux, source, dest)

hanoi(3,'A', 'B', 'C')"
Use Python to create an array that stores the Fibonacci sequence up to the nth number.,n = 10,"def fibonacci(n): 
    a = 0
    b = 1
    fibo = []

    for i in range(n):
        fibo.append(a)
        c = a + b
        a = b
        b = c

    return fibo

fibonacci(10)"
Create a script in Python that calculates the average length of a given list of strings,"list_of_strings = [""cat"", ""dog"", ""mouse"", ""elephant""]","def calculate_avg_string_length(string_list):
    total_length = 0

    for item in string_list:
        total_length += len(item)
    
    return total_length / len(string_list)

list_of_strings = [""cat"", ""dog"", ""mouse"", ""elephant""]

result = calculate_avg_string_length(list_of_strings)
print(result)"
Create a python program to calculate Fibonacci sequence for a given number.,n = 8,"def fibonacci(n):
    if n == 0:
        return 0
    elif n == 1:
        return 1
    else:
        return fibonacci(n-1) + fibonacci(n-2)

if __name__ == '__main__':
    n = 8
    print(fibonacci(n))"
"In Python, create an algorithm for efficiently sorting a list of numbers in ascending order.","[4,7,2,1,11,0,29]","def sort_list(numbers):
    for i in range(len(numbers)-1):
        for j in range(i+1, len(numbers)):
            if numbers[i] > numbers[j]:
                numbers[i], numbers[j] = numbers[j], numbers[i]
    return numbers"
Generate a Python Program to Sort a List by Frequency,"list_a = [1, 2, 3, 2, 5, 2]","def sort_by_frequency(list_a):
    frequency = {}
    for a in list_a:
        if a not in frequency:
            frequency[a] = 1
        else:
            frequency[a] += 1
    list_sorted = []
    for key, value in sorted(frequency.items(), key=lambda item: item[1], reverse=True):
        for _ in range(value):
            list_sorted.append(key)
    return list_sorted"
"Using Python, create a function that calculates the objective function of a linear equation.","ax + by = c

a = 3, b = 5, c = 7","def linear_eq(a, b, c):
    return a*x + b*y - c

# For example:
result = linear_eq(3, 5, 7)
print(result)"
Can you generate a sorting algorithm in Python that would sort this array of numbers in ascending order?,"[9, 2, 5, 6, 4, 3, 7, 10, 1, 8]","def bubble_sort(arr):
  n = len(arr)
  for i in range(n): 
    for j in range(0, n-i-1):
      if arr[j] > arr[j+1] :
        arr[j], arr[j+1] = arr[j+1], arr[j]
  return arr

bubble_sort([9, 2, 5, 6, 4, 3, 7, 10, 1, 8])"
"Create a Python program to read numbers from stdin and produce a histogram, showing the frequency of the numbers in each 10 buckets.","15
-7
-3
29
4","import sys

# Define buckets
buckets = [0]*10

# Read line-by-line
for line in sys.stdin:
 # Read as integer
 value = int(line)

 # Find the bucket
 bucket = max(int(value/10), 0)
 buckets[bucket] += 1

# Output result
for i, count in enumerate(buckets):
 print('{}-{}: {}'.format(i*10, i*10+9, count))"
Create a post request in python with the given parameters.,"API: https://api.endpoint.com
Headers: {'Authorization': 'Bearer abcdefg', 'Content-Type': 'application/json'}
Parameters: {'name': 'John', 'age': 25}","import requests

url = 'https://api.endpoint.com'
headers = {'Authorization': 'Bearer abcdefg', 'Content-Type': 'application/json'}
parameters = {'name': 'John', 'age': 25}

response = requests.post(url, headers=headers, json=parameters)"
Write an optimized Python code snippet to reverse the words in a given string.,"""Hello, World!""","def reverse_words(string):
    words = string.split("" "")
    words.reverse()
    output_string = "" "".join(words)
    return output_string

print(reverse_words(""Hello, World!"")) # Output: ""World! Hello,"""
"Utilizing the given data, write a Python code to calculate the average of numbers stored in a list.","list = [2, 3, 6, 8, 9]","def calculate_average(lst):
sum = 0
for num in lst:
 sum+=num
avg = sum/len(lst)
return avg

list = [2, 3, 6, 8, 9]
average = calculate_average(list)
print(""Average of list:"", average)"
Implement a Python program to calculate the average of every two numbers in a given array.,"[1, 3, 5, 7, 9]","def average_every_two_numbers(arr):
    result = []
    for i in range(0, len(arr), 2):
        if i+1 < len(arr):
            result.append( (arr[i] + arr[i+1])/2.0)
        else:
            result.append(arr[i])
    return result

print(average_every_two_numbers([1, 3, 5, 7, 9]))"
Design an algorithm in Python that reverses the order of strings in a list.,"[""Apple"", ""Banana"", ""Carrot"", ""Durian""]","def reverseList(list):
    list.reverse()
    return list

list = [""Apple"", ""Banana"", ""Carrot"", ""Durian""]

reverseList(list)"
Write a Python function to get the common items from two given lists.,"list_1 = [1, 2, 3, 4, 5]
list_2 = [2, 4, 6, 8]","def get_common_items(list_1, list_2):
    common_items = []
  
    for i in list_1:
        for j in list_2:
            if i == j:
                common_items.append(i)
    return common_items

list_1 = [1, 2, 3, 4, 5]
list_2 = [2, 4, 6, 8]

print(get_common_items(list_1, list_2))"
Create a python module that reads the sentiment of a given text.,Nothing,"import nltk
from nltk.sentiment.vader import SentimentIntensityAnalyzer

def sentiment_score(text): 
    sentiment_scores = SentimentIntensityAnalyzer().polarity_scores(text) 
    return sentiment_scores[""compound""]"
"Generate a Python program to generate a list of all the prime numbers in given range [n,m], where n and m are input parameters.","n = 5, m = 20","def generatePrimes(n, m):
  primes = []
  for i in range(n, m + 1):
    isPrime = True
    for j in range(2,i):
      if i % j == 0:
        isPrime = False
        break
    
    if isPrime:
      primes.append(i)
  
  return primes
  
n = 5
m = 20
primes = generatePrimes(n, m)
print(primes)  #Output: [5, 7, 11, 13, 17, 19]"
Develop a program in Python to find the count of all prime numbers between two given numbers.,"start_number = 10
end_number = 20","def count_primes(start_number, end_number):
    count = 0
    for i in range (start_number, end_number+1):
        is_prime = True
        for j in range (2, i-1):
            if i % j == 0:
                is_prime = False
        if is_prime:
            count += 1
    return count"
Create a Python function to delete the fourth element of a given list.,"[1,2,3,4,5]","def removeFourthElement(lst):
  lst.pop(3)
  return lst

print(removeFourthElement([1,2,3,4,5]))"
Design a Python function that rearranges the elements of a given array,"[1, 2, 3, 4, 5]","def rearrange_arr(arr): 
    arr.sort(reverse = True) 
    return arr"
Write a function in Python that takes a list of numbers as input and returns the minimum value.,"[4,6,2,1,10,8]","def find_min(numbers):
    min_value = numbers[0]
    for num in numbers:
        if num < min_value:
            min_value = num
    return min_value

result = find_min([4,6,2,1,10,8])
print(result)"
Create a function in Python to remove a specified element from a string of words.,"def remove_elem(string, elem):","def remove_elem(string, elem):
    """"""This function removes a specified element from the given string of words""""""
    return ' '.join([word for word in string.split() if word != elem])"
Write a Python program to optimize the given cost function.,"C(x, y) = 2x + 9y","def optimize_cost(x, y):
    return 2*x + 9*y"
Write a Python script to take in a 2D array as an input and return the sum of all the elements.,"arr = [[1,2,3],
[4,5,6],
[7,8,9]]","def sum_elements(arr):
  s = 0
  for row in arr:
    s += sum(row)
  return s

arr = [[1,2,3],
[4,5,6],
[7,8,9]]

print(sum_elements(arr))

# Output: 45"
Generate a Python script to filter the data in a given DataFrame and store the filtered data in a new DataFrame,Filter data on a data frame by age and store filtered data in a new DataFrame,"def filter_df_by_age(df, age):
    # Filter the dataframe
    filtered_df = df[df['age'] > age]

    # Create the new dataframe
    new_df = filtered_df.copy()

    # Return the new dataframe
    return new_df"
Create a Python function that takes two strings and count the total number of characters made from the two strings combined.,"firstStr = ""Hello""
secondStr = ""World""","def countChars(firstStr, secondStr):
    combinedStr = firstStr + secondStr
    return len(combinedStr)"
"Optimize a given Python program for speed, memory usage and readability.","def factorial(n):
    f =1
    for i in range(2,n+1):
        f *=i
    return f","def factorial(n):
    result = 1
    for i in range(2, n+1):
        result *= i
    return result"
Develop a Python script to add a given list of numbers.,"[4, 8, 15, 20]","def sum_list(list_of_nums):
    total = 0
    for number in list_of_nums:
        total += number
    return total

result = sum_list([4, 8, 15, 20])
print(result)"
Create a recursive function in Python that calculates the factorial of a given number.,n = 5,"def factorial(n): 
    if n == 1:
        return 1
    else:
        return n * factorial(n-1)

result = factorial(5)
print(result) # prints 120"
Edit the existing Python code to make the program more efficient.,"def sum_array(array):
  total = 0
  for element in array:
    total += element
  return total","def sum_array(array):
  total = 0
  for element in array:
    total = total + element
  return total"
Design a Python program to switch the indices of two values in a given 2-dimensional array.,"arr = [[1, 2], [3, 4]]","def switchIndexes(arr): 
    result = [[0 for i in range(len(arr[0]))] for j in range(len(arr))] 
    for i in range(0, len(arr)): 
        for j in range(0, len(arr[0])): 
            result[j][i] = arr[i][j] 
    return result 

switchIndexes(arr)"
Convert the given Python program from procedural to object-oriented.,"def multiply(a, b):
    c = a * b
    print(""Result is: "", c)","class Multiplier:
    def __init__(self):
        pass
 
    def multiply(self, a, b):
        c = a * b
        print(""Result is: "", c)

mult = Multiplier()
mult.multiply(a, b)"
Can you write a Python program to search a list of numbers and return the index positions of matches?,"list = [1, 5, 7, 8, 10]
number = 8","def search(lst, number):
    for i, n in enumerate(lst):
        if n == number:
            return i
    return -1

result = search(lst, number)
print(result)"
Generate a Python class with the following variables.,"name, job, age","class Person:
  def __init__(self, name, job, age):
    self.name = name
    self.job = job
    self.age = age"
Create a Python program to find all pairs of numbers that add up to a given sum.,sum = 8,"def find_pairs(lst, sum):
 pairs = []

 for i in range(len(lst)-1):
   for j in range(i+1, len(lst)):
     if lst[i] + lst[j] == sum:
       pairs.append((lst[i], lst[j]))

 return pairs

pairs = find_pairs([1, 2, 3, 4, 5], 8)
print(pairs) # [(3,5), (2,6), (1,7)]"
Create a Python script that takes in a positive integer as argument and prints out the Fibonacci sequence up to that number.,5,"def fibonacci(n):
 a, b = 0, 1
 fibonacci = [a]
 
 while b < n:
 fibonacci.append(b)
 a, b = b, a + b
 
 return fibonacci

print(fibonacci(5))
# Output: [0, 1, 1, 2, 3]"
Create a Python function that takes an object and prints all of its contents in a table.,"{
  name: 'John', 
  age: 32, 
  gender: 'Male',
  city: 'New York'
}","def print_object_table(obj): 
    print(""Name\t Age\t Gender\t City"")
    print(""----\t----\t-------\t-------"")
    print(obj['name'], ""\t"", obj['age'], ""\t"", obj['gender'], ""\t"", obj['city'])

print_object_table({
  'name': 'John', 
  'age': 32, 
  'gender': 'Male',
  'city': 'New York'
})"
Create a Python program to extract the email and phone numbers within a given string.,"String:
'My email is hello@domain.com and my phone number is +123456789.'","import re

text = 'My email is hello@domain.com and my phone number is +123456789'

email = re.findall(""[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+"", text)
phone = re.findall(""\+(9[976]\d|8[987530]\d|6[987]\d|5[90]\d|42\d|3[875]\d|
2[98654321]\d{9}|9[8543210]\d{8})\b"", text)

print(email)
print(phone)"
Produce a Python program to convert a given number of minutes to years and days.,76586,"def convertMinutesToYears(minutes):
    years = minutes / 525600
    days = minutes % 525600 / 1440 
    
    print(""The given"" + str(minutes) + "" minutes is equal to "" + 
    str(round(years)) + "" year(s) and "" + str(round(days)) + "" day(s)"")

convertMinutesToYears(76586)"
Create a Python program to find all elements in a list that appear more than once.,"list=[1, 2, 3, 2, 4, 5, 1, 0]","def duplicate_elements(lst):
 
 seen_elements = set()
 duplicates = set()
 
 for element in lst:
 if element in seen_elements:
 duplicates.add(element)
 else:
 seen_elements.add(element)
 
 return duplicates
 
list = [1, 2, 3, 2, 4, 5, 1, 0]
duplicates = duplicate_elements(list)
print(duplicates) # {1, 2}"
Create a function in Python which takes a list of numbers as input and returns the maximum of the numbers.,"[2, -1, 15, 8, 9, 10]","def findMax(l): 
    max = l[0] 
    for x in l: 
        if x > max: 
            max = x 
    return max 
  
# Driver code 
l = [2, -1, 15, 8, 9, 10] 
print(findMax(l))"
"Write a Python program to find an index in a list of numbers, where sum of numbers before it is equal to the sum of numbers after it","[1, 4, 9, 5, 3, 2]","def index_sum_equal(nums): 
    total = sum(nums) 
    left_sum = 0 
    for i in range(len(nums)): 
        right_sum = total - left_sum - nums[i] 
        if left_sum == right_sum: 
            return i 
        left_sum += nums[i] 
    return -1"
Create a python script to calculate the moving average of the given data,"Data: [2, 3, 5, 10, 11]","def moving_average(data, num_points):
    moving_average_list = []
    for i in range(0, len(data)-num_points+1):
        window_sum = 0
        for j in range(i, i+num_points):
            window_sum += data[j]
        moving_average_list.append(window_sum/num_points)
    return moving_average_list"
Create a Python function that accepts a list of numbers as input and returns a new list with the numbers in reversed order.,"myList = [1, 2, 3, 4, 5]","def reverseList(List):
    revList = []
    for i in range(len(List)):
        revList.append(List[len(List) - i - 1])
    return revList"
Write a python program to execute the following statement with a given input,n = 5,"def factorial(n):
    if n == 0:
        return 1
    else:
        return n*factorial(n-1)
      
result = factorial(5)
print(result)"
Generate a Python code to find the minimum and maximum of a given array of integers.,"[-5, -2, -6, 0, -1]","def get_min_max(numbers):
  minimum = min(numbers)
  maximum = max(numbers)
  return minimum, maximum"
Create a function in Python that calculates the sum of all even numbers in a given list,"[1, 2, 3, 4, 5, 6, 7, 8, 9]","def sum_evens(nums):
 total = 0
 for num in nums:
 if num % 2 == 0:
 total += num
 return total

a = [1, 2, 3, 4, 5, 6, 7, 8, 9]
print(sum_evens(a)) # 20"
Write a Python function that normalizes a given string. The function should remove all the special characters from the string and convert it to all lowercase.,"""Hello,! W0rld.""","def normalize_string(text):
	text = text.lower()
	text = ''.join(ch for ch in text if ch.isalnum() or ch == ' ')
	return text"
Model a function in Python that swaps the values of two variables without using a third one.,"x = 10
y = 20","def swap(x, y):
    x, y = y, x 
    return x, y

x, y = swap(x, y)
print('x =', x) 
print('y =', y)"
Create a python program to convert a string containing comma seperated values into a list of integers.,"""12,34,55,67""","def str_to_list(input_str):
    result = [int(i) for i in input_str.split("","")]
    return result

str = ""12,34,55,67""
int_list = str_to_list(str)
print(int_list) # Output: [12, 34, 55, 67]"
Create a Python script that runs a Monte Carlo simulation to generate a set of random points.,<no input>,"import random

def monte_carlo_simulation(n):
    points = []
    for _ in range(n):
        x = random.uniform(-1, 1)
        y = random.uniform(-1, 1)
        points.append((x, y))
    return points

result = monte_carlo_simulation(50)
print(result)"
Design a program in Python that takes a string as an input and checks whether all the vowels are present in the string or not.,This is a test,"def check_vowels(string):
    vowels = ['a','e','i','o','u']
    for vowel in vowels:
        if vowel not in string:
            return False
    return True

print(check_vowels('This is a test'))"
Perform a sentiment analysis on a body of text using Python.,"text = ""This is a very positive sentiment!""","import nltk
from nltk.sentiment.vader import SentimentIntensityAnalyzer

text = ""This is a very positive sentiment!""
sentiment_analyzer = SentimentIntensityAnalyzer()
scores = sentiment_analyzer.polarity_scores(text)

if scores['compound'] > 0.05:
 print(""Positive sentiment!"")
else:
 print(""Negative sentiment!"")"
Write a code in Python to remove duplicate elements from a list.,"[1,2,3,4,2,2,4]","def remove_duplicates(nums):
  new_list = []
  for num in nums:
    if num not in new_list:
      new_list.append(num)
  return new_list

print(remove_duplicates([1,2,3,4,2,2,4]))"
Develop a function in Python to perform linear search on a given array and return the position of the target element.,"arr = [10, 50, 30, 20, 11], target = 20","def linear_search(arr, target):
    for i in range(len(arr)):
        if arr[i] == target:
            return i
    return -1

arr = [10, 50, 30, 20, 11]
target = 20

index = linear_search(arr, target)
if index != -1:
    print(""Element found at index"", index)
else:
    print(""Element is not present in the array"")"
Design a Python program to print out all prime numbers in a range,Number Range between 1 and 10,"def is_prime(n):
    for i in range(2, n):
        if n%i == 0:
            return False
    return True

for num in range(1, 10):
    if is_prime(num):
        print(num)"
Write a function in Python to calculate the nth value of the Fibonacci sequence.,7,"def fibonacci(n):
  if n == 0 or n == 1:
    return n
  else:
    return fibonacci(n - 1) + fibonacci(n - 2)
  
result = fibonacci(7)
print(result)"
Design a python program that returns the third smallest element from a given list.,"x = [4,5,6,7,2,9]","def thirdSmallest(x):
    y = sorted(x)[2]
    return y"
Create a Python script to get the values of a key from a given dictionary.,"{""name"": ""John"", ""age"": 35, ""city"": ""New York""}","d = {""name"": ""John"", ""age"": 35, ""city"": ""New York""}
value = d.get(""age"")
print(value)"
Generate a Python program to fill missing values in the given table.,"Table: student_data

| id  | name  | age |
|-----|-------|-----|
| 1   | John  |    |
| 2   | Jane  |    |
| 3   | Jack  | 28 |","import pandas as pd

# Read the student data
data = pd.read_csv('student_data.csv')

# Fill the missing values
data['age'] = data['age'].fillna(data['age'].mean())

# Print the result
print(data)"
Create an object in Python that includes data from a list comprehension.,"my_list = [1, 2, 3, 4, 5]","my_object = {x:x for x in my_list}
print(my_object)"
Can you develop a Python script that takes in a URL and prints out the source code?,url = 'http://www.example.org/',"import urllib.request
 
url = 'http://www.example.org/'

response = urllib.request.urlopen(url)

print(response.read())"
Generate a Python program that iterates through a given list of numbers and prints the doubled values.,"list_nums = [4, 6, 2, 8]","def double_list(list_nums):
 for num in list_nums:
 print(num * 2)
 
list_nums = [4, 6, 2, 8]
double_list(list_nums)"
Add a sorting feature to this Python script.,"my_list = [1, 5, 7, 2, 8]","my_list = [1, 5, 7, 2, 8]
my_list.sort()
print(my_list)"
Write a Python program to create a SQL statement for inserting data into a table.,"Table name: 'users', Number of columns: 5","INSERT INTO users (col1, col2, col3, col4, col5) VALUES (?, ?, ?, ?, ?)"
Create a Python code to generate HTML output from a given text input.,This is a sample text to be converted to html output.,"def generate_html(text): 
    
    html_string = """"
    for line in text.splitlines():
        html_string += ""<p align=\""justify\"">{}</p>\n"".format(line)
    
    return html_string"
Create a Python program that takes a string of words and returns the reverse order of words.,"""Hello World""","def reverse_words(words):
    words_list = words.split(' ')
    reversed_list = words_list[::-1] 
    reversed_words = ' '.join(reversed_list) 
    return reversed_words

input_string = 'Hello World' 
result = reverse_words(input_string) 
  
print(result)"
Write Python code to implement a decision tree classifier.,No Input,"from sklearn import tree

#features 
features = [[104,0], [100,0], [120,1], [80,0], [105,1]]
#labels
labels = [0,0,1,0,1]

clf = tree.DecisionTreeClassifier()
clf = clf.fit(features, labels)

print(""Predicted Label:"", clf.predict([[120,1]]))"
Reverse a given string using python.,Hello World,"def reverse_string(my_str): 
  rev_str = """" 
  
  for i in my_str: 
    rev_str = i + rev_str
  
  return rev_str

my_str = 'Hello World'

reverse_string(my_str)"
Write a Python function which takes a list of words and counts the number of vowels.,"The list of words is [""hello"", ""world""]","def count_vowels(words): 
    vowels = ""aeiou"" 
    count = 0 
  
    for word in words: 
        for char in word: 
            if char in vowels: 
                count += 1
    return count"
"Develop an algorithm for calculating the sum of two numbers, in Python.","2, 20","def add_numbers(a, b):
    return a + b

print(""The sum of 2 and 20 is: "", add_numbers(2, 20))"
Develop a program in Python that takes two lists as input and creates a new list that contains only the common elements of both lists.,"list1=[1,2,3], list2=[2,3,4]","def common_elements(list1, list2):
    common_list = []
    for element1 in list1:
        for element2 in list2:
            if element1 == element2: 
                common_list.append(element1)
    return common_list

common_elements_list = common_elements([1,2,3], [2,3,4])
print(common_elements_list)"
Generate a Python program that takes in a string of text and returns the count of each unique word in the string,This is a sample string,"def count_words(string):
 word_counts = {} 
 words = string.split()
 
 for word in words:
 if word in word_counts:
 word_counts[word] += 1 
 else:
 word_counts[word] = 1
 
 return word_counts

print(count_words(""This is a sample string"")) 
# Output {'This': 1, 'is': 1, 'a': 1, 'sample': 1, 'string': 1}"
Create a Python program to replace all the vowels in a string with a corresponding number.,"String: ""Hello World""","def replace_vowels(string):
    result = """"
    for char in string:
        if char in ""aeiouAEIOU"":
            result += str(ord(char))
        else:
            result += char 
    return result

string = ""Hello World""
result = replace_vowels(string)
print(result)"
Create a Python program to determine whether a given spectrum is valid.,"spectrum = [15, 16, 18, 21, 25, 28]","def is_valid_spectrum(spectrum):
    m = spectrum[0]
    for n in spectrum[1:]:
        if n - m not in [1, 2]:
            return False
        m = n
    return True"
Write a Python program to group all words of a given sentence into a dictionary. Keys of the dictionary should be alphabetically sorted and each key should contain a list of words starting with that letter.,Sentence: A wild cat jumped into the kitchen,"{
 'a': ['A', 'into'],
 'c': ['cat'],
 'j': ['jumped'],
 'k': ['kitchen'],
 'w': ['wild']
}"
Construct a python program that prints a multiplication table given two numbers (x and y).,"int x = 5; 
int y = 10;","int x = 5; 
int y = 10;

for i in range(1, y+1):
    for j in range(1, x+1):
        print('{} x {} = {}'.format(i, j, i*j))"
Create a program in Python to extract words of length 4 from a given string.,"s = ""extract four letter words"";","words = s.split()

four_letter_words = []
for word in words:
   if len(word) == 4:
      four_letter_words.append(word)
      
print(four_letter_words)"
Write a Python function to calculate the maximum value of two numbers given by the user.,"x = 24
y = 63","def maximum_numbers(x, y):
 if x > y:
 return x
 else:
 return y

print(maximum_numbers(x, y))"
Can you show how to perform regular expression matching in Python with a given string and pattern?,"String s = ""Hello World""
Pattern p = ""W.*d""","import re

s = ""Hello World""
p = ""W.*d""

m = re.match(p, s)
if m is not None:
    print(""Match found!"")
    print(""Position: "" + str(m.start()) + "","" + str(m.end()))
    print(""Matched string: "" + m.group())
else:
    print(""No match found!"")"
Create an algorithm in python to sort the given dataset in ascending order.,"arr = [15, -12, 0, 14, 23, -2]","arr = [15, -12, 0, 14, 23, -2]

def insertion_sort(arr):
    for i in range(1, len(arr)):
        key = arr[i]
        j = i-1
        while j>=0 and key<arr[j]:
            arr[j+1] = arr[j]
            j -= 1
        arr[j+1] = key
    return arr

print(insertion_sort(arr))"
Construct a function in Python to remove a given value from a list of integers.,"[5, 7, 6, 1, 3], 3","def remove_element(list, element):
  for i in list:
    if i == element:
      list.remove(i)
  return list

list = [5, 7, 6, 1, 3]
element = 3

print(remove_element(list, element)) # => [5, 7, 6, 1]"
Identify the type of an expression in Python.,"x = ""Apple""",The expression x is of type string.
Write a Python function to remove all elements from a given list present in another list.,"list1 = [1, 2, 3, 4, 5]
list2 = [4, 5, 6]","def remove_elements(list1, list2):
    for item in list2:
        if item in list1:
            list1.remove(item)
    
    return list1

result = remove_elements([1, 2, 3, 4, 5], [4, 5, 6])
print(result)"
Create a function in Python to calculate the sum of 1 to n numbers.,n = 10,"def sum_nums(n):
    result = 0
    for i in range(1, n+1):
        result += i
    return result

print(sum_nums(10))"
Create a Python3 program to process a list of strings and print each string in uppercase.,"['this', 'is', 'a', 'list', 'of', 'strings']","list_of_strings = ['this', 'is', 'a', 'list', 'of', 'strings']

for string in list_of_strings:
    print(string.upper())"
Create a web crawler in Python which searches for all links on a given website and prints them out in the terminal.,url = 'https://example.com',"import requests
from bs4 import BeautifulSoup

# Get the HTML from the given URL
resp = requests.get(url)

# Parse the HTML
soup = BeautifulSoup(resp.text, 'html.parser')

# Find all the links
for link in soup.find_all('a'):
    print(link.get('href'))"
Convert a C++ program to a Python program.,"#include <iostream>

int main()
{
    std::cout << ""Hello World!"";
    return 0;
}","print(""Hello World!"")"
Generate an algorithm in Python for reversing an array of numbers.,"[1, 2, 3, 4, 5]","def reverse_array(arr):

    # Use the two pointer technique
    start = 0
    end = len(arr) - 1

    while start < end:
        # Swap the values at each pointer position
        arr[start], arr[end] = arr[end], arr[start]
        # Move the pointer to the next position
        start += 1
        end -= 1

    return arr

arr = [1, 2, 3, 4, 5]
reverse_array(arr)"
"Given an array and a target value, write a Python program to find theIndex of the target value in the array.","[1, 2, 3, 4, 5], 3","def find_index(arr, target):
 for i in range(len(arr)):
  if arr[i] == target:
   return i
 return -1"
Generate a program in Python that accepts a string as input and removes all vowels from it.,"""Hello World""","def removeVowels(str):
    vowels = ('a', 'e', 'i', 'o', 'u') 
    res = """"
    for char in str:
        if char.lower() not in vowels:
            res += char
    return res

print(removeVowels(""Hello World""))"
Create a python program that calculates and prints the average of the three given numbers.,"4, 5, 6","def avg(x, y, z):
    total = x + y + z
    return total / 3

x = 4
y = 5
z = 6

average = avg(x, y, z)
print('Average of the three numbers is:', average)"
Evaluate the following expression in Python.,(4 + 6) * 5 - 8,44
Develop a program in Python which takes two inputs and returns the sum of their squares.,"5, 9","def sum_of_squares(num1, num2):
  return num1**2 + num2**2

x = 5
y = 9

print(sum_of_squares(x, y))
# output: 106"
Create a Python function for encrypting strings using a “Vigenere Cipher”.,"""HELLO""","def encrypt_vigenere(plaintext, key):
 ciphertext = """"
 index = 0
 for c in plaintext:
     ciphertext += chr((ord(c) - 65 + ord(key[index]) - 65) % 26 + 65)
     index = (index + 1) % len(key)
 return ciphertext"
Edit the following Python code to calculate the average of an array of numbers.,"arr = [3, 4, 5]
sum = 0
for i in arr:
    sum = sum + i
print(sum)","arr = [3, 4, 5]
sum = 0
for i in arr:
    sum = sum + i

average = sum / len(arr)
print(average)"
Implement a function in Python that takes a list of integers and returns the sum of the squares of the even numbers.,"[1, 2, 3, 4, 5]","def sum_of_squares_of_evens(list_):
  sum_ = 0
  for num in list_:
    if num % 2 == 0:
      sum_ += num**2
  
  return sum_"
Write a function in Python that takes a list of numbers and returns a new list with all the elements sorted in descending order.,"[9,4,3,2,1]","def sort_descending(input):
 input.sort(reverse=True)
 return input"
Create a function in Python to find the minimum value in a given array.,An array of integers arr[],"def findMin(arr): 
   
    # Initialize minimum element 
    min = arr[0] 
   
    # Traverse array elements starting from 
    # 1st to the last 
    for i in range(1, len(arr)): 
        if arr[i] < min: 
            min = arr[i]
   
    return min

arr = [10, 11, 8, 9, 2] 
print(findMin(arr))"
Create a Python program to read and parse XML data from a URL.,https://example.com/data.xml,"import requests
import xml.etree.ElementTree as ET

url = 'https://example.com/data.xml'
r = requests.get(url)
xml_data = r.text

root = ET.fromstring(xml_data)

for child in root:
 print(child.tag, child.attrib)"
Create a python program to find the prime factors of an input number.,num = 50,"def prime_factors(num):
        factors = []
        i = 2
        while num > 1:
            while num % i == 0:
                num = num / i
                factors.append(i)
            i += 1
        return factors

num = 50
factors = prime_factors(num)
print(factors) # -> [2, 5,  5]"
Write a code to perform strings concatenation in Python,"""Hello"", ""World""","result = ""Hello"" + "" "" + ""World""
print(result)"
Edit the following Python function so that it returns a list of the factors of a number.,"def factors(n):
    return","def factors(n):
    factors =[]
    for i in range(1, n + 1):
        if n % i == 0:
            factors.append(i)
    return factors"
Generate a Python script to sort a given list of numbers without using the built-in function ``sort()``,"list = [3,2,7,5,4,1,8]","def sort_list(list):
    '''This function will sort a given list of numbers without using the built-in function sort()'''
    for i in range(len(list)):
        for j in range(i+1, len(list)):
            if list[i] > list[j]:
                list[i], list[j] = list[j], list[i]
    return list"
Write a python program to fill in missing values in a given list of strings.,"['a', '', 'b', '', 'c']","input_list = ['a', '', 'b', '', 'c']

for i, val in enumerate(input_list):
    if val == '':
        input_list[i] = input_list[i-1]

print(input_list) # ['a', 'a', 'b', 'b', 'c']"
Design a Python program to print all keywords in a given paragraph.,The best way to learn a programming language is to practice coding.,"text = ""The best way to learn a programming language is to practice coding.""
words = text.split()

keywords = [""for"", ""if"", ""while"", ""in"", ""range"", ""def"", ""import"", ""from"", ""as"", ""return""]

for word in words:
    if word in keywords:
        print(word)"
Create a Python program to retrieve the hours worked by an employee from a given list of timestamps.,"[1577296930, 1577297490, 1577299030]","def total_hours(timestamps):
    total_hours = 0
    for i in range(1, len(timestamps)):
        total_hours += (timestamps[i] - timestamps[i-1]) / 3600
    return total_hours

timestamps = [1577296930, 1577297490, 1577299030]

print(total_hours(timestamps))

# Output should be 3.33"
Write a function in Python that takes two lists of integers as arguments and returns the elements that are present in both lists.,"list1 = [2, 3, 4, 5]
list2 = [3, 5, 6, 7]","def intersection(list1, list2):
 result = []
 
 for element in list1:
 if element in list2:
 result.append(element)
 
 return result

intersection(list1, list2) // Output: [3, 5]"
Generate a Python program to remove all the elements equal to the given target from an array.,"[2, 3, 4, 3, 5, 3], target: 3","def remove_target(arr, target): 
    result = [] 
    for num in arr: 
        if num != target: 
            result.append(num) 
    return result"
"Using the provided dataset, create a Python program that returns the total number of people in a given age range.","ageGroup1 = [10, 20, 15, 25] 
ageGroup2 = [30, 35, 39, 43]","def count_people_in_age_range(ageGroup1, ageGroup2):
 total = 0
 for age in ageGroup1 + ageGroup2:
  if age >= 10 and age <= 20:
   total += 1
 return total"
Program a Python script that has a given list of integers as input and returns the sum of the list elements.,"my_list = [3, 2, 5, 4, 9]","def sum_list(my_list):
	total = 0
	for i in my_list:
		total += i
	return total"
Develop a Python program that calculates the maximum and minimum of a given list.,"nums = [2, 3, 5, 10, 12]","def get_min_max(nums): 
  min_value = min(nums) 
  max_value = max(nums) 
  return (min_value, max_value)"
Rewrite this Python code in Java.,"nums = [1, 5, 7, 10]

for i in nums:
    print(i)","int[] nums = {1, 5, 7, 10};

for (int i : nums) {
    System.out.println(i);
}"
Create a method in the Python language that takes a list of integers and returns a list containing only the values greater than 10.,"[1, 5, 10, 15, 20]","def filter_greater_than_10(nums):
 filtered_nums = []
 for num in nums:
 if num > 10:
 filtered_nums.append(num)
 return filtered_nums

nums = [1, 5, 10, 15, 20]
filtered_nums = filter_greater_than_10(nums)
print(filtered_nums) # [15, 20]"
Develop a program in Python for converting a base 10 number to binary.,17,"def decimalToBinary(n):
    binary = 0
    power = 1
    
    while (n != 0):
        last_bit = n % 2
        binary = binary + last_bit * power
        n = n // 2
        power = power * 10
 
    return binary

n = 17
print('Binary Representation of', n, 'is', decimalToBinary(n))"
Write a python program that adds all the elements in a given list,"my_list = [2, 4, 6, 8]","def list_sum(list):
    sum = 0
    for num in list:
        sum += num
    return sum"
"Given an input sentence with 4 different words, create a python program that phrases each word with the same first letter.",Hello World Goodbye Mars,"""""""
Given an input sentence with 4 different words, create a python program that phrases each word with the same first letter
""""""

words = 'Hello World Goodbye Mars'.split()

for word in words:
  print(word[0] + word[1:])"
Use matplotlib in Python to create a pie chart depicting a survey result.,"topic = ""Favorite fruits""
responses = { 'banana': 5, 'apple': 7, 'strawberry': 10, 'mango': 6 }","import matplotlib.pyplot as plt
 
labels = list(responses.keys())
values = list(responses.values())
colors = ['#F08080', '#F8A458', '#9BC808', '#000080']
 
plt.pie(values, labels = labels, colors = colors, autopct='%1.2f%%')
plt.title('Favorite Fruits')
plt.axis('equal')
plt.show()"
"Modify the following Python script to create a new object 'obj2' that has the same data as 'obj1', but with the 'val2' value changed to 100.","obj1 = {'key1': 'val1', 'key2': 'val2'}","obj1 = {'key1': 'val1', 'key2': 'val2'}

# create a copy of obj1
obj2 = obj1.copy()
# modify the value of key2
obj2['key2'] = 100"
Convert the following Python script to Java.,"my_list = [1, 2, 3, 4, 5]
for i in range(len(my_list)):
    print(my_list[i], end = ' ')","List<Integer> myList = Arrays.asList(1, 2, 3, 4, 5);
for(int i = 0; i < myList.size(); i++){
    System.out.print(myList.get(i) + "" "");
}"
Create a Python program to mark a character as asterisk (*) if it's the same as the previous one?,"test_string = ""SSSSSSSSSShellllllllllllooooooooo""","def mark_asterisk(input):
    res = """"
    temp = input[0]
    for char in input:
        if char == temp:
            res += '*'
        else:
            res += char
            temp = char
    return res"
Create an algorithm in Python that finds the maximum and minimum numbers in an unsorted array.,"[-5, 7, 2, 11, -9]","def get_max_min(arr):
    max_num = None
    min_num = None

    for n in arr:
        if max_num is None or n > max_num:
            max_num = n

        if min_num is None or n < min_num:
            min_num = n

    return max_num, min_num

max_num, min_num = get_max_min([-5, 7, 2, 11, -9])
print(f""max = {max_num}, min = {min_num}"")"
Create a Python function to calculate the length of the hypotenuse of a right triangle.,Length of sides: 3 and 4,"def hypotenuse(a, b):
  return (a**2 + b**2) ** 0.5

print(hypotenuse(3, 4)) # 5.0"
"Design a REST API in Python for connecting a remote database, and fetching One user’s all records from the database.","Database Username: John 
Database Password: 12345","import requests

# Connect the remote database
url = ""http://{database_url}/connect""
data = {
   'username': 'John',
   'password': '12345'
}

response = requests.post(url, data=data)

# Get user data
url = ""http://{database_url}/user/data""
response = requests.get(url)

# Print user data
print(response.json())"
Create a Python module that takes in an array and returns the greatest common divisor (GCD).,"[30, 42]","def gcd(arr):
    gcd = arr[0]
    for i in arr[1:]:
        while i:
            gcd, i = i, gcd % i
    return gcd

arr = [30,42]
print(gcd(arr))"
Write a script in Python that prints all prime numbers between two given numbers.,"Start Number = 10
End Number = 20","start = 10
end = 20

for num in range(start, end + 1):
   # all prime numbers are greater than 1
   if num > 1:
       for i in range(2, num):
           if (num % i) == 0:
               break
       else:
           print(num)"
"Write a Python function that takes two input strings and returns TRUE if the second string is a rotation of the first one (e.g., 'hello' and 'lohel' should return true).","""hello"", ""lohel""","def is_rotation(str1, str2):
    return len(str1) == len(str2) and str2 in str1 + str1

# testing
print(is_rotation('hello', 'lohel'))  # prints True"
Write a Python program to find the first non-repeated letter in a string.,"""apple""","def first_non_repeating_letter(str):
    for char in str:
        if str.lower().count(char.lower()) == 1:
            return char

    return ''

# main
str = ""apple""
print(""First non-repeating letter:"", first_non_repeating_letter(str))"
Create a function in Python that takes 2 lists and returns their intersection.,"list1 = [1, 4 , 6, 10]
list2 = [2, 10, 8, 6]","def intersection(list1, list2): 
    intersection_elements = set(list1) & set(list2) 
    return list(intersection_elements)

intersection_list = intersection(list1, list2)
print(intersection_list)"
Construct Python code to count the occurrence of a specific word in a given sentence.,"sentence = ""She sells sea shells on the sea shore"", word = ""sea""","def word_count(sentence,word):
        word_count=0
        words=sentence.split("" "")
        for w in words:
            if(w==word):
                word_count+=1
                return word_count


sentence = ""She sells sea shells on the sea shore""
word = ""sea""
res = word_count(sentence, word) 
print(res)"
Generate a valid python class that captures person information,"Name, Age, Gender, Nationality","class Person:
    def __init__(self, name, age, gender, nationality):
        self.name = name
        self.age = age
        self.gender = gender
        self.nationality = nationality
 
    def __str__(self):
        return 'Name: {}\nAge: {}\nGender: {}\nNationality: {}'.format(
            self.name, self.age, self.gender, self.nationality)"
Write a Python function to calculate the greatest common factor (GCF) of two numbers.,"Number 1: 15 
Number 2: 25","def gcf(m, n):
    while m != 0:
        m, n = n % m, m 
    return n

print(gcf(15, 25))"
Write a function in Python to traverse a multi-dimensional array and print each item in the array.,"[[1,2,3], [4,5,6], [7,8,9]]","def traverse_array(arr): 
 if isinstance(arr, list) or isinstance(arr, tuple): 
 for item in arr:
 traverse_array(item)
 else:
 print(arr)

arr = [[1,2,3], [4,5,6], [7,8,9]] 
traverse_array(arr)"
Create an API request using Python to get the status of your favorite website.,Website URL: example.com,"import requests

url = 'http://example.com'

r = requests.get(url)

if r.status_code == 200:
  print('Website is up and running.')
else:
  print('Website is not responding.')"
Write an algorithm in Python to detect duplicate values in a given array.,"[5, 2, 1, 5, 9, 1, 3]","def find_duplicates(arr):
    duplicates = []
    seen = set()
    for i in arr:
        if i not in seen:
            seen.add(i)
        else:
            duplicates.append(i)
    return duplicates"
"Create a Python function to sort a list of strings lexicographically, where strings are of varying lengths.","string_list = [""abcd"", ""def"", ""fh"", ""ac"", ""a""]","def lexicographic_sort(string_list):
    # Sort by length
    string_list.sort(key=len)
 
    # Second, sort by alphabetical order
    string_list.sort()
 
    return string_list

string_list = [""abcd"", ""def"", ""fh"", ""ac"", ""a""]
print(lexicographic_sort(string_list)) # [""a"", ""ac"", ""def"", ""fh"", ""abcd""]"
"Using the comment as guide, construct a python program that checks whether a given value is in a list","Input List: [1, 2, 3, 4, 5]
Input Value: 3","def search_list(input_list, input_value):
    """"""Checks whether a given value is in a list""""""
    for num in input_list:
        if num == input_value:
            return True
    return False"
Design a python program to find the maximum value of an array.,"[2, 4, 7, 6]","def maxVal(arr):
    maxVal = -float(""inf"")
    for num in arr:
        if num > maxVal:
            maxVal = num
    return maxVal

maxVal([2, 4, 7, 6]) #returns 7"
Modify the given Python code to handle errors more precisely.,"try:
    a = 5 / 0
except Exception as error:
    print(error)","try:
    a = 5 / 0
except ZeroDivisionError as error:
    print(error)
except Exception as error:
    print(error)"
Write a Python program to check whether a number is divisible by a given divisor.,"Number: 15
Divisor: 3","def is_divisible(num, divisor):
    return num % divisor == 0
 
num = int(input(""Number: ""))
divisor = int(input(""Divisor: ""))

print(""Number is divisible by the divisor :"", is_divisible(num, divisor))"
Create a function in Python that takes two list of numbers and outputs the product of each element in both lists.,"[1, 2, 3], [3, 4, 5]","def productOfLists(arr1, arr2):
    res = []
    for i in range(len(arr1)):
        for j in range(len(arr2)):
            if i == j:
                res.append(arr1[i] * arr2[j])
    return res

product = productOfLists([1, 2, 3], [3, 4, 5])
print(product)"
Create a Python program that takes any number of lists and combines them into a single list.,"list_1 = [1, 2, 3]
list_2 = [4, 5, 6]
list_3 = [7, 8, 9]","def combine_lists(*lists):
    '''This function takes any number of lists and combines them into a single list.'''
    combined_list = []

    for list in lists:
        for item in list:
            combined_list.append(item)

    return combined_list

combined_list = combine_lists(list_1, list_2, list_3)
print(combined_list)"
Develop a Python function that sorts a given list of strings on the basis of the length of the string.,"['Coders', 'NS', 'Coding', 'Program']","def sort_list(lst):
    return sorted(lst, key = len)

lst = ['Coders', 'NS', 'Coding', 'Program']

result = sort_list(lst)

print(result)  # ['NS', 'Coding', 'Coders', 'Program']"
Create a Python program that takes an integer as an input and calculates the sum of all the digits of the integer.,123,"# take a number 
number = int(input(""Please enter a number: "")) 
  
#initialize sum
sum = 0
  
#Find the sum of the digits of the number
temp = number
while temp > 0: 
   digit = temp % 10
   sum += digit 
   temp //= 10
  
# print the output
print(""The sum of the digits of the given number is"", sum)"
Devise a Python function to calculate Fibonacci series up to n numbers.,10,"def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    # First Fibonacci number is 0 
    elif n==1: 
        return 0
    # Second Fibonacci number is 1 
    elif n==2: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2) 
  
# Driver Program 
  
print(Fibonacci(10))"
Write a Python function to sort a dictionary (key: value) by its values in descending order.,"my_dict = {1: 4, 2: 3, 3: 2, 4: 1}","def desc_sort_dict(my_dict):
  return {k: v for k, v in sorted(my_dict.items(), key=lambda item: item[1], reverse=True)}"
Create a list expression and a set expression in Python that converts the given list to a set.,"list = [1, 2, 2, 3, 4, 4, 5]","list_expression = set([x for x in list]) 

set_expression = set(list)"
Create an algorithm in Python that takes a string as input and returns a list of words from that string.,"""Hello World""","def string_to_words(s):
    return s.split(' ')

words = string_to_words('Hello World')
print(words)"
Create a python program to classify if a given string contains any numbers.,"string = ""password123""","import re

def contains_numbers(string):
    """"""Classify if a given string contains any numbers.""""""
    return bool(re.search(r'\d', string))

# Usage Example
string = ""password123""
contains_numbers = contains_numbers(string)
print(contains_numbers)  # True"
Write a python function that takes two lists of numbers and returns the intersection between them.,"list1 = [1, 2, 3, 4, 5]
list2 = [3, 4, 5, 6, 7]","def intersection(list1, list2):
 result = []
 set1 = set(list1)
 set2 = set(list2)

 for item in set1 & set2:
 result.append(item)

 return result

list1 = [1,2,3,4,5]
list2 = [3,4,5,6,7]
result = intersection(list1, list2)
print(result) # prints [3, 4, 5]"
Create a Python function that prints the largest of three numbers.,"num1 = 10
num2 = 20
num3 = 5","def max_number(num1,num2,num3):
  max_num=max(num1,num2,num3)
  print(f""The largest number is {max_num}"")"
Can you design a function in Python to sort a list of tuples based on the second item in the tuple?,"tuples = [(""b"", 0), (""a"", 1), (""c"", -1)]","def sort_tuple(tuples):
    # sort by 2nd item of the tuple
    tuples.sort(key=lambda x: x[1])
    return tuples

# Test
tuples = [(""b"", 0), (""a"", 1), (""c"", -1)]
sorted_tuples = sort_tuple(tuples)
print(sorted_tuples) # [(""c"", -1), (""b"", 0), (""a"", 1)]"
Generate a correct python script to identify the output of a given expression.,expression: (4 + 2) * 3,"a = (4 + 2) * 3
print(a)"
Write a Python program to take two numbers as input and find the greatest common divisor.,36 and 18,"def gcd(a, b):
 if a == 0:
  return b

 while b != 0:
  if a > b:
   a = a - b
  else:
   b = b - a
 return a

# Test
print(gcd(36, 18)) # Output: 18"
Edit the following Python code so that it will run without any errors.,"print(""Hello World"")
if a == b
print(""A is equal to B"")","print(""Hello World"")
if a == b:
 print(""A is equal to B"")"
Optimize a simple Python program for finding the sum of two numbers. The program should take two numbers as an input and return the sum as an output.,15 and 7,"def add_numbers(num1, num2):
 '''
 Function to add two numbers 
 '''
 return num1 + num2 

# Driver code 
print(add_numbers(15, 7))"
Create a Python script that takes a list of strings as input and prints them in reverse order.,"[""apple"", ""banana"", ""cherry""]","def reverse_list(lst):
  lst.reverse()
  for item in lst:
    print(item)
  
reverse_list([""apple"", ""banana"", ""cherry""])"
Create a string function in Python to convert all words in a string to uppercase.,"string = ""this is a sample string""","def to_upper(string):
 return string.upper()
 
print(to_upper(string))  # THIS IS A SAMPLE STRING"
Reconstruct the following Python function such that the output is reduced to one line.,"def calculate_sum(numbers):
    result = 0
    for i in range(len(numbers)):
        result += numbers[i]
    return result","def calculate_sum(numbers):
    return sum(numbers)"
"Given the following Python code, determine how many lines of code are in the code.","def foo(x):
    y = x/2
    z = x/3
    return x+y-z",4
Create a GPT model to generate a Python program that carries out the following task,Find the sum of all the odd numbers in a list,"def sumOdd(lst):
    sum = 0
    for ele in lst:
        if ele%2 == 1:
            sum+=ele
    return sum"
Develop a Python code snippet to compute the Euclidean distance between two points.,"point1 = (2, 3)
point2 = (4, 5)","def euclidean_distance(point1, point2):
    dx = point1[0] - point2[0]
    dy = point1[1] - point2[1]
    return (dx*dx + dy*dy)**0.5"
Write a Python program to classify the following sentence as either positive or negative.,This is an horrible movie,"def classify(sentence):
    if ""horrible"" in sentence:
        return ""negative""
    else:
        return ""positive""

sentiment = classify(""This is an horrible movie"")
print(sentiment)"
Write a Python program to parse a JSON object from a given string.,"Input String: {""name"": ""John Doe"", ""age"": 28}","import json

givenString = ""{\""name\"": \""John Doe\"", \""age\"": 28}""

data = json.loads(givenString)

print(data)"
Create a list of words from a sentence using Python,The quick brown fox jumps over the lazy dog,"sentence = ""The quick brown fox jumps over the lazy dog"" 
word_list = sentence.split("" "") 
print(word_list) 

# Output: ['The', 'quick', 'brown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog']"
Optimize a Python script to find the maximum value of a series of numbers.,"lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","def find_max(lst):
 max_value = None
 for number in lst:
 if max_value is None or number > max_value:
 max_value = number
 return max_value

# Main
lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
max_value = find_max(lst)
print('The maximum value of the list is {}'.format(max_value))"
Implement a sorting algorithm in Python to sort a list of integers.,"[5, 2, 8, 1, 4]","def sort(list): 

    for i in range(len(list)): 
        min_idx = i 
        for j in range(i+1, len(list)): 
            if list[min_idx] > list[j]: 
                min_idx = j 
                
        list[i], list[min_idx] = list[min_idx], list[i] 
 
list = [5, 2, 8, 1, 4] 
sort(list) 
print(list)"
"Given a list, write a Python script to reverse the order of the list.","[10, 20, 30, 40, 50]","list = [10, 20, 30, 40, 50]
list.reverse()
print(list)"
Create a Python script to break the given sentence into words.,"sentence = ""This is an example sentence.""","def break_sentence(sentence):  
    return sentence.split("" "")"
How would you convert this comma separated string to a list in Python?,"Str= ""apple, banana, orange, grapes""","Str = ""apple, banana, orange, grapes""
my_list = Str.split("", "")

# Output
my_list = [""apple"",""banana"",""orange"",""grapes""]"
Generate a python program to determine if two objects are mutually exclusive or not.,"Input objects are ([1,2,3], [4,5,6]).","def mutually_exclusive(object1, object2):
    if len(object1.intersection(object2)) > 0:
        return False
    else:
        return True
    
object1 = set([1, 2, 3])
object2 = set([4, 5, 6])

result = mutually_exclusive(object1, object2)
print(result) # Outputs True as objects don't share elements."
Design a Python function to check if two given strings are anagrams or not.,"""abc"", ""cab""","def check_anagram(str1, str2):
 
    if sorted(str1) == sorted(str2):
        return True
    else:
        return False"
Design a program that outputs the average value of a list in Python.,"[1, 4, 10, 6]","# Given a list of numbers
nums = [1, 4, 10, 6]

# Calculate the average
total = 0
for num in nums:
    total += num

average = total/ len(nums)

# Output the average
print(average)"
What is the output of the following Python code?,"nums = [1, 2, 3, 4, 5]
sorted_nums = sorted(nums)","The output of the code is [1, 2, 3, 4, 5], which is the sorted version of the list nums."
Create a Python program that computes the square root of a number without using the math library.,25,"def sqrt(x):
    guess = x
    i = 0
    while guess * guess != x and i < 20:
        guess = (guess + x / guess) / 2.0
        i += 1
    return guess

print(sqrt(25))"
Construct a Python program to classify the data given.,"Classify the following data points into two categories: red and green
[1, 2, 3, 4, 5, 6, 7]","def classify_data(data_points):
    classified_data = []
    for point in data_points:
        if point % 2 == 0:
            classified_data.append('green')
        else:
            classified_data.append('red')
    return classified_data"
Generate a Python Program that sorts a list of numbers in non-increasing order,"[3, 8, 1, 5]","def descending_sort(list): 
    list.sort(reverse=True) 
    return list

list = [3, 8, 1, 5]
result = descending_sort(list)
print(result)"
Create a Python script that takes a list of email addresses as input and prints a filtered list of email addresses that belong to a particular domain.,"list = [""john@gmail.com"", ""sarah@yahoo.com"", ""bob@microsoft.com"", ""sophie@gmail.com""]","filtered_list = [email for email in list if email.endswith(""@gmail.com"")]

print(filtered_list)
# Output: [""john@gmail.com"", ""sophie@gmail.com""]"
Create a Python program to reverse a dictionary. The program should take a dictionary as input and return a new dictionary with the keys and values swapped.,"dictionary = { 'a': 1, 'b':  2, 'c': 3 }","def reverse_dictionary(dictionary): 
 result = dict() 
  
 for key, value in dictionary.items(): 
  result[value] = key 
  
 return result 

dictionary = { 'a': 1, 'b':  2, 'c': 3 }
res = reverse_dictionary(dictionary) 
print(res) # Output: {1: 'a', 2: 'b', 3: 'c'}"
Create a Python program that prints the most frequent item in a given list.,"[6, 5, 8, 3, 6, 5, 8, 6]","from collections import Counter

def most_frequent(items):
    c = Counter(items)
    return c.most_common(1)[0][0]

items = [6, 5, 8, 3, 6, 5, 8, 6]
result = most_frequent(items)
print(result)"
"Create a Python program for classifying an array of numbers into one of three classes (low, medium, or high).","Example array: [-5, 0, 2, 10, 15]","def classify(arr):
 output = []
 for n in arr:
 if n < 0:
 output.append('low')
 elif n < 5:
 output.append('medium')
 else:
 output.append('high')
 return output

# Example Usage
example_array = [-5, 0, 2, 10, 15]
result = classify(example_array)
print(result) # ['low', 'medium', 'medium', 'high', 'high']"
Design an algorithm in Python for reversing a string.,"exampleString = ""Hello World""","def reverse_string(exampleString): 
    return exampleString[::-1] 

print(reverse_string(exampleString))"
Create a function in Python to sum up all odd digits in a given number.,2243,"def sum_odd_digits(num):
    sum = 0
    for x in str(num):
        if int(x) % 2 != 0:
            sum += int(x)
 
    return sum

print(sum_odd_digits(2243))"
Create a function in Python to sort the elements of a list in ascending order.,"[9, 3, 5, 4, 7, 6]","def sort_asc(lst):
    lst.sort()
    return lst"
Generate an algorithm in Python to swap two numbers without using a third variable,"a = 6, b = 10","def swap_two_numbers(a, b):
    a = a + b 
    b = a - b
    a = a - b
    return a, b

a = 6
b = 10
print(""The value of a is %d and b is %d"" %(a, b))
a,b = swap_two_numbers(a,b)
print(""The value of a is %d and b is %d"" %(a, b))"
Generate a graphical representation of a function using Python.,f(x) = 2x + 3,"import matplotlib.pyplot as plt

x = range(-10, 11)
y = [2 * x_coord + 3 for x_coord in x]
plt.plot(x, y)
plt.title('Graph of the function: f(x) = 2x + 3')
plt.xlabel('x')
plt.ylabel('2x + 3')

plt.show()"
Suggest an efficient algorithm for sorting an array of integers in Python.,"[1, 5, 3, 8, 4, 2]","def sort_array(array):
    for i in range(len(array)):
        lowest = i
        for j in range(i + 1, len(array)):
            if array[lowest] > array[j]:
                lowest = j
        array[i], array[lowest] = array[lowest], array[i]
    return array

result = sort_array([1, 5, 3, 8, 4, 2])
print(result)"
Create an algorithm in Python to determine if the given array contains two elements with the given sum.,"arr = [3, 6, 7, 8, 10]
sum = 16","def twoSum(arr, sum):
    for i in range(len(arr) - 1):
        for j in range(i+1, len(arr)):
            if arr[i] + arr[j] == sum:
                return True

    return False

print(twoSum(arr, sum))
# Output: True"
Create a web scraper in Python that searches a given website for a specified HTML element.,"Website: www.example.com
HTML Element: div","import requests
from bs4 import BeautifulSoup

url = 'https://www.example.com'
response = requests.get(url)
html = response.content

soup = BeautifulSoup(html, 'html.parser')
for div in soup.find_all('div'):
 print(div.text)"
Create a Python function to find the area of a circle with the given radius.,radius: 3.5,"def area_circle (radius):
    return 3.14159 * (radius ** 2)

# Test
print(area_circle(3.5)) # prints 38.48685"
Construct a Python algorithm to find the largest palindrome from the given array.,"[12, 521, 1212, 84561, 91332]","def largest_palindrome(arr):
    max_palindrome = 0
    for item in arr:
        temp = str(item)
        if temp == temp[::-1] and max_palindrome < item:
            max_palindrome = item
    return max_palindrome

print(largest_palindrome([12, 521, 1212, 84561, 91332]))"
Write a Python program to return the difference between the largest and smallest elements in a given list of integers.,"[10, 4, 2, 5, 7]","def diff(nums):
    return max(nums) - min(nums)

print(diff([10, 4, 2, 5, 7])) # 8"
Convert the given code from Python to C++.,"def capitalize_word(word):
    return word.capitalize()","string capitalize_word(string word){
    return string(1, toupper(word[0])) + word.substr(1);
}"
Suggest a completion for the following python function in order to generate a random number between 0 and 1.,"import random

def generate_random():
    # Your code here","import random

def generate_random():
    return random.random()"
Produce a python code to satisfy the following requirements:,"Given two dictionaries d1 and d2, create another dictionary d3 containing the keys from both dictionaries.","def merge_dictionaries(d1, d2):
    d3 = {}
    
    for key in d1:
        d3[key] = d1[key]
    for key in d2:
        d3[key] = d2[key]
        
    return d3"
Create a Python function to remove duplicates from the given list.,"[1, 2, 3, 2, 3]","def remove_duplicates(list):
  new_list = []
  for item in list:
    if item not in new_list:
      new_list.append(item)
  return new_list"
Write a Python program to partition a list into sublists of given size.,"list_a = [1, 2, 3, 4, 5, 6, 7, 8]
size = 3","def partition_list(list_a, size):
 return [list_a[i * size:(i + 1) * size] for i in range((len(list_a) + size - 1) // size )] 
 
partition_list(list_a, size)"
Edit the following Python code to improve its readability.,"def calctrade():
 c=50
 b=50
 while (c > 0 and b > 0):
  c–
  b-=2
 return c + b","def calculate_trade():
 coal = 50
 barley = 50
 while coal > 0 and barley > 0:
  coal -= 1
  barley -= 2
 return coal + barley"
Develop a Python algorithm to validate a given palindrome string.,"""level""","def isPalindrome(s):
    i = 0
    j = len(s) - 1
    while i < j:
        if s[i] != s[j]:
            return False
        i += 1
        j -= 1
    return True
  
# Driver code 
s = ""level""
  
if isPalindrome(s):
    print(""Yes"")
else:
    print(""No"")"
Find the top 3 values in the given Python dictionary.,"dict = {""A"": 100, ""B"": 20, ""C"": 500, ""D"": 60}","top_values = []
for key, value in dict.items():
    if len(top_values)<3:
        top_values.append(value)
    else:
        min_value = min(top_values)
        if value > min_value:
            top_values.remove(min_value)
            top_values.append(value)

print(top_values)"
Design an algorithm in Python that sorts a list in descending order.,"List = [3, 4, 1, 2]","def sort_list(List):
 for i in range(len(List)-1, 0, -1):
  for j in range(i):
   if List[j] < List[j+1]:
    List[j], List[j+1] = List[j+1], List[j]
 
 return List
 

List = [3, 4, 1, 2]

sorted_list = sort_list(List)

print(sorted_list) # [4, 3, 2, 1]"
Create an AI assistant in Python to detect whether a sentence is a question or not.,Is this a question?,"import nltk

sentence = ""Is this a question?""
words = nltk.word_tokenize(sentence)

# Check if the sentence ends with a question mark
if words[-1] == '?':
 print(""This is a question."")
else:
 print(""This is not a question."")"
"Given the instruction and the sample data below, generate the corresponding Python program.","The program should count the number of characters in each word in a given sentence and print the count.

Sample sentence:
""Hello World!""","sentence = ""Hello World!""
words = sentence.split()

for word in words:
  print(f""{word} has {len(word)} characters."")"
Create a Python program for sorting a list of words into alphabetical order.,"[""dog"", ""cat"", ""apple"", ""banana""]","def sort_words(words):
  return sorted(words)

words = [""dog"", ""cat"", ""apple"", ""banana""]

sorted_words = sort_words(words)

print(sorted_words)"
Compose a function in Python to check if a given number is a power of two.,10,"def is_power_two(num):
    if num == 0:
        return False
    
    while num != 1:
        if num % 2 != 0:
            return False
        num = num // 2
    return True"
"Create a web scraper in Python that retrieves the titles of all posts of a given web page, and prints them on the screen.",https://example.com/blog,"import requests
from bs4 import BeautifulSoup

url = ""https://example.com/blog""

r = requests.get(url)
html = r.text

soup = BeautifulSoup(html, 'html.parser')
titles = soup.find_all('h2')

for title in titles:
 print(title.text)"
Write a Python function that takes three numbers as argument and prints the largest one.,"3, 5, 9","def largest_number(a, b, c):
    max = a
    if b > max:
        max = b
    if c > max:
        max = c
    print(max) 

largest_number(3, 5, 9)"
Expand this function to compute the sum of a list in Python.,"def computeSum(L):
    total = 0
    for x in L:
        total += x
    return total","def computeSum(L):
    """"""Computes the sum of a list

    Parameters
    ----------
    L : list
        A list of numbers

    Returns
    -------
    total : int
        The sum of all the numbers in the list
    """"""
    total = 0
    for x in L:
        total += x
    return total"
"Create a function in Python that takes in an array of integers, and returns a new array with all the elements in the original array multiplied by two.","[1, 2, 3, 4]","def double_array(array):
    return [element*2 for element in array]

double_array([1, 2, 3, 4]) # [2, 4, 6, 8]"
"Write a python program to make an API call, return the response status code, and store return json data in a dictionary.",The API endpoint is https://api.example.com/users,"import requests

url = 'https://api.example.com/users'
response = requests.get(url)
response_status_code = response.status_code
data = response.json()
data_dict = dict(data)

print(response_status_code)
print(data_dict)"
Write a Python program to check if an array contains a particular value.,"Example array: [2, 3, 7, 8], Check for number: 7","def check_value(arr, val):
	for i in arr:
		if i == val:
			return True 
	return False 

arr = [2, 3, 7, 8]
val = 7

if(check_value(arr, val)):
	print(""Array contains number "" + str(val))
else:
	print(""Array does not contain number "" + str(val))"
Create a Python program to find the largest number in a given list.,"[3, 6, 4, 8, 1]","def largestNumber(list): 
    max_num = 0
    for i in list:  
        if i > max_num: 
            max_num = i 
    return max_num 
  

list = [3, 6, 4, 8, 1]
largestNumber = largestNumber(list) 
print(""Largest element in the list is: "", largestNumber);"
Create a Python dictionary with the given list of keys and values.,"keys: [chair, table, sofa]
values: [4, 2, 5]","dict = {
 'chair': 4,
 'table': 2,
 'sofa': 5
}"
Write a Python function that will calculate the average temperature for the past week.,"[64.7, 67.3, 71.3, 73.1, 75.7, 73.2, 75.7]","def calc_avg_temperature(temperatures):
  total = 0
  for temp in temperatures:
    total += temp
  avg = total / len(temperatures)
  return avg

print(calc_avg_temperature([64.7, 67.3, 71.3, 73.1, 75.7, 73.2, 75.7]))

# Output: 71.17142857142857"
Create a function in Python to count the number of vowels in a sentence.,"""This is a sample sentence""","def countVowels(sentence):
    vowels = [""a"", ""e"", ""i"", ""o"", ""u""]
    vowel_count = 0
    
    for char in sentence.lower():
        if char in vowels:
            vowel_count += 1
    
    return vowel_count

sentence = ""This is a sample sentence""
vowel_count = countVowels(sentence)
print(f""Number of vowels in the sentence = {vowel_count}"")"
Generate a python script which calculates the average of ten numbers stored in a list.,"[4, 6, 8, 10, 11, 12, 22, 34, 36, 37]","my_list = [4, 6, 8, 10, 11, 12, 22, 34, 36, 37] 
  
# calculate sum of the list numbers 
sum_numbers = sum(my_list) 
  
# length of the list 
length = len(my_list) 
  
# average of the list 
average = sum_numbers/length 
  
# print the result 
print(average)"
"Create a function in Python to compute the sum of two numbers, x and y.",sample input: x = 2 and y = 3,"def sum(x, y):
 return x + y

# testing
print(sum(2, 3)) # Output: 5"
Write a Python program to edit a given string replacing every character after 2nd occurrence with '*'.,"string = ""Adam is my hero""","def edit_str(string):
 return string[:2] + '*' * (len(string)-2)"
Write a Python program to append multiple lists into one list.,"list1 = [2, 3, 4]
list2 = [5, 6, 7]
list3 = [8, 9, 10]","list1 = [2, 3, 4]
list2 = [5, 6, 7]
list3 = [8, 9, 10]

list = list1 + list2 + list3
print(list) 
# Output: [2, 3, 4, 5, 6, 7, 8, 9, 10]"
Create a python function that returns the year from a given date,02-03-19,"def get_year(date):
    return date.split('/')[2]

year = get_year('02/03/2019')
print(year)"
Convert a Python program that uses multiple functions to a single function using only a single recursive call.,"def main():
 x = 1
 def inner(x):
  x += 1
  print(x)
 inner(x)
 
main()","def main(x):
 if x == 1:
  print(2)
 else:
  main(x + 1)
 
main(1)"
Write a code in Python to remove all entries from a dictionary which have even numbers as values.,"my_dict = {1:1, 2:2, 3:3, 4:4, 5:5, 6:6 }","my_dict = {1:1, 3:3, 5:5 }

new_dict = {}

for key, value in my_dict.items():
    if value % 2 != 0:
        new_dict[key] = value

my_dict = new_dict"
Implement an algorithm in Python to produce all valid combinations of some given elements.,"[a,b,c]","def combinations(input_list):
    out_list = []
    # get all the possible combination from the input
    for i in range(1 << len(input_list)):
        out_list.append([input_list[bit] for bit in range(len(input_list)) if is_bit_set(i, bit)])
    return out_list

def is_bit_set(num, bit):
    return num & (1 << bit) > 0"
Write a Python program to sort a list of tuples based on the second element of each tuple.,"[(3, 4), (2, 5), (1, 6)]","def sort_list(lst): 
	lst.sort(key = lambda x: x[1]) 
	return lst 

# Driver code 
lst = [(3, 4), (2, 5), (1, 6)] 
print(sort_list(lst)) 

# Output: [(3, 4), (2, 5), (1, 6)]"
Write a code snippet in Python to print Pascal’s triangle for a given value of n.,4,"def printPascalTriangle(n) : 
    for line in range(1, n + 1) : 
        C = 1 
        for i in range(1, line + 1) : 
            print(C, end = """") 
            C = int(C * (line - i) / i); 
        print("""") 

n = 4
printPascalTriangle(n)"
Generate a Python program to calculate the number of days between two given dates.,"Start date: 5th June 2020
End date: 17th June 2020","from datetime import date

start_date = date(2020, 6, 5)
end_date = date(2020, 6, 17)
delta = end_date - start_date
print(delta.days)"
"Given a sentence, write a Python program to count the number of words and average length of words.",This is an example sentence.,"def word_count_average_len(sentence):
    words = sentence.split()
    sum_length = 0
    for word in words:
        sum_length += len(word)
    return len(words), sum_length/len(words)"
Converting the following algorithm into executable Python code,"Given an array of 1s and 0s, find the index of the 0 that’s the farthest from beginning of the array.","def farthest_from_begining_index(arr):
    index = -1
    max_index = 0
    for i in range(len(arr)):
        if arr[i] == 0:
            index = i
            if index > max_index:
                max_index = index
    return max_index"
Write a Python program that takes two lists as input and merges the values from both these lists into the third list.,"list1 = [1, 2, 3, 4, 5]
list2 = [6, 7, 8, 9, 0]","list3 = []

list3.extend(list1)
list3.extend(list2)
  
print(list3)"
"Using the given dictionary, write a program in Python to find the most frequent word.","sample_dict = {'electron':10, 'atom':3, 'chemistry':2, 'quantum':15}","def most_frequent(sample_dict):
    key = max(sample_dict, key=sample_dict.get) 
    return key 
    
print(most_frequent(sample_dict)) # Outputs: ""quantum"""
Create a basic Python script that computes the sum of two variables and stores the result in a third variable.,"x = 5
y = 8","# compute the sum of x and y
result = x + y

# store the result in a third variable
z = result

#print the result
print(z) # Output: 13"
Write a Python function to calculate the total cost of an item given its base price and additional cost.,"Base price: 30
Additional cost: 10","def calculate_total_cost(base_price, additional_cost):
 return base_price + additional_cost"
Create a Python program that takes a string as input and outputs the string with all characters replaced with their corresponding ASCII values.,"""Python""","def ascii_repr_str(str):
    ans = ''
    for ch in str:
        ans += str(ord(ch))
    return ans

print(ascii_repr_str(""Python"")) # result: 080 121 116 104 111 110"
Generate a Python program to calculate the area of a provided room.,"The room has length 5 meters, width 8 meters and height 3 meters.","length_meters = 5
width_meters = 8
height_meters = 3

# Calculate area of room
room_area_meters_squared = length_meters * width_meters * height_meters

# Print the area
print(f""The area of the room is {room_area_meters_squared} meters squared."")"
"Create a Python program to convert a list of numbers to a comma separated string. The program should take a list of integers as input and return a string with the elements of the list separated by a comma (',').","list_of_integers = [1, 2, 3, 4]","def list_to_string(list):
 return ','.join(str(x) for x in list)

list_of_integers = [1, 2, 3, 4]
print(list_to_string(list_of_integers)) // Outputs: 1,2,3,4"
Take a Python program written in procedural style and convert it to functional style.,"def sort_list(arr):
  for i in range(len(arr)):
    for j in range(i + 1, len(arr)):
      if arr[i] > arr[j]:
        tmp = arr[i]
        arr[i] = arr[j]
        arr[j] = tmp","def sort_list(arr):
  sorted_arr = sorted(arr)
  return sorted_arr"
Write a Python program to find a substring in a string. The program should return the index of the beginning of the substring or -1 if the substring is not found.,"string = ""Hello World""
substring = ""World""","def findSubstring(string, substring):
 index = string.find(substring)
 if index != -1:
  return index
 else:
  return -1

string = ""Hello World""
substring = ""World""
print(findSubstring(string, substring)) # returns 6"
Convert the following code from C to Python.,"int sum(int *arr, int n)
{
    int s = 0;
    int i;
    for(i = 0; i < n; i++)
        s +=  arr[i] ;
  
    return s;
}","def sum(arr, n):
    s = 0
    for i in range(n):
        s += arr[i]
    return s"
Create a function in Python that will take a list as an argument and return the average of the first 3 elements in the list.,"[1, 2, 3, 4, 5]","def getAverageOfFirstThree(data):
    sum = 0
    for i in range(3):
        sum += data[i]
    
    return sum / 3"
Write a Python function to compare two given lists and return a list containing only the common elements.,"list1 = [1, 2, 3, 4]
list2 = [2, 4, 6]","def common_elements(lst1, lst2):
  return [element for element in lst1 if element in lst2]

list1 = [1, 2, 3, 4]
list2 = [2, 4, 6]
common_elements = common_elements(list1, list2)

print(""Common elements:"", common_elements)"
Write a Python program to remove the duplicates from a given list of numbers while preserving the order of elements.,"[1, 2, 3, 2, 1]","def remove_duplicates(lst):
    new_list = []
    for i in lst:
        if i not in new_list:
            new_list.append(i)
    return new_list

print(remove_duplicates([1, 2, 3, 2, 1]))"
Optimize a given Python code by reducing the running time to the minimum possible.,"n = 10

def func(n):
    res = 0
    for i in range(n):
        for j in range(n):
            res = res + i + j
    return res

func(n)","n = 10

def func(n):
    # Use range to only loop through half of the values
    res = 0
    for i in range(n//2 + 1):
        for j in range(n):
            res = res + i + j
    # Double the result by multiplying with 2
    return res*2

func(n)"
Optimize a code snippet written in Python. The code snippet should create a list of numbers from 0 to 10 that are divisible by 2.,"arr = []
for i in range(10):
 if i % 2 == 0:
 arr.append(i)",arr = [i for i in range(11) if i % 2 == 0]
Write a Python program to delete duplicate elements from a list.,"[2, 3, 4, 5, 4, 6, 7, 5, 8]","def removeDuplicates(inputList):
      tempList = [] 
      for elem in inputList: 
          if elem not in tempList: 
              tempList.append(elem)
      return tempList
    
outputList = removeDuplicates([2, 3, 4, 5, 4, 6, 7, 5, 8]) 
print(outputList)"
Provide a Python script that returns the number of words in a given sentence,This is a test sentence,"def word_count(sentence):
    words = sentence.split()
    return len(words)"
Write a Python program to randomly shuffle a given list of numbers.,"numbers = [1,2,3,4,5]","import random

def shuffle(numbers):
 random.shuffle(numbers)
 return numbers

shuffle(numbers)"
"Develop a Python routine that takes a string, separates words and prints the first word.","""Hello, World!""","def print_first_word(sentence):
    words = sentence.split(' ')
    print(words[0])

sentence = ""Hello, World!""
print_first_word(sentence)"
Could you come up with a function in Python that removes all occurrences of the word 'impossible' from the given string?,"""It was impossible to find the answer.""","def remove_word(text):
    return text.replace('impossible', '')"
Create a python program to remove odd numbers from a list of numbers.,"data = [10, 20, 30, 5, 6, 7]","def remove_odd_numbers(arr):
    result = [i for i in arr if i % 2 == 0]
    return result"
Write a Python program to compute the sum of the values of a given dictionary,"dictionary = {'A':5, 'B':6, 'C':10}","def dict_sum(dict):
    sum = 0
    for key, value in dict.items():
        sum += value
    return sum"
Write a Python program to find all numbers in a list and replace them with their product.,"[1, 2, 3, 4, 5]","my_list = [1, 2, 3, 4, 5]
new_list = [x * y for x, y in zip(my_list, my_list[1:] + [1])]"
"Given a list of numbers, write a Python program to compute the average of all numbers.","[10, 20, 45, 60]","def compute_average(numbers):
 sum = 0
 for number in numbers:
 sum += number
 return sum/len(numbers)

numbers = [10, 20, 45, 60]
result = compute_average(numbers)
print(result)

# Output:
31.25"
Create a program in Python for counting the occurrence of a character in a string.,"String = ""Hello! What is your name?""
Character = 'o'","String = ""Hello! What is your name?""
def characterCounter(string, character):
    count = 0
    for ch in string:
        if ch == character:
            count += 1
    return count

print(characterCounter(String, 'o')) # 2"
Create a Python program which takes in two numbers and prints out the first number divided by the second number.,"3, 5","def divide(a,b):
    return a/b

result = divide(3,5)
print(result)"
Optimize the following Python code by changing its structure and by incorporating efficient algorithms.,"def factor_of_three(n):
 count = 0
 for i in range(1, n+1):
  if i % 3 == 0:
   count += 1
 return count

factor_of_three(50)","def factor_of_three(n):
  return len([i for i in range(1, n+1) if i % 3 == 0])
  
factor_of_three(50)"
Develop a Python code to parse an XML string.,"xml_string = ""<node><child>text</child></node>""","import xml.etree.ElementTree as ET

def parse_xml(xml_string):

    root  = ET.fromstring(xml_string)
    for node in root:
        print(f'Node: {node.tag}: {node.text}')

if __name__ == '__main__':
    xml_string = ""<node><child>text</child></node>""
    parse_xml(xml_string) # prints Node: child: text"
Create a function in Python that will determine whether a given number is composite or prime.,Number: 21,"def isPrime(x): 
	if x > 1: 
		for i in range(2,x): 
			if (x % i) == 0: 
				return False
		else: 
			return True
	else: 
		return False

num = 21
if(isPrime(num)) : 
	print(num, ""is a prime number"") 
else : 
	print(num, ""is a composite number"")"
Design a function in Python to remove all occurrences of a given number from a given list.,"[1, 7, 3, 1, 4, 7, 9], 7","def remove_num(lst, num):
  return [n for n in lst if n != num]

print(remove_num([1, 7, 3, 1, 4, 7, 9], 7))  # [1, 3, 1, 4, 9]"
Construct a python snippet to list out the keys present in a dictionary.,"dictionary = {""key1"":""value1"", ""key2"":""value2"", ""key3"":""value3""}","for key in dictionary.keys():
    print(key)"
Compose a code in Python to check if a list contains any duplicate elements.,"[1, 2, 3, 4, 5]","def has_duplicates(arr):
    seen = set()
    for elem in arr:
        if elem in seen:
            return True
        else:
            seen.add(elem)
    return False

test_arr = [1, 2, 3, 4, 5]
result = has_duplicates(test_arr)
print(result)"
Generate a Python script to create a list of numbers between a given range.,"start = 5, end = 10","def generate_list(start, end):
    result = []
    for num in range(start, end+1):
        result.append(num)
    return result

list = generate_list(5, 10)
print(list)  # Output: [5, 6, 7, 8, 9, 10]"
Given a list of objects and a property of each object. Can you create a Python program to output the value of the property of the first and last object?,"[
 { ""name"": ""Alice"" , ""age"": 24 },
 { ""name"": ""Bob"" , ""age"": 29 },
 { ""name"": ""Charlie"" , ""age"": 28 }
]","nameFirst = 'Alice'
nameLast = 'Charlie'
ageFirst = 24
ageLast = 28"
Rewrite the given SQL query to fetch the same results using Python.,"SELECT CustomerID, FirstName, LastName FROM Customers WHERE Country = 'Germany';","import sqlite3

conn = sqlite3.connect('database.db')
cursor = conn.cursor()

cursor.execute(""SELECT CustomerID, FirstName, LastName FROM Customers WHERE Country = 'Germany'"") 
rows = cursor.fetchall()

conn.close()

# Output rows
for row in rows:
    print(row[0], row[1], row[2])"
Create a python program that takes two numbers and calculates the exponent of the first number raised to the power of the second number.,"base: 2
exponent: 3","# This program takes two numbers and calculates the 
# exponent of the first number raised to the power of the second number

def calculateExponent(base, exponent):
    return base**exponent

base = 2
exponent = 3

result = calculateExponent(base, exponent)
print(""The result is:"", result) # The result is: 8"
Create a python script to find the longest words in a dictionary.,"dict = {""Hello"": 5, ""World"": 6, ""this"": 4, ""is"": 2, ""a"": 1, ""test"": 4}","def longest_words(dict):
    longest_words = []
    max_length = 0
    for word, length in dict.items():
        if length > max_length:
            longest_words = [word]
            max_length = length
        elif length == max_length:
            longest_words.append(word)
    return longest_words"
Generate a function to find the sum of an element in a nested list in Python.,"arr = [[1, 2], [3, 4], [5, 6]]","def sum_of_element(arr):
    s = 0
    for sub_list in arr:
        for element in sub_list:
            s += element
    return s

arr = [[1, 2], [3, 4], [5, 6]]
total = sum_of_element(arr)
print(total)"
Generate a Python program that returns the smallest even number in a given list,"nums = [5, 7, 9, 8, 4]","def find_smallest_even(nums):
    smallest = None
    for num in nums:
        if (num % 2 == 0) and (smallest == None or num < smallest):
            smallest = num
    return smallest"
Write a Python program to calculate the total cost of an order from an online shop. The program should take a price of a product and the quantity of that product as inputs.,"ProductPrice = 12
Quantity = 5","total = ProductPrice * Quantity
print(f""Total cost of the order is {total}"")  # Total cost of the order is 60"
Create a Python dictionary where the keys are the cities and the values are corresponding population densities.,"Lahore: 3,883
Karachi: 8,130
Islamabad: 2,572","cities_populations = {
 ""Lahore"": 3,883,
 ""Karachi"": 8,130,
 ""Islamabad"": 2,572
}"
Build an algorithm in Python to check if a string is a palindrome.,"""abccba""","def is_palindrome(str):
    # Get the length of the string
    n = len(str)

    for i in range(n//2):
        # Compare characters from both ends
        if str[i] != str[n-i-1]:
            return False
    return True

str = ""abccba""
print(is_palindrome(str))"
Design a Python program to work out the percentage of vowels present in a given string.,"Text = ""Hello World!""","def vowel_percentage(text):
    vowels = ""aeiouAEIOU""
    num_vowels = 0
    for letter in text:
        if letter in vowels:
            num_vowels += 1
    percentage = (num_vowels/len(text)) * 100
    return percentage

print(vowel_percentage(""Hello World!""))"
Create a Python function that takes in two strings and concatenates them with a space in between.,"""Programming"", ""is Fun""","def concatStringsWithSpace(str1, str2):
  return str1 + "" "" + str2

result = concatStringsWithSpace(""Programming"", ""is Fun"")
print(result)"
Write a Python program to calculate the average of three integers.,"num1 = 10
num2 = 15
num3 = 20","def avg_three_nums(num1, num2, num3):
 return (num1 + num2 + num3) / 3"
Write a Python program that takes a list of integers and returns the largest number,"my_list = [1, 5, 10, 15, 20]","def find_largest_number(numbers):
    largest_number = -float('inf')
    for number in numbers:
        if number > largest_number:
            largest_number = number
    return largest_number

my_list = [1, 5, 10, 15, 20]
largest_number = find_largest_number(my_list)
print(largest_number)"
Generate a Python program to extract the emailIDs from a text string.,"Example user input: ""The list of contacts is john@test.com,jane@example.com,bob@test.com""","import re

text = ""The list of contacts is john@test.com,jane@example.com,bob@test.com""

pattern = r'[\w\.-]+@[\w\.-]+'

match = re.findall(pattern, text)

print(match)"
Create a Python program to convert a list of words into its corresponding abbreviations.,"[""Hello"",""World"",""Amazing""]","def word_abbreviations(words):
 abbreviations = []
 for word in words:
  abbreviations.append(word[0].upper() + str(len(word)-2) + word[-1].upper())
 return abbreviations

list_of_words = [""Hello"",""World"",""Amazing""]
print(word_abbreviations(list_of_words))

Output: ['H4o', 'W4d', 'A5g']"
"In the following Python list, remove an item with the index of 3 and then add a new item to the list with a value of 99.","my_list = [1, 4, 5, 7, 8]","my_list = [1, 4, 5, 8]
my_list.append(99)"
Create a Python script to detect if a number is prime.,10,"def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, n):
        if n % i == 0:
            return False
    return True

if __name__ == ""__main__"":
    n = 10
    if is_prime(n):
        print(""{} is a prime number"".format(n))
    else:
        print(""{} is not a prime number"".format(n))"
Generate a Python code snippet to search for a specific value in a 2D list and return its index.,"Value to search for: ""hello""
2D List: [[12, ""goodbye"", 21], [""hello"", 67, 55]]","def search_2d(value, lst):
 for i, row in enumerate(lst):
  if value in row:
   return (i, row.index(value))

print(search_2d(""hello"", [[12, ""goodbye"", 21], [""hello"", 67, 55]]))
# Output: (1, 0)"
Write a Python function to calculate the product of elements in a list.,"[1, 2, 3, 4]","def product(arr):
    product = 1
    for num in arr:
        product *= num
    return product

product([1, 2, 3, 4])"
"Write a Python program to create functions for min, max, and mean of a given list.",A list of 10 integers,"def min_list(numbers):
  min_num = min(numbers)
  return min_num

def max_list(numbers):
  max_num = max(numbers)
  return max_num

def mean_list(numbers):
  mean_num = sum(numbers)/len(numbers)
  return mean_num

numbers = [1,2,3,4,5,6,7,8,9,10]

print(min_list(numbers))
print(max_list(numbers))
print(mean_list(numbers))

# Output
# 1
# 10
# 5.5"
Categorize the following code snippets into their respective languages:,"def childName(name):
    print('The child will be called', name)",Python
Develop a script in Python to print out all the combinations of a given list of numbers.,"[1,2,3,4]","import itertools

lst = [1,2,3,4]

# Get all possible combinations of the list
result = list(itertools.combinations(lst, 2))

# Print the combinations
for combination in result:
    print(combination)"
Write a Python script to transform a given list of integers into a single integer.,"int_list = [1,2,3,4,5]","def int_to_int(int_list):
    return int(''.join(str(e) for e in int_list))"
Develop a program which reverts a string without using reverse(),Python,"def reverseString(str): 
  
    i = len(str) 
    rev_str = """" 
    while i > 0: 
        rev_str += str[i-1] 
        i = i-1
    return rev_str

str = ""Python""
print(""Original string: "" + str)
print(""Reversed string: "" + reverseString(str))"
Create a Python program to scrape data from a website. The program should accept the website's URL as input.,https://example.com,"import requests
from bs4 import BeautifulSoup

url = ""https://example.com""
response = requests.get(url)
soup = BeautifulSoup(response.text, 'html.parser')

# Scrape data from the website
# ...
# ..."
Create a Python script to interpolate missing data points from a Pandas dataframe.,"import pandas as pd

df = pd.DataFrame({
 'x': [0,1,3,4,5],
 'y': [1,2,4,8,16]
})","import pandas as pd
import numpy as np

df = pd.DataFrame({
 'x': [0,1,3,4,5],
 'y': [1,2,4,8,16]
})

# interpolate the missing data
new_x = np.linspace(0, 5, 6)
df = df.set_index('x').reindex(new_x).interpolate().reset_index()
print(df)"
Create a Python program to average the elements of a 2-dimensional array.,"a = [[3,2,6],
     [8,5,9],
     [4,7,1]]","def averageMatrix(matrix):
 sum = 0
 for row in matrix:
  for e in row:
   sum += e

 return sum / (len(matrix) * len(matrix[0]))

a = [[3,2,6],
     [8,5,9],
     [4,7,1]]

print(averageMatrix(a)) # 4.77"
Rewrite the following code to use Python's inbuilt sorting functions.,"def bubbleSort(arr): 
    n = len(arr) 
    for i in range(n): 
        for j in range(0, n-i-1): 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j]","def bubbleSort(arr): 
    arr.sort() 
    return arr"
Write a Python program to find the index of an item in the given array.,"[5, 7, 8, 6], 8","def search_index(arr, target):
  for i in range(len(arr)):
    if arr[i] == target:
      return i
  
  return -1

print(search_index([5, 7, 8, 6], 8)) # 2"
Write a function in Python to perform a selection sort on an unsorted array.,"[4, 6, 1, 3, 8, 2]","def selection_sort(arr):
    for i in range(len(arr)): 
        min_idx = i 
        for j in range(i+1, len(arr)): 
            if arr[min_idx] > arr[j]: 
                min_idx = j
        arr[i], arr[min_idx] = arr[min_idx], arr[i]
    return arr
        
const result = selection_sort([4, 6, 1, 3, 8, 2]);
console.log(result);"
Construct an algorithm for factoring a large number in Python.,Number = 600851475143,"def get_factor(n):
    factors = []
   
    for i in range(2, n + 1):
        if n % i == 0:
            factors.append(i)
            n //= i
    return factors

number = 600851475143
print(get_factor(number))"
Create a script in Python to download the content of a webpage with a given URL.,URL: https://github.com,"import requests
 
url = ""https://github.com""
 
response = requests.get(url)
 
with open('webpage.txt', 'w') as file:
    file.write(response.text)"
Write a Python script for sorting an array of numbers.,"[4, 2, 3, 5, 1]","arr = [4, 2, 3, 5, 1]
arr.sort()
print(arr)"
Create an optimized data structure in Python to store information about a person's profile.,"profile = {
  ""name"": ""Kiran"", 
  ""age"": 25, 
  ""location"": ""Australia"", 
  ""hobbies"": [
   ""Travelling"",
   ""Swimming""
   ]
}","class Profile(object):
 def __init__(self, name, age, location, hobbies):
 self.name = name
 self.age = age
 self.location = location
 self.hobbies = hobbies

profile = Profile(""Kiran"", 25, ""Australia"", [""Travelling"", ""Swimming""])"
Design an algorithm in Python to find the highest one digit number in a given list.,"[5, 11, 15, 8, 9]","def get_highest_one_digit(list_nums):
    highest_num = 0
    for num in list_nums:
        if num <= 9 and num > highest_num:
            highest_num = num
    return highest_num"
Rewrite the code from this Python2 code to be compatible with Python3 code.,"#This code prints the numbers from 0 to 5.
for i in range(6):
    print i","#This code prints the numbers from 0 to 5.
for i in range(6):
    print(i)"
Develop a Python script to convert a list of words into a dictionary with its frequency count as the key and the words as the value.,"List of words: hello, world, hello, python, hello","words = [""hello"",""world"",""hello"",""python"",""hello""] 

# counting frequency of each word in a list 
wordFrequencyDict = {}
for word in words: 
    if (word in wordFrequencyDict): 
        wordFrequencyDict[word] += 1
    else: 
        wordFrequencyDict[word] = 1

print(wordFrequencyDict)"
Construct a for loop in Python to iterate over a given list and print the elements.,"my_list = [1, 2, 3, 4, 5]","for i in my_list:
    print(i)"
Create a Python function to generated permutations of a given list of numbers.,"[1, 2, 3]","def permutations(arr):
    if len(arr) == 0:
        return []

    if len(arr) == 1:
        return [arr]

    l = []
    for i in range(len(arr)):
        m = arr[i]
        remL = arr[:i] + arr[i+1:]
        for p in permutations(remL):
            l.append([m] + p)
    return l

permutations([1, 2, 3])"
Create a Python script to clean the given text and make it ready for processing.,"text = ""This is the teXt for procesSsing! 
Some puncT!_UATion must be removed. 
Let's, Trim the whitespace too.. 
Please preServe the cases as is.""","text_cleaned = ""This is the text for processing!
Some punctuation must be removed.
Lets Trim the whitespace too.
Please preserve the cases as is."""
Write a Python program that takes in two lists and returns a merged list with unique elements.,"list1 = [1, 2, 3]
list2 = [2, 3, 4]","list1 = [1, 2, 3]
list2 = [2, 3, 4]

merged_list = list(set(list1 + list2))
print(merged_list) #Output: [1, 2, 3, 4]"
Create a function in Python to check if a list contains duplicates.,"[1, 3, 2, 4, 5, 3]","def contains_duplicates(list):
    seen = set()
    for item in list:
        if item in seen:
            return True
        seen.add(item)
    return False
 
list = [1, 3, 2, 4, 5, 3]
 
print(contains_duplicates(list))"
Write a web scraper in Python that extracts the price of Apple's iPhone from an e-commerce website.,"Link to an e-commerce website that sells Apple's iPhone:  
https://store.apple.com/us/buy-iphone/iphone-11","import requests
from bs4 import BeautifulSoup

link = 'https://store.apple.com/us/buy-iphone/iphone-11'

page = requests.get(link)
soup = BeautifulSoup(page.content, 'html.parser')

price = soup.find('span', id='pricing-product-price-value').text
print(price)"
Design an algorithm in Python to find the closest pair of numbers from two given lists.,"list_1 = [3, 5, 7, 11]
list_2 = [2, 4, 6, 8]","def closest_pair(list_1, list_2):
    min_diff = float(""inf"")
    
    for a in list_1:
        for b in list_2:
            diff = abs(a - b)
            if diff < min_diff:
                min_diff = diff
                closest_pair = (a, b)
    
    return closest_pair"
Formulate a python code to remove the characters of odd index in a given string.,"string = ""welcome""","def remove_odd_index_char(string):
    """"""
    Remove the characters of odd index in a given string
    """"""
    result = """" 
    for i in range(len(string)):
        if i % 2 == 0:
            result = result + string[i] 
    return result

if __name__ == '__main__':
    string = ""welcome""
    print(remove_odd_index_char(string)) # wloe"
Write a Python program to find the difference of two sets.,"set_1 = {1,2,3,4,5}
set_2 = {2,4,6,8,10}",difference = set_1.difference(set_2)
"Develop a Python program to remove all characters from an input string that are not a-z, A-Z, 0-9, or white space.","""Hello,@ $World.""","import re

def remove_non_alphanum(s):
  return re.sub('[^a-zA-Z0-9 \n\.]', '', s)

string = ""Hello,@ $World.""
res = remove_non_alphanum(string) 

print(res)"
Create a utility in Python to generate a PDF of a webpage. The utility should accept a URL as input and generate a PDF of the webpage in the same directory.,https://www.example.com,"import pdfkit

def generate_pdf(url):
 filename = url.rsplit('/', 1)[-1] + '.pdf'
 pdfkit.from_url(url, filename)

if __name__ == '__main__':
 url = input('Enter a URL: ')
 generate_pdf(url)"
Debug the following python code to make the code run properly,"x = ""Hello World""
if x == ""Hello World:
print('Yes')","x = ""Hello World""
if x == ""Hello World"":
    print('Yes')"
Edit the following Python code to re-rank the numbers in descending order.,"numbers = [4, 7, 2, 3]","numbers = [4, 7, 2, 3]
numbers.sort(reverse=True)
print(numbers)"
Suggest a code improvement for the following python code to ensure that all input is valid.,"def get_user_info(username):
    query = 'SELECT * FROM users WHERE username = {}'.format(username)
    result = Database.execute_query(query)
    return result","def get_user_info(username):
    query = 'SELECT * FROM users WHERE username = %s'
    result = Database.execute_query(query, (username,))
    return result"
"Write a python program that takes in 2 parameters, a list and a number, and returns a dictionary with the words in the list and the number of characters in each word as its value.","['the', 'cat', 'in', 'the', 'hat']","my_list = ['the', 'cat', 'in', 'the', 'hat']

def get_word_length_dict(my_list):
    my_dict = {}
    for word in my_list:
        my_dict[word] = len(word)
    return my_dict

print(get_word_length_dict(my_list))"
Modify the following Python code to raise an exception if the input value is not an integer,"def square_root(x):
    return x**0.5","def square_root(x):
    if not isinstance(x, int):
        raise TypeError('Input must be an integer')
    return x**0.5"
Generate a Python program that takes an input string and reverse it.,"string = ""Hello world!""","def reverse(string):
  return string[::-1]
  
string = ""Hello world!""
print(reverse(string))"
Generate a python function that takes a list of strings and returns the longest one.,"words = ['hello', 'world', 'this', 'is', 'a', 'test']","def longest_string(words):
    longest = 0
    result = ''
    for w in words:
        if len(w) > longest:
            longest = len(w)
            result = w
    return result"
Create a program in Python that takes an integer and prints out the Fibonacci sequence up to the given integer.,17,"def fibonacci(num):
    if num<=0: 
        print(""Incorrect input"") 
    elif num==1: 
        return 0
    elif num==2: 
        return 1
    else: 
        return fibonacci(num-1)+fibonacci(num-2) 

for x in range(1, num+1): 
    print(fibonacci(x))"
Develop a python program to calculate the average score of a student over the course of a semester.,"[10,8,9,6,7]","def avg_score(scores):
    """"""
    Calculate the average score of a student over the course of a semester
    """"""
 
    avg = 0
    for score in scores:
        avg += score
    return round(avg/len(scores),2)
    
if __name__ == '__main__':
    scores = [10,8,9,6,7]
    print(avg_score(scores))"
Develop a function to search for a value in a list.,"lst = [‘hello’, ‘world’, ‘python’]
value = ‘python’","def search_list(lst, value): 
    for item in lst: 
        if item == value:  
            return True 
    return False

# Driver Code 
lst = ['hello', 'world', 'python'] 
value = 'python'

is_present = search_list(lst, value) 
if is_present == True: 
    print(value, ""is present in the list"") 
else: 
    print(value, ""is not present in the list"")"
Generate a new Python list with the squared value of each element in a given list.,"list = [1, 2, 3, 4, 5, 6]","def squared_list(list):
    squared_list = []
    for num in list:
        squared_list.append(num **2)
    return squared_list

list = [1, 2, 3, 4, 5, 6]
print(squared_list(list)) # Outputs [1, 4, 9, 16, 25, 36]"
Write a python program that creates and prints a range of numbers.,"Start from 0, increment by 2 and end at 10","for number in range(0, 11, 2):
    print(number)"
Create a web scraper in Python that loads a website page and extracts a particular string of text.,"URL: https://www.example.com/
Text to extract: ""Hello, world!""","import requests
from bs4 import BeautifulSoup
 
url = ""https://www.example.com/""
page = requests.get(url)
 
soup = BeautifulSoup(page.content, 'html.parser')
text = soup.find(string=""Hello, world!"")
print(text)"
Design an algorithm in Python for finding and printing all prime numbers between 1 and a given number.,100,"def find_all_primes(n): 
  for num in range(2,n + 1):
    for i in range(2,num):
      if (num % i) == 0:
        break 
    else:
      print(num)

find_all_primes(100)"
Write a Python program to count words in a sentence. The program should take in a sentence as input and return a dictionary with the words as the keys and the frequencies as the values.,Sentence: “The quick brown fox jumps over the lazy dog”,"sentence = ""The quick brown fox jumps over the lazy dog""
word_freq = {}

for word in sentence.split():
  if word in word_freq:
    word_freq[word] += 1
  else:
    word_freq[word] = 1

print(word_freq)"
Write a python program to print the following pattern.,n = 5,"def pattern(n):
  # Outer loop 
    for i in range(0, n): 
      
    # Inner loop to handle number of columns 
    # values changing according to outer loop 
      for j in range(0, i+1): 
        
    # Printing stars 
        print(""* "",end="""") 
    
    # Ending line after each row 
      print(""\r"") 
  
# Driver Code 
pattern(5)"
Create a webhook in Python to handle incoming HTTP POST requests. This webhook should process the JSON payload in the POST request and log the output to console.,"{
  ""name"": ""John Doe"",
  ""email"": ""john@example.com""
}","import json
from flask import Flask, request

app = Flask(name)

@app.route('/webhook', methods=['POST'])
def webhook():
 payload = json.loads(request.data)
 print(payload)
 return ""OK""

if name == 'main':
 app.run(debug=True)"
